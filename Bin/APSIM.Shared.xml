<?xml version="1.0"?>
<doc>
    <assembly>
        <name>APSIM.Shared</name>
    </assembly>
    <members>
        <member name="T:APSIM.Shared.OldAPSIM.ConvertSoilNode">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:APSIM.Shared.OldAPSIM.ConvertSoilNode.Upgrade(System.Xml.XmlNode)">
            <summary>Upgrades the specified node from old soil format to new.</summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:APSIM.Shared.OldAPSIM.ConvertSoilNode.ToVersion20(System.Xml.XmlNode)">
            <summary>Convert from old soil XML format to new soil XML format</summary>
            <param name="Node">The node to convert</param>
        </member>
        <member name="M:APSIM.Shared.OldAPSIM.ConvertSoilNode.ToVersion32(System.Xml.XmlNode)">
            <summary>
            Make sure soil nodes have a ASC_Order and ASC_Sub-order nodes.
            </summary>
        </member>
        <member name="M:APSIM.Shared.OldAPSIM.ConvertSoilNode.ToVersion33(System.Xml.XmlNode)">
            <summary>
            Convert Soil format.
            </summary>
            <param name="Node"></param>
        </member>
        <member name="M:APSIM.Shared.OldAPSIM.ConvertSoilNode.ToVersion35(System.Xml.XmlNode)">
            <summary>
            Make sure that soil Latitude / Longitude are doubles. AgMIP translator has them as "?" characters.
            </summary>
        </member>
        <member name="M:APSIM.Shared.OldAPSIM.ConvertSoilNode.CreateChildWithShortcut(System.Xml.XmlNode,System.String,System.String,System.String)">
            <summary>
            Create a child node with a shortcut attribute if the child doesn't already exist
            and the shortcut source code does have the child.
            </summary>
        </member>
        <member name="M:APSIM.Shared.OldAPSIM.ConvertSoilNode.SetPropertiesOrder(System.Xml.XmlNode,System.String[],System.String[],System.Boolean)">
            <summary>
            Fix the order of the properties of the specified parent xml node to that 
            giveen in ChildNodeNames
            </summary>
        </member>
        <member name="M:APSIM.Shared.OldAPSIM.ConvertSoilNode.SetLayeredOrder(System.Xml.XmlNode,System.String[],System.String[])">
            <summary>
            Fix the order of the layered variables of the specified parent xml node to that 
            giveen in ChildNodeNames
            </summary>
        </member>
        <member name="M:APSIM.Shared.OldAPSIM.ConvertSoilNode.RemoveDepthNodes(System.Xml.XmlNode,System.String)">
            <summary>
            Change the depth nodes: <depth>0-10</depth>
            to thickness nodes : <thickness>100</thickness>
            </summary>
        </member>
        <member name="M:APSIM.Shared.OldAPSIM.ConvertSoilNode.RemoveBlankNodes(System.Xml.XmlNode)">
            <summary>
            Remove all blank nodes e.g. <Slope></Slope>
            </summary>
        </member>
        <member name="M:APSIM.Shared.OldAPSIM.ConvertSoilNode.WriteLayeredDataAsArray(System.Xml.XmlNode,System.String,System.String,System.String)">
            <summary>
            Change:
            <Layer>
               <Thickness units="mm">150</Thickness>
             </Layer>
             <Layer>
               <Thickness>150</Thickness>
             </Layer>
             
            to:
            <Thickness>
                <double>150</double>
                <double>150</double>
            </Thickness>
            </summary>
        </member>
        <member name="T:APSIM.Shared.OldAPSIM.Shortcuts">
            <summary>
            A class to remove the old style APSIM shortcuts.
            </summary>
        </member>
        <member name="M:APSIM.Shared.OldAPSIM.Shortcuts.Remove(System.Xml.XmlNode)">
            <summary>
            Removes all shortcuts from the specified node and all child nodes.
            </summary>
            <param name="node">The node to remove shortcuts from.</param>
            <returns>The XML node with all shortcuts resolved.</returns>
        </member>
        <member name="M:APSIM.Shared.OldAPSIM.Shortcuts.ResolveShortcut(System.Xml.XmlNode)">
            <summary>
            Resolves the shortcut on the specified node. i.e. makes concrete
            </summary>
            <param name="node">The node to remove the shortcut from.</param>
            <exception cref="T:System.Exception">Cannot find shortcut:  + shortcut</exception>
        </member>
        <member name="T:APSIM.Shared.Soils.Analysis">
            <summary>
            A soil analysis class.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Analysis.Thickness">
            <summary>
            Gets or sets the thickness.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Analysis.Rocks">
            <summary>
            Gets or sets the rocks.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Analysis.RocksMetadata">
            <summary>
            Gets or sets the rocks metadata.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Analysis.Texture">
            <summary>
            Gets or sets the texture.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Analysis.TextureMetadata">
            <summary>
            Gets or sets the texture metadata.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Analysis.MunsellColour">
            <summary>
            Gets or sets the munsell colour.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Analysis.MunsellMetadata">
            <summary>
            Gets or sets the munsell metadata.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Analysis.EC">
            <summary>
            Gets or sets the ec.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Analysis.ECMetadata">
            <summary>
            Gets or sets the ec metadata.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Analysis.PH">
            <summary>
            Gets or sets the ph.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Analysis.PHMetadata">
            <summary>
            Gets or sets the ph metadata.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Analysis.CL">
            <summary>
            Gets or sets the cl.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Analysis.CLMetadata">
            <summary>
            Gets or sets the cl metadata.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Analysis.Boron">
            <summary>
            Gets or sets the boron.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Analysis.BoronMetadata">
            <summary>
            Gets or sets the boron metadata.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Analysis.CEC">
            <summary>
            Gets or sets the cec.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Analysis.CECMetadata">
            <summary>
            Gets or sets the cec metadata.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Analysis.Ca">
            <summary>
            Gets or sets the ca.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Analysis.CaMetadata">
            <summary>
            Gets or sets the ca metadata.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Analysis.Mg">
            <summary>
            Gets or sets the mg.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Analysis.MgMetadata">
            <summary>
            Gets or sets the mg metadata.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Analysis.Na">
            <summary>
            Gets or sets the na.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Analysis.NaMetadata">
            <summary>
            Gets or sets the na metadata.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Analysis.K">
            <summary>
            Gets or sets the k.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Analysis.KMetadata">
            <summary>
            Gets or sets the k metadata.
            </summary>
            <value>
            The k metadata.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.Analysis.ESP">
            <summary>
            Gets or sets the esp.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Analysis.ESPMetadata">
            <summary>
            Gets or sets the esp metadata.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Analysis.Mn">
            <summary>
            Gets or sets the mn.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Analysis.MnMetadata">
            <summary>
            Gets or sets the mn metadata.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Analysis.Al">
            <summary>
            Gets or sets the al.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Analysis.AlMetadata">
            <summary>
            Gets or sets the al metadata.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Analysis.ParticleSizeSand">
            <summary>
            Gets or sets the particle size sand.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Analysis.ParticleSizeSandMetadata">
            <summary>
            Gets or sets the particle size sand metadata.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Analysis.ParticleSizeSilt">
            <summary>
            Gets or sets the particle size silt.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Analysis.ParticleSizeSiltMetadata">
            <summary>
            Gets or sets the particle size silt metadata.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Analysis.ParticleSizeClay">
            <summary>
            Gets or sets the particle size clay.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Analysis.ParticleSizeClayMetadata">
            <summary>
            Gets or sets the particle size clay metadata.
            </summary>
        </member>
        <member name="T:APSIM.Shared.Soils.Analysis.PHUnitsEnum">
            <summary>
            Units for PH.
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.Analysis.PHUnitsEnum.Water">
            <summary>
            The water units
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.Analysis.PHUnitsEnum.CaCl2">
            <summary>
            The CaCL2
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Analysis.PHUnits">
            <summary>
            Gets or sets the ph units.
            </summary>
        </member>
        <member name="T:APSIM.Shared.Soils.Analysis.BoronUnitsEnum">
            <summary>
            Valid units for Boron
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.Analysis.BoronUnitsEnum.HotWater">
            <summary>
            The hot water
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.Analysis.BoronUnitsEnum.HotCaCl2">
            <summary>
            The hot ca CL2
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Analysis.BoronUnits">
            <summary>
            Gets or sets the boron units.
            </summary>
        </member>
        <member name="T:APSIM.Shared.Soils.EventHandler">
            <summary>
            These classes define the attributes used to provide metadata for the
            APSIM Component properties and events.
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.EventHandler._EventName">
            <summary>
            The _ event name
            </summary>
        </member>
        <member name="M:APSIM.Shared.Soils.EventHandler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:APSIM.Shared.Soils.EventHandler"/> class.
            </summary>
        </member>
        <member name="M:APSIM.Shared.Soils.EventHandler.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:APSIM.Shared.Soils.EventHandler"/> class.
            </summary>
            <param name="Name">The name.</param>
        </member>
        <member name="P:APSIM.Shared.Soils.EventHandler.EventName">
            <summary>
            Gets or sets the name of the event.
            </summary>
            <value>
            The name of the event.
            </value>
        </member>
        <member name="T:APSIM.Shared.Soils.Units">
            <summary>
            An attribute for specifying units.
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.Units.St">
            <summary>
            The st
            </summary>
        </member>
        <member name="M:APSIM.Shared.Soils.Units.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:APSIM.Shared.Soils.Units"/> class.
            </summary>
            <param name="Units">The units.</param>
        </member>
        <member name="M:APSIM.Shared.Soils.Units.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="T:APSIM.Shared.Soils.Description">
            <summary>
            An attribute for specifying a description
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.Description.St">
            <summary>
            The st
            </summary>
        </member>
        <member name="M:APSIM.Shared.Soils.Description.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:APSIM.Shared.Soils.Description"/> class.
            </summary>
            <param name="Description">The description.</param>
        </member>
        <member name="M:APSIM.Shared.Soils.Description.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="T:APSIM.Shared.Soils.ComponentTypeAttribute">
            <summary>
            This attribute is used in DotNetProxies.cs to provide a map between the
            proxy class and the component type.
            Usage: [ComponentType("Plant2")]
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.ComponentTypeAttribute.ComponentClass">
            <summary>
            The component class
            </summary>
        </member>
        <member name="M:APSIM.Shared.Soils.ComponentTypeAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:APSIM.Shared.Soils.ComponentTypeAttribute"/> class.
            </summary>
            <param name="CompClass">The comp class.</param>
        </member>
        <member name="T:APSIM.Shared.Soils.UILargeText">
            <summary>
            A user interface attribute to instruct the UI to allow for a large amount of text.
            </summary>
        </member>
        <member name="T:APSIM.Shared.Soils.UIIgnore">
            <summary>
            A user interface attribute to instruct the UI to ignore this field/property
            </summary>
        </member>
        <member name="T:APSIM.Shared.Soils.InitialWater">
            <summary>
            Class for holding information about the initial water state for a soil.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.InitialWater.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="T:APSIM.Shared.Soils.InitialWater.PercentMethodEnum">
            <summary>
            Two different mechanisms for specifying percent of water.
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.InitialWater.PercentMethodEnum.FilledFromTop">
            <summary>
            Water should fill the profile from the top.
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.InitialWater.PercentMethodEnum.EvenlyDistributed">
            <summary>
            Water should be evenly distributed down the profile.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.InitialWater.PercentMethod">
            <summary>
            Gets or sets the percent method.
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.InitialWater.FractionFull">
            <summary>
            The fraction full (0-1)
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.InitialWater.DepthWetSoil">
            <summary>
            The depth wet soil (mm)
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.InitialWater.RelativeTo">
            <summary>
            Gets or sets the crop name that the water should be relative to.
            </summary>
        </member>
        <member name="T:APSIM.Shared.Soils.Sample">
            <summary>
            Represents a soil sample.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Sample.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Sample.Date">
            <summary>
            Gets or sets the sample date.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Sample.Thickness">
            <summary>
            Gets or sets the thickness.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Sample.NO3">
            <summary>
            Gets or sets the NO3.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Sample.NH4">
            <summary>
            Gets or sets the NH4.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Sample.SW">
            <summary>
            Gets or sets the soil water
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Sample.OC">
            <summary>
            Gets or sets the organic carbon
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Sample.EC">
            <summary>
            Gets or sets the EC.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Sample.CL">
            <summary>
            Gets or sets the CL.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Sample.ESP">
            <summary>
            Gets or sets the ESP.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Sample.PH">
            <summary>
            Gets or sets the PH.
            </summary>
        </member>
        <member name="M:APSIM.Shared.Soils.Sample.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:APSIM.Shared.Soils.Sample"/> class.
            </summary>
        </member>
        <member name="T:APSIM.Shared.Soils.Sample.NUnitsEnum">
            <summary>
            Valid units for NO3
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.Sample.NUnitsEnum.ppm">
            <summary>
            PPM units
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.Sample.NUnitsEnum.kgha">
            <summary>
            kgha units.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Sample.NO3Units">
            <summary>
            Gets or sets the NO3 units.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Sample.NH4Units">
            <summary>
            Gets or sets the NH4 units.
            </summary>
        </member>
        <member name="T:APSIM.Shared.Soils.Sample.SWUnitsEnum">
            <summary>
            Valid units for soil water
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.Sample.SWUnitsEnum.Volumetric">
            <summary>
            volumetric (mm/mm)
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.Sample.SWUnitsEnum.Gravimetric">
            <summary>
            gravimetric (mm/mm)
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.Sample.SWUnitsEnum.mm">
            <summary>
            Total water (mm)
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Sample.SWUnits">
            <summary>
            Gets or sets the SW units.
            </summary>
        </member>
        <member name="T:APSIM.Shared.Soils.Sample.OCSampleUnitsEnum">
            <summary>
            Valid units for organic carbon
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.Sample.OCSampleUnitsEnum.Total">
            <summary>
            total (%)
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.Sample.OCSampleUnitsEnum.WalkleyBlack">
            <summary>
            walkley black (%)
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Sample.OCUnits">
            <summary>
            Gets or sets the OC units.
            </summary>
        </member>
        <member name="T:APSIM.Shared.Soils.Sample.PHSampleUnitsEnum">
            <summary>
            Valid units for PH.
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.Sample.PHSampleUnitsEnum.Water">
            <summary>
            water
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.Sample.PHSampleUnitsEnum.CaCl2">
            <summary>
            CaCL2
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Sample.PHUnits">
            <summary>
            Gets or sets the PH units.
            </summary>
        </member>
        <member name="T:APSIM.Shared.Soils.Soil">
            <summary>
            The soil class encapsulates a soil characterisation and 0 or more soil samples.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Soil.Name">
            <summary>Gets or sets the name.</summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Soil.RecordNumber">
            <summary>Gets or sets the record number.</summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Soil.ASCOrder">
            <summary>Gets or sets the asc order.</summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Soil.ASCSubOrder">
            <summary>Gets or sets the asc sub order.</summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Soil.SoilType">
            <summary>Gets or sets the type of the soil.</summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Soil.LocalName">
            <summary>Gets or sets the name of the local.</summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Soil.Site">
            <summary>Gets or sets the site.</summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Soil.NearestTown">
            <summary>Gets or sets the nearest town.</summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Soil.Region">
            <summary>Gets or sets the region.</summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Soil.State">
            <summary>Gets or sets the state.</summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Soil.Country">
            <summary>Gets or sets the country.</summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Soil.NaturalVegetation">
            <summary>Gets or sets the natural vegetation.</summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Soil.ApsoilNumber">
            <summary>Gets or sets the apsoil number.</summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Soil.Latitude">
            <summary>Gets or sets the latitude.</summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Soil.Longitude">
            <summary>Gets or sets the longitude.</summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Soil.LocationAccuracy">
            <summary>Gets or sets the location accuracy.</summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Soil.YearOfSampling">
            <summary>Gets or sets the year of sampling.</summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Soil.DataSource">
            <summary>Gets or sets the data source.</summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Soil.Comments">
            <summary>Gets or sets the comments.</summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Soil.Water">
            <summary>Gets or sets the water.</summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Soil.SoilWater">
            <summary>Gets or sets the soil water.</summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Soil.SoilOrganicMatter">
            <summary>Gets or sets the soil organic matter.</summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Soil.Analysis">
            <summary>Gets or sets the analysis.</summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Soil.InitialWater">
            <summary>Gets or sets the initial water.</summary>
            <value>The initial water.</value>
        </member>
        <member name="P:APSIM.Shared.Soils.Soil.Samples">
            <summary>Gets or sets the samples.</summary>
        </member>
        <member name="T:APSIM.Shared.Soils.SoilCrop">
            <summary>
            A soil crop parameterisation
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.SoilCrop.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.SoilCrop.Thickness">
            <summary>
            Gets or sets the thickness.
            </summary>
            <value>
            The thickness.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.SoilCrop.LL">
            <summary>
            Gets or sets the ll.
            </summary>
            <value>
            The ll.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.SoilCrop.KL">
            <summary>
            Gets or sets the kl.
            </summary>
            <value>
            The kl.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.SoilCrop.XF">
            <summary>
            Gets or sets the xf.
            </summary>
            <value>
            The xf.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.SoilCrop.LLMetadata">
            <summary>
            Gets or sets the ll metadata.
            </summary>
            <value>
            The ll metadata.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.SoilCrop.KLMetadata">
            <summary>
            Gets or sets the kl metadata.
            </summary>
            <value>
            The kl metadata.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.SoilCrop.XFMetadata">
            <summary>
            Gets or sets the xf metadata.
            </summary>
            <value>
            The xf metadata.
            </value>
        </member>
        <member name="T:APSIM.Shared.Soils.SoilOrganicMatter">
            <summary>
            A soil organic matter class.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.SoilOrganicMatter.RootCN">
            <summary>
            Gets or sets the root cn.
            </summary>
            <value>
            The root cn.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.SoilOrganicMatter.RootWt">
            <summary>
            Gets or sets the root wt.
            </summary>
            <value>
            The root wt.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.SoilOrganicMatter.SoilCN">
            <summary>
            Gets or sets the soil cn.
            </summary>
            <value>
            The soil cn.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.SoilOrganicMatter.EnrACoeff">
            <summary>
            Gets or sets the enr a coeff.
            </summary>
            <value>
            The enr a coeff.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.SoilOrganicMatter.EnrBCoeff">
            <summary>
            Gets or sets the enr b coeff.
            </summary>
            <value>
            The enr b coeff.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.SoilOrganicMatter.Thickness">
            <summary>
            Gets or sets the thickness.
            </summary>
            <value>
            The thickness.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.SoilOrganicMatter.OC">
            <summary>
            Gets or sets the oc.
            </summary>
            <value>
            The oc.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.SoilOrganicMatter.OCMetadata">
            <summary>
            Gets or sets the oc metadata.
            </summary>
            <value>
            The oc metadata.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.SoilOrganicMatter.FBiom">
            <summary>
            Gets or sets the f biom.
            </summary>
            <value>
            The f biom.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.SoilOrganicMatter.FInert">
            <summary>
            Gets or sets the f inert.
            </summary>
            <value>
            The f inert.
            </value>
        </member>
        <member name="F:APSIM.Shared.Soils.SoilOrganicMatter.ppm">
            <summary>
            The PPM
            </summary>
        </member>
        <member name="T:APSIM.Shared.Soils.SoilOrganicMatter.OCUnitsEnum">
            <summary>
            
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.SoilOrganicMatter.OCUnitsEnum.Total">
            <summary>
            total (%)
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.SoilOrganicMatter.OCUnitsEnum.WalkleyBlack">
            <summary>
            walkley black (%)
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.SoilOrganicMatter.OCUnits">
            <summary>
            Gets or sets the oc units.
            </summary>
            <value>
            The oc units.
            </value>
        </member>
        <member name="T:APSIM.Shared.Soils.SoilUtilities">
            <summary>
            Various soil utilities.
            </summary>
        </member>
        <member name="M:APSIM.Shared.Soils.SoilUtilities.FromXML(System.String)">
            <summary>
            Create a soil object from the XML passed in.
            </summary>
            <param name="Xml">The XML.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Soils.SoilUtilities.ToXML(APSIM.Shared.Soils.Soil)">
            <summary>
            Write soil to XML
            </summary>
            <param name="soil">The soil.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Soils.SoilUtilities.ToMidPoints(System.Double[])">
            <summary>
            Convert the specified thicknesses to mid points for plotting.
            </summary>
            <param name="Thickness">The thicknesses.</param>
            <returns>
            The array of midpoints
            </returns>
        </member>
        <member name="M:APSIM.Shared.Soils.SoilUtilities.ToCumThickness(System.Double[])">
            <summary>
            Convert the thickness to cumulative thickness.
            </summary>
            <param name="Thickness">The thickness.</param>
            <returns>
            Cumulative thicknesses.
            </returns>
        </member>
        <member name="M:APSIM.Shared.Soils.SoilUtilities.CreateStandardisedSoil(APSIM.Shared.Soils.Soil)">
            <summary>Creates a standardised the soil to a uniform thickness.</summary>
            <param name="soil">The soil.</param>
            <returns>A standardised soil.</returns>
        </member>
        <member name="M:APSIM.Shared.Soils.SoilUtilities.PAWC(APSIM.Shared.Soils.Soil)">
            <summary>Return the plant available water CAPACITY at standard thickness. Units: mm/mm</summary>
            <param name="soil">The soil to calculate PAWC for.</param>
        </member>
        <member name="M:APSIM.Shared.Soils.SoilUtilities.PAWCCrop(APSIM.Shared.Soils.Soil,APSIM.Shared.Soils.SoilCrop)">
            <summary>Return the plant available water CAPACITY for the specified crop at standard thickness. Units: mm/mm</summary>
            <param name="soil">The soil to calculate PAWC for.</param>
            <param name="crop">The crop.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Soils.SoilUtilities.PAWCmm(APSIM.Shared.Soils.Soil)">
            <summary>Return the plant available water CAPACITY at standard thickness. Units: mm</summary>
            <param name="soil">The soil to calculate PAWC for.</param>
        </member>
        <member name="M:APSIM.Shared.Soils.SoilUtilities.PAWCCropmm(APSIM.Shared.Soils.Soil,APSIM.Shared.Soils.SoilCrop)">
            <summary>Return the plant available water CAPACITY for the specified crop at standard thickness. Units: mm</summary>
            <param name="soil">The soil to calculate PAWC for.</param>
            <param name="crop">The crop.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Soils.SoilUtilities.PAWC(System.Double[],System.Double[],System.Double[],System.Double[])">
            <summary>
            Calculate plant available water CAPACITY. Units: mm/mm
            </summary>
            <param name="Thickness">The thickness.</param>
            <param name="LL">The ll.</param>
            <param name="DUL">The dul.</param>
            <param name="XF">The xf.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Soils.SoilUtilities.GetCropNames(APSIM.Shared.Soils.Soil)">
            <summary>
            Get or set the names of crops. Note: When setting, the crops will be reorded to match
            the setting list of names. Also new crops will be added / deleted as required.
            </summary>
            <param name="soil">The soil.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Soils.SoilUtilities.Crop(APSIM.Shared.Soils.Soil,System.String)">
            <summary>
            Return a specific crop to caller. Will throw if crop doesn't exist.
            </summary>
            <param name="soil">The soil.</param>
            <param name="cropName">Name of the crop.</param>
            <returns></returns>
            <exception cref="T:System.Exception">Soil could not find crop:  + cropName</exception>
        </member>
        <member name="M:APSIM.Shared.Soils.SoilUtilities.SetCropThickness(APSIM.Shared.Soils.SoilCrop,System.Double[],APSIM.Shared.Soils.Soil)">
            <summary>Convert the crop to the specified thickness. Ensures LL is between AirDry and DUL.</summary>
            <param name="crop">The crop to convert</param>
            <param name="thickness">The thicknesses to convert the crop to.</param>
            <param name="soil">The soil the crop belongs to.</param>
            <returns>The new soil crop at standard thicknesses.</returns>
        </member>
        <member name="M:APSIM.Shared.Soils.SoilUtilities.SetSoilWaterThickness(APSIM.Shared.Soils.SoilWater,System.Double[],APSIM.Shared.Soils.Soil)">
            <summary>Sets the soil water thickness.</summary>
            <param name="soilWater">The soil water.</param>
            <param name="thickness">Thickness to change soil water to.</param>
            <param name="soil">The soil.</param>
            <returns>A new sample with the specified thickness</returns>
        </member>
        <member name="M:APSIM.Shared.Soils.SoilUtilities.SetSoilOrganicMatterThickness(APSIM.Shared.Soils.SoilOrganicMatter,System.Double[],APSIM.Shared.Soils.Soil)">
            <summary>Sets the soil organic matter thickness.</summary>
            <param name="soilOrganicMatter">The soil organic matter.</param>
            <param name="thickness">Thickness to change soil water to.</param>
            <param name="soil">The soil.</param>
            <returns>A new SoilOrganicMatterwith the specified thickness</returns>
        </member>
        <member name="M:APSIM.Shared.Soils.SoilUtilities.SW(APSIM.Shared.Soils.Soil,APSIM.Shared.Soils.Sample,APSIM.Shared.Soils.Sample.SWUnitsEnum)">
            <summary>
            Calculates the specified soil water (mm/mm)
            </summary>
            <param name="soil">The soil.</param>
            <param name="sample">The sample.</param>
            <param name="toUnits">To units.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Soils.SoilUtilities.ConstrainSampleSW(APSIM.Shared.Soils.Sample,APSIM.Shared.Soils.Soil)">
            <summary>Constrains the sample SW to between AirDry and DUL.</summary>
            <param name="sample">The sample.</param>
            <param name="soil">The soil.</param>
        </member>
        <member name="M:APSIM.Shared.Soils.SoilUtilities.SetSampleThickness(APSIM.Shared.Soils.Sample,System.Double[],APSIM.Shared.Soils.Soil)">
            <summary>Sets the sample thickness.</summary>
            <param name="sample">The sample.</param>
            <param name="thickness">The thickness to change the sample to.</param>
            <param name="soil">The soil.</param>
            <returns>A new sample with the specified thickness</returns>
        </member>
        <member name="M:APSIM.Shared.Soils.SoilUtilities.SetAnalysisThickness(APSIM.Shared.Soils.Analysis,System.Double[],APSIM.Shared.Soils.Soil)">
            <summary>Sets the analysis thickness.</summary>
            <param name="analysis">The analysis.</param>
            <param name="thickness">The thickness to change the analysis to.</param>
            <param name="soil">The soil.</param>
            <returns>A new analysis with the specified thickness</returns>
        </member>
        <member name="F:APSIM.Shared.Soils.SoilUtilities.BlackVertosolCropList">
            <summary>
            The black vertosol crop list
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.SoilUtilities.GreyVertosolCropList">
            <summary>
            The grey vertosol crop list
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.SoilUtilities.PredictedThickness">
            <summary>
            The predicted thickness
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.SoilUtilities.PredictedXF">
            <summary>
            The predicted xf
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.SoilUtilities.WheatKL">
            <summary>
            The wheat kl
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.SoilUtilities.SorghumKL">
            <summary>
            The sorghum kl
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.SoilUtilities.BarleyKL">
            <summary>
            The barley kl
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.SoilUtilities.ChickpeaKL">
            <summary>
            The chickpea kl
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.SoilUtilities.MungbeanKL">
            <summary>
            The mungbean kl
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.SoilUtilities.CottonKL">
            <summary>
            The cotton kl
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.SoilUtilities.CanolaKL">
            <summary>
            The canola kl
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.SoilUtilities.PigeonPeaKL">
            <summary>
            The pigeon pea kl
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.SoilUtilities.MaizeKL">
            <summary>
            The maize kl
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.SoilUtilities.CowpeaKL">
            <summary>
            The cowpea kl
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.SoilUtilities.SunflowerKL">
            <summary>
            The sunflower kl
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.SoilUtilities.FababeanKL">
            <summary>
            The fababean kl
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.SoilUtilities.LucerneKL">
            <summary>
            The lucerne kl
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.SoilUtilities.PerennialKL">
            <summary>
            The perennial kl
            </summary>
        </member>
        <member name="T:APSIM.Shared.Soils.SoilUtilities.BlackVertosol">
            <summary>
            
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.SoilUtilities.BlackVertosol.CottonA">
            <summary>
            The cotton a
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.SoilUtilities.BlackVertosol.SorghumA">
            <summary>
            The sorghum a
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.SoilUtilities.BlackVertosol.WheatA">
            <summary>
            The wheat a
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.SoilUtilities.BlackVertosol.CottonB">
            <summary>
            The cotton b
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.SoilUtilities.BlackVertosol.SorghumB">
            <summary>
            The sorghum b
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.SoilUtilities.BlackVertosol.WheatB">
            <summary>
            The wheat b
            </summary>
        </member>
        <member name="T:APSIM.Shared.Soils.SoilUtilities.GreyVertosol">
            <summary>
            
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.SoilUtilities.GreyVertosol.CottonA">
            <summary>
            The cotton a
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.SoilUtilities.GreyVertosol.SorghumA">
            <summary>
            The sorghum a
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.SoilUtilities.GreyVertosol.WheatA">
            <summary>
            The wheat a
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.SoilUtilities.GreyVertosol.BarleyA">
            <summary>
            The barley a
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.SoilUtilities.GreyVertosol.ChickpeaA">
            <summary>
            The chickpea a
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.SoilUtilities.GreyVertosol.FababeanA">
            <summary>
            The fababean a
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.SoilUtilities.GreyVertosol.MungbeanA">
            <summary>
            The mungbean a
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.SoilUtilities.GreyVertosol.CottonB">
            <summary>
            The cotton b
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.SoilUtilities.GreyVertosol.SorghumB">
            <summary>
            The sorghum b
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.SoilUtilities.GreyVertosol.WheatB">
            <summary>
            The wheat b
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.SoilUtilities.GreyVertosol.BarleyB">
            <summary>
            The barley b
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.SoilUtilities.GreyVertosol.ChickpeaB">
            <summary>
            The chickpea b
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.SoilUtilities.GreyVertosol.FababeanB">
            <summary>
            The fababean b
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.SoilUtilities.GreyVertosol.MungbeanB">
            <summary>
            The mungbean b
            </summary>
        </member>
        <member name="M:APSIM.Shared.Soils.SoilUtilities.PredictedCropNames(APSIM.Shared.Soils.Soil)">
            <summary>
            Return a list of predicted crop names or an empty string[] if none found.
            </summary>
            <param name="soil">The soil.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Soils.SoilUtilities.PredictedCrop(APSIM.Shared.Soils.Soil,System.String)">
            <summary>
            Return a predicted SoilCrop for the specified crop name or null if not found.
            </summary>
            <param name="soil">The soil.</param>
            <param name="CropName">Name of the crop.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Soils.SoilUtilities.PredictedLL(APSIM.Shared.Soils.Soil,System.Double[],System.Double)">
            <summary>
            Calculate and return a predicted LL from the specified A and B values.
            </summary>
            <param name="soil">The soil.</param>
            <param name="A">a.</param>
            <param name="B">The b.</param>
            <returns></returns>
        </member>
        <member name="T:APSIM.Shared.Soils.SoilUtilities.MapType">
            <summary>
            
            </summary>
        </member>
        <member name="M:APSIM.Shared.Soils.SoilUtilities.MapConcentration(System.Double[],System.Double[],System.Double[],System.Double)">
            <summary>
            Map soil variables (using concentration) from one layer structure to another.
            </summary>
            <param name="fromValues">The from values.</param>
            <param name="fromThickness">The from thickness.</param>
            <param name="toThickness">To thickness.</param>
            <param name="defaultValueForBelowProfile">The default value for below profile.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Soils.SoilUtilities.MapUsingBD(System.Double[],System.Double[],System.Double[],APSIM.Shared.Soils.Soil,System.Double)">
            <summary>
            Map soil variables (using BD) from one layer structure to another.
            </summary>
            <param name="fromValues">The from values.</param>
            <param name="fromThickness">The from thickness.</param>
            <param name="toThickness">To thickness.</param>
            <param name="soil">The soil.</param>
            <param name="defaultValueForBelowProfile">The default value for below profile.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Soils.SoilUtilities.MapSW(System.Double[],System.Double[],System.Double[])">
            <summary>
            Map soil water from one layer structure to another.
            </summary>
            <param name="fromValues">The from values.</param>
            <param name="fromThickness">The from thickness.</param>
            <param name="toThickness">To thickness.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Soils.SoilUtilities.MapMass(System.Double[],System.Double[],System.Double[])">
            <summary>
            Map soil variables from one layer structure to another.
            </summary>
            <param name="fromValues">The f values.</param>
            <param name="fromThickness">The f thickness.</param>
            <param name="toThickness">To thickness.</param>
            <returns>The from values mapped to the specified thickness</returns>
        </member>
        <member name="M:APSIM.Shared.Soils.SoilUtilities.BDMapped(APSIM.Shared.Soils.Soil,System.Double[])">
            <summary>
            Bulk density - mapped to the specified layer structure. Units: mm/mm
            </summary>
            <param name="soil">The soil.</param>
            <param name="ToThickness">To thickness.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Soils.SoilUtilities.AirDryMapped(APSIM.Shared.Soils.Soil,System.Double[])">
            <summary>
            AirDry - mapped to the specified layer structure. Units: mm/mm
            </summary>
            <param name="soil">The soil.</param>
            <param name="ToThickness">To thickness.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Soils.SoilUtilities.LL15Mapped(APSIM.Shared.Soils.Soil,System.Double[])">
            <summary>
            Lower limit 15 bar - mapped to the specified layer structure. Units: mm/mm
            </summary>
            <param name="soil">The soil.</param>
            <param name="ToThickness">To thickness.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Soils.SoilUtilities.DULMapped(APSIM.Shared.Soils.Soil,System.Double[])">
            <summary>
            Drained upper limit - mapped to the specified layer structure. Units: mm/mm
            </summary>
            <param name="soil">The soil.</param>
            <param name="ToThickness">To thickness.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Soils.SoilUtilities.LastValue(System.Double[])">
            <summary>Return the last value that isn't a missing value.</summary>
            <param name="Values">The values.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Soils.SoilUtilities.SecondLastValue(System.Double[])">
            <summary>Return the second last value that isn't a missing value.</summary>
            <param name="Values">The values.</param>
            <returns></returns>
        </member>
        <member name="T:APSIM.Shared.Soils.SoilWater">
            <summary>
            A specification of soil water model constants and parameters.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.SoilWater.SummerCona">
            <summary>
            Gets or sets the summer cona.
            </summary>
            <value>
            The summer cona.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.SoilWater.SummerU">
            <summary>
            Gets or sets the summer u.
            </summary>
            <value>
            The summer u.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.SoilWater.SummerDate">
            <summary>
            Gets or sets the summer date.
            </summary>
            <value>
            The summer date.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.SoilWater.WinterCona">
            <summary>
            Gets or sets the winter cona.
            </summary>
            <value>
            The winter cona.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.SoilWater.WinterU">
            <summary>
            Gets or sets the winter u.
            </summary>
            <value>
            The winter u.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.SoilWater.WinterDate">
            <summary>
            Gets or sets the winter date.
            </summary>
            <value>
            The winter date.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.SoilWater.DiffusConst">
            <summary>
            Gets or sets the diffus constant.
            </summary>
            <value>
            The diffus constant.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.SoilWater.DiffusSlope">
            <summary>
            Gets or sets the diffus slope.
            </summary>
            <value>
            The diffus slope.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.SoilWater.Salb">
            <summary>
            Gets or sets the salb.
            </summary>
            <value>
            The salb.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.SoilWater.CN2Bare">
            <summary>
            Gets or sets the c n2 bare.
            </summary>
            <value>
            The c n2 bare.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.SoilWater.CNRed">
            <summary>
            Gets or sets the cn red.
            </summary>
            <value>
            The cn red.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.SoilWater.CNCov">
            <summary>
            Gets or sets the cn cov.
            </summary>
            <value>
            The cn cov.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.SoilWater.Slope">
            <summary>
            Gets or sets the slope.
            </summary>
            <value>
            The slope.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.SoilWater.DischargeWidth">
            <summary>
            Gets or sets the width of the discharge.
            </summary>
            <value>
            The width of the discharge.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.SoilWater.CatchmentArea">
            <summary>
            Gets or sets the catchment area.
            </summary>
            <value>
            The catchment area.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.SoilWater.MaxPond">
            <summary>
            Gets or sets the maximum pond.
            </summary>
            <value>
            The maximum pond.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.SoilWater.Thickness">
            <summary>
            Gets or sets the thickness.
            </summary>
            <value>
            The thickness.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.SoilWater.SWCON">
            <summary>
            Gets or sets the swcon.
            </summary>
            <value>
            The swcon.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.SoilWater.MWCON">
            <summary>
            Gets or sets the mwcon.
            </summary>
            <value>
            The mwcon.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.SoilWater.KLAT">
            <summary>
            Gets or sets the klat.
            </summary>
            <value>
            The klat.
            </value>
        </member>
        <member name="T:APSIM.Shared.Soils.Water">
            <summary>
            A water specification for a soil.
            </summary>
        </member>
        <member name="F:APSIM.Shared.Soils.Water._Thickness">
            <summary>
            The _ thickness
            </summary>
        </member>
        <member name="P:APSIM.Shared.Soils.Water.Thickness">
            <summary>
            Gets or sets the thickness.
            </summary>
            <value>
            The thickness.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.Water.BD">
            <summary>
            Gets or sets the bd.
            </summary>
            <value>
            The bd.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.Water.AirDry">
            <summary>
            Gets or sets the air dry.
            </summary>
            <value>
            The air dry.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.Water.LL15">
            <summary>
            Gets or sets the l L15.
            </summary>
            <value>
            The l L15.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.Water.DUL">
            <summary>
            Gets or sets the dul.
            </summary>
            <value>
            The dul.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.Water.SAT">
            <summary>
            Gets or sets the sat.
            </summary>
            <value>
            The sat.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.Water.KS">
            <summary>
            Gets or sets the ks.
            </summary>
            <value>
            The ks.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.Water.BDMetadata">
            <summary>
            Gets or sets the bd metadata.
            </summary>
            <value>
            The bd metadata.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.Water.AirDryMetadata">
            <summary>
            Gets or sets the air dry metadata.
            </summary>
            <value>
            The air dry metadata.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.Water.LL15Metadata">
            <summary>
            Gets or sets the l L15 metadata.
            </summary>
            <value>
            The l L15 metadata.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.Water.DULMetadata">
            <summary>
            Gets or sets the dul metadata.
            </summary>
            <value>
            The dul metadata.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.Water.SATMetadata">
            <summary>
            Gets or sets the sat metadata.
            </summary>
            <value>
            The sat metadata.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.Water.KSMetadata">
            <summary>
            Gets or sets the ks metadata.
            </summary>
            <value>
            The ks metadata.
            </value>
        </member>
        <member name="P:APSIM.Shared.Soils.Water.Crops">
            <summary>
            Gets or sets the crops.
            </summary>
            <value>
            The crops.
            </value>
        </member>
        <member name="T:APSIM.Shared.Utilities.ApsimConstant">
            <summary>
            A simple type for encapsulating a constant
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.ApsimConstant.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:APSIM.Shared.Utilities.ApsimConstant"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="val">The value.</param>
            <param name="units">The units.</param>
            <param name="comm">The comm.</param>
        </member>
        <member name="F:APSIM.Shared.Utilities.ApsimConstant.Name">
            <summary>
            The name
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.ApsimConstant.Value">
            <summary>
            The value
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.ApsimConstant.Units">
            <summary>
            The units
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.ApsimConstant.Comment">
            <summary>
            The comment
            </summary>
        </member>
        <member name="T:APSIM.Shared.Utilities.ApsimTextFile">
            <summary>
            This class encapsulates an APSIM input file providing methods for
            reading data.
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.ApsimTextFile._FileName">
            <summary>
            The _ file name
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.ApsimTextFile.Headings">
            <summary>
            The headings
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.ApsimTextFile.Units">
            <summary>
            The units
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.ApsimTextFile._Constants">
            <summary>
            The _ constants
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.ApsimTextFile.CSV">
            <summary>
            The CSV
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.ApsimTextFile.In">
            <summary>
            The in
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.ApsimTextFile._FirstDate">
            <summary>
            The _ first date
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.ApsimTextFile._LastDate">
            <summary>
            The _ last date
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.ApsimTextFile.FirstLinePosition">
            <summary>
            The first line position
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.ApsimTextFile.Words">
            <summary>
            The words
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.ApsimTextFile.ColumnTypes">
            <summary>
            The column types
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.ApsimTextFile.ToTable(System.String)">
            <summary>
            A helper to cleanly get a DataTable from the contents of a file.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns>
            The data table.
            </returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.ApsimTextFile.Open(System.String)">
            <summary>
            Open the file ready for reading.
            </summary>
            <param name="FileName">Name of the file.</param>
            <exception cref="T:System.Exception">Cannot find file:  + FileName</exception>
        </member>
        <member name="M:APSIM.Shared.Utilities.ApsimTextFile.Open(System.IO.Stream)">
            <summary>
            Opens the specified stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:APSIM.Shared.Utilities.ApsimTextFile.Open">
            <summary>
            Open the file ready for reading.
            </summary>
            <exception cref="T:System.Exception">
            Cannot find headings and units line in  + _FileName
            or
            Cannot find last row of file:  + _FileName
            </exception>
        </member>
        <member name="M:APSIM.Shared.Utilities.ApsimTextFile.Close">
            <summary>
            Close this file.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Utilities.ApsimTextFile.FirstDate">
            <summary>
            Gets the first date.
            </summary>
            <value>
            The first date.
            </value>
        </member>
        <member name="P:APSIM.Shared.Utilities.ApsimTextFile.LastDate">
            <summary>
            Gets the last date.
            </summary>
            <value>
            The last date.
            </value>
        </member>
        <member name="P:APSIM.Shared.Utilities.ApsimTextFile.Constants">
            <summary>
            Gets the constants.
            </summary>
            <value>
            The constants.
            </value>
        </member>
        <member name="M:APSIM.Shared.Utilities.ApsimTextFile.Constant(System.String)">
            <summary>
            Constants the specified constant name.
            </summary>
            <param name="ConstantName">Name of the constant.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.ApsimTextFile.ConstantAsDouble(System.String)">
            <summary>
            Returns a constant as double.
            </summary>
            <param name="ConstantName">Name of the constant.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.ApsimTextFile.SetConstant(System.String,System.String)">
            <summary>
            Sets the constant.
            </summary>
            <param name="ConstantName">Name of the constant.</param>
            <param name="ConstantValue">The constant value.</param>
        </member>
        <member name="M:APSIM.Shared.Utilities.ApsimTextFile.AddConstant(System.String,System.String,System.String,System.String)">
            <summary>
            Adds the constant.
            </summary>
            <param name="ConstantName">Name of the constant.</param>
            <param name="ConstantValue">The constant value.</param>
            <param name="Units">The units.</param>
            <param name="Comment">The comment.</param>
        </member>
        <member name="M:APSIM.Shared.Utilities.ApsimTextFile.ToTable(System.Collections.Generic.List{System.String})">
            <summary>
            Convert this file to a DataTable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.ApsimTextFile.ReadApsimHeaderLines(APSIM.Shared.Utilities.StreamReaderRandomAccess,System.Collections.Specialized.StringCollection@,System.Collections.Specialized.StringCollection@)">
            <summary>
            Reads the apsim header lines.
            </summary>
            <param name="In">The in.</param>
            <param name="ConstantLines">The constant lines.</param>
            <param name="HeadingLines">The heading lines.</param>
        </member>
        <member name="M:APSIM.Shared.Utilities.ApsimTextFile.AddConstantsToData(System.Data.DataTable)">
            <summary>
            Add our constants to every row in the specified table beginning with the specified StartRow.
            </summary>
            <param name="Table">The table.</param>
        </member>
        <member name="M:APSIM.Shared.Utilities.ApsimTextFile.ReadApsimHeader(APSIM.Shared.Utilities.StreamReaderRandomAccess)">
            <summary>
            Read in the APSIM header - headings/units and constants.
            </summary>
            <param name="In">The in.</param>
            <exception cref="T:System.Exception">The number of headings and units doesn't match in file:  + _FileName</exception>
        </member>
        <member name="M:APSIM.Shared.Utilities.ApsimTextFile.DetermineColumnTypes(APSIM.Shared.Utilities.StreamReaderRandomAccess,System.Collections.Specialized.StringCollection)">
            <summary>
            Determine and return the data types of the specfied words.
            </summary>
            <param name="In">The in.</param>
            <param name="Words">The words.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.ApsimTextFile.ConvertWordsToObjects(System.Collections.Specialized.StringCollection,System.Type[])">
            <summary>
            Convert the specified words to the specified column types and return their values.
            </summary>
            <param name="Words">The words.</param>
            <param name="ColumnTypes">The column types.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.ApsimTextFile.GetNextLine(APSIM.Shared.Utilities.StreamReaderRandomAccess,System.Collections.Specialized.StringCollection@)">
            <summary>
            Return the next line in the file as a collection of words.
            </summary>
            <param name="In">The in.</param>
            <param name="Words">The words.</param>
            <returns></returns>
            <exception cref="T:System.Exception">Invalid number of values on line:  + Line + \r\nin file:  + _FileName</exception>
        </member>
        <member name="M:APSIM.Shared.Utilities.ApsimTextFile.LookAheadForNonMissingValue(APSIM.Shared.Utilities.StreamReaderRandomAccess,System.Int32)">
            <summary>
            Looks the ahead for non missing value.
            </summary>
            <param name="In">The in.</param>
            <param name="w">The w.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.ApsimTextFile.GetDateFromValues(System.Object[])">
            <summary>
            Return the first date from the specified objects. Will return empty DateTime if not found.
            </summary>
            <param name="Values">The values.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.ApsimTextFile.SeekToDate(System.DateTime)">
            <summary>
            Seek to the specified date. Will throw if date not found.
            </summary>
            <param name="Date">The date.</param>
            <exception cref="T:System.Exception">Date  + Date.ToString() +  doesn't exist in file:  + _FileName</exception>
        </member>
        <member name="M:APSIM.Shared.Utilities.ApsimTextFile.GetNextLineOfData">
            <summary>
            Return the next line of data from the file as an array of objects.
            </summary>
            <returns></returns>
            <exception cref="T:System.Exception">End of file reached while reading file:  + _FileName</exception>
        </member>
        <member name="T:APSIM.Shared.Utilities.ColourUtilities">
            <summary>
            Colour utility class
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.ColourUtilities.ChooseColour(System.Int32)">
            <summary>
            Choose a colour from the color palette
            </summary>
            <param name="colourNumber">The colour number to choose</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.ColourUtilities.ChangeColorBrightness(System.Drawing.Color,System.Double)">
            <summary>
            Creates color with corrected brightness.
            </summary>
            <param name="color">Color to correct.</param>
            <param name="correctionFactor">The brightness correction factor. Must be between -1 and 1. 
            Negative values produce darker colors.</param>
            <returns>
            Corrected <see cref="T:System.Drawing.Color"/> structure.
            </returns>
        </member>
        <member name="T:APSIM.Shared.Utilities.DataTableUtilities">
            <summary>
            Some utilities for manipulating a data table.
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.DataTableUtilities.AddValue(System.Data.DataTable,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Add a value to the specified data table
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.DataTableUtilities.AddValue(System.Data.DataTable,System.String,System.Double,System.Int32,System.Int32)">
            <summary>
            Add a value to the specified data table
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.DataTableUtilities.AddColumn(System.Data.DataTable,System.String,System.Double[],System.Int32,System.Int32)">
            <summary>
            Add a column of values to the specified data table
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.DataTableUtilities.AddColumn(System.Data.DataTable,System.String,System.Double[])">
            <summary>
            Add a column of values to the specified data table
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.DataTableUtilities.AddColumn(System.Data.DataTable,System.String,System.String[])">
            <summary> 
            Add a column of values to the specified data table
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.DataTableUtilities.AddColumn(System.Data.DataTable,System.String,System.String[],System.Int32,System.Int32)">
            <summary>
            Add a column of values to the specified data table
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.DataTableUtilities.AddColumnOfObjects(System.Data.DataTable,System.String,System.Collections.IEnumerable)">
            <summary>
            Add a column of values to the specified data table
            </summary>
            <param name="table">The table to add values to</param>
            <param name="columnName">The name of the column</param>
            <param name="values">The values to add to the table.</param>
        </member>
        <member name="M:APSIM.Shared.Utilities.DataTableUtilities.GetColumnAsDoubles(System.Data.DataTable,System.String)">
            <summary>
            Get a column of values from the specified data table
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.DataTableUtilities.GetColumnAsDoubles(System.Data.DataTable,System.String,System.Int32)">
            <summary>
            Get a column as doubles
            </summary>
            <param name="Table"></param>
            <param name="ColumnName"></param>
            <param name="NumValues"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.DataTableUtilities.GetColumnAsDoubles(System.Data.DataView,System.String)">
            <summary>
            Get a column as doubles
            </summary>
            <param name="Table"></param>
            <param name="ColumnName"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.DataTableUtilities.GetColumnAsDoubles(System.Data.DataTable,System.String,System.Int32,System.Int32)">
            <summary>
            Get a column as doubles.
            </summary>
            <param name="Table"></param>
            <param name="ColumnName"></param>
            <param name="NumValues"></param>
            <param name="StartRow"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.DataTableUtilities.GetColumnAsStrings(System.Data.DataTable,System.String)">
            <summary>
            Get a column of values from the specified data table
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.DataTableUtilities.GetColumnAsStrings(System.Data.DataTable,System.String,System.Int32)">
            <summary>
            Get a column as strings
            </summary>
            <param name="Table"></param>
            <param name="ColumnName"></param>
            <param name="NumValues"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.DataTableUtilities.GetColumnAsStrings(System.Data.DataTable,System.String,System.Int32,System.Int32)">
            <summary>
            Get a column as strings.
            </summary>
            <param name="Table"></param>
            <param name="ColumnName"></param>
            <param name="NumValues"></param>
            <param name="StartRow"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.DataTableUtilities.GetColumnAsStrings(System.Data.DataView,System.String)">
            <summary>
            Get a column as strings
            </summary>
            <param name="view">The data view.</param>
            <param name="ColumnName">The column name.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.DataTableUtilities.GetColumnAsDates(System.Data.DataTable,System.String)">
            <summary>
            Get a column as dates.
            </summary>
            <param name="Table"></param>
            <param name="ColumnName"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.DataTableUtilities.GetColumnAsDates(System.Data.DataView,System.String)">
            <summary>
            Get a column as dates
            </summary>
            <param name="view">The data view.</param>
            <param name="ColumnName">The column name.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.DataTableUtilities.GetColumnNames(System.Data.DataTable)">
            <summary>
            Get a list of column names
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.DataTableUtilities.GetNumberOfNonBlankRows(System.Data.DataTable,System.String)">
            <summary>
            Get number of non blank values in column of the specified data table
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.DataTableUtilities.GetDateFromRow(System.Data.DataRow)">
            <summary>
            Get a date from the specified row
            </summary>
            <param name="Row"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.DataTableUtilities.FilterTableForYear(System.Data.DataTable,System.Int32,System.Int32)">
            <summary>
            Filter the specified table for the given date range.
            </summary>
            <param name="Table"></param>
            <param name="StartYear"></param>
            <param name="EndYear"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.DataTableUtilities.GetDistinctValues(System.Data.DataTable,System.String)">
            <summary>
            Get the distinct rows from the specified table using the values in the specified column
            </summary>
            <param name="Table"></param>
            <param name="ColumnName"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.DataTableUtilities.MonthlySums(System.Data.DataView)">
            <summary>
            Get a list of monthly sums for the specified data view.
            </summary>
            <param name="View"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.DataTableUtilities.DataTableToText(System.Data.DataTable,System.Int32,System.String,System.Boolean)">
            <summary>
            Write the specified DataTable to a CSV string, excluding the specified column names.
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.DataTableUtilities.ConvertObjectToString(System.Object)">
            <summary>
            Convert the specified object to a string.
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.DataTableUtilities.CopyRows(System.Data.DataTable,System.Data.DataTable)">
            <summary>Merges the columns and rows from one specified table to another.</summary>
            <remarks>The builtin DataTable.merge needs the fields to be the same type.
            This method will instead try and conver the fields.</remarks>
            <param name="from">The from table</param>
            <param name="to">The destination table.</param>
        </member>
        <member name="T:APSIM.Shared.Utilities.DateUtilities">
            <summary>
            Some date manipulation routines, transcribed from their Fortran counterparts
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.DateUtilities.LowerCaseMonths">
            <summary>
            a list of month names in lower case.
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.DateUtilities.rxDD">
            <summary>
            A regular expression
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.DateUtilities.rxMMM">
            <summary>
            A regular expression
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.DateUtilities.rxDMY">
            <summary>
            A regular expression
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.DateUtilities.GetDate(System.Double)">
            <summary>
            Convert a Julian Date to a DateTime object
            Where the Julian day begins at Greenwich mean noon 12pm. 12h UT.
            2429996.0 is 1/1/1941 12:00
            </summary>
            <param name="julian_date"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.DateUtilities.GetDate(System.String)">
            <summary>
            Get a DateTime from a ddMMM string (ie '01Jan' OR '1-Jan' OR '1 Jan' etc), year is automatically set to 1900
            </summary>
            <param name="ddMMM">String containing 'day of month' and at least the first 3 letters of a month's name</param>
            <returns>A DateTime with the specified date and month, year = 1900</returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.DateUtilities.GetDate(System.String,System.Int32)">
            <summary>
            Get a DateTime from a 'ddMMM' string (ie '01Jan' OR '1-Jan' OR '1 Jan' etc)
            </summary>
            <param name="ddMMM">String containing 'day of month' and at least the first 3 letters of a month's name</param>
            <param name="year">The year to use when constructing the DateTime object</param>
            <returns>A DateTime constructed from <paramref name="ddMMM"/> using <paramref name="year"/></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.DateUtilities.GetDate(System.String,System.DateTime)">
            <summary>
            Get a DateTime from a 'ddMMM' string (ie '01Jan' OR '1-Jan' OR '1 Jan' etc), using <paramref name="today"/> to get the year to use
            </summary>
            <param name="ddMMM">String containing 'day of month' and at least the first 3 letters of a month's name</param>
            <param name="today">The year in this parameter will be used to construct the result</param>
            <returns>A DateTime constructed from <paramref name="ddMMM"/> using the year of <paramref name="today"/></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.DateUtilities.GetNextDate(System.DateTime,System.DateTime)">
            <summary>
            Given today's date (<paramref name="today"/>), get the next occurrence of <paramref name="thedate"/> by adding/subtracting year(s)
            </summary>
            <param name="thedate">The date to change</param>
            <param name="today">Today's date</param>
            <returns>The next occurrence of <paramref name="thedate"/></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.DateUtilities.GetNextDate(System.String,System.DateTime)">
            <summary>
            Given a 'ddMMM' string (ie '01Jan' OR '1-Jan' OR '1 Jan' etc) and <paramref name="today"/>, return the next occurrence of <paramref name="ddMMM"/>
            </summary>
            <param name="ddMMM">String containing 'day of month' and at least the first 3 letters of a month's name</param>
            <param name="today">Today's date</param>
            <returns>The next occurrence of <paramref name="ddMMM"/></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.DateUtilities.CompareDates(System.String,System.DateTime)">
            <summary>
            Construct a DateTime from <paramref name="ddMMM"/> and <paramref name="today"/> then 'CompareTo' <paramref name="today"/>
            </summary>
            <param name="ddMMM">String containing 'day of month' and at least the first 3 letters of a month's name</param>
            <param name="today">Today's date</param>
            <returns>+1 if <paramref name="ddMMM"/> is less than <paramref name="today"/>, 0 if equal, -1 if greater</returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.DateUtilities.DatesEqual(System.String,System.DateTime)">
            <summary>
            Compare <paramref name="ddMMM"/> and <paramref name="today"/> (ignoring year component)
            </summary>
            <param name="ddMMM">String containing 'day of month' and at least the first 3 letters of a month's name</param>
            <param name="today">The date to check</param>
            <returns>true if the day and month components of <paramref name="today"/> match ddMMM, else false</returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.DateUtilities.WithinDates(System.String,System.DateTime,System.String)">
            <summary>
            Look to see if <paramref name="today"/> lies between <paramref name="ddMMM_start"/> and <paramref name="ddMMM_end"/> (will handle year boundaries)
            </summary>
            <param name="ddMMM_start">The start date - a string containing 'day of month' and at least the first 3 letters of a month's name</param>
            <param name="today">The date to check</param>
            <param name="ddMMM_end">The end date - a string containing 'day of month' and at least the first 3 letters of a month's name</param>
            <returns>true if within date window</returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.DateUtilities.WithinDates(System.DateTime,System.DateTime,System.DateTime)">
            <summary>
            Look to see if <paramref name="today"/> lies between <paramref name="start"/> and <paramref name="end"/> (will handle year boundaries)
            </summary>
            <param name="start">The start date</param>
            <param name="today">The date to check</param>
            <param name="end">The end date</param>
            <returns>true if within date window</returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.DateUtilities.GetJulianDate(System.DateTime)">
            <summary>
            Get a Julian Date from a DateTime. Where the Julian day begins at Greenwich mean noon 12pm. 12h UT.
            2429995.5 is 1/1/1941 00:00
            2429996.0 is 1/1/1941 12:00
            </summary>
            <param name="date">The DateTime to convert</param>
            <returns>The Julian Date representation of <paramref name="date"/></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.DateUtilities.JulianDayNumberToDayOfYear(System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Converts a Julian Day Number to Day of year. 
            </summary>
            <param name="JDN"> Julian day number.</param>
            <param name="dyoyr">Day of year</param>
            <param name="year">Year</param>
            <returns>Date time value.</returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.DateUtilities.JulianDayNumberToDateTime(System.Int32)">
            <summary>
            Convert the Julian day number (int value) emitted from Clock to a DateTime. 
            This will be the DateTime at 00:00 of the day. 
            For example 2429996 => 1/1/1941 by the apsim clock. 
            (Where 2429996 is really 1/1/1941 12pm. 2429995.5 is really 1/1/1941 00:00.) 
            </summary>
            <param name="JDN"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.DateUtilities.DateTimeToJulianDayNumber(System.DateTime)">
            <summary>
            Convert the DateTime value to the Julian day number equivalent to what
            Clock would emit. Given the DateTime for a day would give the whole number
            for the standard Julian date at 12h on this day.
            e.g. 1/1/1941 00:00 - 23:59 --> 2429996
            </summary>
            <param name="adatetime"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.DateUtilities.DMYtoISO(System.String)">
            <summary>
            Convert a dd/mm/yyyy to yyyy-mm-dd string
            </summary>
            <param name="dmy">[d]d/[m]m/yyyy</param>
            <returns>yyyy-mm-dd</returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.DateUtilities.DMYtoDate(System.String)">
            <summary>
            Convert a dd/mm/yyyy to DateTime
            </summary>
            <param name="dmy">[d]d/[m]m/yyyy</param>
            <returns>The date</returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.DirectoryUtilities.EnsureFileNameIsUnique(System.String)">
            <summary>
            Ensure the specified filename is unique (by appending a number). 
            Returns the updated filename to caller. 
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.DirectoryUtilities.DeleteFiles(System.String,System.Boolean)">
            <summary>
            Delete files that match the specified filespec (e.g. *.out). If Recurse is true
            then it will look for matching files to delete in all sub directories.
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.DirectoryUtilities.FindFiles(System.String,System.String,System.Collections.Generic.List{System.String}@,System.Boolean,System.Boolean)">
            <summary>
            Return a list of files that match the specified filespec (e.g. *.out). If Recurse is true
            then it will look for matching files in all sub directories. If SearchHiddenFolders is
            true then it will look in hidden folders as well.
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.DirectoryUtilities.FindFileOnPath(System.String)">
            <summary>
            Find the specified file (using the environment PATH variable) and return its full path.
            </summary>
        </member>
        <member name="T:APSIM.Shared.Utilities.ExpressionType">
            <summary>
            
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.ExpressionType.Variable">
            <summary>The variable</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.ExpressionType.Value">
            <summary>The value</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.ExpressionType.Operator">
            <summary>The operator</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.ExpressionType.EvalFunction">
            <summary>The eval function</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.ExpressionType.Result">
            <summary>The result</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.ExpressionType.Bracket">
            <summary>The bracket</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.ExpressionType.Comma">
            <summary>The comma</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.ExpressionType.Error">
            <summary>The error</summary>
        </member>
        <member name="T:APSIM.Shared.Utilities.Symbol">
            <summary>
            
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.Symbol.m_name">
            <summary>The m_name</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.Symbol.m_value">
            <summary>The m_value</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.Symbol.m_values">
            <summary>The m_values</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.Symbol.m_type">
            <summary>The m_type</summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.Symbol.ToString">
            <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:APSIM.Shared.Utilities.EvaluateFunctionDelegate">
            <summary>
            
            </summary>
            <param name="name">The name.</param>
            <param name="args">The arguments.</param>
            <returns></returns>
        </member>
        <member name="T:APSIM.Shared.Utilities.ExpressionEvaluator">
            <author>Emad Barsoum</author>
            <email>ebarsoum@msn.com</email>
            <date>March 23, 2002</date>
            <copyright>
            This code is Copyright to Emad Barsoum, it can be used or changed for free without removing the header
            information which is the author name, email and date or refer to this information if any change made. 
            </copyright>
            <summary>
            This class <c>EvalFunction</c> use the transformation from infix notation to postfix notation to evalute most
            Mathematic expression, it support most operators (+,-,*,/,%,^), functions from 0 to any number of parameters
            and also a user defined function by using delegate, also it support variables in the expression, it will
            generate a symbol table that can be updated at run time.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Utilities.ExpressionEvaluator.Result">
            <summary>Gets the result.</summary>
            <value>The result.</value>
        </member>
        <member name="P:APSIM.Shared.Utilities.ExpressionEvaluator.Results">
            <summary>Gets the results.</summary>
            <value>The results.</value>
        </member>
        <member name="P:APSIM.Shared.Utilities.ExpressionEvaluator.Equation">
            <summary>Gets the equation.</summary>
            <value>The equation.</value>
        </member>
        <member name="P:APSIM.Shared.Utilities.ExpressionEvaluator.Postfix">
            <summary>Gets the postfix.</summary>
            <value>The postfix.</value>
        </member>
        <member name="P:APSIM.Shared.Utilities.ExpressionEvaluator.DefaultFunctionEvaluation">
            <summary>Sets the default function evaluation.</summary>
            <value>The default function evaluation.</value>
        </member>
        <member name="P:APSIM.Shared.Utilities.ExpressionEvaluator.Error">
            <summary>Gets a value indicating whether this <see cref="T:APSIM.Shared.Utilities.ExpressionEvaluator"/> is error.</summary>
            <value><c>true</c> if error; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:APSIM.Shared.Utilities.ExpressionEvaluator.ErrorDescription">
            <summary>Gets the error description.</summary>
            <value>The error description.</value>
        </member>
        <member name="P:APSIM.Shared.Utilities.ExpressionEvaluator.Variables">
            <summary>Gets or sets the variables.</summary>
            <value>The variables.</value>
        </member>
        <member name="M:APSIM.Shared.Utilities.ExpressionEvaluator.#ctor">
            <summary>Initializes a new instance of the <see cref="T:APSIM.Shared.Utilities.ExpressionEvaluator"/> class.</summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.ExpressionEvaluator.Parse(System.String)">
            <summary>Parses the specified equation.</summary>
            <param name="equation">The equation.</param>
        </member>
        <member name="M:APSIM.Shared.Utilities.ExpressionEvaluator.Infix2Postfix">
            <summary>Infix2s the postfix.</summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.ExpressionEvaluator.EvaluatePostfix">
            <summary>Evaluates the postfix.</summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.ExpressionEvaluator.Precedence(APSIM.Shared.Utilities.Symbol)">
            <summary>Precedences the specified sym.</summary>
            <param name="sym">The sym.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.ExpressionEvaluator.Evaluate(APSIM.Shared.Utilities.Symbol,APSIM.Shared.Utilities.Symbol,APSIM.Shared.Utilities.Symbol)">
            <summary>Evaluates the specified sym1.</summary>
            <param name="sym1">The sym1.</param>
            <param name="opr">The opr.</param>
            <param name="sym2">The sym2.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.ExpressionEvaluator.EvaluateFunction(System.String,System.Object[])">
            <summary>Evaluates the function.</summary>
            <param name="name">The name.</param>
            <param name="args">The arguments.</param>
            <returns></returns>
        </member>
        <member name="F:APSIM.Shared.Utilities.ExpressionEvaluator.m_bError">
            <summary>The M_B error</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.ExpressionEvaluator.m_sErrorDescription">
            <summary>The M_S error description</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.ExpressionEvaluator.m_result">
            <summary>The m_result</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.ExpressionEvaluator.m_results">
            <summary>The m_results</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.ExpressionEvaluator.m_equation">
            <summary>The m_equation</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.ExpressionEvaluator.m_postfix">
            <summary>The m_postfix</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.ExpressionEvaluator.m_defaultFunctionEvaluation">
            <summary>The m_default function evaluation</summary>
        </member>
        <member name="T:APSIM.Shared.Utilities.FTPClient">
            <summary>
            An FTP client
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.FTPClient.Upload(System.String,System.String,System.String,System.String)">
            <summary>
            Uploads the specified file.
            </summary>
            <param name="FullFileName">Full name of the file.</param>
            <param name="FTPFullFileName">Name of the FTP full file.</param>
            <param name="UserName">Name of the user.</param>
            <param name="Password">The password.</param>
        </member>
        <member name="M:APSIM.Shared.Utilities.FTPClient.Download(System.String,System.String,System.String,System.String)">
            <summary>
            Downloads the specified file.
            </summary>
            <param name="FTPFullFileName">Name of the FTP full file.</param>
            <param name="DestFullFileName">Name of the dest full file.</param>
            <param name="UserName">Name of the user.</param>
            <param name="Password">The password.</param>
        </member>
        <member name="M:APSIM.Shared.Utilities.FTPClient.Delete(System.String,System.String,System.String)">
            <summary>
            Deletes the specified FTP file.
            </summary>
            <param name="FTPFullFileName">Name of the FTP full file.</param>
            <param name="UserName">Name of the user.</param>
            <param name="Password">The password.</param>
        </member>
        <member name="M:APSIM.Shared.Utilities.FTPClient.DirectoryListing(System.String,System.Boolean,System.String,System.String)">
            <summary>
            Gets a directory listing.
            </summary>
            <param name="FTPDirectory">The FTP directory.</param>
            <param name="Detailed">if set to <c>true</c> [detailed].</param>
            <param name="UserName">Name of the user.</param>
            <param name="Password">The password.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.FTPClient.FileSize(System.String,System.String,System.String)">
            <summary>
            Gets the size of a file.
            </summary>
            <param name="FTPFullFileName">Name of the FTP full file.</param>
            <param name="UserName">Name of the user.</param>
            <param name="Password">The password.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.FTPClient.Rename(System.String,System.String,System.String,System.String)">
            <summary>
            Renames the specified FTP file.
            </summary>
            <param name="FTPFullFileName">Name of the FTP full file.</param>
            <param name="NewFileName">New name of the file.</param>
            <param name="UserName">Name of the user.</param>
            <param name="Password">The password.</param>
        </member>
        <member name="M:APSIM.Shared.Utilities.FTPClient.MakeDirectory(System.String,System.String,System.String)">
            <summary>
            Creates the directory.
            </summary>
            <param name="FTPDirectory">The FTP directory.</param>
            <param name="UserName">Name of the user.</param>
            <param name="Password">The password.</param>
        </member>
        <member name="T:APSIM.Shared.Utilities.JobManager">
            <summary>A class for managing asynchronous running of jobs.</summary>
        </member>
        <member name="T:APSIM.Shared.Utilities.JobManager.IRunnable">
            <summary>A runnable interface.</summary>
        </member>
        <member name="P:APSIM.Shared.Utilities.JobManager.IRunnable.IsComputationallyTimeConsuming">
            <summary>Gets a value indicating whether this instance is computationally time consuming.</summary>
        </member>
        <member name="P:APSIM.Shared.Utilities.JobManager.IRunnable.IsCompleted">
            <summary>Gets a value indicating whether this job is completed. Set by JobManager.</summary>
        </member>
        <member name="P:APSIM.Shared.Utilities.JobManager.IRunnable.ErrorMessage">
            <summary>Gets the error message. Can be null if no error. Set by JobManager.</summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.JobManager.IRunnable.Run(System.Object,System.ComponentModel.DoWorkEventArgs)">
            <summary>Called to start the job. Can throw on error.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ComponentModel.DoWorkEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:APSIM.Shared.Utilities.JobManager.MaximumNumOfProcessors">
            <summary>The maximum number of processors used by this job manager.</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.JobManager.jobs">
            <summary>A job queue containing all jobs.</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.JobManager.schedulerThread">
            <summary>Main scheduler thread that goes through all jobs and sets them running.</summary>
        </member>
        <member name="P:APSIM.Shared.Utilities.JobManager.MoreJobsToRun">
            <summary>
            Gets a value indicating whether there are more jobs to run.
            </summary>
            <value><c>true</c> if [more jobs to run]; otherwise, <c>false</c>.</value>
        </member>
        <member name="E:APSIM.Shared.Utilities.JobManager.AllJobsCompleted">
            <summary>Occurs when all jobs completed.</summary>
        </member>
        <member name="P:APSIM.Shared.Utilities.JobManager.SomeHadErrors">
            <summary>
            Gets or sets a value indicating whether some jobs had errors.
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.JobManager.#ctor">
            <summary>Initializes a new instance of the <see cref="T:APSIM.Shared.Utilities.JobManager"/> class.</summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.JobManager.AddJob(APSIM.Shared.Utilities.JobManager.IRunnable)">
            <summary>Add a job to the list of jobs that need running.</summary>
            <param name="job">The job to add to the queue</param>
        </member>
        <member name="M:APSIM.Shared.Utilities.JobManager.Start(System.Boolean)">
            <summary>
            Start the jobs asynchronously. If 'waitUntilFinished'
            is true then control won't return until all jobs have finished.
            </summary>
            <param name="waitUntilFinished">if set to <c>true</c> [wait until finished].</param>
        </member>
        <member name="M:APSIM.Shared.Utilities.JobManager.Stop">
            <summary>Stop all jobs currently running in the scheduler.</summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.JobManager.OnWorkerCompleted(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)">
            <summary>Called when [worker completed].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ComponentModel.RunWorkerCompletedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:APSIM.Shared.Utilities.JobManager.DoWork(System.Object,System.ComponentModel.DoWorkEventArgs)">
            <summary>
            Main DoWork method for the scheduler thread. NB this does NOT run on the UI thread.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ComponentModel.DoWorkEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:APSIM.Shared.Utilities.JobManager.OnJobCompleted(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)">
            <summary>
            This event handler will be invoked, on the scheduler thread, everytime a job is completed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ComponentModel.RunWorkerCompletedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:APSIM.Shared.Utilities.JobManager.GetJob(System.ComponentModel.BackgroundWorker)">
            <summary>Gets a job</summary>
            <param name="bw">Background worker of job to find</param>
            <returns>The IRunnable job.</returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.JobManager.GetNextJobToRun">
            <summary>Return the index of next job to run or -1 if nothing to run.</summary>
            <returns>Index of job or -1.</returns>
        </member>
        <member name="T:APSIM.Shared.Utilities.JobParallel">
            <summary>
            A composite class for a sequence of jobs that will be run asynchronously.
            If an error occurs in any job, then this job will also produce an error.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Utilities.JobParallel.IsComputationallyTimeConsuming">
            <summary>Gets a value indicating whether this instance is computationally time consuming.</summary>
        </member>
        <member name="P:APSIM.Shared.Utilities.JobParallel.Jobs">
            <summary>A list of jobs that will be run in sequence.</summary>
        </member>
        <member name="P:APSIM.Shared.Utilities.JobParallel.IsCompleted">
            <summary>Gets a value indicating whether this job is completed. Set by JobManager.</summary>
        </member>
        <member name="P:APSIM.Shared.Utilities.JobParallel.ErrorMessage">
            <summary>Gets the error message. Can be null if no error. Set by JobManager.</summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.JobParallel.Run(System.Object,System.ComponentModel.DoWorkEventArgs)">
            <summary>Called to start the job.</summary>
            <param name="sender">Event sender</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="P:APSIM.Shared.Utilities.JobParallel.AllCompleted">
            <summary>
            Gets a value indicating whether all jobs are completed.
            </summary>
            <value><c>true</c> if completed; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:APSIM.Shared.Utilities.JobSequence">
            <summary>
            A composite class for a sequence of jobs that will be run sequentially.
            If an error occurs in any job, then subsequent jobs won't be run.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Utilities.JobSequence.IsComputationallyTimeConsuming">
            <summary>Gets a value indicating whether this instance is computationally time consuming.</summary>
        </member>
        <member name="P:APSIM.Shared.Utilities.JobSequence.Jobs">
            <summary>A list of jobs that will be run in sequence.</summary>
        </member>
        <member name="P:APSIM.Shared.Utilities.JobSequence.IsCompleted">
            <summary>Gets a value indicating whether this job is completed. Set by JobManager.</summary>
        </member>
        <member name="P:APSIM.Shared.Utilities.JobSequence.ErrorMessage">
            <summary>Gets the error message. Can be null if no error. Set by JobManager.</summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.JobSequence.Run(System.Object,System.ComponentModel.DoWorkEventArgs)">
            <summary>Called to start the job.</summary>
            <param name="sender">Event sender</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="P:APSIM.Shared.Utilities.JobSequence.AllCompleted">
            <summary>
            Gets a value indicating whether all jobs are completed.
            </summary>
            <value><c>true</c> if completed; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:APSIM.Shared.Utilities.MathUtilities">
            <summary>
            Various math utilities.
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.MathUtilities.tolerance">
            <summary>
            A constant tolerance used by many utilities.
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.MathUtilities.MissingValue">
            <summary>
            A constant double value denoting a missing value
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.FloatsAreEqual(System.Double,System.Double)">
            <summary>
            Return true if the true floating point numbers are equal
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.FloatsAreEqual(System.Double,System.Double,System.Double)">
            <summary>
            Return true if the true floating point numbers are equal within the given tolerance
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.IsGreaterThan(System.Double,System.Double)">
            <summary>
            Return true if the true if value 1 is greater than value 2
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.IsLessThan(System.Double,System.Double)">
            <summary>
            Return true if the true if value 1 is less than value 2
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.RoundToZero(System.Double,System.Double)">
            <summary>
            Round the specified value to zero if within the given tolerance
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.RoundToZero(System.Double)">
             <summary>
            Round the specified value to zero if within 1x10e-15 of zero
             </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.Multiply(System.Double[],System.Double[])">
            <summary>
            Perform a stepwise multiply of the values in value 1 with the values in value2.
            Returns an array of the same size as value 1 and value 2
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.Multiply_Value(System.Double[],System.Double)">
            <summary>
            Multiply all values in value 1 with the value2.
            Returns an array of the same size as value 1
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.Divide(System.Double[],System.Double[])">
            <summary>
            Perform a stepwise divide of the values in value 1 with the values in value2.
            Returns an array of the same size as value 1 and value 2
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.Divide_Value(System.Double[],System.Double)">
            <summary>
            Divide all values in value 1 with the value2.
            Returns an array of the same size as value 1
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.Divide(System.Double,System.Double,System.Double)">
            <summary>
            Divide value1 by value2. On error, the value errVal will be returned.
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.AddValue(System.Double[],System.Double)">
            <summary>
            Add value2 to all values in value 1
            Returns an array of the same size as value 1
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.Add(System.Double[],System.Double[])">
            <summary>
            Perform a stepwise addition of the values in value 1 with the values in value2.
            Returns an array of the same size as value 1 and value 2
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.Subtract(System.Double[],System.Double[])">
            <summary>
            Perform a stepwise subtraction of the values in value 1 with the values in value2.
            Returns an array of the same size as value 1 and value 2
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.Subtract_Value(System.Double[],System.Double)">
            <summary>
            Subtract value2 from all values in value 1
            Returns an array of the same size as value 1
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.Sum(System.Collections.IEnumerable)">
            <summary>
            Sum an array of doubles 
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.Average(System.Collections.IEnumerable)">
            <summary>
            Average an array of doubles 
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.Sum(System.Collections.IEnumerable,System.Int32,System.Int32,System.Double)">
            <summary>
            Sum an array of numbers starting at startIndex up to (but not including) endIndex
            beginning with an initial value
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.LinearInterpReal(System.Double,System.Double[],System.Double[],System.Boolean@)">
             <summary>
            Linearly interpolates a value y for a given value x and a given
            set of xy co-ordinates.
            When x lies outside the x range_of, y is set to the boundary condition.
            Returns true for Did_interpolate if interpolation was necessary.
             </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.Constrain(System.Double,System.Double,System.Double)">
            <summary>
            Ensure that dValue is within the specified lower and upper limits.
            </summary>
            <param name="dValue"></param>
            <param name="dLowerLimit"></param>
            <param name="dUpperLimit"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.Constrain(System.Double[],System.Double[],System.Double[])">
            <summary>
            Ensure that all values in dValues are within the specified lower and upper limits.
            </summary>
            <param name="dValues"></param>
            <param name="dLowerLimits"></param>
            <param name="dUpperLimits"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.Round(System.Double,System.Int32)">
            <summary>
            Round the specified number to the specified number of decimal places.
            </summary>
            <param name="Value"></param>
            <param name="NumDecPlaces"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.Round(System.Double[],System.Int32)">
            <summary>
            Round all values in Values to the specified number of decimal places.
            </summary>
            <param name="Values"></param>
            <param name="NumDecPlaces"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.Zero(System.Double[])">
            <summary>
            Zero the specified array.
            </summary>
            <param name="arr">The array to be zeroed</param>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.Zero(System.Double[0:,0:])">
            <summary>
            Zero the specified 2-D array.
            </summary>
            <param name="arr">The array to be zeroed</param>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.Zero(System.Double[0:,0:,0:])">
            <summary>
            Zero the specified 3-D array.
            </summary>
            <param name="arr">The array to be zeroed</param>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.Zero(System.Double[0:,0:,0:,0:])">
            <summary>
            Zero the specified 4-D array.
            </summary>
            <param name="arr">The array to be zeroed</param>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.Zero(System.Double[0:,0:,0:,0:,0:])">
            <summary>
            Zero the specified 5-D array.
            </summary>
            <param name="arr">The array to be zeroed</param>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.Reverse(System.Double[])">
            <summary>
            Reverse the contents of the specified array.
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.ValuesInArray(System.Double[])">
            <summary>
            Returns true if there are values in the specified array that aren't missing values.
            </summary>
            <param name="Values"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.ValuesInArray(System.String[])">
            <summary>
            Returns true if there are non blank values in the specified array
            </summary>
            <param name="Values"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.StringsToDoubles(System.Collections.IList)">
            <summary>
            Convert an array of strings to an array of doubles
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.StringsToIntegers(System.Collections.IList)">
            <summary>
            Convert an array of strings to an array of integers
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.ProbabilityDistribution(System.Int32,System.Boolean)">
            <summary>
            Return an array of numbers of the specified size that represents the
            y axis on a probability distribution graph.
            </summary>
            <param name="NumPoints"></param>
            <param name="Exceed"></param>
            <returns></returns>
        </member>
        <member name="T:APSIM.Shared.Utilities.MathUtilities.RegrStats">
            <summary>
            A class encapsulating regression statistics.
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.MathUtilities.RegrStats.n">
            <summary>
            Number of observations
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.MathUtilities.RegrStats.m">
            <summary>
            The slope
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.MathUtilities.RegrStats.c">
            <summary>
            The intercept
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.MathUtilities.RegrStats.SEslope">
            <summary>
            Standard error of the slope
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.MathUtilities.RegrStats.SEcoeff">
            <summary>
            Standard error of the intercept
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.MathUtilities.RegrStats.R2">
            <summary>
            The R squared
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.MathUtilities.RegrStats.ADJR2">
            <summary>
            
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.MathUtilities.RegrStats.R2YX">
            <summary>
            
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.MathUtilities.RegrStats.VarRatio">
            <summary>
            
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.MathUtilities.RegrStats.RMSD">
            <summary>
            The root mean squared deviation
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.MathUtilities.RegrStats.NSE">
            <summary>
            Nash-Sutcliff efficiency
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.MathUtilities.RegrStats.ME">
            <summary>
            Mean error
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.MathUtilities.RegrStats.MAE">
            <summary>
            Mean absolute error
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.MathUtilities.RegrStats.RSR">
            <summary>
            Root mean square error to Standard deviation Ratio
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.CalcRegressionStats(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Calculate regression statistics for the given x and y values.
            </summary>
            <param name="X"></param>
            <param name="Y"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.DayLength(System.Double,System.Double,System.Double)">
            <summary>
            Return the time elapsed in hours between the specified sun angle
             from 90<sup>o</sup> in am and pm. +ve above the horizon, -ve below the horizon.
            </summary>
            \param DayOfYear The day of year
            \param SunAngle 
            \parblock 
            Angle to measure time between such as twilight (deg).
            angular distance between 90 deg and end of twilight - altitude of sun. +ve up, -ve down.
            Civil twilight ends after sunset or begins before sunrise when the solar depression angle is 6deg;. e.g SunAngle = -6deg;
            Nautical twilight : 12deg;
            Astronomical twilight : 18deg;
            \endparblock
            \param Latitude Latitude to calculate the day length (deg;)
            \return Day length in hours between the specified sun angle from 90deg; in am and pm.
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.Sign(System.Double,System.Double)">
             <summary>
             Transfer of sign - from FORTRAN.
            The result is of the same type and kind as a. Its value is the abs(a) of a,
            if b is greater than or equal positive zero; and -abs(a), if b is less than
            or equal to negative zero.
            Example a = sign (30,-2) ! a is assigned the value -30
             </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.Min(System.Collections.IEnumerable)">
            <summary>
            Return the minimum value
            </summary>
            <param name="Values"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.Max(System.Collections.IEnumerable)">
            <summary>
            Return the maximum value
            </summary>
            <param name="Values"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.Bound(System.Double,System.Double,System.Double)">
            <summary>
            Ensure that x is between x1 and x2.
            </summary>
            <param name="x"></param>
            <param name="x1"></param>
            <param name="x2"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.CreateArrayOfValues(System.Double,System.Int32)">
            <summary>
            Create an array of values all containing 'Value'
            </summary>
            <param name="Value"></param>
            <param name="NumValues"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.GreaterThan(System.Double,System.Double,System.Int32)">
            <summary>
            Return true if 'value1 is greater than value2 within the specified number of 
            decimal places
            </summary>
            <param name="Value1"></param>
            <param name="Value2"></param>
            <param name="NumDecPlaces"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.LessThan(System.Double,System.Double,System.Int32)">
            <summary>
            Return true if 'value1 is less than value2 within the specified number of 
            decimal places
            </summary>
            <param name="Value1"></param>
            <param name="Value2"></param>
            <param name="NumDecPlaces"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.IsNumerical(System.String)">
            <summary>
            Return true if the specified string can be converted to a double.
            </summary>
            <param name="StringValue"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.IsNumerical(System.String[])">
            <summary>
            Return true if all specified strings can be converted to a double.
            </summary>
            <param name="Values"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.IsNumericalenUS(System.String)">
            <summary>
            Return true the specified string can be converted to a double given the US culture
            </summary>
            <param name="StringValue"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.IsNumericalenUS(System.String[])">
            <summary>
            Return true if all specified strings can be converted to a double given the US culture
            </summary>
            <param name="Values"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.RemoveMissingValuesFromBottom(System.Double[])">
            <summary>
            Return an array of values where the missing values have been removed.
            </summary>
            <param name="Values"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.RemoveMissingValuesFromBottom(System.String[])">
            <summary>
            Return an array of values where the missing values have been removed.
            </summary>
            <param name="Values"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.RemoveValueAt(System.Double[],System.Int32)">
            <summary>
            Remove a value from the specified array.
            </summary>
            <param name="Values"></param>
            <param name="Index"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.DoublesToStrings(System.Collections.IList,System.String)">
            <summary>
            Convert the list of doubles to strings.
            </summary>
            <param name="DoubleValues"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.DoublesToSingles(System.Double[])">
            <summary>
            Convert the list of doubles to single precision floats.
            </summary>
            <param name="DoubleValues"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.Sqr(System.Double)">
            <summary>
            Return x * x
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.LnGamma(System.Double)">
            <summary>
            Return Ln Gamma
            </summary>
            <param name="xx"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.Gamma(System.Double)">
            <summary>
            Return Gamma
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.AreEqual(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double})">
            <summary>
            Return true if the two lists are equal
            </summary>
            <param name="L1"></param>
            <param name="L2"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.AreEqual(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})">
            <summary>
            Return true if the two lists are equal
            </summary>
            <param name="L1"></param>
            <param name="L2"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.StableSort``1(System.Collections.Generic.IList{``0},System.Comparison{``0})">
            <summary>
            Perform an insertion sort (stable sort) on the specified list.
            </summary>
        </member>
        <member name="T:APSIM.Shared.Utilities.MathUtilities.Stats">
            <summary>
            A structure for holding time series stats.
            </summary>
        </member>
        <member name="P:APSIM.Shared.Utilities.MathUtilities.Stats.Residual">
            <summary>Gets the residual.</summary>
            <value>The residual.</value>
        </member>
        <member name="P:APSIM.Shared.Utilities.MathUtilities.Stats.SDs">
            <summary>Gets the s ds.</summary>
            <value>The s ds.</value>
        </member>
        <member name="P:APSIM.Shared.Utilities.MathUtilities.Stats.SDm">
            <summary>Gets the s dm.</summary>
            <value>The s dm.</value>
        </member>
        <member name="P:APSIM.Shared.Utilities.MathUtilities.Stats.r">
            <summary>Gets the r.</summary>
            <value>The r.</value>
        </member>
        <member name="P:APSIM.Shared.Utilities.MathUtilities.Stats.R2">
            <summary>Gets the r2.</summary>
            <value>The r2.</value>
        </member>
        <member name="P:APSIM.Shared.Utilities.MathUtilities.Stats.LCS">
            <summary>Gets the LCS.</summary>
            <value>The LCS.</value>
        </member>
        <member name="P:APSIM.Shared.Utilities.MathUtilities.Stats.SDSD">
            <summary>Gets the SDSD.</summary>
            <value>The SDSD.</value>
        </member>
        <member name="P:APSIM.Shared.Utilities.MathUtilities.Stats.SB">
            <summary>Gets the sb.</summary>
            <value>The sb.</value>
        </member>
        <member name="P:APSIM.Shared.Utilities.MathUtilities.Stats.MSD">
            <summary>Gets the MSD.</summary>
            <value>The MSD.</value>
        </member>
        <member name="P:APSIM.Shared.Utilities.MathUtilities.Stats.RMSD">
            <summary>Gets the RMSD.</summary>
            <value>The RMSD.</value>
        </member>
        <member name="P:APSIM.Shared.Utilities.MathUtilities.Stats.Percent">
            <summary>Gets the percent.</summary>
            <value>The percent.</value>
        </member>
        <member name="F:APSIM.Shared.Utilities.MathUtilities.Stats.ObservedMean">
            <summary>The observed mean</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.MathUtilities.Stats.PredictedMean">
            <summary>The predicted mean</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.MathUtilities.Stats.X_XSquared">
            <summary>The x_ x squared</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.MathUtilities.Stats.Y_YSquared">
            <summary>The y_ y squared</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.MathUtilities.Stats.Y_YxX_X">
            <summary>The y_ yx x_ x</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.MathUtilities.Stats.Count">
            <summary>The count</summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.CalcTimeSeriesStats(System.Double[],System.Double[])">
            <summary>
            Calculate stats on the specified column.
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.AverageMonthlyTotals(System.Data.DataTable,System.String,System.DateTime,System.DateTime)">
            <summary>
            Return longterm average monthly totals for the given variable. 
            </summary>
            <remarks>
            
            Assumes a a date can be derived from the data table using the 
            DataTable.GetDateFromRow function.
            </remarks>
            <param name="table">The data table containing the data</param>
            <param name="fieldName">The field name to look at</param>
            <param name="firstDate">Only data after this date will be used</param>
            <param name="lastDate">Only data before this date will be used</param>
            <returns>An array of 12 numbers or null if no data in table.</returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.YearlyTotals(System.Data.DataTable,System.String,System.DateTime,System.DateTime)">
            <summary>
            Return yearly totals for the given variable. 
            </summary>
            <remarks>
            Assumes a a date can be derived from the data table using the 
            DataTable.GetDateFromRow function.
            </remarks>
            <param name="table">The data table containing the data</param>
            <param name="fieldName">The field name to look at</param>
            <param name="firstDate">Only data after this date will be used</param>
            <param name="lastDate">Only data before this date will be used</param>
            <returns>An array of yearly totals or null if no data in table.</returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.AverageDailyTotalsForEachMonth(System.Data.DataTable,System.String,System.DateTime,System.DateTime)">
            <summary>
            Return average daily totals for each month for the the given variable. 
            </summary>
            <remarks>
            Assumes a a date can be derived from the data table using the 
            DataTable.GetDateFromRow function.
            </remarks>
            <param name="table">The data table containing the data</param>
            <param name="fieldName">The field name to look at</param>
            <param name="firstDate">Only data after this date will be used</param>
            <param name="lastDate">Only data before this date will be used</param>
            <returns>An array of monthly averages or null if no data in table.</returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.StandardDeviation(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Calculate the std deviation
            </summary>
            <param name="values"></param>
            <returns>Std deviation</returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MathUtilities.Cumulative(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>Cumulates the specified values.</summary>
            <param name="values">The values.</param>
            <returns>The cumulated values</returns>
        </member>
        <member name="T:APSIM.Shared.Utilities.MetUtilities">
            <summary>
            A collection of weather utility functions
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.MetUtilities.P">
            <summary>The p</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.MetUtilities.Ma">
            <summary>The ma</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.MetUtilities.Cp">
            <summary>The cp</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.MetUtilities.R">
            <summary>The r</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.MetUtilities.L">
            <summary>The l</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.MetUtilities.itns">
            <summary>The itns</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.MetUtilities.Taz">
            <summary>The taz</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.MetUtilities.Alpha">
            <summary>The alpha</summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.MetUtilities.RelHum(System.Double,System.Double)">
            <summary>Relatives the hum.</summary>
            <param name="Ta">The ta.</param>
            <param name="Tw">The tw.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MetUtilities.RhoV(System.Double,System.Double)">
            <summary>Rhoes the v.</summary>
            <param name="Ta">The ta.</param>
            <param name="Tw">The tw.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MetUtilities.RhoVs(System.Double)">
            <summary>Rhoes the vs.</summary>
            <param name="T">The t.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MetUtilities.gamma(System.Double)">
            <summary>Gammas the specified t.</summary>
            <param name="T">The t.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MetUtilities.svp(System.Double)">
            <summary>SVPs the specified temp_c.</summary>
            <param name="temp_c">The temp_c.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MetUtilities.day_length(System.Int32,System.Double,System.Double)">
            <summary>Day_lengthes the specified day.</summary>
            <param name="day">The day.</param>
            <param name="lat">The lat.</param>
            <param name="sun_angle">The sun_angle.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MetUtilities.TandR_radn(System.Int32,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Tands the r_radn.</summary>
            <param name="day">The day.</param>
            <param name="lat">The lat.</param>
            <param name="dT">The d t.</param>
            <param name="vp">The vp.</param>
            <param name="rain">The rain.</param>
            <param name="dT30">The d T30.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MetUtilities.Q0(System.Int32,System.Double)">
            <summary>Q0s the specified day.</summary>
            <param name="day">The day.</param>
            <param name="lat">The lat.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MetUtilities.Transmissivity(System.Int32,System.Double,System.Double)">
            <summary>Transmissivities the specified day.</summary>
            <param name="day">The day.</param>
            <param name="lat">The lat.</param>
            <param name="Radn">The radn.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MetUtilities.Q0i(System.Int32,System.Double,System.Double)">
            <summary>Q0is the specified day.</summary>
            <param name="day">The day.</param>
            <param name="HS">The hs.</param>
            <param name="lat">The lat.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MetUtilities.Q0int(System.Int32,System.Double)">
            <summary>Q0ints the specified day.</summary>
            <param name="day">The day.</param>
            <param name="lat">The lat.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MetUtilities.QMax(System.Int32,System.Double,System.Double,System.Double,System.Double)">
            <summary>qs the maximum.</summary>
            <param name="day">The day.</param>
            <param name="lat">The lat.</param>
            <param name="Taz">The taz.</param>
            <param name="alpha">The alpha.</param>
            <param name="vp">The vp.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MetUtilities.TMax(System.Int32,System.Double,System.Double,System.Double,System.Double)">
            <summary>ts the maximum.</summary>
            <param name="day">The day.</param>
            <param name="lat">The lat.</param>
            <param name="Taz">The taz.</param>
            <param name="alpha">The alpha.</param>
            <param name="vp">The vp.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MetUtilities.M(System.Double,System.Double,System.Double)">
            <summary>ms the specified day.</summary>
            <param name="day">The day.</param>
            <param name="lat">The lat.</param>
            <param name="HS">The hs.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MetUtilities.Mint(System.Double,System.Double,System.Double,System.Double)">
            <summary>Mints the specified day.</summary>
            <param name="day">The day.</param>
            <param name="lat">The lat.</param>
            <param name="HS1">The h s1.</param>
            <param name="HS2">The h s2.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.MetUtilities.Q0iint(System.Int32,System.Double,System.Double,System.Double)">
            <summary>Q0iints the specified day.</summary>
            <param name="day">The day.</param>
            <param name="lat">The lat.</param>
            <param name="HS1">The h s1.</param>
            <param name="HS2">The h s2.</param>
            <returns></returns>
        </member>
        <member name="T:APSIM.Shared.Utilities.PathUtilities">
            <summary>
            A collection of path utilities.
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.PathUtilities.ConvertURLToPath(System.String)">
            <summary>
            Convert the specified URL to a path.
            </summary>
            <param name="Url"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.PathUtilities.OSFilePath(System.String)">
            <summary>
            Takes a file path, and attempts to assure it's in the
            right form for the current OS. For now, it just looks
            at the path separators.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.PathUtilities.CheckForInvalidChars(System.String)">
            <summary>
            Check for valid characters allowed in component names
            </summary>
            <param name="s">Test string</param>
            <returns>True if an invalid character is found</returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.PathUtilities.GetAbsolutePath(System.String,System.String)">
            <summary>
            Try to find an absolute path from a relative one.
            The %root% macro will be expanded if it exists. This macro
            represents the parent of the directory containing the executing assembly.
            </summary>
            <param name="path">The relative path to find an abolsute for</param>
            <param name="relativePath">The relative path to use</param>
            <returns>The absolute path</returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.PathUtilities.GetRelativePath(System.String,System.String)">
            <summary>
            Creates a relative path from the given path.
            </summary>
            <param name="path">The path to make relative</param>
            <param name="relativePath">The relative path to use</param>
            <returns>The relative path</returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.PathUtilities.ReducePath(System.String)">
            <summary>
            Try and reduce the path.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="T:APSIM.Shared.Utilities.ProcessUtilities">
            <summary>
            A collection of utilities for dealing with processes (threads)
            </summary>
        </member>
        <member name="T:APSIM.Shared.Utilities.ProcessUtilities.CompilationMode">
            <summary>
            Enumeration for holding compilation modes
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.ProcessUtilities.CompilationMode.Invalid">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.ProcessUtilities.CompilationMode.Native">
            <summary>
            Native Win32 code
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.ProcessUtilities.CompilationMode.CLR">
            <summary>
            Common Language Runtime
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.ProcessUtilities.CompilationMode.Mixed">
            <summary>
            Mixed mode
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.ProcessUtilities.isManaged(System.String)">
            <summary>
            Determine if the file refered to is a native win32 or a CLR assembly.
            Mixed mode assemblies are CLR.
            Visual C++ Developer Center. http://msdn2.microsoft.com/en-us/library/c91d4yzb(VS.80).aspx
            </summary>
            <param name="filename">File name of the Assembly or native dll to probe.</param>
            <returns>Compilation mode.</returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.ProcessUtilities.RunProcess(System.String,System.String,System.String)">
            <summary>
            Run the specified executable with the specified arguments and working directory.
            Returns the Process object to caller.
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.ProcessUtilities.CheckProcessExitedProperly(System.Diagnostics.Process)">
            <summary>
            Checks whether the specified process has finished ok. Will wait for process to complete. 
            Will throw Exception with error message from process if Process exits with a non-zero
            exit code.
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.ProcessUtilities.UInt32FromBytes(System.Byte[],System.UInt32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.ProcessUtilities.UInt16FromBytes(System.Byte[],System.UInt32)">
            <summary>
            
            </summary>
        </member>
        <member name="T:APSIM.Shared.Utilities.ReflectionUtilities">
            <summary>
            Utility class with reflection functions
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.ReflectionUtilities.IsOfType(System.Type,System.String)">
            <summary>
            Returns true if the specified type T is of type TypeName
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.ReflectionUtilities.GetAllFields(System.Type,System.Reflection.BindingFlags)">
            <summary>
            Return all fields. The normal .NET reflection doesn't return private fields in base classes.
            This function does.
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.ReflectionUtilities.GetValueOfFieldOrProperty(System.String,System.Object)">
            <summary>
            Get the value of a field or property.
            </summary>
            <param name="Name"></param>
            <param name="Obj"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.ReflectionUtilities.SetValueOfFieldOrProperty(System.String,System.Object,System.Object)">
            <summary>
            Trys to set the value of a public or private field or property. Name can have '.' characters. Will
            return true if successfull. Will throw if Value is the wrong type for the field
            or property. Supports strings/double/int conversion or direct setting.
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.ReflectionUtilities.SetValueOfProperty(System.String,System.Object,System.Object)">
            <summary>
            Set the value of a object property using reflection. Property must be public.
            </summary>
            <param name="name">Name of the property</param>
            <param name="obj">Object to probe</param>
            <param name="value">The value to set the property to</param>
            <returns>True if value set successfully</returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.ReflectionUtilities.GetTypeWithoutNameSpace(System.String,System.Reflection.Assembly)">
            <summary>
            Gets all Type instances matching the specified class name with no namespace qualified class name.
            Will not throw. May return empty array.
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.ReflectionUtilities.GetAttribute(System.Type,System.Type,System.Boolean)">
            <summary>
            Gets the specified attribute type.
            </summary>
            <returns>Returns the attribute or null if not found.</returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.ReflectionUtilities.GetAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
            <summary>
            Gets the specified attribute type.
            </summary>
            <returns>Returns the attribute or null if not found.</returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.ReflectionUtilities.GetAttributes(System.Type,System.Type,System.Boolean)">
            <summary>
            Gets 0 or more attributes of the specified type.
            </summary>
            <returns>Returns the attributes or string[0] if none found.</returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.ReflectionUtilities.GetAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
            <summary>
            Gets 0 or more attributes of the specified type.
            </summary>
            <returns>Returns the attributes or string[0] if none found.</returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.ReflectionUtilities.Name(System.Object)">
            <summary>
            Returns the name of the specified object if it has a public name property
            or it returns the name of the type if no name property is present.
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.ReflectionUtilities.SetName(System.Object,System.String)">
            <summary>
            Sets the name of the specified object if it has a public name property that is settable.
            Will throw if cannot set the name.
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.ReflectionUtilities.NameIsSettable(System.Object)">
            <summary>
            Returns true if the specified object has a name property with a public setter.
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.ReflectionUtilities.GetTypeFromUnqualifiedName(System.String)">
            <summary>
            Return a type from the specified unqualified (no namespaces) type name.
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.ReflectionUtilities.AssemblyCache">
            <summary>
            An assembly cache.
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.ReflectionUtilities.CompileTextToAssembly(System.String,System.String)">
            <summary>
            Compile the specified 'code' into an executable assembly. If 'assemblyFileName'
            is null then compile to an in-memory assembly.
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.ReflectionUtilities.BinarySerialise(System.Object)">
            <summary>
            Binary serialise the object and return the resulting stream.
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.ReflectionUtilities.BinaryDeserialise(System.IO.Stream)">
            <summary>
            Binary deserialise the specified stream and return the resulting object
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.ReflectionUtilities.StringToObject(System.Type,System.String)">
            <summary>
            Convert the specified 'stringValue' into an object of the specified 'type'.
            Will throw if cannot convert type.
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.ReflectionUtilities.ObjectToString(System.Object)">
            <summary>
            Convert the specified 'obj' into a string.
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.ReflectionUtilities.Clone(System.Object)">
            <summary>
            Perform a deep Copy of the specified object
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.ReflectionUtilities.GetPropertiesSorted(System.Type,System.Reflection.BindingFlags)">
            <summary>
            Return a list of sorted properties.
            </summary>
            <param name="type"></param>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="T:APSIM.Shared.Utilities.ReflectionUtilities.PropertyInfoComparer">
            <summary>
            A private property comparer.
            </summary>
        </member>
        <member name="T:APSIM.Shared.Utilities.SQLiteException">
            <summary>A class representing an exception thrown by this library.</summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.SQLiteException.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:APSIM.Shared.Utilities.SQLiteException"/> class.</summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="T:APSIM.Shared.Utilities.SQLite">
            <summary>A class for accessing an SQLite database.</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.SQLite.SQLITE_OK">
            <summary>The sqlit e_ ok</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.SQLite.SQLITE_ROW">
            <summary>The sqlit e_ row</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.SQLite.SQLITE_DONE">
            <summary>The sqlit e_ done</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.SQLite.SQLITE_INTEGER">
            <summary>The sqlit e_ integer</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.SQLite.SQLITE_FLOAT">
            <summary>The sqlit e_ float</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.SQLite.SQLITE_TEXT">
            <summary>The sqlit e_ text</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.SQLite.SQLITE_BLOB">
            <summary>The sqlit e_ BLOB</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.SQLite.SQLITE_NULL">
            <summary>The sqlit e_ null</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.SQLite.SQLITE_OPEN_READONLY">
            <summary>The sqlit e_ ope n_ readonly</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.SQLite.SQLITE_OPEN_READWRITE">
            <summary>The sqlit e_ ope n_ readwrite</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.SQLite.SQLITE_OPEN_CREATE">
            <summary>The sqlit e_ ope n_ create</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.SQLite.SQLITE_OPEN_DELETEONCLOSE">
            <summary>The sqlit e_ ope n_ deleteonclose</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.SQLite.SQLITE_OPEN_EXCLUSIVE">
            <summary>The sqlit e_ ope n_ exclusive</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.SQLite.SQLITE_OPEN_AUTOPROXY">
            <summary>The sqlit e_ ope n_ autoproxy</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.SQLite.SQLITE_OPEN_URI">
            <summary>The sqlit e_ ope n_ URI</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.SQLite.SQLITE_OPEN_MEMORY">
            <summary>The sqlit e_ ope n_ memory</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.SQLite.SQLITE_OPEN_MAIN_DB">
            <summary>The sqlit e_ ope n_ mai n_ database</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.SQLite.SQLITE_OPEN_TEMP_DB">
            <summary>The sqlit e_ ope n_ tem p_ database</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.SQLite.SQLITE_OPEN_TRANSIENT_DB">
            <summary>The sqlit e_ ope n_ transien t_ database</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.SQLite.SQLITE_OPEN_MAIN_JOURNAL">
            <summary>The sqlit e_ ope n_ mai n_ journal</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.SQLite.SQLITE_OPEN_TEMP_JOURNAL">
            <summary>The sqlit e_ ope n_ tem p_ journal</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.SQLite.SQLITE_OPEN_SUBJOURNAL">
            <summary>The sqlit e_ ope n_ subjournal</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.SQLite.SQLITE_OPEN_MASTER_JOURNAL">
            <summary>The sqlit e_ ope n_ maste r_ journal</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.SQLite.SQLITE_OPEN_NOMUTEX">
            <summary>The sqlit e_ ope n_ nomutex</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.SQLite.SQLITE_OPEN_FULLMUTEX">
            <summary>The sqlit e_ ope n_ fullmutex</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.SQLite.SQLITE_OPEN_SHAREDCACHE">
            <summary>The sqlit e_ ope n_ sharedcache</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.SQLite.SQLITE_OPEN_PRIVATECACHE">
            <summary>The sqlit e_ ope n_ privatecache</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.SQLite.SQLITE_OPEN_WAL">
            <summary>The sqlit e_ ope n_ wal</summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.SQLite.sqlite3_open(System.String,System.IntPtr@)">
            <summary>Sqlite3_opens the specified filename.</summary>
            <param name="filename">The filename.</param>
            <param name="db">The database.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.SQLite.sqlite3_open_v2(System.String,System.IntPtr@,System.Int32,System.String)">
            <summary>Sqlite3_open_v2s the specified filename.</summary>
            <param name="filename">The filename.</param>
            <param name="db">The database.</param>
            <param name="flags">The flags.</param>
            <param name="zVfs">The z VFS.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.SQLite.sqlite3_close(System.IntPtr)">
            <summary>Sqlite3_closes the specified database.</summary>
            <param name="db">The database.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.SQLite.sqlite3_prepare_v2(System.IntPtr,System.String,System.Int32,System.IntPtr@,System.IntPtr)">
            <summary>Sqlite3_prepare_v2s the specified database.</summary>
            <param name="db">The database.</param>
            <param name="zSql">The z SQL.</param>
            <param name="nByte">The n byte.</param>
            <param name="ppStmpt">The pp STMPT.</param>
            <param name="pzTail">The pz tail.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.SQLite.sqlite3_step(System.IntPtr)">
            <summary>Sqlite3_steps the specified STM handle.</summary>
            <param name="stmHandle">The STM handle.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.SQLite.sqlite3_finalize(System.IntPtr)">
            <summary>Sqlite3_finalizes the specified STM handle.</summary>
            <param name="stmHandle">The STM handle.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.SQLite.sqlite3_errmsg(System.IntPtr)">
            <summary>Sqlite3_errmsgs the specified database.</summary>
            <param name="db">The database.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.SQLite.sqlite3_column_count(System.IntPtr)">
            <summary>Sqlite3_column_counts the specified STM handle.</summary>
            <param name="stmHandle">The STM handle.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.SQLite.sqlite3_column_name(System.IntPtr,System.Int32)">
            <summary>Sqlite3_column_names the specified STM handle.</summary>
            <param name="stmHandle">The STM handle.</param>
            <param name="iCol">The i col.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.SQLite.sqlite3_column_type(System.IntPtr,System.Int32)">
            <summary>Sqlite3_column_types the specified STM handle.</summary>
            <param name="stmHandle">The STM handle.</param>
            <param name="iCol">The i col.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.SQLite.sqlite3_column_int(System.IntPtr,System.Int32)">
            <summary>Sqlite3_column_ints the specified STM handle.</summary>
            <param name="stmHandle">The STM handle.</param>
            <param name="iCol">The i col.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.SQLite.sqlite3_column_text(System.IntPtr,System.Int32)">
            <summary>Sqlite3_column_texts the specified STM handle.</summary>
            <param name="stmHandle">The STM handle.</param>
            <param name="iCol">The i col.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.SQLite.sqlite3_column_double(System.IntPtr,System.Int32)">
            <summary>Sqlite3_column_doubles the specified STM handle.</summary>
            <param name="stmHandle">The STM handle.</param>
            <param name="iCol">The i col.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.SQLite.sqlite3_bind_double(System.IntPtr,System.Int32,System.Double)">
            <summary>Sqlite3_bind_doubles the specified query.</summary>
            <param name="Query">The query.</param>
            <param name="ParameterNumber">The parameter number.</param>
            <param name="Value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.SQLite.sqlite3_bind_int(System.IntPtr,System.Int32,System.Int32)">
            <summary>Sqlite3_bind_ints the specified query.</summary>
            <param name="Query">The query.</param>
            <param name="ParameterNumber">The parameter number.</param>
            <param name="Value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.SQLite.sqlite3_bind_null(System.IntPtr,System.Int32)">
            <summary>Sqlite3_bind_nulls the specified query.</summary>
            <param name="Query">The query.</param>
            <param name="ParameterNumber">The parameter number.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.SQLite.sqlite3_bind_text(System.IntPtr,System.Int32,System.String,System.Int32,System.IntPtr)">
            <summary>Sqlite3_bind_texts the specified query.</summary>
            <param name="Query">The query.</param>
            <param name="ParameterNumber">The parameter number.</param>
            <param name="Value">The value.</param>
            <param name="n">The n.</param>
            <param name="CallBack">The call back.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.SQLite.sqlite3_reset(System.IntPtr)">
            <summary>Sqlite3_resets the specified query.</summary>
            <param name="Query">The query.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.SQLite.sqlite3_threadsafe">
            <summary>Sqlite3_threadsafes this instance.</summary>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.SQLite.sqlite3_busy_timeout(System.IntPtr,System.Int32)">
            <summary>Sqlite3_busy_timeouts the specified database.</summary>
            <param name="db">The database.</param>
            <param name="ms">The ms.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.SQLite.sqlite3_db_mutex(System.IntPtr)">
            <summary>Sqlite3_db_mutexes the specified database.</summary>
            <param name="db">The database.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.SQLite.sqlite3_mutex_enter(System.IntPtr)">
            <summary>Sqlite3_mutex_enters the specified sqlite3_mutex.</summary>
            <param name="sqlite3_mutex">The sqlite3_mutex.</param>
        </member>
        <member name="M:APSIM.Shared.Utilities.SQLite.sqlite3_mutex_leave(System.IntPtr)">
            <summary>Sqlite3_mutex_leaves the specified sqlite3_mutex.</summary>
            <param name="sqlite3_mutex">The sqlite3_mutex.</param>
        </member>
        <member name="F:APSIM.Shared.Utilities.SQLite._db">
            <summary>The _DB</summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.SQLite._open">
            <summary>The _open</summary>
        </member>
        <member name="P:APSIM.Shared.Utilities.SQLite.IsOpen">
            <summary>Property to return true if the database is open.</summary>
            <value><c>true</c> if this instance is open; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:APSIM.Shared.Utilities.SQLite.OpenDatabase(System.String,System.Boolean)">
            <summary>Opens or creates SQLite database with the specified path</summary>
            <param name="path">Path to SQLite database</param>
            <param name="readOnly">if set to <c>true</c> [read only].</param>
            <exception cref="T:APSIM.Shared.Utilities.SQLiteException"></exception>
        </member>
        <member name="M:APSIM.Shared.Utilities.SQLite.CloseDatabase">
            <summary>Closes the SQLite database</summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.SQLite.ExecuteNonQuery(System.String)">
            <summary>Executes a query that returns no results</summary>
            <param name="query">SQL query to execute</param>
        </member>
        <member name="M:APSIM.Shared.Utilities.SQLite.ExecuteQuery(System.String)">
            <summary>
            Executes a query and stores the results in
            a DataTable
            </summary>
            <param name="query">SQL query to execute</param>
            <returns>DataTable of results</returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.SQLite.FindFirstNonNullValueInColumn(System.Data.DataColumn)">
            <summary>Find the first non null value in the specified column.</summary>
            <param name="dataColumn">The data column to look in</param>
            <returns>The first non null value. Null is returned when all values are null in column.</returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.SQLite.ExecuteQueryReturnInt(System.String,System.Int32)">
            <summary>
            Executes a query and return a single integer value to caller. Returns -1 if not found.
            </summary>
            <param name="query">The query.</param>
            <param name="ColumnNumber">The column number.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.SQLite.Prepare(System.String)">
            <summary>Prepares a SQL statement for execution</summary>
            <param name="query">SQL query</param>
            <returns>Pointer to SQLite prepared statement</returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.SQLite.Finalize(System.IntPtr)">
            <summary>Finalizes a SQLite statement</summary>
            <param name="stmHandle">Pointer to SQLite prepared statement</param>
        </member>
        <member name="M:APSIM.Shared.Utilities.SQLite.BindParametersAndRunQuery(System.IntPtr,System.Object[])">
            <summary>Bind all parameters values to the specified query and execute the query.</summary>
            <param name="Query">The query.</param>
            <param name="Values">The values.</param>
        </member>
        <member name="M:APSIM.Shared.Utilities.SQLite.GetColumnNames(System.String)">
            <summary>Return a list of column names.</summary>
            <param name="tableName">Name of the table.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.SQLite.MutexEnter">
            <summary>Lock the mutex</summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.SQLite.MutexLeave">
            <summary>Unlock the mutex</summary>
        </member>
        <member name="T:APSIM.Shared.Utilities.StringUtilities">
            <summary>
            Static functions for string manipulation
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.StringUtilities.CStringToVBString(System.String)">
            <summary>
            This function converts a C string to a vb string by returning everything 
            up to the null character 
            </summary>
            <param name="Cstring"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.StringUtilities.IndexOfCaseInsensitive(System.String[],System.String)">
            <summary>
            A version of IndexOf that is case insensitive. 
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.StringUtilities.IndexOfCaseInsensitive(System.Collections.Specialized.StringCollection,System.String)">
            <summary>
            A version of IndexOf that is case insensitive. 
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.StringUtilities.IndexOfCaseInsensitive(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            A version of IndexOf that is case insensitive. 
            </summary> 
        </member>
        <member name="M:APSIM.Shared.Utilities.StringUtilities.Contains(System.Collections.IEnumerable,System.String)">
            <summary>
            A version of Array.Contains that is case insensitive. 
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.StringUtilities.IndexNotOfAny(System.String,System.Char[])">
            <summary>
            This method complements the string function IndexOfAny by
            providing a NOT version. Returns -1 if non of the specified
            characters are found in specified string.
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.StringUtilities.IndexNotOfAny(System.String,System.Char[],System.Int32)">
            <summary>
            This method complements the string function IndexOfAny by
            providing a NOT version. Returns -1 if non of the specified
            characters are found in specified string.
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.StringUtilities.SplitStringHonouringQuotes(System.String,System.String)">
            <summary>
            This method splits values on a comma but also honours double quotes
            ensuring something in double quotes is never split.
                eg: if text = value1, "value 2, 2a", value3
                then: words[0] = value1
                      words[1] = value2, 2a
                      words[2] = value3
            All values returned have been trimmed of spaces and double quotes.
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.StringUtilities.SplitStringHonouringBrackets(System.String,System.Char,System.Char,System.Char)">
            <summary>
            Split the specified Text into bits. Bits are separated by delimiter characters but
            brackets must be honoured. Example Text given Delimiter='.':
                Organs[AboveGround].Live.Wt   
                    Bits[0] = Organs[AboveGround]  
                    Bits[1]=Live   
                    Bits[2]=Wt
                Leaf.Leaves[Leaf.CurrentRank].CoverAbove
                    Bits[0]=Leaf
                    Bits[1]=Leaves[Leaf.CurrentRank]
                    Bits[2]=CoverAbove
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.StringUtilities.StringsAreEqual(System.String,System.String)">
            <summary>
            Returns true if the 2 specified strings are equal
            </summary>
            <param name="St1"></param>
            <param name="St2"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.StringUtilities.SplitOffAfterDelimiter(System.String@,System.String)">
            <summary>
            Remove, and return everything after the specified
            delimiter from the specified string. 
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.StringUtilities.SplitOffBracketedValue(System.String@,System.Char,System.Char)">
            <summary>
            Split off a bracketed value from the end of the specified string.
            The bracketed value is then returned, without the brackets,
            or blank if not found.
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.StringUtilities.RemoveAfter(System.String,System.Char)">
            <summary>
            Remove a substring (starting from OpenBracket) from a string.
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.StringUtilities.IsNumeric(System.String)">
            <summary>
            Return true if specified string is numeric
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.StringUtilities.IsDateTime(System.String)">
            <summary>
            Return true if specified string is a date time.
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.StringUtilities.IndentText(System.String,System.Int32)">
            <summary>
            Indent the specified string a certain number of spaces.
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.StringUtilities.UnIndentText(System.String,System.Int32)">
            <summary>
            Indent the specified string a certain number of spaces.
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.StringUtilities.DQuote(System.String)">
            <summary>
            Return a string with double quotes around St
            </summary>
            <param name="St"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.StringUtilities.DetermineType(System.String,System.String)">
            <summary>
            Return a type for the specified string
            </summary>
            <param name="Value"></param>
            <param name="Units"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.StringUtilities.CreateStringArray(System.String,System.Int32)">
            <summary>
            Create a string array containing the specified number of values.
            </summary>
            <param name="Value"></param>
            <param name="NumValues"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.StringUtilities.FindMatchingClosingBracket(System.String,System.Int32,System.Char,System.Char)">
            <summary>
            Find the matching closing bracket.
            </summary>
            <param name="Contents"></param>
            <param name="StartPos"></param>
            <param name="OpenBracket"></param>
            <param name="CloseBracket"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.StringUtilities.CamelCase(System.String)">
            <summary>
            Convert a FORTRAN type APSIM name e.g. canopy_water_balance into a camel case name
            like CanopyWaterBalance
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.StringUtilities.ParentName(System.String,System.Char)">
            <summary>
            A helper function for getting the parent name from the specified
            fully qualified name passed in. Assumes delimiter of '.'.
            e.g. if Name = Paddock.ModelB
                 then returns Paddock
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.StringUtilities.ChildName(System.String,System.Char)">
            <summary>
            A helper function for getting the child name from the specified
            fully qualified name passed in. Assumes delimiter of '.'.
            e.g. if Name = Paddock.ModelB
                 then returns ModelB
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.StringUtilities.BuildString(System.Double[],System.String)">
            <summary>
            A helper function for building a string from an array of values.
            Format specifies the level of precision written e.g. "f2"
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.StringUtilities.BuildString(System.String[],System.String)">
            <summary>
            A helper function for building a string from an array of strings.
            Separator is inserted between each string.
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.StringUtilities.Build(System.Collections.IEnumerable,System.String,System.String,System.String,System.String)">
            <summary>
            Build a string for a series of values
            </summary>
            <param name="values">The values to use to construct the string</param>
            <param name="delimiter">The delimiter to use between the strings</param>
            <param name="prefix">The prefix string to put in front of each string - can be null for no prefix</param>
            <param name="suffix">The suffix string to put in after each string - can be null for no suffix</param>
            <param name="format">The format string to use to format the value e.g. N2 - can be null for no format</param>
            <returns>The return string</returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.StringUtilities.ReplaceEnvironmentVariables(System.String)">
            <summary>
            Look through the specified string for an environment variable name surrounded by
            % characters. Replace them with the environment variable value.
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.StringUtilities.ParseCommandLine(System.String[])">
            <summary>
            Store all macros found in the command line arguments. Macros are keyword = value
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.StringUtilities.EnumToStrings(System.Object)">
            <summary>
            Convert the specified enum to a list of strings.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.StringUtilities.CountSubStrings(System.String,System.String)">
            <summary>Counts the number of times that stringToFind exists in text.</summary>
            <param name="text">The text.</param>
            <param name="stringToFind">The string to find.</param>
            <returns>The number of times found.</returns>
        </member>
        <member name="F:APSIM.Shared.Utilities.StringUtilities.whitespace">
            The following set of routines is taken from the old CPI 
            StdStrng.pas unit.
            Token-handling routines for use in parsing.  A token is either:
              * a string made up of alphanumeric characters and/or the underscore
              * any string enclosed in double quotes (the quotes are stripped) 
              * a punctuation mark (other than double quotes) 
        </member>
        <member name="M:APSIM.Shared.Utilities.StringUtilities.TextToken(System.String@,System.String@,System.Boolean)">
             <summary>
             TextToken strips the first token from a string.
            </summary>
            <param name="inSt">
             String from which a token is to be taken.  It is returned as the
             remaining part of the input value (including any leading whitespace).
            </param>
            <param name="token">
             Returned as the token which has been taken from InSt.  If InSt is
             null or entirely whitespace, then Token will be the null string.
            </param>
            <param name="bRetainCase">
             If true, case is unchanged, otherwise the "returned" token is converted
             to uppercase.
            </param>
        </member>
        <member name="M:APSIM.Shared.Utilities.StringUtilities.MatchToken(System.String@,System.String)">
            <summary>
            Function which returns TRUE i.f.f. the first token in a string matches
            an input token.  The match is case-insensitive. 
            </summary>
            <param name="inSt">
            String in which to look for Match.  If Match is found, then inSt
            will contain the remainder of the string (including any leading
            whitespace) on return. If not, inSt is returned unchanged. 
            </param>
            <param name="match">
            Token to be sought.  If Match is not a token, its first token is used instead. 
            </param>
            <returns>
            TRUE i.f.f. the first token in a string match
            </returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.StringUtilities.TokenInt(System.String@,System.Int32@)">
            <summary>
            Take an integer from the front of a string.
            </summary>
            <param name="inSt">
            String from which to take an integer.  If it is found, then inSt
            will contain the remainder of the string (including any leading
            whitespace).  If not, InSt is returned unchanged.
            </param>
            <param name="n">
            Returns the integer value.  If no integer is found in the string, 
            N is undefined.
            </param>
            <returns>
            Returns TRUE i.f.f. an integer was found.
            </returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.StringUtilities.TokenFloat(System.String@,System.Single@)">
            <summary>
            Take a floating-point value from the front of a string.
             Rules are analogous to Token_Int. Exponential notation is dealt with.
            </summary>
            <param name="inSt">
            String from which to take a value.  If it is found, then inSt
            will contain the remainder of the string (including any leading
            whitespace).  If not, InSt is returned unchanged.
            </param>
            <param name="x">
            Returns the value.  If no value is found in the string, 
            x is undefined.
            </param>
            <returns>
            Returns TRUE i.f.f. a value was found.
            </returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.StringUtilities.TokenDouble(System.String@,System.Double@)">
            <summary>
            Take a double value from the front of a string.
             Rules are analogous to Token_Int. Exponential notation is dealt with.
            </summary>
            <param name="inSt">
            String from which to take a value.  If it is found, then inSt
            will contain the remainder of the string (including any leading
            whitespace).  If not, InSt is returned unchanged.
            </param>
            <param name="x">
            Returns the value.  If no value is found in the string, 
            x is undefined.
            </param>
            <returns>
            Returns TRUE i.f.f. a value was found.
            </returns>
        </member>
        <member name="T:APSIM.Shared.Utilities.WebUtilities">
            <summary>
            A class containing some web utilities
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.WebUtilities.UploadFTP(System.String,System.String,System.String,System.String,System.String)">
            <summary>
             Upload a file via ftp
            </summary>
            <param name="localFileName">Name of the file to be uploaded</param>
            <param name="username">remote username</param>
            <param name="password">remote password</param>
            <param name="hostname">remote hostname</param>
            <param name="remoteFileName">Full path and name of where the file goes</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.WebUtilities.SocketSend(System.String,System.Int32,System.String)">
            <summary>
            Send a string to the specified socket server. Returns the response string. Will throw
            if cannot connect.
            </summary>
        </member>
        <member name="T:APSIM.Shared.Utilities.XmlUtilities">
            <summary>
            XML utility routines
            </summary>
        </member>
        <member name="F:APSIM.Shared.Utilities.XmlUtilities.Delimiter">
            <summary>The delimiter</summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.CreateNode(System.Xml.XmlDocument,System.String,System.String)">
            <summary>Creates the node.</summary>
            <param name="Document">The document.</param>
            <param name="Type">The type.</param>
            <param name="Name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.NameElement(System.Xml.XmlNode)">
            <summary>
            Return the the value from the <code> <Name></Name> </code> element child of aNode.
            </summary>
            <param name="aNode">The base node</param>
            <returns>The value from the child called "Name"</returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.NameAttr(System.Xml.XmlNode)">
            <summary>Names the attribute.</summary>
            <param name="Node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.SetNameAttr(System.Xml.XmlNode,System.String)">
            <summary>Sets the name attribute.</summary>
            <param name="Node">The node.</param>
            <param name="Name">The name.</param>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.Type(System.Xml.XmlNode)">
            <summary>Types the specified node.</summary>
            <param name="Node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.ChangeType(System.Xml.XmlNode,System.String)">
            <summary>Changes the type.</summary>
            <param name="Node">The node.</param>
            <param name="NewType">The new type.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.Rename(System.Xml.XmlNode,System.String,System.String)">
            <summary>Renames the specified child node.</summary>
            <param name="parentNode">The parent node.</param>
            <param name="childName">Name of the child.</param>
            <param name="newName">The new name.</param>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.Parent(System.Xml.XmlNode)">
            <summary>Parents the specified node.</summary>
            <param name="Node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.ParentOfType(System.Xml.XmlNode,System.String)">
            <summary>Parents the specified node.</summary>
            <param name="node">The node.</param>
            <param name="typeName">Type name to search for.</param>
            <returns>Matching parent or null if none found.</returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.FullPathUsingName(System.Xml.XmlNode)">
            <summary>
            Return the full path of the node using the <code> <Name></Name> </code> element values.
            </summary>
            <param name="Node">Child node</param>
            <returns>The path name /RootNode/ParentNode/ChildNode</returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.FullPath(System.Xml.XmlNode)">
            <summary>Fulls the path.</summary>
            <param name="Node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.ParentPath(System.String)">
            <summary>Parents the path.</summary>
            <param name="NodePath">The node path.</param>
            <returns></returns>
            <exception cref="T:System.Exception">
            Cannot get the parent of the specified node:  + NodePath
            or
            Cannot get the parent of the root node
            </exception>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.Find(System.Xml.XmlNode,System.String)">
            <summary>Finds the specified node.</summary>
            <param name="Node">The node.</param>
            <param name="NamePath">The name path.</param>
            <returns></returns>
            <exception cref="T:System.Exception">Cannot call FindByName with a blank path</exception>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.FindByType(System.Xml.XmlNode,System.String)">
            <summary>Finds the type of the by.</summary>
            <param name="Node">The node.</param>
            <param name="TypePath">The type path.</param>
            <returns></returns>
            <exception cref="T:System.Exception">Cannot call FindByType with a blank path</exception>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.FindRecursively(System.Xml.XmlNode,System.String)">
            <summary>Finds the recursively.</summary>
            <param name="Node">The node.</param>
            <param name="Name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.FindAllRecursively(System.Xml.XmlNode,System.String,System.Collections.Generic.List{System.Xml.XmlNode}@)">
            <summary>Finds all recursively.</summary>
            <param name="Node">The node.</param>
            <param name="Name">The name.</param>
            <param name="Nodes">The nodes.</param>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.FindAllRecursivelyByType(System.Xml.XmlNode,System.String)">
            <summary>Finds all XML nodes of the specified type (recursively).</summary>
            <param name="node">The node. to search</param>
            <param name="typeName">Name of the type.</param>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.FindAllRecursivelyByType(System.Xml.XmlNode,System.String,System.Collections.Generic.List{System.Xml.XmlNode}@)">
            <summary>Finds the type of all recursively by.</summary>
            <param name="Node">The node.</param>
            <param name="TypeName">Name of the type.</param>
            <param name="Nodes">The nodes.</param>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.ChildByNameAndType(System.Xml.XmlNode,System.String,System.String)">
            <summary>Childs the type of the by name and.</summary>
            <param name="Node">The node.</param>
            <param name="NameFilter">The name filter.</param>
            <param name="TypeFilter">The type filter.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.ChildByTypeAndValue(System.Xml.XmlNode,System.String,System.String)">
            <summary>Childs the by type and value.</summary>
            <param name="Node">The node.</param>
            <param name="TypeFilter">The type filter.</param>
            <param name="ValueFilter">The value filter.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.ChildNodes(System.Xml.XmlNode,System.String)">
            <summary>Childs the nodes.</summary>
            <param name="Node">The node.</param>
            <param name="TypeFilter">The type filter.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.ChildNodesByName(System.Xml.XmlNode,System.String)">
            <summary>Childs the name of the nodes by.</summary>
            <param name="Node">The node.</param>
            <param name="NameFilter">The name filter.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.ChildNames(System.Xml.XmlNode,System.String)">
            <summary>Childs the names.</summary>
            <param name="Node">The node.</param>
            <param name="TypeFilter">The type filter.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.Value(System.Xml.XmlNode,System.String)">
            <summary>Values the specified child.</summary>
            <param name="Child">The child.</param>
            <param name="NamePath">The name path.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.SetValue(System.Xml.XmlNode,System.String,System.String)">
            <summary>Sets the value.</summary>
            <param name="Node">The node.</param>
            <param name="NamePath">The name path.</param>
            <param name="Value">The value.</param>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.Values(System.Xml.XmlNode,System.String)">
            <summary>Valueses the specified node.</summary>
            <param name="Node">The node.</param>
            <param name="TypeFilter">The type filter.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.ValuesRecursive(System.Xml.XmlNode,System.String)">
            <summary>Valueses the recursive.</summary>
            <param name="Node">The node.</param>
            <param name="TypeFilter">The type filter.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.SetValues(System.Xml.XmlNode,System.String,System.Collections.Generic.List{System.String})">
            <summary>Sets the values.</summary>
            <param name="Node">The node.</param>
            <param name="NamePath">The name path.</param>
            <param name="Values">The values.</param>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.SetValues(System.Xml.XmlNode,System.String,System.String[])">
            <summary>Sets the values.</summary>
            <param name="Node">The node.</param>
            <param name="NamePath">The name path.</param>
            <param name="Values">The values.</param>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.Attribute(System.Xml.XmlNode,System.String)">
            <summary>Attributes the specified node.</summary>
            <param name="Node">The node.</param>
            <param name="AttributeName">Name of the attribute.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.SetAttribute(System.Xml.XmlNode,System.String,System.String)">
            <summary>Sets the attribute.</summary>
            <param name="Node">The node.</param>
            <param name="AttributeName">Name of the attribute.</param>
            <param name="AttributeValue">The attribute value.</param>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.DeleteAttribute(System.Xml.XmlNode,System.String)">
            <summary>Deletes the attribute.</summary>
            <param name="Node">The node.</param>
            <param name="AttributeName">Name of the attribute.</param>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.DeleteValue(System.Xml.XmlNode,System.String)">
            <summary>Deletes the value.</summary>
            <param name="Node">The node.</param>
            <param name="ValueName">Name of the value.</param>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.FormattedXML(System.String)">
            <summary>Formatteds the XML.</summary>
            <param name="Xml">The XML.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.EnsureNodeIsUnique(System.Xml.XmlNode)">
            <summary>Ensures the node is unique.</summary>
            <param name="Node">The node.</param>
            <exception cref="T:System.Exception">Cannot find a unique name for child:  + NameAttr(Node)</exception>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.EnsureNumberOfChildren(System.Xml.XmlNode,System.String,System.String,System.Int32)">
            <summary>Ensures the number of children.</summary>
            <param name="Node">The node.</param>
            <param name="ChildType">Type of the child.</param>
            <param name="ChildName">Name of the child.</param>
            <param name="NumChildren">The number children.</param>
        </member>
        <member name="T:APSIM.Shared.Utilities.XmlUtilities.XmlNodeComparer">
            <summary>
            
            </summary>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.XmlNodeComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>
            A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.Value Meaning Less than zero <paramref name="x" /> is less than <paramref name="y" />. Zero <paramref name="x" /> equals <paramref name="y" />. Greater than zero <paramref name="x" /> is greater than <paramref name="y" />.
            </returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.Sort(System.Xml.XmlNode,System.Collections.IComparer)">
            <summary>Sorts the specified node.</summary>
            <param name="Node">The node.</param>
            <param name="Comparer">The comparer.</param>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.EnsureNodeExists(System.Xml.XmlNode,System.String)">
            <summary>Ensures the node exists.</summary>
            <param name="Node">The node.</param>
            <param name="NodePath">The node path.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.IsEqual(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>Determines whether the specified node1 is equal.</summary>
            <param name="Node1">The node1.</param>
            <param name="Node2">The node2.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.IsEqualSequentially(System.Xml.XmlNode,System.Xml.XmlNode,System.String)">
            <summary>
            Determines whether [is equal sequentially] [the specified node1].
            </summary>
            <param name="Node1">The node1.</param>
            <param name="Node2">The node2.</param>
            <param name="ChildType">Type of the child.</param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.Deserialise(System.String,System.Reflection.Assembly)">
            <summary>Deserialise from the specified file (XML)</summary>
            <param name="FileName">Name of the file.</param>
            <param name="assembly">The assembly to search for types</param>
            <returns>Returns the newly created object or null if not found.</returns>
            <exception cref="T:System.Exception">Cannot deserialise from file:  + FileName + . File does not exist.</exception>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.Deserialise(System.Xml.XmlNode,System.Reflection.Assembly)">
            <summary>Deserialise from the specified XmlNode.</summary>
            <param name="Node">The node.</param>
            <param name="assembly">The assembly to search for types</param>
            <returns>Returns the newly created object or null if not found.</returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.Deserialise(System.Xml.XmlNode,System.Type)">
            <summary>Deserialise from the specified XmlNode.</summary>
            <param name="Node">The node.</param>
            <param name="t">The type to deserialise</param>
            <returns>Returns the newly created object or null if not found.</returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.Deserialise(System.Xml.XmlReader,System.Reflection.Assembly)">
            <summary>Deserialise from the specified XmlReader.</summary>
            <param name="Reader">The reader.</param>
            <param name="assembly">The assembly to search for types</param>
            <returns>Returns the newly created object or null if not found.</returns>
            <exception cref="T:System.Exception">
            Cannot deserialise because type:  + TypeName +  does not exist
            or
            Cannot deserialise because found two classes with class name:  + TypeName
            </exception>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.Serialise(System.Object,System.Boolean)">
            <summary>
            Add a child model as specified by the ModelXml. Will call ModelAdded event if successful.
            </summary>
            <param name="Component">The component.</param>
            <param name="WithNamespace">if set to <c>true</c> [with namespace].</param>
            <returns>Returns the full path of the added model if successful. Null otherwise.</returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.Clone(System.Object)">
            <summary>Clones the specified object.</summary>
            <param name="obj">The object to clone</param>
            <returns>The newly created object</returns>
        </member>
        <member name="M:APSIM.Shared.Utilities.XmlUtilities.Move(System.Xml.XmlNode,System.String,System.Xml.XmlNode,System.String)">
            <summary>Moves the specified value from parent to a new parent node.</summary>
            <param name="fromParent">From parent.</param>
            <param name="fromPath">From path.</param>
            <param name="toParent">To parent.</param>
            <param name="toPath">To path.</param>
        </member>
    </members>
</doc>
