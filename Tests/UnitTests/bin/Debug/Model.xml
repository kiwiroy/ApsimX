<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Model</name>
    </assembly>
    <members>
        <member name="T:Models.Weather">
            <summary>
             Reads in weather data and makes it available to other models.
            </summary>
                
            <remarks>
             Keywords in the weather file
             - Maxt for maximum temperature
             - Mint for minimum temperature
             - Radn for radiation
             - Rain for rainfall
             - VP for vapour pressure
             - Wind for wind speed
                 
             VP is calculated using function Utility.Met.svp
             Wind assign default value 3 if Wind is not resent.
            </remarks>
        </member>
        <member name="T:Models.Core.Model">
            <summary>
            Base class for all models
            </summary>
        </member>
        <member name="T:Models.Core.IModel">
            <summary>
            The IModel interface specifies the properties and methods that all
            models must have. 
            </summary>
        </member>
        <member name="M:Models.Core.IModel.Document(System.Collections.Generic.List{Models.Core.AutoDocumentation.ITag},System.Int32,System.Int32)">
            <summary>Writes documentation for this function by adding to the list of documentation tags.</summary>
            <param name="tags">The list of tags to add to.</param>
            <param name="headingLevel">The level (e.g. H2) of the headings.</param>
            <param name="indent">The level of indentation 1, 2, 3 etc.</param>
        </member>
        <member name="P:Models.Core.IModel.Name">
            <summary>
            Gets or sets the name of the model.
            </summary>
        </member>
        <member name="P:Models.Core.IModel.Parent">
            <summary>
            Gets or sets the parent model. Can be null if model has no parent.
            </summary>
        </member>
        <member name="P:Models.Core.IModel.Children">
            <summary>
            Gets of sets the child models. Can be empty array but never null.
            </summary>
        </member>
        <member name="P:Models.Core.IModel.IsHidden">
            <summary>
            Gets or sets a value indicating whether a model is hidden from the user.
            </summary>
        </member>
        <member name="M:Models.Core.Model.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Models.Core.Model"/> class.
            </summary>
        </member>
        <member name="M:Models.Core.Model.Document(System.Collections.Generic.List{Models.Core.AutoDocumentation.ITag},System.Int32,System.Int32)">
            <summary>Writes documentation for this function by adding to the list of documentation tags.</summary>
            <param name="tags">The list of tags to add to.</param>
            <param name="headingLevel">The level (e.g. H2) of the headings.</param>
            <param name="indent">The level of indentation 1, 2, 3 etc.</param>
        </member>
        <member name="P:Models.Core.Model.Name">
            <summary>
            Gets or sets the name of the model
            </summary>
        </member>
        <member name="P:Models.Core.Model.Children">
            <summary>
            Gets or sets a list of child models.   
            </summary>
        </member>
        <member name="P:Models.Core.Model.Parent">
            <summary>
            Gets or sets the parent of the model.
            </summary>
        </member>
        <member name="P:Models.Core.Model.IsHidden">
            <summary>
            Gets or sets a value indicating whether a model is hidden from the user.
            </summary>
        </member>
        <member name="T:Models.Interfaces.IWeather">
            <summary>A weather interface.</summary>
        </member>
        <member name="P:Models.Interfaces.IWeather.StartDate">
            <summary>Gets the start date of the weather file.</summary>
        </member>
        <member name="P:Models.Interfaces.IWeather.EndDate">
            <summary>Gets the end date of the weather file.</summary>
        </member>
        <member name="P:Models.Interfaces.IWeather.MaxT">
            <summary>Gets or sets the maximum temperature (oc)</summary>
        </member>
        <member name="P:Models.Interfaces.IWeather.MinT">
            <summary>Gets or sets the minimum temperature (oc)</summary>
        </member>
        <member name="P:Models.Interfaces.IWeather.Rain">
            <summary>Gets or sets the rainfall (mm)</summary>
        </member>
        <member name="P:Models.Interfaces.IWeather.Radn">
            <summary>Gets or sets the solar radiation. MJ/m2/day</summary>
        </member>
        <member name="P:Models.Interfaces.IWeather.VP">
            <summary>Gets or sets the vapor pressure</summary>
        </member>
        <member name="P:Models.Interfaces.IWeather.Wind">
            <summary>
            Gets or sets the wind value found in weather file or zero if not specified.
            </summary>
        </member>
        <member name="P:Models.Interfaces.IWeather.CO2">
            <summary>
            Gets or sets the CO2 level. If not specified in the weather file the default is 350.
            </summary>
        </member>
        <member name="P:Models.Interfaces.IWeather.Latitude">
            <summary>Gets the latitude</summary>
        </member>
        <member name="P:Models.Interfaces.IWeather.Tav">
            <summary>Gets the average temperature</summary>
        </member>
        <member name="P:Models.Interfaces.IWeather.Amp">
            <summary>Gets the temperature amplitude.</summary>
        </member>
        <member name="P:Models.Interfaces.IWeather.DayLength">
            <summary>Gets the duration of the day in hours.</summary>
        </member>
        <member name="F:Models.Weather.clock">
            <summary>
            A link to the clock model.
            </summary>
        </member>
        <member name="F:Models.Weather.reader">
            <summary>
            A reference to the text file reader object
            </summary>
        </member>
        <member name="F:Models.Weather.maximumTemperatureIndex">
            <summary>
            The index of the maximum temperature column in the weather file
            </summary>
        </member>
        <member name="F:Models.Weather.minimumTemperatureIndex">
            <summary>
            The index of the minimum temperature column in the weather file
            </summary>
        </member>
        <member name="F:Models.Weather.radiationIndex">
            <summary>
            The index of the solar radiation column in the weather file
            </summary>
        </member>
        <member name="F:Models.Weather.rainIndex">
            <summary>
            The index of the rainfall column in the weather file
            </summary>
        </member>
        <member name="F:Models.Weather.vapourPressureIndex">
            <summary>
            The index of the vapor pressure column in the weather file
            </summary>
        </member>
        <member name="F:Models.Weather.windIndex">
            <summary>
            The index of the wind column in the weather file
            </summary>
        </member>
        <member name="F:Models.Weather.todaysMetData">
            <summary>
            An instance of the weather data.
            </summary>
        </member>
        <member name="F:Models.Weather.doSeek">
            <summary>
            A flag indicating whether this model should do a seek on the weather file
            </summary>
        </member>
        <member name="M:Models.Weather.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>
            Overrides the base class method to allow for initialization.
            </summary>
        </member>
        <member name="M:Models.Weather.OnSimulationCompleted(System.Object,System.EventArgs)">
            <summary>
            Overrides the base class method to allow for clean up
            </summary>
        </member>
        <member name="M:Models.Weather.GetAllData">
            <summary>
            Get the DataTable view of this data
            </summary>
            <returns>The DataTable</returns>
        </member>
        <member name="M:Models.Weather.OnDoWeather(System.Object,System.EventArgs)">
            <summary>
            An event handler for the daily DoWeather event.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The arguments of the event</param>
        </member>
        <member name="M:Models.Weather.OpenDataFile">
            <summary>
            Open the weather data file.
            </summary>
            <returns>True if the file was successfully opened</returns>
        </member>
        <member name="M:Models.Weather.CalcTAVAMP">
            <summary>
            Calculate the amp and tav 'constant' values for this weather file
            and store the values into the File constants.
            </summary>
        </member>
        <member name="M:Models.Weather.ProcessMonthlyTAVAMP(System.Double@,System.Double@)">
            <summary>
            Calculate the amp and tav 'constant' values for this weather file.
            </summary>
            <param name="tav">The calculated tav value</param>
            <param name="amp">The calculated amp value</param>
        </member>
        <member name="M:Models.Weather.Temp3Hr(System.Double,System.Double,System.Double)">
            <summary>
            An estimate of mean air temperature for the period number in this time step
            </summary>
            <param name="tempMax">The maximum temperature</param>
            <param name="tempMin">The minimum temperature</param>
            <param name="period">The period number 1 to 8</param>
            <returns>The mean air temperature</returns>
        </member>
        <member name="E:Models.Weather.PreparingNewWeatherData">
            <summary>
            This event will be invoked immediately before models get their weather data.
            models and scripts an opportunity to change the weather data before other models
            reads it.
            </summary>
        </member>
        <member name="P:Models.Weather.FileName">
            <summary>
            Gets or sets the file name. Should be relative filename where possible.
            </summary>
        </member>
        <member name="P:Models.Weather.FullFileName">
            <summary>
            Gets or sets the full file name (with path). The user interface uses this. 
            </summary>
        </member>
        <member name="P:Models.Weather.StartDate">
            <summary>
            Gets the start date of the weather file
            </summary>
        </member>
        <member name="P:Models.Weather.EndDate">
            <summary>
            Gets the end date of the weather file
            </summary>
        </member>
        <member name="P:Models.Weather.MetData">
            <summary>
            Gets the weather data as a single structure.
            </summary>
        </member>
        <member name="P:Models.Weather.MaxT">
            <summary>
            Gets or sets the maximum temperature (oc)
            </summary>
        </member>
        <member name="P:Models.Weather.MinT">
            <summary>
            Gets or sets the minimum temperature (oc)
            </summary>
        </member>
        <member name="P:Models.Weather.Rain">
            <summary>
            Gets or sets the rainfall (mm)
            </summary>
        </member>
        <member name="P:Models.Weather.Radn">
            <summary>
            Gets or sets the solar radiation. MJ/m2/day
            </summary>
        </member>
        <member name="P:Models.Weather.VP">
            <summary>
            Gets or sets the vapor pressure
            </summary>
        </member>
        <member name="P:Models.Weather.Wind">
            <summary>
            Gets or sets the wind value found in weather file or zero if not specified.
            </summary>
        </member>
        <member name="P:Models.Weather.CO2">
            <summary>
            Gets or sets the CO2 level. If not specified in the weather file the default is 350.
            </summary>
        </member>
        <member name="P:Models.Weather.Latitude">
            <summary>
            Gets the latitude
            </summary>
        </member>
        <member name="P:Models.Weather.Tav">
            <summary>
            Gets the average temperature
            </summary>
        </member>
        <member name="P:Models.Weather.Amp">
            <summary>
            Gets the temperature amplitude.
            </summary>
        </member>
        <member name="P:Models.Weather.DayLength">
            <summary>
            Gets the duration of the day in hours.
            </summary>
        </member>
        <member name="P:Models.Weather.Temps3Hours">
            <summary>
            Gets the 3 hourly estimates of air temperature in this daily timestep.
            ref: Jones, C. A., and Kiniry, J. R. (1986). "'CERES-Maize: A simulation model of maize growth
                 and development'." Texas A and M University Press: College Station, TX.
            Example of use:
            <code>
            double tot = 0;
            for (int period = 1; period &lt;= 8; period++)
            {
               tot = tot + ThermalTimeFn.ValueIndexed(Temps3Hours[i]);
            }
            return tot / 8;
            </code>    
            </summary>
        </member>
        <member name="T:Models.Weather.NewMetType">
            <summary>
            A structure containing the commonly used weather data.
            </summary>
        </member>
        <member name="F:Models.Weather.NewMetType.Today">
            <summary>
            The current date
            </summary>
        </member>
        <member name="F:Models.Weather.NewMetType.Radn">
            <summary>
            Solar radiation. MJ/m2/day
            </summary>
        </member>
        <member name="F:Models.Weather.NewMetType.Maxt">
            <summary>
            Maximum temperature (oc)
            </summary>
        </member>
        <member name="F:Models.Weather.NewMetType.Mint">
            <summary>
            Minimum temperature (oc)
            </summary>
        </member>
        <member name="F:Models.Weather.NewMetType.Rain">
            <summary>
            Rainfall (mm)
            </summary>
        </member>
        <member name="F:Models.Weather.NewMetType.VP">
            <summary>
            The vapor pressure
            </summary>
        </member>
        <member name="F:Models.Weather.NewMetType.Wind">
            <summary>
            The wind value found in weather file or zero if not specified.
            </summary>
        </member>
        <member name="T:Models.Soils.SoilWater">
            <summary>
            .NET port of the Fortran SoilWat model
            Ported by Shaun Verrall Mar 2011
            Extended by Eric Zurcher Mar 2012
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWater.Clock">
            <summary>
            The clock
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWater.Weather">
            <summary>
            The weather
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWater.Soil">
            <summary>
            The soil
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWater.paddock">
            <summary>
            The paddock
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWater.SurfaceOM">
            <summary>
            The surface om
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWater.Summary">
            <summary>
            The summary
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWater.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Models.Soils.SoilWater"/> class.
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWater.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWater.Tillage(System.String)">
            <summary>
            Tillages the specified default tillage name.
            </summary>
            <param name="DefaultTillageName">Default name of the tillage.</param>
            <exception cref="T:Models.Core.ApsimXException"></exception>
        </member>
        <member name="M:Models.Soils.SoilWater.Tillage(Models.Soils.TillageType)">
            <summary>
            Tillages the specified data.
            </summary>
            <param name="Data">The data.</param>
            <exception cref="T:Models.Core.ApsimXException"></exception>
        </member>
        <member name="M:Models.Soils.SoilWater.WriteTillageToSummaryFile(System.String,System.Double,System.Double)">
            <summary>
            Writes the tillage to summary file.
            </summary>
            <param name="TillageName">Name of the tillage.</param>
            <param name="CnReduction">The cn reduction.</param>
            <param name="CnCumWater">The cn cum water.</param>
        </member>
        <member name="M:Models.Soils.SoilWater.OnIrrigated(System.Object,Models.Soils.IrrigationApplicationType)">
            <summary>
            Called when [irrigated].
            </summary>
            <param name="sender">The sender.</param>
            <param name="IrrigationData">The irrigation data.</param>
        </member>
        <member name="M:Models.Soils.SoilWater.SetMaxPond(System.Double)">
            <summary>
            Sets the maximum pond.
            </summary>
            <param name="NewDepth">The new depth.</param>
        </member>
        <member name="M:Models.Soils.SoilWater.SetWaterTable(System.Double)">
            <summary>
            Sets the water table.
            </summary>
            <param name="InitialDepth">The initial depth.</param>
        </member>
        <member name="M:Models.Soils.SoilWater.SetWater_mm(System.Double[])">
            <summary>
            Sets the water_mm.
            </summary>
            <param name="New_SW_dep">The new_ s w_dep.</param>
        </member>
        <member name="M:Models.Soils.SoilWater.SetSWmm(System.Int32,System.Double)">
            <summary>
            Sets the s WMM.
            </summary>
            <param name="Layer">Zero Based Layer Number</param>
            <param name="NewSWmm">New value for SWmm for the specified Layer</param>
        </member>
        <member name="M:Models.Soils.SoilWater.SetWater_frac(System.Double[])">
            <summary>
            Sets the water_frac.
            </summary>
            <param name="New_SW">The new_ sw.</param>
        </member>
        <member name="M:Models.Soils.SoilWater.OnWaterChanged(Models.PMF.WaterChangedType)">
            <summary>
            Called when [water changed].
            </summary>
            <param name="WaterChanged">The water changed.</param>
        </member>
        <member name="F:Models.Soils.SoilWater.constants">
            <summary>
            The constants
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWater.surfaceFactory">
            <summary>
            The surface factory
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWater.surface">
            <summary>
            The surface
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWater.SoilObject">
            <summary>
            The soil object
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWater.met">
            <summary>
            The met
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWater.irrig">
            <summary>
            The irrig
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWater.canopy">
            <summary>
            The canopy
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWater.surfaceCover">
            <summary>
            The surface cover
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWater.runon">
            <summary>
            The runon
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWater.inflow_lat">
            <summary>
            The inflow_lat
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWater.interception">
            <summary>
            The interception
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWater.residueinterception">
            <summary>
            The residueinterception
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWater.GetTodaysOptionalVariables">
            <summary>
            Gets the todays optional variables.
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWater.GetTodaysCanopyData">
            <summary>
            Gets the todays canopy data.
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWater.GetTodaysSurfaceCover">
            <summary>
            Gets the todays surface cover.
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWater.GetTodaysSoluteAmounts">
            <summary>
            Gets the todays solute amounts.
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWater.OnNewSolute(Models.Soils.NewSoluteType)">
            <summary>
            Called when [new solute].
            </summary>
            <param name="NewSolutes">The new solutes.</param>
            <exception cref="T:Models.Core.ApsimXException">No solute mobility information for  + name +  , please specify as mobile or immobile in the SoilWater ini file.</exception>
        </member>
        <member name="M:Models.Soils.SoilWater.PositionInCharArray(System.String,System.String[])">
            <summary>
            Positions the in character array.
            </summary>
            <param name="Name">The name.</param>
            <param name="NameList">The name list.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.SoilWater.SaveModuleConstants">
            <summary>
            Saves the module constants.
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWater.OnLoaded">
            <summary>
            Called when [loaded].
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWater.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>
            Called when [simulation commencing].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
            <exception cref="T:Models.Core.ApsimXException">
            SoilWater module has detected that the Soil has no layers.
            </exception>
        </member>
        <member name="M:Models.Soils.SoilWater.OnDoDailyInitialisation(System.Object,System.EventArgs)">
            <summary>
            Called when DoDailyInitialisation invoked.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.Soils.SoilWater.OnDoSoilWaterMovement(System.Object,System.EventArgs)">
            <summary>
            Called when [do soil water movement].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.Soils.SoilWater.SendNitrogenChangedEvent">
            <summary>
            Sends the nitrogen changed event.
            </summary>
        </member>
        <member name="P:Models.Soils.SoilWater.SummerDate">
            <summary>
            Gets or sets the summer date.
            </summary>
            <value>
            The summer date.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.SummerU">
            <summary>
            Gets or sets the summer u.
            </summary>
            <value>
            The summer u.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.SummerCona">
            <summary>
            Gets or sets the summer cona.
            </summary>
            <value>
            The summer cona.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.WinterDate">
            <summary>
            Gets or sets the winter date.
            </summary>
            <value>
            The winter date.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.WinterU">
            <summary>
            Gets or sets the winter u.
            </summary>
            <value>
            The winter u.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.WinterCona">
            <summary>
            Gets or sets the winter cona.
            </summary>
            <value>
            The winter cona.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.DiffusConst">
            <summary>
            Gets or sets the diffus constant.
            </summary>
            <value>
            The diffus constant.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.DiffusSlope">
            <summary>
            Gets or sets the diffus slope.
            </summary>
            <value>
            The diffus slope.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.Salb">
            <summary>
            Gets or sets the salb.
            </summary>
            <value>
            The salb.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.CN2Bare">
            <summary>
            Gets or sets the c n2 bare.
            </summary>
            <value>
            The c n2 bare.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.CNRed">
            <summary>
            Gets or sets the cn red.
            </summary>
            <value>
            The cn red.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.CNCov">
            <summary>
            Gets or sets the cn cov.
            </summary>
            <value>
            The cn cov.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.slope">
            <summary>
            Gets or sets the slope.
            </summary>
            <value>
            The slope.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.discharge_width">
            <summary>
            Gets or sets the discharge_width.
            </summary>
            <value>
            The discharge_width.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.catchment_area">
            <summary>
            Gets or sets the catchment_area.
            </summary>
            <value>
            The catchment_area.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.max_pond">
            <summary>
            Gets or sets the max_pond.
            </summary>
            <value>
            The max_pond.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.Thickness">
            <summary>
            Thicknesses specified in "SoilWater" node of GUI (in mm as double).
            This is the NON standard layer thickness.
            </summary>
            <value>
            The thickness.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.Depth">
            <summary>
            This "Depth" variable is only needed for the "Depth" column in the "SoilWater" node of the GUI.
            Just converts back and forth between "Depth" (in cm as string) AND "Thickness" (in mm as double).
            </summary>
            <value>
            The depth.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.SWCON">
            <summary>
            Between (SAT and DUL) soil water conductivity constant for each soil layer.
            At thicknesses specified in "SoilWater" node of GUI.
            Use Soil.SWCON for SWCON in standard thickness
            </summary>
            <value>
            The swcon.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.KLAT">
            <summary>
            Lateral flow soil water conductivity constant for each soil layer.
            At thicknesses specified in "SoilWater" node of GUI.
            Use Soil.KLAT for KLAT in standard thickness
            </summary>
            <value>
            The klat.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.min_crit_temp">
            <summary>
            Temperature below which eeq decreases
            </summary>
        </member>
        <member name="P:Models.Soils.SoilWater.max_crit_temp">
            <summary>
            Temperature above which eeq increases
            </summary>
            <value>
            The max_crit_temp.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.max_albedo">
            <summary>
            Maximum bare ground soil albedo
            </summary>
            <value>
            The max_albedo.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.A_to_evap_fact">
            <summary>
            Factor to convert 'A' to coefficient in Adam's type residue effect on Eos
            </summary>
            <value>
            The a_to_evap_fact.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.canopy_eos_coef">
            <summary>
            Coefficient in cover Eos reduction equation
            </summary>
            <value>
            The canopy_eos_coef.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.sw_top_crit">
            <summary>
            Critical sw ratio in top layer below which stage 2 evaporation occurs
            </summary>
            <value>
            The sw_top_crit.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.sumes1_max">
            <summary>
            Upper limit of sumes1
            </summary>
        </member>
        <member name="P:Models.Soils.SoilWater.sumes2_max">
            <summary>
            Upper limit of sumes2
            </summary>
        </member>
        <member name="P:Models.Soils.SoilWater.solute_flow_eff">
            <summary>
            Efficiency of moving solute with unsaturated flow
            </summary>
        </member>
        <member name="P:Models.Soils.SoilWater.solute_flux_eff">
            <summary>
            Efficiency of moving solute with flux (saturated flow)
            </summary>
        </member>
        <member name="P:Models.Soils.SoilWater.gravity_gradient">
            <summary>
            Gradient due to hydraulic differentials
            </summary>
        </member>
        <member name="P:Models.Soils.SoilWater.specific_bd">
            <summary>
            Specific bulk density
            </summary>
        </member>
        <member name="P:Models.Soils.SoilWater.hydrol_effective_depth">
            <summary>
            Hydrologically effective depth for runoff
            </summary>
        </member>
        <member name="P:Models.Soils.SoilWater.mobile_solutes">
            <summary>
            Names of all possible mobile solutes
            </summary>
        </member>
        <member name="P:Models.Soils.SoilWater.immobile_solutes">
            <summary>
            Names of all possible immobile solutes
            </summary>
        </member>
        <member name="P:Models.Soils.SoilWater.canopy_fact">
            <summary>
            Canopy factors for cover runoff effect
            </summary>
        </member>
        <member name="P:Models.Soils.SoilWater.canopy_fact_height">
            <summary>
            Heights for canopy factors
            </summary>
        </member>
        <member name="P:Models.Soils.SoilWater.canopy_fact_default">
            <summary>
            Default canopy factor in absence of height
            </summary>
        </member>
        <member name="P:Models.Soils.SoilWater.act_evap_method">
            <summary>
            Actual soil evaporation model being used
            </summary>
        </member>
        <member name="P:Models.Soils.SoilWater.Eo">
            <summary>
            Effective potential evapotranspiration
            </summary>
            <value>
            The eo.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.Eos">
            <summary>
            Gets the eos.
            </summary>
            <value>
            The eos.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.Es">
            <summary>
            Total es
            </summary>
            <value>
            The es.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.t">
            <summary>
            time after 2nd-stage soil evaporation begins (d)
            </summary>
            <value>
            The t.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.cn2_new">
            <summary>
            Gets the cn2_new.
            </summary>
            <value>
            The cn2_new.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.Drainage">
            <summary>
            Drainage rate from bottom layer
            </summary>
            <value>
            The drainage.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.LeachNO3">
            <summary>
            Drainage rate from bottom layer
            </summary>
            <value>
            The leach n o3.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.LeachNH4">
            <summary>
            Drainage rate from bottom layer
            </summary>
            <value>
            The leach n h4.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.LeachUrea">
            <summary>
            Drainage rate from bottom layer
            </summary>
            <value>
            The leach urea.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.Infiltration">
            <summary>
            Infiltration into top layer
            </summary>
            <value>
            The infiltration.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.Runoff">
            <summary>
            Runoff from top layer
            </summary>
            <value>
            The runoff.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.pond_evap">
            <summary>
            Evaporation from the surface of the pond
            </summary>
            <value>
            The pond_evap.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.pond">
            <summary>
            Surface water ponding depth
            </summary>
            <value>
            The pond.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.WaterTable">
            <summary>
            Water table depth
            (depth below the ground surface of the first saturated layer)
            </summary>
            <value>
            The water table.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.ESW">
            <summary>
            Extractable Soil Water
            (sw - ll15) of each layer summed over the profile.
            </summary>
            <value>
            The esw.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.IrrigLayer">
            <summary>
            Layer that irrigation went into.
            Needed for subsurface irrigations because you specify a depth.
            It is helpful to see exactly which layer that depth put the irrigation into.
            layer = 0 means, top layer but via a surface irrigation (depth = 0) (NOT subsurface)
            layer = 1 means, top layer but via a subsurface irrigation
            layer &gt; 1 means that layer (one based not zero based)
            </summary>
            <value>
            The irrig layer.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.dlayer">
            <summary>
            Gets the dlayer.
            </summary>
            <value>
            The dlayer.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.SATmm">
            <summary>
            Gets the sa TMM.
            </summary>
            <value>
            The sa TMM.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.DULmm">
            <summary>
            Gets the du LMM.
            </summary>
            <value>
            The du LMM.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.SWmm">
            <summary>
            Gets or sets the s WMM.
            </summary>
            <value>
            The s WMM.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.LL15mm">
            <summary>
            Gets the l L15MM.
            </summary>
            <value>
            The l L15MM.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.AIRDRYmm">
            <summary>
            Gets the airdr ymm.
            </summary>
            <value>
            The airdr ymm.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.SAT">
            <summary>
            Gets the sat.
            </summary>
            <value>
            The sat.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.DUL">
            <summary>
            Gets the dul.
            </summary>
            <value>
            The dul.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.SW">
            <summary>
            Gets or sets the sw.
            </summary>
            <value>
            The sw.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.LL15">
            <summary>
            Gets the l L15.
            </summary>
            <value>
            The l L15.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.AIRDRY">
            <summary>
            Gets the airdry.
            </summary>
            <value>
            The airdry.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.flow">
            <summary>
            Gets the flow.
            </summary>
            <value>
            The flow.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.flux">
            <summary>
            Gets the flux.
            </summary>
            <value>
            The flux.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.outflow_lat">
            <summary>
            Gets the outflow_lat.
            </summary>
            <value>
            The outflow_lat.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.flow_no3">
            <summary>
            Gets the flow_no3.
            </summary>
            <value>
            The flow_no3.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.flow_nh4">
            <summary>
            Gets the flow_nh4.
            </summary>
            <value>
            The flow_nh4.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.flow_urea">
            <summary>
            Gets the flow_urea.
            </summary>
            <value>
            The flow_urea.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.dlt_sw_dep">
            <summary>
            Sets the dlt_sw_dep.
            </summary>
            <value>
            The dlt_sw_dep.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWater.dlt_sw">
            <summary>
            Sets the DLT_SW.
            </summary>
            <value>
            The DLT_SW.
            </value>
        </member>
        <member name="E:Models.Soils.SoilWater.NitrogenChanged">
            <summary>
            Occurs when [nitrogen changed].
            </summary>
        </member>
        <member name="T:Models.Soils.SoilCrop">
            <summary>
            A soil crop parameterization class.
            </summary>
        </member>
        <member name="T:Models.Soils.ISoilCrop">
            <summary>
            A soil crop interface
            </summary>
        </member>
        <member name="P:Models.Soils.ISoilCrop.Name">
            <summary>
            Name of the crop
            </summary>
        </member>
        <member name="P:Models.Soils.SoilCrop.Soil">
            <summary>
            Gets the parent soil
            </summary>
        </member>
        <member name="P:Models.Soils.SoilCrop.Depth">
            <summary>
            Gets the associated depths
            </summary>
        </member>
        <member name="P:Models.Soils.SoilCrop.LL">
            <summary>
            Gets or sets the crop lower limit
            </summary>
        </member>
        <member name="P:Models.Soils.SoilCrop.PAWC">
            <summary>
            Gets the plant available water by layer
            </summary>
        </member>
        <member name="P:Models.Soils.SoilCrop.KL">
            <summary>
            Gets or sets the KL value.
            </summary>
        </member>
        <member name="P:Models.Soils.SoilCrop.XF">
            <summary>
            Gets or sets the exploration factor
            </summary>
        </member>
        <member name="P:Models.Soils.SoilCrop.LLMetadata">
            <summary>
            Gets or sets the metadata for crop lower limit
            </summary>
        </member>
        <member name="P:Models.Soils.SoilCrop.KLMetadata">
            <summary>
            Gets or sets the metadata for KL
            </summary>
        </member>
        <member name="P:Models.Soils.SoilCrop.XFMetadata">
            <summary>
            Gets or sets the meta data for the exploration factor
            </summary>
        </member>
        <member name="T:Models.PMF.Summariser">
            <summary>
            A summeriser model
            </summary>
        </member>
        <member name="F:Models.PMF.Summariser.AboveGround">
            <summary>The above ground</summary>
        </member>
        <member name="F:Models.PMF.Summariser.Phenology">
            <summary>The phenology</summary>
        </member>
        <member name="F:Models.PMF.Summariser.Leaf">
            <summary>The leaf</summary>
        </member>
        <member name="M:Models.PMF.Summariser.OnPhaseChanged(Models.PMF.Phen.PhaseChangedType)">
            <summary>Called when [phase changed].</summary>
            <param name="PhaseChange">The phase change.</param>
        </member>
        <member name="M:Models.PMF.Summariser.Document(System.Collections.Generic.List{Models.Core.AutoDocumentation.ITag},System.Int32,System.Int32)">
            <summary>Writes documentation for this function by adding to the list of documentation tags.</summary>
            <param name="tags">The list of tags to add to.</param>
            <param name="headingLevel">The level (e.g. H2) of the headings.</param>
            <param name="indent">The level of indentation 1, 2, 3 etc.</param>
        </member>
        <member name="T:Models.PMF.Organs.LeafCohort">
            <summary>
             A leaf cohort model
             </summary>
             <remarks>
             
             @startuml
             Initialized -> Appeared: Appearance 
             Appeared -> Expanded: GrowthDuration
             Expanded -> Senescing: LagDuration
             Senescing -> Senesced: SenescenceDuration
             Senesced -> Detaching: DetachmentLagDuration
             Detaching -> Detached: DetachmentDuration
             Initialized ->Expanded: IsGrowing
             Initialized -> Senesced: IsAlive
             Initialized -> Senesced: IsGreen
             Initialized -> Senescing: IsNotSenescing
             Senescing -> Senesced: IsSenescing
             Expanded -> Detached: IsFullyExpanded
             Senesced -> Detached: ShouldBeDead
             Senesced -> Detached: Finished
             Appeared -> Detached: IsAppeared
             Initialized -> Detached: IsInitialised
             @enduml
             
             Leaf death
             ------------------------
             The leaf area, structural biomass and structural nitrogen of 
             green (live) parts is subtracted by a fraction.
             
             </remarks>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.Plant">
            <summary>The plant</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.Structure">
            <summary>The structure</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.Leaf">
            <summary>The leaf</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.Live">
            <summary>The live</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.Dead">
            <summary>The dead</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.LiveStart">
            <summary>The live start</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.Age">
            <summary>The age</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.NReallocationFactor">
            <summary>The n reallocation factor</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.DMReallocationFactor">
            <summary>The dm reallocation factor</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.NRetranslocationFactor">
            <summary>The n retranslocation factor</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.DMRetranslocationFactor">
            <summary>The dm retranslocation factor</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.FunctionalNConc">
            <summary>The functional n conc</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.LuxaryNConc">
            <summary>The luxary n conc</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.StructuralFraction">
            <summary>The structural fraction</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.NonStructuralFraction">
            <summary>The non structural fraction</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.MaxLiveArea">
            <summary>The maximum live area</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.GrowthDuration">
            <summary>The growth duration</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.LagDuration">
            <summary>The lag duration</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.SenescenceDuration">
            <summary>The senescence duration</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.DetachmentLagDuration">
            <summary>The detachment lag duration</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.DetachmentDuration">
            <summary>The detachment duration</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.SpecificLeafAreaMax">
            <summary>The specific leaf area maximum</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.SpecificLeafAreaMin">
            <summary>The specific leaf area minimum</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.MaximumNConc">
            <summary>The maximum n conc</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.MinimumNConc">
            <summary>The minimum n conc</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.InitialNConc">
            <summary>The initial n conc</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.LiveArea">
            <summary>The live area</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.DeadArea">
            <summary>The dead area</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.MaxArea">
            <summary>The maximum area</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.ShadeInducedSenRate">
            <summary>The shade induced sen rate</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.SenescedFrac">
            <summary>The senesced frac</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.DetachedFrac">
            <summary>The detached frac</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.CohortPopulation">
            <summary>The cohort population</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.CellDivisionStressFactor">
            <summary>The cell division stress factor</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.CellDivisionStressAccumulation">
            <summary>The cell division stress accumulation</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.CellDivisionStressDays">
            <summary>The cell division stress days</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.LeafStartNRetranslocationSupply">
            <summary>The leaf start n retranslocation supply</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.LeafStartNReallocationSupply">
            <summary>The leaf start n reallocation supply</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.LeafStartDMRetranslocationSupply">
            <summary>The leaf start dm retranslocation supply</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.LeafStartDMReallocationSupply">
            <summary>The leaf start dm reallocation supply</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.LeafStartArea">
            <summary>The leaf start area</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.LeafStartMetabolicNReallocationSupply">
            <summary>
            The leaf start metabolic n reallocation supply
            </summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.LeafStartNonStructuralNReallocationSupply">
            <summary>
            The leaf start non structural n reallocation supply
            </summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.LeafStartMetabolicNRetranslocationSupply">
            <summary>
            The leaf start metabolic n retranslocation supply
            </summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.LeafStartNonStructuralNRetranslocationSupply">
            <summary>
            The leaf start non structural n retranslocation supply
            </summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.LeafStartMetabolicDMReallocationSupply">
            <summary>
            The leaf start metabolic dm reallocation supply
            </summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.LeafStartNonStructuralDMReallocationSupply">
            <summary>
            The leaf start non structural dm reallocation supply
            </summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.LeafStartMetabolicDMRetranslocationSupply">
            <summary>
            The leaf start metabolic dm retranslocation supply
            </summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.LeafStartNonStructuralDMRetranslocationSupply">
            <summary>
            The leaf start non structural dm retranslocation supply
            </summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.DeltaWt">
            <summary>The delta wt</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.PotentialAreaGrowth">
            <summary>The potential area growth</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.DeltaPotentialArea">
            <summary>The delta potential area</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.DeltaWaterConstrainedArea">
            <summary>The delta water constrained area</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.PotentialStructuralDMAllocation">
            <summary>The potential structural dm allocation</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.PotentialMetabolicDMAllocation">
            <summary>The potential metabolic dm allocation</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.MetabolicNReallocated">
            <summary>The metabolic n reallocated</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.MetabolicWtReallocated">
            <summary>The metabolic wt reallocated</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.NonStructuralNReallocated">
            <summary>The non structural n reallocated</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.NonStructuralWtReallocated">
            <summary>The non structural wt reallocated</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.MetabolicNRetranslocated">
            <summary>The metabolic n retranslocated</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.NonStructuralNRetrasnlocated">
            <summary>The non structural n retrasnlocated</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.DMRetranslocated">
            <summary>The dm retranslocated</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.MetabolicNAllocation">
            <summary>The metabolic n allocation</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.StructuralDMAllocation">
            <summary>The structural dm allocation</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.MetabolicDMAllocation">
            <summary>The metabolic dm allocation</summary>
        </member>
        <member name="F:Models.PMF.Organs.LeafCohort.IsInitialised">
            <summary>The is initialised</summary>
        </member>
        <member name="M:Models.PMF.Organs.LeafCohort.NFac">
            <summary>ns the fac.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.Organs.LeafCohort.#ctor">
            <summary>The default constuctor that will be called by the APSIM infrastructure.</summary>
        </member>
        <member name="M:Models.PMF.Organs.LeafCohort.Clone">
            <summary>Returns a clone of this object</summary>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.Organs.LeafCohort.DoInitialisation">
            <summary>Does the initialisation.</summary>
        </member>
        <member name="M:Models.PMF.Organs.LeafCohort.DoAppearance(System.Double,Models.PMF.Organs.Leaf.LeafCohortParameters)">
            <summary>Does the appearance.</summary>
            <param name="LeafFraction">The leaf fraction.</param>
            <param name="LeafCohortParameters">The leaf cohort parameters.</param>
        </member>
        <member name="M:Models.PMF.Organs.LeafCohort.DoPotentialGrowth(System.Double,Models.PMF.Organs.Leaf.LeafCohortParameters)">
            <summary>Does the potential growth.</summary>
            <param name="TT">The tt.</param>
            <param name="LeafCohortParameters">The leaf cohort parameters.</param>
        </member>
        <member name="M:Models.PMF.Organs.LeafCohort.DoActualGrowth(System.Double,Models.PMF.Organs.Leaf.LeafCohortParameters)">
            <summary>Does the actual growth.</summary>
            <param name="TT">The tt.</param>
            <param name="LeafCohortParameters">The leaf cohort parameters.</param>
        </member>
        <member name="M:Models.PMF.Organs.LeafCohort.DoKill(System.Double)">
            <summary>Does the kill.</summary>
            <param name="fraction">The fraction.</param>
        </member>
        <member name="M:Models.PMF.Organs.LeafCohort.DoFrost(System.Double)">
            <summary>Does the frost.</summary>
            <param name="fraction">The fraction.</param>
        </member>
        <member name="M:Models.PMF.Organs.LeafCohort.PotentialAreaGrowthFunction(System.Double)">
            <summary>Potential delta LAI</summary>
            <param name="TT">thermal-time</param>
            <returns>(mm2 leaf/cohort position/m2 soil/day)</returns>
        </member>
        <member name="M:Models.PMF.Organs.LeafCohort.SizeFunction(System.Double)">
            <summary>Potential average leaf size for today per cohort (no stress)</summary>
            <param name="TT">Thermal-time accumulation since cohort initiation</param>
            <returns>Average leaf size (mm2/leaf)</returns>
        </member>
        <member name="M:Models.PMF.Organs.LeafCohort.FractionSenescing(System.Double,System.Double)">
            <summary>Fractions the senescing.</summary>
            <param name="TT">The tt.</param>
            <param name="StemMortality">The stem mortality.</param>
            <returns></returns>
            <exception cref="T:System.Exception">Bad Fraction Senescing</exception>
        </member>
        <member name="M:Models.PMF.Organs.LeafCohort.FractionDetaching(System.Double)">
            <summary>Fractions the detaching.</summary>
            <param name="TT">The tt.</param>
            <returns></returns>
            <exception cref="T:System.Exception">Bad Fraction Detaching</exception>
        </member>
        <member name="M:Models.PMF.Organs.LeafCohort.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>Called when [simulation commencing].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Organs.LeafCohort.Document(System.Collections.Generic.List{Models.Core.AutoDocumentation.ITag},System.Int32,System.Int32)">
            <summary>Writes documentation for this function by adding to the list of documentation tags.</summary>
            <param name="tags">The list of tags to add to.</param>
            <param name="headingLevel">The level (e.g. H2) of the headings.</param>
            <param name="indent">The level of indentation 1, 2, 3 etc.</param>
        </member>
        <member name="P:Models.PMF.Organs.LeafCohort.Rank">
            <summary>The rank</summary>
        </member>
        <member name="P:Models.PMF.Organs.LeafCohort.Area">
            <summary>The area</summary>
        </member>
        <member name="P:Models.PMF.Organs.LeafCohort.CoverAbove">
            <summary>Gets or sets the cover above.</summary>
            <value>The cover above.</value>
        </member>
        <member name="P:Models.PMF.Organs.LeafCohort.NodeAge">
            <summary>Gets the node age.</summary>
            <value>The node age.</value>
        </member>
        <member name="P:Models.PMF.Organs.LeafCohort.IsNotAppeared">
            <summary>Gets a value indicating whether this instance is not appeared.</summary>
            <value>
            <c>true</c> if this instance is not appeared; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Models.PMF.Organs.LeafCohort.IsGrowing">
            <summary>Gets a value indicating whether this instance is growing.</summary>
            <value>
            <c>true</c> if this instance is growing; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Models.PMF.Organs.LeafCohort.IsAppeared">
            <summary>Gets or sets a value indicating whether this instance is appeared.</summary>
            <value>
            <c>true</c> if this instance is appeared; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Models.PMF.Organs.LeafCohort.IsFullyExpanded">
            <summary>Gets a value indicating whether this instance is fully expanded.</summary>
            <value>
            <c>true</c> if this instance is fully expanded; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Models.PMF.Organs.LeafCohort.IsGreen">
            <summary>Gets a value indicating whether this instance is green.</summary>
            <value><c>true</c> if this instance is green; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Models.PMF.Organs.LeafCohort.IsSenescing">
            <summary>Gets a value indicating whether this instance is senescing.</summary>
            <value>
            <c>true</c> if this instance is senescing; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Models.PMF.Organs.LeafCohort.IsNotSenescing">
            <summary>Gets a value indicating whether this instance is not senescing.</summary>
            <value>
            <c>true</c> if this instance is not senescing; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Models.PMF.Organs.LeafCohort.ShouldBeDead">
            <summary>
            Gets a value indicating whether [should be dead].
            </summary>
            <value><c>true</c> if [should be dead]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Models.PMF.Organs.LeafCohort.Finished">
            <summary>Gets a value indicating whether this <see cref="T:Models.PMF.Organs.LeafCohort"/> is finished.</summary>
            <value><c>true</c> if finished; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Models.PMF.Organs.LeafCohort.IsAlive">
            <summary>Gets a value indicating whether this instance is alive.</summary>
            <value><c>true</c> if this instance is alive; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Models.PMF.Organs.LeafCohort.IsDead">
            <summary>Gets a value indicating whether this instance is dead.</summary>
            <value><c>true</c> if this instance is dead; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Models.PMF.Organs.LeafCohort.MaxSize">
            <summary>Gets the maximum size.</summary>
            <value>The maximum size.</value>
        </member>
        <member name="P:Models.PMF.Organs.LeafCohort.LivePopulation">
            <summary>Gets the live population.</summary>
            <value>The live population.</value>
        </member>
        <member name="P:Models.PMF.Organs.LeafCohort.Size">
            <summary>Gets the size.</summary>
            <value>The size.</value>
        </member>
        <member name="P:Models.PMF.Organs.LeafCohort.FractionExpanded">
            <summary>Gets the fraction expanded.</summary>
            <value>The fraction expanded.</value>
        </member>
        <member name="P:Models.PMF.Organs.LeafCohort.SpecificArea">
            <summary>Gets the specific area.</summary>
            <value>The specific area.</value>
        </member>
        <member name="P:Models.PMF.Organs.LeafCohort.StructuralDMDemand">
            <summary>Gets the structural dm demand.</summary>
            <value>The structural dm demand.</value>
        </member>
        <member name="P:Models.PMF.Organs.LeafCohort.MetabolicDMDemand">
            <summary>Gets the metabolic dm demand.</summary>
            <value>The metabolic dm demand.</value>
        </member>
        <member name="P:Models.PMF.Organs.LeafCohort.NonStructuralDMDemand">
            <summary>Gets the non structural dm demand.</summary>
            <value>The non structural dm demand.</value>
        </member>
        <member name="P:Models.PMF.Organs.LeafCohort.TotalDMDemand">
            <summary>Gets the total dm demand.</summary>
            <value>The total dm demand.</value>
        </member>
        <member name="P:Models.PMF.Organs.LeafCohort.StructuralNDemand">
            <summary>Gets the structural n demand.</summary>
            <value>The structural n demand.</value>
        </member>
        <member name="P:Models.PMF.Organs.LeafCohort.NonStructuralNDemand">
            <summary>Gets the non structural n demand.</summary>
            <value>The non structural n demand.</value>
        </member>
        <member name="P:Models.PMF.Organs.LeafCohort.MetabolicNDemand">
            <summary>Gets the metabolic n demand.</summary>
            <value>The metabolic n demand.</value>
        </member>
        <member name="P:Models.PMF.Organs.LeafCohort.TotalNDemand">
            <summary>Gets the total n demand.</summary>
            <value>The total n demand.</value>
        </member>
        <member name="P:Models.PMF.Organs.LeafCohort.DMAllocation">
            <summary>Sets the dm allocation.</summary>
            <value>The dm allocation.</value>
            <exception cref="T:System.Exception">
            -ve DM Allocation to Leaf Cohort
            or
            DM Allocated to Leaf Cohort is in excess of its Demand
            or
            A leaf cohort cannot supply that amount for DM Reallocation
            or
            Leaf cohort given negative DM Reallocation
            or
            Negative DM retranslocation from a Leaf Cohort
            or
            A leaf cohort cannot supply that amount for DM retranslocation
            </exception>
        </member>
        <member name="P:Models.PMF.Organs.LeafCohort.NAllocation">
            <summary>Sets the n allocation.</summary>
            <value>The n allocation.</value>
            <exception cref="T:System.Exception">
            A leaf cohort cannot supply that amount for N Reallocation
            or
            Leaf cohort given negative N Reallocation
            or
            A leaf cohort cannot supply that amount for N Retranslocation
            or
            Leaf cohort given negative N Retranslocation
            </exception>
        </member>
        <member name="P:Models.PMF.Organs.LeafCohort.NRetranslocationSupply">
            <summary>Gets the n retranslocation supply.</summary>
            <value>The n retranslocation supply.</value>
        </member>
        <member name="P:Models.PMF.Organs.LeafCohort.DMRetranslocationSupply">
            <summary>Gets the dm retranslocation supply.</summary>
            <value>The dm retranslocation supply.</value>
        </member>
        <member name="P:Models.PMF.Organs.LeafCohort.NReallocationSupply">
            <summary>Gets the n reallocation supply.</summary>
            <value>The n reallocation supply.</value>
        </member>
        <member name="P:Models.PMF.Organs.LeafCohort.DMReallocationSupply">
            <summary>Gets the dm reallocation supply.</summary>
            <value>The dm reallocation supply.</value>
        </member>
        <member name="P:Models.PMF.Organs.LeafCohort.DMPotentialAllocation">
            <summary>Sets the dm potential allocation.</summary>
            <value>The dm potential allocation.</value>
            <exception cref="T:System.Exception">
            -ve Potential DM Allocation to Leaf Cohort
            or
            Potential DM Allocation to Leaf Cohortis in excess of its Demand
            or
            -ve Potential DM Allocation to Leaf Cohort
            or
            Potential DM Allocation to Leaf Cohortis in excess of its Demand
            </exception>
        </member>
        <member name="T:Models.PMF.OldPlant.RUEModel1">
            <summary>
            An RUE model for old plant
            </summary>
        </member>
        <member name="F:Models.PMF.OldPlant.RUEModel1.PStress">
            <summary>The p stress</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.RUEModel1.NStress">
            <summary>The n stress</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.RUEModel1.SWStress">
            <summary>The sw stress</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.RUEModel1.TempStress">
            <summary>The temporary stress</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.RUEModel1.RUE">
            <summary>The rue</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.RUEModel1.RUEModifier">
            <summary>The rue modifier</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.RUEModel1.PotentialDM(System.Double)">
            <summary>Potentials the dm.</summary>
            <param name="radiationInterceptedGreen">The radiation intercepted green.</param>
            <returns></returns>
        </member>
        <member name="P:Models.PMF.OldPlant.RUEModel1.FRGR">
            <summary>Gets the FRGR.</summary>
            <value>The FRGR.</value>
        </member>
        <member name="T:Models.PMF.OldPlant.HarvestType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.PMF.OldPlant.HarvestType.Plants">
            <summary>The plants</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.HarvestType.Remove">
            <summary>The remove</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.HarvestType.Height">
            <summary>The height</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.HarvestType.Report">
            <summary>The report</summary>
        </member>
        <member name="T:Models.PMF.OldPlant.RemovedByAnimalType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.PMF.OldPlant.RemovedByAnimalType.element">
            <summary>The element</summary>
        </member>
        <member name="T:Models.PMF.OldPlant.RemovedByAnimalelementType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.PMF.OldPlant.RemovedByAnimalelementType.CohortID">
            <summary>The cohort identifier</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.RemovedByAnimalelementType.Organ">
            <summary>The organ</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.RemovedByAnimalelementType.AgeID">
            <summary>The age identifier</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.RemovedByAnimalelementType.Bottom">
            <summary>The bottom</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.RemovedByAnimalelementType.Top">
            <summary>The top</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.RemovedByAnimalelementType.Chem">
            <summary>The chem</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.RemovedByAnimalelementType.WeightRemoved">
            <summary>The weight removed</summary>
        </member>
        <member name="T:Models.PMF.OldPlant.AvailableToAnimalelementType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.PMF.OldPlant.AvailableToAnimalelementType.CohortID">
            <summary>The cohort identifier</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.AvailableToAnimalelementType.Organ">
            <summary>The organ</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.AvailableToAnimalelementType.AgeID">
            <summary>The age identifier</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.AvailableToAnimalelementType.Bottom">
            <summary>The bottom</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.AvailableToAnimalelementType.Top">
            <summary>The top</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.AvailableToAnimalelementType.Chem">
            <summary>The chem</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.AvailableToAnimalelementType.Weight">
            <summary>The weight</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.AvailableToAnimalelementType.N">
            <summary>The n</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.AvailableToAnimalelementType.P">
            <summary>The p</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.AvailableToAnimalelementType.S">
            <summary>The s</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.AvailableToAnimalelementType.AshAlk">
            <summary>The ash alk</summary>
        </member>
        <member name="T:Models.PMF.OldPlant.AvailableToAnimalType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.PMF.OldPlant.AvailableToAnimalType.element">
            <summary>The element</summary>
        </member>
        <member name="T:Models.PMF.OldPlant.Plant15">
            <summary>
            The generic plant15 crop model
            </summary>
        </member>
        <member name="T:Models.Core.ModelCollectionFromResource">
            <summary>This class loads a model from a resource</summary>
        </member>
        <member name="F:Models.Core.ModelCollectionFromResource.allModels">
            <summary>All models</summary>
        </member>
        <member name="M:Models.Core.ModelCollectionFromResource.OnSerialising(System.Boolean)">
            <summary>
            We're about to be serialised. Remove our 'ModelFromResource' model from the list
            of all models so that is isn't serialised.
            </summary>
            <param name="xmlSerialisation">if set to <c>true</c> [XML serialisation].</param>
        </member>
        <member name="M:Models.Core.ModelCollectionFromResource.OnSerialised(System.Boolean)">
            <summary>Serialisation has completed. Reinstate 'ModelFromResource' if necessary.</summary>
            <param name="xmlSerialisation">if set to <c>true</c> [XML serialisation].</param>
        </member>
        <member name="M:Models.Core.ModelCollectionFromResource.OnDeserialised(System.Boolean)">
            <summary>
            We have just been deserialised. If from XML then load our model
            from resource.
            </summary>
            <param name="xmlSerialisation">if set to <c>true</c> [XML serialisation].</param>
        </member>
        <member name="M:Models.Core.ModelCollectionFromResource.SetNotVisible(Models.Core.Model)">
            <summary>Sets the not visible.</summary>
            <param name="ModelFromResource">The model from resource.</param>
        </member>
        <member name="P:Models.Core.ModelCollectionFromResource.ResourceName">
            <summary>Gets or sets the name of the resource.</summary>
            <value>The name of the resource.</value>
        </member>
        <member name="T:Models.Core.ICrop">
            <summary>
            The ICrop interface specifies the properties and methods that all
            crops must have. In effect this interface describes the interactions
            between a crop and the other models in APSIM.
            </summary>
        </member>
        <member name="M:Models.Core.ICrop.Sow(System.String,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Sows the plant</summary>
            <param name="cultivar">The cultivar.</param>
            <param name="population">The population.</param>
            <param name="depth">The depth.</param>
            <param name="rowSpacing">The row spacing.</param>
            <param name="maxCover">The maximum cover.</param>
            <param name="budNumber">The bud number.</param>
        </member>
        <member name="P:Models.Core.ICrop.IsAlive">
            <summary>
            Is the plant alive?
            </summary>
        </member>
        <member name="P:Models.Core.ICrop.CultivarNames">
            <summary>
            Gets a list of cultivar names
            </summary>
        </member>
        <member name="T:Models.Interfaces.IUptake">
            <summary>
            This interface defines the communications between a soil arbitrator and
            and crop.
            </summary>
        </member>
        <member name="M:Models.Interfaces.IUptake.GetSWUptakes(Models.Soils.Arbitrator.SoilState)">
            <summary>
            Calculate the potential sw uptake for today. Should return null if crop is not in the ground.
            </summary>
        </member>
        <member name="M:Models.Interfaces.IUptake.GetNUptakes(Models.Soils.Arbitrator.SoilState)">
            <summary>
            Calculate the potential sw uptake for today. Should return null if crop is not in the ground.
            </summary>
        </member>
        <member name="M:Models.Interfaces.IUptake.SetSWUptake(System.Collections.Generic.List{Models.Soils.Arbitrator.ZoneWaterAndN})">
            <summary>
            Set the sw uptake for today.
            </summary>
        </member>
        <member name="M:Models.Interfaces.IUptake.SetNUptake(System.Collections.Generic.List{Models.Soils.Arbitrator.ZoneWaterAndN})">
            <summary>
            Set the sw uptake for today
            </summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Plant15.Phenology">
            <summary>The phenology</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Plant15.Summary">
            <summary>The summary</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Plant15.SowingData">
            <summary>The sowing data</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Plant15.cultivarDefinition">
            <summary>The cultivar definition</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Plant15.OnLoaded">
            <summary>Called when [loaded].</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Plant15.Sow(System.String,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Sows the specified population.</summary>
            <param name="population">The population.</param>
            <param name="cultivar">The cultivar.</param>
            <param name="depth">The depth.</param>
            <param name="rowSpacing">The row spacing.</param>
            <param name="budNumber">Bud number not used</param>
            <param name="maxCover">Maximum cover not used</param>
            <exception cref="T:System.Exception">Cultivar not specified on sow line.</exception>
        </member>
        <member name="F:Models.PMF.OldPlant.Plant15.NStress">
            <summary>The n stress</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Plant15.RadiationPartitioning">
            <summary>The radiation partitioning</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Plant15.NFixRate">
            <summary>The n fix rate</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Plant15.AboveGroundLive">
            <summary>The above ground live</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Plant15.AboveGroundDead">
            <summary>The above ground dead</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Plant15.AboveGround">
            <summary>The above ground</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Plant15.VegetativeLive">
            <summary>The vegetative live</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Plant15.VegetativeDead">
            <summary>The vegetative dead</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Plant15.Vegetative">
            <summary>The vegetative biomass pool</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Plant15.BelowGround">
            <summary>The below ground</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Plant15.TotalLive">
            <summary>The total live</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Plant15.SWStress">
            <summary>The sw stress</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Plant15.TempStress">
            <summary>The temporary stress</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Plant15.Root">
            <summary>The root</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Plant15.Stem">
            <summary>The stem</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Plant15.Leaf">
            <summary>The leaf</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Plant15.Pod">
            <summary>The pod</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Plant15.Grain">
            <summary>The grain</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Plant15.Population">
            <summary>The population</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Plant15.PlantSpatial">
            <summary>The plant spatial</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Plant15.Arbitrator1">
            <summary>The arbitrator1</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Plant15.Soil">
            <summary>The soil</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Plant15.Clock">
            <summary>The clock</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Plant15.ext_n_demand">
            <summary>The ext_n_demand</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Plant15.AverageStressMessage">
            <summary>The average stress message</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Plant15.FloweringDate">
            <summary>The flowering date</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Plant15.MaturityDate">
            <summary>The maturity date</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Plant15.LAIMax">
            <summary>The lai maximum</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Plant15.PhenologyEventToday">
            <summary>The phenology event today</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Plant15.OnPrepare(System.Object,System.EventArgs)">
            <summary>Old PLANT1 compat. eventhandler. Not used in Plant2</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Plant15.DoPotentialPlantGrowth(System.Object,System.EventArgs)">
            <summary>Old PLANT1 compat. process eventhandler.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Plant15.DoActualPlantGrowth(System.Object,System.EventArgs)">
            <summary>Old PLANT1 compat. process eventhandler.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Plant15.OnPhaseChanged(Models.PMF.Phen.PhaseChangedType)">
            <summary>Called when [phase changed].</summary>
            <param name="Data">The data.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Plant15.CheckBounds">
            <summary>Checks the bounds.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Plant15.Update">
            <summary>Updates this instance.</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Plant15.LocalCanopyData">
            <summary>The local canopy data</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Plant15.UpdateCanopy">
            <summary>Updates the canopy.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Plant15.DoBiomassRemoved">
            <summary>Does the biomass removed.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Plant15.DoNDemandEstimate">
            <summary>
            Calculate an approximate nitrogen demand for today's growth.
            The estimate basically = n to fill the plant up to maximum
            nitrogen concentration.
            </summary>
            <exception cref="T:System.Exception">bad n supply preference</exception>
        </member>
        <member name="M:Models.PMF.OldPlant.Plant15.OnHarvest(Models.PMF.OldPlant.HarvestType)">
            <summary>Event handler for the Harvest event - normally comes from Manager.</summary>
            <param name="Harvest">The harvest.</param>
            <exception cref="T:System.Exception">
            Harvest remove fraction needs to be between 0 and 1
            or
            Harvest height needs to be between 0 and 1000
            </exception>
        </member>
        <member name="M:Models.PMF.OldPlant.Plant15.OnEndCrop">
            <summary>Called when [end crop].</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Plant15.WriteSowReport(Models.PMF.SowPlant2Type)">
            <summary>Write a sowing report to summary file.</summary>
            <param name="Sow">The sow.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Plant15.WriteBiomassRemovedReport(Models.PMF.BiomassRemovedType)">
            <summary>Write a biomass removed report.</summary>
            <param name="Data">The data.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Plant15.WriteHarvestReport">
            <summary>Report the state of the crop at harvest time</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Plant15.GetSWUptakes(Models.Soils.Arbitrator.SoilState)">
            <summary>Placeholder for SoilArbitrator</summary>
            <param name="soilstate">Soil state</param>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.OldPlant.Plant15.GetNUptakes(Models.Soils.Arbitrator.SoilState)">
            <summary>Placeholder for SoilArbitrator</summary>
            <param name="soilstate">soil state</param>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.OldPlant.Plant15.SetSWUptake(System.Collections.Generic.List{Models.Soils.Arbitrator.ZoneWaterAndN})">
            <summary>
            Set the sw uptake for today
            </summary>
            <param name="info">zone information</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Plant15.SetNUptake(System.Collections.Generic.List{Models.Soils.Arbitrator.ZoneWaterAndN})">
            <summary>
            Set the n uptake for today
            </summary>
            <param name="info">zone information</param>
        </member>
        <member name="P:Models.PMF.OldPlant.Plant15.AutoHarvest">
            <summary>
            Gets or sets a value indicating whether [automatic harvest].
            </summary>
            <value><c>true</c> if [automatic harvest]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Plant15.CropType">
            <summary>
            MicroClimate will get 'CropType' and use it to look up
            canopy properties for this crop.
            </summary>
        </member>
        <member name="P:Models.PMF.OldPlant.Plant15.CultivarNames">
            <summary>Gets a list of cultivar names</summary>
        </member>
        <member name="E:Models.PMF.OldPlant.Plant15.NewCrop">
            <summary>Occurs when [new crop].</summary>
        </member>
        <member name="E:Models.PMF.OldPlant.Plant15.Sowing">
            <summary>Occurs when [sowing].</summary>
        </member>
        <member name="E:Models.PMF.OldPlant.Plant15.PlantSowing">
            <summary>Occurs when [plant sowing].</summary>
        </member>
        <member name="E:Models.PMF.OldPlant.Plant15.BiomassRemoved">
            <summary>Occurs when [biomass removed].</summary>
        </member>
        <member name="P:Models.PMF.OldPlant.Plant15.EOCropFactor">
            <summary>Gets or sets the eo crop factor.</summary>
            <value>The eo crop factor.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Plant15.NSupplyPreference">
            <summary>Gets or sets the n supply preference.</summary>
            <value>The n supply preference.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Plant15.DoRetranslocationBeforeNDemand">
            <summary>
            Gets or sets a value indicating whether [do retranslocation before n demand].
            </summary>
            <value>
            <c>true</c> if [do retranslocation before n demand]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="E:Models.PMF.OldPlant.Plant15.PlantEnding">
            <summary>Occurs when [crop ending].</summary>
        </member>
        <member name="E:Models.PMF.OldPlant.Plant15.CropEnding">
            <summary>Occurs when [crop ending].</summary>
        </member>
        <member name="E:Models.PMF.OldPlant.Plant15.Harvesting">
            <summary>Occurs when [harvesting].</summary>
        </member>
        <member name="P:Models.PMF.OldPlant.Plant15.cover_green">
            <summary>Gets the cover_green.</summary>
            <value>The cover_green.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Plant15.cover_tot">
            <summary>Gets the cover_tot.</summary>
            <value>The cover_tot.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Plant15.height">
            <summary>Gets the height.</summary>
            <value>The height.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Plant15.IsAlive">
            <summary>
            Is the plant alive?
            </summary>
        </member>
        <member name="P:Models.PMF.OldPlant.Plant15.plant_status">
            <summary>Gets the plant_status.</summary>
            <value>The plant_status.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Plant15.WaterDemand">
            <summary>Gets the water demand.</summary>
            <value>The water demand.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Plant15.EP">
            <summary>Gets the ep.</summary>
            <value>The ep.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Plant15.PotentialEP">
            <summary>MicroClimate supplies PotentialEP</summary>
        </member>
        <member name="P:Models.PMF.OldPlant.Plant15.LightProfile">
            <summary>MicroClimate supplies LightProfile</summary>
        </member>
        <member name="P:Models.PMF.OldPlant.Plant15.Biomass">
            <summary>Gets the biomass.</summary>
            <value>The biomass.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Plant15.Organ1s">
            <summary>Gets or sets the organ1s.</summary>
            <value>The organ1s.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Plant15.Tops">
            <summary>Gets the tops.</summary>
            <value>The tops.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Plant15.TopsSWDemand">
            <summary>Gets the tops sw demand.</summary>
            <value>The tops sw demand.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Plant15.TopsLiveWt">
            <summary>Gets the tops live wt.</summary>
            <value>The tops live wt.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Plant15.SWSupplyDemandRatio">
            <summary>Gets the sw supply demand ratio.</summary>
            <value>The sw supply demand ratio.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Plant15.FRGR">
            <summary>
            Crop specific relative growth stress factor (0-1). MicroClimate
            uses this to calculate the crop canopy conductance
            </summary>
        </member>
        <member name="P:Models.PMF.OldPlant.Plant15.CanopyData">
            <summary>Provides canopy data to SoilWater.</summary>
        </member>
        <member name="P:Models.PMF.OldPlant.Plant15.AvailableToAnimal">
            <summary>Gets the available to animal.</summary>
            <value>The available to animal.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Plant15.RemovedByAnimal">
            <summary>Gets or sets the removed by animal.</summary>
            <value>The removed by animal.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Plant15.Cultivars">
            <summary>A property to return all cultivar definitions.</summary>
            <value>The cultivars.</value>
        </member>
        <member name="T:Models.PMF.OldPlant.Organ1">
            <summary>
            A base organ for plant15
            </summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Organ1.DoSWDemand(System.Double)">
            <summary>Does the sw demand.</summary>
            <param name="Supply">The supply.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Organ1.DoSWUptake(System.Double)">
            <summary>Does the sw uptake.</summary>
            <param name="SWDemand">The sw demand.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Organ1.DoDMDemand(System.Double)">
            <summary>Does the dm demand.</summary>
            <param name="DMSupply">The dm supply.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Organ1.DoDmRetranslocate(System.Double,System.Double)">
            <summary>Does the dm retranslocate.</summary>
            <param name="dlt_dm_retrans_to_fruit">The dlt_dm_retrans_to_fruit.</param>
            <param name="demand_differential_begin">The demand_differential_begin.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Organ1.GiveDmGreen(System.Double)">
            <summary>Gives the dm green.</summary>
            <param name="Delta">The delta.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Organ1.DoSenescence">
            <summary>Does the senescence.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Organ1.DoDetachment">
            <summary>Does the detachment.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Organ1.RemoveBiomass">
            <summary>Removes the biomass.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Organ1.DoNDemand(System.Boolean)">
            <summary>Does the n demand.</summary>
            <param name="IncludeRetranslocation">if set to <c>true</c> [include retranslocation].</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Organ1.DoNDemand1Pot(System.Double)">
            <summary>Does the n demand1 pot.</summary>
            <param name="dltDmPotRue">The DLT dm pot rue.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Organ1.DoSoilNDemand">
            <summary>Does the soil n demand.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Organ1.DoNSupply">
            <summary>Does the n supply.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Organ1.DoNRetranslocate(System.Double,System.Double)">
            <summary>Does the n retranslocate.</summary>
            <param name="availableRetranslocateN">The available retranslocate n.</param>
            <param name="GrainNDemand">The grain n demand.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Organ1.DoNSenescence">
            <summary>Does the n senescence.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Organ1.DoNSenescedRetranslocation(System.Double,System.Double)">
            <summary>Does the n senesced retranslocation.</summary>
            <param name="navail">The navail.</param>
            <param name="n_demand_tot">The n_demand_tot.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Organ1.DoNPartition(System.Double)">
            <summary>Does the n partition.</summary>
            <param name="GrowthN">The growth n.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Organ1.DoNFixRetranslocate(System.Double,System.Double)">
            <summary>Does the n fix retranslocate.</summary>
            <param name="NFixUptake">The n fix uptake.</param>
            <param name="nFixDemandTotal">The n fix demand total.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Organ1.DoNConccentrationLimits">
            <summary>Does the n conccentration limits.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Organ1.ZeroDltNSenescedTrans">
            <summary>Zeroes the DLT n senesced trans.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Organ1.DoNUptake(System.Double)">
            <summary>Does the n uptake.</summary>
            <param name="PotNFix">The pot n fix.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Organ1.DoPotentialRUE">
            <summary>Does the potential rue.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Organ1.interceptRadiation(System.Double)">
            <summary>Intercepts the radiation.</summary>
            <param name="incomingSolarRadiation">The incoming solar radiation.</param>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.OldPlant.Organ1.DoCover">
            <summary>Does the cover.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Organ1.Update">
            <summary>Updates this instance.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Organ1.OnPrepare(System.Object,System.EventArgs)">
            <summary>Called when [prepare].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Organ1.OnHarvest(Models.PMF.OldPlant.HarvestType,Models.PMF.BiomassRemovedType)">
            <summary>Called when [harvest].</summary>
            <param name="Harvest">The harvest.</param>
            <param name="BiomassRemoved">The biomass removed.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Organ1.OnEndCrop(Models.PMF.BiomassRemovedType)">
            <summary>Called when [end crop].</summary>
            <param name="BiomassRemoved">The biomass removed.</param>
        </member>
        <member name="P:Models.PMF.OldPlant.Organ1.Name">
            <summary>Gets the name.</summary>
            <value>The name.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Organ1.Live">
            <summary>Gets the live.</summary>
            <value>The live.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Organ1.Dead">
            <summary>Gets the dead.</summary>
            <value>The dead.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Organ1.Senescing">
            <summary>Gets the senescing.</summary>
            <value>The senescing.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Organ1.Retranslocation">
            <summary>Gets the retranslocation.</summary>
            <value>The retranslocation.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Organ1.Growth">
            <summary>Gets the growth.</summary>
            <value>The growth.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Organ1.Detaching">
            <summary>Gets the detaching.</summary>
            <value>The detaching.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Organ1.GreenRemoved">
            <summary>Gets the green removed.</summary>
            <value>The green removed.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Organ1.SenescedRemoved">
            <summary>Gets the senesced removed.</summary>
            <value>The senesced removed.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Organ1.SWSupply">
            <summary>Gets the sw supply.</summary>
            <value>The sw supply.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Organ1.SWDemand">
            <summary>Gets the sw demand.</summary>
            <value>The sw demand.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Organ1.SWUptake">
            <summary>Gets the sw uptake.</summary>
            <value>The sw uptake.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Organ1.DMSupply">
            <summary>Gets the dm supply.</summary>
            <value>The dm supply.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Organ1.DMRetransSupply">
            <summary>Gets the dm retrans supply.</summary>
            <value>The dm retrans supply.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Organ1.dltDmPotRue">
            <summary>Gets the DLT dm pot rue.</summary>
            <value>The DLT dm pot rue.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Organ1.DMGreenDemand">
            <summary>Gets the dm green demand.</summary>
            <value>The dm green demand.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Organ1.DMDemandDifferential">
            <summary>Gets the dm demand differential.</summary>
            <value>The dm demand differential.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Organ1.NSupply">
            <summary>Gets the n supply.</summary>
            <value>The n supply.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Organ1.NDemand">
            <summary>Gets the n demand.</summary>
            <value>The n demand.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Organ1.NUptake">
            <summary>Gets the n uptake.</summary>
            <value>The n uptake.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Organ1.SoilNDemand">
            <summary>Gets the soil n demand.</summary>
            <value>The soil n demand.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Organ1.NCapacity">
            <summary>Gets the n capacity.</summary>
            <value>The n capacity.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Organ1.NDemandDifferential">
            <summary>Gets the n demand differential.</summary>
            <value>The n demand differential.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Organ1.AvailableRetranslocateN">
            <summary>Gets the available retranslocate n.</summary>
            <value>The available retranslocate n.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Organ1.DltNSenescedRetrans">
            <summary>Gets the DLT n senesced retrans.</summary>
            <value>The DLT n senesced retrans.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Organ1.CoverGreen">
            <summary>Gets the cover green.</summary>
            <value>The cover green.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Organ1.CoverSen">
            <summary>Gets the cover sen.</summary>
            <value>The cover sen.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Organ1.AvailableToAnimal">
            <summary>Gets the available to animal.</summary>
            <value>The available to animal.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Organ1.RemovedByAnimal">
            <summary>Sets the removed by animal.</summary>
            <value>The removed by animal.</value>
        </member>
        <member name="T:Models.PMF.OldPlant.BaseOrgan1">
            <summary>
            This class represents a base organ for a Plant15 model
            </summary>
        </member>
        <member name="M:Models.PMF.OldPlant.BaseOrgan1.DoSWDemand(System.Double)">
            <summary>Does the sw demand.</summary>
            <param name="Supply">The supply.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.BaseOrgan1.DoSWUptake(System.Double)">
            <summary>Does the sw uptake.</summary>
            <param name="SWDemand">The sw demand.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.BaseOrgan1.DoDMDemand(System.Double)">
            <summary>Does the dm demand.</summary>
            <param name="DMSupply">The dm supply.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.BaseOrgan1.DoDmRetranslocate(System.Double,System.Double)">
            <summary>Does the dm retranslocate.</summary>
            <param name="dlt_dm_retrans_to_fruit">The dlt_dm_retrans_to_fruit.</param>
            <param name="demand_differential_begin">The demand_differential_begin.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.BaseOrgan1.GiveDmGreen(System.Double)">
            <summary>Gives the dm green.</summary>
            <param name="Delta">The delta.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.BaseOrgan1.DoSenescence">
            <summary>Does the senescence.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.BaseOrgan1.DoDetachment">
            <summary>Does the detachment.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.BaseOrgan1.RemoveBiomass">
            <summary>Removes the biomass.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.BaseOrgan1.DoNDemand(System.Boolean)">
            <summary>Does the n demand.</summary>
            <param name="IncludeRetranslocation">if set to <c>true</c> [include retranslocation].</param>
        </member>
        <member name="M:Models.PMF.OldPlant.BaseOrgan1.DoNDemand1Pot(System.Double)">
            <summary>Does the n demand1 pot.</summary>
            <param name="dltDmPotRue">The DLT dm pot rue.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.BaseOrgan1.DoSoilNDemand">
            <summary>Does the soil n demand.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.BaseOrgan1.DoNSupply">
            <summary>Does the n supply.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.BaseOrgan1.DoNRetranslocate(System.Double,System.Double)">
            <summary>Does the n retranslocate.</summary>
            <param name="availableRetranslocateN">The available retranslocate n.</param>
            <param name="GrainNDemand">The grain n demand.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.BaseOrgan1.DoNSenescence">
            <summary>Does the n senescence.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.BaseOrgan1.DoNSenescedRetranslocation(System.Double,System.Double)">
            <summary>Does the n senesced retranslocation.</summary>
            <param name="navail">The navail.</param>
            <param name="n_demand_tot">The n_demand_tot.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.BaseOrgan1.DoNPartition(System.Double)">
            <summary>Does the n partition.</summary>
            <param name="GrowthN">The growth n.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.BaseOrgan1.DoNFixRetranslocate(System.Double,System.Double)">
            <summary>Does the n fix retranslocate.</summary>
            <param name="NFixUptake">The n fix uptake.</param>
            <param name="nFixDemandTotal">The n fix demand total.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.BaseOrgan1.DoNConccentrationLimits">
            <summary>Does the n conccentration limits.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.BaseOrgan1.ZeroDltNSenescedTrans">
            <summary>Zeroes the DLT n senesced trans.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.BaseOrgan1.DoNUptake(System.Double)">
            <summary>Does the n uptake.</summary>
            <param name="PotNFix">The pot n fix.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.BaseOrgan1.DoPotentialRUE">
            <summary>Does the potential rue.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.BaseOrgan1.interceptRadiation(System.Double)">
            <summary>Intercepts the radiation.</summary>
            <param name="incomingSolarRadiation">The incoming solar radiation.</param>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.OldPlant.BaseOrgan1.DoCover">
            <summary>Does the cover.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.BaseOrgan1.Update">
            <summary>Updates this instance.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.BaseOrgan1.OnPrepare(System.Object,System.EventArgs)">
            <summary>Called when [prepare].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.BaseOrgan1.OnHarvest(Models.PMF.OldPlant.HarvestType,Models.PMF.BiomassRemovedType)">
            <summary>Called when [harvest].</summary>
            <param name="Harvest">The harvest.</param>
            <param name="BiomassRemoved">The biomass removed.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.BaseOrgan1.OnEndCrop(Models.PMF.BiomassRemovedType)">
            <summary>Called when [end crop].</summary>
            <param name="BiomassRemoved">The biomass removed.</param>
        </member>
        <member name="P:Models.PMF.OldPlant.BaseOrgan1.Live">
            <summary>Gets or sets the live.</summary>
            <value>The live.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.BaseOrgan1.Dead">
            <summary>Gets or sets the dead.</summary>
            <value>The dead.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.BaseOrgan1.Senescing">
            <summary>Gets or sets the senescing.</summary>
            <value>The senescing.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.BaseOrgan1.Retranslocation">
            <summary>Gets or sets the retranslocation.</summary>
            <value>The retranslocation.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.BaseOrgan1.Growth">
            <summary>Gets or sets the growth.</summary>
            <value>The growth.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.BaseOrgan1.Detaching">
            <summary>Gets or sets the detaching.</summary>
            <value>The detaching.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.BaseOrgan1.GreenRemoved">
            <summary>Gets or sets the green removed.</summary>
            <value>The green removed.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.BaseOrgan1.SenescedRemoved">
            <summary>Gets or sets the senesced removed.</summary>
            <value>The senesced removed.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.BaseOrgan1.SWSupply">
            <summary>Gets the sw supply.</summary>
            <value>The sw supply.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.BaseOrgan1.SWDemand">
            <summary>Gets the sw demand.</summary>
            <value>The sw demand.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.BaseOrgan1.SWUptake">
            <summary>Gets the sw uptake.</summary>
            <value>The sw uptake.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.BaseOrgan1.DMSupply">
            <summary>Gets the dm supply.</summary>
            <value>The dm supply.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.BaseOrgan1.DMRetransSupply">
            <summary>Gets the dm retrans supply.</summary>
            <value>The dm retrans supply.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.BaseOrgan1.dltDmPotRue">
            <summary>Gets the DLT dm pot rue.</summary>
            <value>The DLT dm pot rue.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.BaseOrgan1.DMGreenDemand">
            <summary>Gets the dm green demand.</summary>
            <value>The dm green demand.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.BaseOrgan1.DMDemandDifferential">
            <summary>Gets the dm demand differential.</summary>
            <value>The dm demand differential.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.BaseOrgan1.NSupply">
            <summary>Gets the n supply.</summary>
            <value>The n supply.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.BaseOrgan1.NDemand">
            <summary>Gets the n demand.</summary>
            <value>The n demand.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.BaseOrgan1.NUptake">
            <summary>Gets the n uptake.</summary>
            <value>The n uptake.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.BaseOrgan1.SoilNDemand">
            <summary>Gets the soil n demand.</summary>
            <value>The soil n demand.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.BaseOrgan1.NCapacity">
            <summary>Gets the n capacity.</summary>
            <value>The n capacity.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.BaseOrgan1.NDemandDifferential">
            <summary>Gets the n demand differential.</summary>
            <value>The n demand differential.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.BaseOrgan1.AvailableRetranslocateN">
            <summary>Gets the available retranslocate n.</summary>
            <value>The available retranslocate n.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.BaseOrgan1.DltNSenescedRetrans">
            <summary>Gets the DLT n senesced retrans.</summary>
            <value>The DLT n senesced retrans.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.BaseOrgan1.CoverGreen">
            <summary>Gets or sets the cover green.</summary>
            <value>The cover green.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.BaseOrgan1.CoverSen">
            <summary>Gets or sets the cover sen.</summary>
            <value>The cover sen.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.BaseOrgan1.AvailableToAnimal">
            <summary>Gets the available to animal.</summary>
            <value>The available to animal.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.BaseOrgan1.RemovedByAnimal">
            <summary>Sets the removed by animal.</summary>
            <value>The removed by animal.</value>
        </member>
        <member name="T:Models.PMF.Functions.OnEventFunction">
            <summary>
            Returns the a value depending on whether an event has occurred.
            </summary>
        </member>
        <member name="T:Models.PMF.Functions.IFunction">
            <summary>
            Interface for a function
            </summary>
        </member>
        <member name="P:Models.PMF.Functions.IFunction.Value">
            <summary>Gets the value of the function.</summary>
        </member>
        <member name="F:Models.PMF.Functions.OnEventFunction._Value">
            <summary>The _ value</summary>
        </member>
        <member name="F:Models.PMF.Functions.OnEventFunction.PreEventValue">
            <summary>The pre event value</summary>
        </member>
        <member name="F:Models.PMF.Functions.OnEventFunction.PostEventValue">
            <summary>The post event value</summary>
        </member>
        <member name="M:Models.PMF.Functions.OnEventFunction.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>Called when [simulation commencing].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Functions.OnEventFunction.OnPhaseChanged(Models.PMF.Phen.PhaseChangedType)">
            <summary>Called when [phase changed].</summary>
            <param name="PhaseChange">The phase change.</param>
        </member>
        <member name="M:Models.PMF.Functions.OnEventFunction.OnReSetEvent">
            <summary>Called when [re set event].</summary>
        </member>
        <member name="M:Models.PMF.Functions.OnEventFunction.OnSetEvent">
            <summary>Called when [set event].</summary>
        </member>
        <member name="M:Models.PMF.Functions.OnEventFunction.Document(System.Collections.Generic.List{Models.Core.AutoDocumentation.ITag},System.Int32,System.Int32)">
            <summary>Writes documentation for this function by adding to the list of documentation tags.</summary>
            <param name="tags">The list of tags to add to.</param>
            <param name="headingLevel">The level (e.g. H2) of the headings.</param>
            <param name="indent">The level of indentation 1, 2, 3 etc.</param>
        </member>
        <member name="P:Models.PMF.Functions.OnEventFunction.SetEvent">
            <summary>The set event</summary>
        </member>
        <member name="P:Models.PMF.Functions.OnEventFunction.ReSetEvent">
            <summary>The re set event</summary>
        </member>
        <member name="P:Models.PMF.Functions.OnEventFunction.Value">
            <summary>Gets the value.</summary>
        </member>
        <member name="T:Models.PostSimulationTools.PredictedObserved">
            <summary>
            Reads the contents of a file (in apsim format) and stores into the DataStore.
            If the file has a column name of 'SimulationName' then this model will only input data for those rows
            where the data in column 'SimulationName' matches the name of the simulation under which
            this input model sits.
            If the file does NOT have a 'SimulationName' column then all data will be input.
            </summary>
        </member>
        <member name="T:Models.Core.IPostSimulationTool">
            <summary>
            An interface for a post simulation tool
            </summary>
        </member>
        <member name="M:Models.Core.IPostSimulationTool.Run(Models.DataStore)">
            <summary>Runs the tool</summary>
            <param name="store">The data store where output should be stored</param>
        </member>
        <member name="M:Models.PostSimulationTools.PredictedObserved.Run(Models.DataStore)">
            <summary>Main run method for performing our calculations and storing data.</summary>
            <param name="dataStore">The data store.</param>
            <exception cref="T:Models.Core.ApsimXException">
            Could not find model data table:  + ObservedTableName
            or
            Could not find observed data table:  + ObservedTableName
            </exception>
        </member>
        <member name="P:Models.PostSimulationTools.PredictedObserved.PredictedTableName">
            <summary>Gets or sets the name of the predicted table.</summary>
            <value>The name of the predicted table.</value>
        </member>
        <member name="P:Models.PostSimulationTools.PredictedObserved.ObservedTableName">
            <summary>Gets or sets the name of the observed table.</summary>
            <value>The name of the observed table.</value>
        </member>
        <member name="P:Models.PostSimulationTools.PredictedObserved.FieldNameUsedForMatch">
            <summary>Gets or sets the field name used for match.</summary>
            <value>The field name used for match.</value>
        </member>
        <member name="T:Models.PostSimulationTools.ExcelInput">
            <summary>
            Reads the contents of a specific sheet from an EXCEL file and stores into the DataStore. 
            </summary>
        </member>
        <member name="M:Models.PostSimulationTools.ExcelInput.Run(Models.DataStore)">
            <summary>
            Main run method for performing our calculations and storing data.
            </summary>
            <param name="dataStore">The data store to store the data</param>
        </member>
        <member name="P:Models.PostSimulationTools.ExcelInput.FileName">
            <summary>
            Gets or sets the file name to read from.
            </summary>
        </member>
        <member name="P:Models.PostSimulationTools.ExcelInput.SheetNames">
            <summary>
            Gets or sets the list of EXCEL sheet names to read from.
            </summary>
        </member>
        <member name="P:Models.PostSimulationTools.ExcelInput.Simulation">
            <summary>
            Gets the parent simulation or null if not found
            </summary>
        </member>
        <member name="P:Models.PostSimulationTools.ExcelInput.AbsoluteFileName">
            <summary>Gets the absolute file name.</summary>
        </member>
        <member name="T:Models.Core.Locater">
            <summary>
            This class is responsible for the location and retrieval of variables or models 
            given a path.
            Path example syntax:
               .Clock.Start                         ABSOLUTE PATH
               [PotatoSowingRule].Script.SowDate    RELATIVE TO A MODEL IN SCOPE
               Leaf.LAI                             RELATIVE CHILD MODEL.
            </summary>
        </member>
        <member name="F:Models.Core.Locater.cache">
            <summary>
            A cache for speeding up look ups. The object can be either 
            Model[] or an IVariable.
            </summary>
        </member>
        <member name="M:Models.Core.Locater.Clear">
            <summary>
            Clear the cache
            </summary>
        </member>
        <member name="M:Models.Core.Locater.Get(System.String,Models.Core.Model,System.Boolean)">
            <summary>
            Get the value of a variable or model.
            </summary>
            <param name="namePath">The name of the object to return</param>
            <param name="relativeTo">The model calling this method</param>
            <param name="ignoreCase">If true, ignore case when searching for the object or property</param>
            <returns>The found object or null if not found</returns>
        </member>
        <member name="M:Models.Core.Locater.Set(System.String,Models.Core.Model,System.Object)">
            <summary>
            Set the value of a variable. Will throw if variable doesn't exist.
            </summary>
            <param name="namePath">The name of the object to set</param>
            <param name="relativeTo">The model calling this method</param>
            <param name="value">The value to set the property to</param>
        </member>
        <member name="M:Models.Core.Locater.GetInternal(System.String,Models.Core.Model,System.Boolean)">
            <summary>
            Get the value of a variable or model.
            </summary>
            <param name="namePath">The name of the object to return</param>
            <param name="relativeTo">The model calling this method</param>
            <param name="ignoreCase">If true, ignore case when searching for the object or property</param>
            <returns>The found object or null if not found</returns>
        </member>
        <member name="M:Models.Core.Locater.GetTypeWithoutNameSpace(System.String)">
            <summary>
            Gets all Type instances matching the specified class name with no namespace qualified class name.
            Will not throw. May return empty array.
            </summary>
        </member>
        <member name="M:Models.Core.Locater.AddToCache(System.String,Models.Core.Model,System.Object)">
            <summary>
            Add the specified object to the cache.
            </summary>
            <param name="key">cache key</param>
            <param name="relativeTo">Model for which the object is relative to</param>
            <param name="obj">The object to store.</param>
        </member>
        <member name="M:Models.Core.Locater.GetFromCache(System.String,Models.Core.Model)">
            <summary>
            Get an object from the cache.
            </summary>
            <param name="key">The cache key</param>
            <param name="relativeTo">The model the object is relative to</param>
            <returns>The object or null if not found.</returns>
        </member>
        <member name="M:Models.Core.Locater.Find(System.String,Models.Core.Model)">
            <summary>
            Return a model with the specified name is in scope. Returns null if none found.
            </summary>
            <param name="namePath">The name of the object to return</param>
            <param name="relativeTo">The model calling this method</param>
            <returns>The found model or null if not found</returns>
        </member>
        <member name="M:Models.Core.Locater.Find(System.Type,Models.Core.Model)">
            <summary>
            Return a model with the specified type is in scope. Returns null if none found.
            </summary>
            <param name="type">The type of the object to return</param>
            <param name="relativeTo">The model calling this method</param>
            <returns>The found model or null if not found</returns>
        </member>
        <member name="M:Models.Core.Locater.FindAll(Models.Core.Model)">
            <summary>
            Return all models within scope of the specified relative model.
            </summary>
            <param name="relativeTo">The model calling this method</param>
            <returns>The found models or an empty array if not found.</returns>
        </member>
        <member name="M:Models.Core.Locater.FindAll(System.Type,Models.Core.Model)">
            <summary>
            Return all models of the specified type within scope of the specified relative model.
            </summary>
            <param name="type">The type of the models to return</param>
            <param name="relativeTo">The model calling this method</param>
            <returns>The found models or an empty array if not found.</returns>
        </member>
        <member name="F:Models.Core.Locater.CacheForModel.cache">
            <summary>
            A cache for speeding up look ups. The object can be either 
            Model[] or an IVariable.
            </summary>
        </member>
        <member name="M:Models.Core.Locater.CacheForModel.GetValueForKey(System.String)">
            <summary>
            Get a value for the specified key or null if not in cache.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Models.Core.LinkAttribute">
            <summary>
            When applied to a field, the infrastructure will locate an object in scope of the 
            related field and store a reference to it in the field. If no matching
            model is found (and IsOptional is not specified or is false), then an 
            exception will be thrown. 
            </summary>
        </member>
        <member name="F:Models.Core.LinkAttribute.path">
            <summary>
            Stores the optionally specified name path
            </summary>
        </member>
        <member name="F:Models.Core.LinkAttribute.isOptional">
            <summary>
            Stores the value of IsOptional if specified.
            </summary>
        </member>
        <member name="P:Models.Core.LinkAttribute.NamePath">
            <summary>
            Gets or sets the NamePath of a field. When specified, the infrastructure will locate 
            the object using this name and store a reference to it in the field. NamePath 
            must conform to the specification in Section 2.5. Will throw an exception if the 
            NamePath isn’t valid.
            </summary>
        </member>
        <member name="P:Models.Core.LinkAttribute.IsOptional">
            <summary>
            Gets or sets a value indicating whether the link is optional or not. When true, the infrastructure will not throw an exception when an object cannot be found.
            </summary>
        </member>
        <member name="T:Models.Soils.NewProfileType">
            <summary>
            strucuture for data associated with the NewProfile event
            </summary>
        </member>
        <member name="F:Models.Soils.NewProfileType.dlayer">
            <summary>
            Array of layer depths
            </summary>
        </member>
        <member name="F:Models.Soils.NewProfileType.air_dry_dep">
            <summary>
            Array of air-dry values
            </summary>
        </member>
        <member name="F:Models.Soils.NewProfileType.ll15_dep">
            <summary>
            Array of -15 bar values
            </summary>
        </member>
        <member name="F:Models.Soils.NewProfileType.dul_dep">
            <summary>
            Array of drained upper limit values
            </summary>
        </member>
        <member name="F:Models.Soils.NewProfileType.sat_dep">
            <summary>
            Array of saturated values
            </summary>
        </member>
        <member name="F:Models.Soils.NewProfileType.sw_dep">
            <summary>
            Array of soil water values
            </summary>
        </member>
        <member name="F:Models.Soils.NewProfileType.bd">
            <summary>
            Array of bulk density values
            </summary>
        </member>
        <member name="T:Models.Soils.NewProfileDelegate">
            <summary>
            Delegate for issuing a NewProfile event
            </summary>
            <param name="Data">The data.</param>
        </member>
        <member name="T:Models.Soils.CohortWaterSupplyRootSystemLayerType">
            <summary>
            strucuture for data associated with one root layer in CohortWaterSupply event
            </summary>
        </member>
        <member name="F:Models.Soils.CohortWaterSupplyRootSystemLayerType.Bottom">
            <summary>
            Bottom
            </summary>
        </member>
        <member name="F:Models.Soils.CohortWaterSupplyRootSystemLayerType.Supply">
            <summary>
            Supply
            </summary>
        </member>
        <member name="T:Models.Soils.CohortWaterSupplyType">
            <summary>
            Strucuture for data associated with the CohortWaterSupply event
            </summary>
        </member>
        <member name="F:Models.Soils.CohortWaterSupplyType.CohortID">
            <summary>
            ID of the cohort
            </summary>
        </member>
        <member name="F:Models.Soils.CohortWaterSupplyType.RootSystemLayer">
            <summary>
            Array of values for each root layer
            </summary>
        </member>
        <member name="T:Models.Soils.CohortWaterSupplyDelegate">
            <summary>
            Delegate for the CohortWaterSupply event
            </summary>
            <param name="Data">The data.</param>
        </member>
        <member name="T:Models.Soils.Swim3">
            <summary>
            .NET port of the Fortran SWIM3 model
            Ported by Eric Zurcher July-August 2014
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.effpar">
            <summary>
            The effpar
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.psi_ll15">
            <summary>
            The psi_ll15
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.psiad">
            <summary>
            The psiad
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.psi0">
            <summary>
            The psi0
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.clock">
            <summary>
            The clock
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.paddock">
            <summary>
            The paddock
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.summary">
            <summary>
            The summary
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3._hm0">
            <summary>
            The _HM0
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3._hm1">
            <summary>
            The _HM1
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3._hrc">
            <summary>
            The _HRC
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3._grc">
            <summary>
            The _GRC
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3._g0">
            <summary>
            The _G0
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.g0">
            <summary>
            The g0
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3._g1">
            <summary>
            The _G1
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.g1">
            <summary>
            The g1
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3._swf">
            <summary>
            The _SWF
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.canopy_fact_default">
            <summary>
            Default canopy factor in absence of height
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.mint">
            <summary>
            The mint
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.maxt">
            <summary>
            The maxt
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.radn">
            <summary>
            The radn
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.eo_time">
            <summary>
            The eo_time
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.eo_durn">
            <summary>
            The eo_durn
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.cover_green_sum">
            <summary>
            The cover_green_sum
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.interception">
            <summary>
            The interception
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.residueinterception">
            <summary>
            The residueinterception
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.surfaceom_cover">
            <summary>
            The surfaceom_cover
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.salb">
            <summary>
            The salb
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3._dlayer">
            <summary>
            The _dlayer
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3._ll15">
            <summary>
            The _LL15
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3._dul">
            <summary>
            The _dul
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3._sat">
            <summary>
            The _sat
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3._ks">
            <summary>
            The _KS
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3._air_dry">
            <summary>
            The _air_dry
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.SWIMRainTime">
            <summary>
            The swim rain time
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.SWIMRainAmt">
            <summary>
            The swim rain amt
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.SWIMEqRainTime">
            <summary>
            The swim eq rain time
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.SWIMEqRainAmt">
            <summary>
            The swim eq rain amt
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.SWIMEvapTime">
            <summary>
            The swim evap time
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.SWIMEvapAmt">
            <summary>
            The swim evap amt
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.SWIMSolTime">
            <summary>
            The swim sol time
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.SWIMSolAmt">
            <summary>
            The swim sol amt
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.SubSurfaceInFlow">
            <summary>
            The sub surface in flow
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.day">
            <summary>
            The day
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.year">
            <summary>
            The year
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.apsim_timestep">
            <summary>
            The apsim_timestep
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.start_day">
            <summary>
            The start_day
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.start_year">
            <summary>
            The start_year
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.apsim_time">
            <summary>
            The apsim_time
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.run_has_started">
            <summary>
            The run_has_started
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.psimin">
            <summary>
            The psimin
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.rld">
            <summary>
            The RLD
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.rc">
            <summary>
            The rc
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.rtp">
            <summary>
            The RTP
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.rt">
            <summary>
            The rt
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.ctp">
            <summary>
            The CTP
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.ct">
            <summary>
            The ct
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.qr">
            <summary>
            The qr
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.qrpot">
            <summary>
            The qrpot
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.crop_names">
            <summary>
            array of crop names
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.crop_owners">
            <summary>
            array of crop owners (component names)
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.crop_owner_id">
            <summary>
            array of crop owner ids
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.crop_in">
            <summary>
            array indicating whether crop is "in"
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.demand_received">
            <summary>
            array indicating whether demand has been received for each crop
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.num_crops">
            <summary>
            number of crops (and size of the associated arrays)
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.supply_event_id">
            <summary>
            event numbers for sending CohortWaterSupply
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.uptake_water_id">
            <summary>
            The uptake_water_id
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.supply_solute_id">
            <summary>
            The supply_solute_id
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.leach_id">
            <summary>
            The leach_id
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.flow_id">
            <summary>
            The flow_id
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.exco_id">
            <summary>
            The exco_id
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.conc_water_id">
            <summary>
            The conc_water_id
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.conc_adsorb_id">
            <summary>
            The conc_adsorb_id
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.subsurface_drain_id">
            <summary>
            The subsurface_drain_id
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.nveg">
            <summary>
            The nveg
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.RootRadius">
            <summary>
            The root radius
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.RootConductance">
            <summary>
            The root conductance
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.pep">
            <summary>
            The pep
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.solute_demand">
            <summary>
            The solute_demand
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.canopy_height">
            <summary>
            The canopy_height
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.cover_tot">
            <summary>
            The cover_tot
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.crop_cover">
            <summary>
            The crop_cover
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.residue_cover">
            <summary>
            The residue_cover
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3._cover_green_sum">
            <summary>
            The _cover_green_sum
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3._cover_surface_runoff">
            <summary>
            The _cover_surface_runoff
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.qbp">
            <summary>
            The QBP
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.qslbp">
            <summary>
            The QSLBP
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.gf">
            <summary>
            The gf
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.swta">
            <summary>
            The swta
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.psuptake">
            <summary>
            The psuptake
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.pwuptake">
            <summary>
            The pwuptake
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.pwuptakepot">
            <summary>
            The pwuptakepot
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.cslold">
            <summary>
            The cslold
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.cslstart">
            <summary>
            The cslstart
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3._psix">
            <summary>
            The _psix
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.CN_runoff">
            <summary>
            The c n_runoff
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.DELk">
            <summary>
            The de lk
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.Mk">
            <summary>
            The mk
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.M0">
            <summary>
            The m0
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.M1">
            <summary>
            The m1
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.Y0">
            <summary>
            The y0
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.Y1">
            <summary>
            The y1
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.MicroP">
            <summary>
            The micro p
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.MicroKs">
            <summary>
            The micro ks
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.Kdula">
            <summary>
            The kdula
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.MacroP">
            <summary>
            The macro p
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.TD_runoff">
            <summary>
            The t d_runoff
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.TD_rain">
            <summary>
            The t d_rain
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.TD_evap">
            <summary>
            The t d_evap
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.TD_pevap">
            <summary>
            The t d_pevap
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.TD_drain">
            <summary>
            The t d_drain
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.TD_subsurface_drain">
            <summary>
            The t d_subsurface_drain
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.TD_soldrain">
            <summary>
            The t d_soldrain
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.TD_slssof">
            <summary>
            The t d_slssof
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.TD_wflow">
            <summary>
            The t d_wflow
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.TD_sflow">
            <summary>
            The t d_sflow
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.t">
            <summary>
            The t
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3._dt">
            <summary>
            The _DT
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3._wp">
            <summary>
            The _WP
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3._p">
            <summary>
            The _p
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3._psi">
            <summary>
            The _psi
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.th">
            <summary>
            The th
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.thold">
            <summary>
            The thold
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.hk">
            <summary>
            The hk
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.q">
            <summary>
            The q
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3._h">
            <summary>
            The _h
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.hold">
            <summary>
            The hold
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.ron">
            <summary>
            The ron
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.roff">
            <summary>
            The roff
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.res">
            <summary>
            The resource
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.resp">
            <summary>
            The resp
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.rex">
            <summary>
            The rex
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.rssf">
            <summary>
            The RSSF
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.qs">
            <summary>
            The qs
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.qex">
            <summary>
            The qex
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.qexpot">
            <summary>
            The qexpot
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.qssif">
            <summary>
            The qssif
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.qssof">
            <summary>
            The qssof
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.dc">
            <summary>
            The dc
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.csl">
            <summary>
            The CSL
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.cslt">
            <summary>
            The CSLT
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.qsl">
            <summary>
            The QSL
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.qsls">
            <summary>
            The QSLS
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.slsur">
            <summary>
            The slsur
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.cslsur">
            <summary>
            The cslsur
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.rslon">
            <summary>
            The rslon
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.rsloff">
            <summary>
            The rsloff
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.rslex">
            <summary>
            The rslex
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.demand_is_met">
            <summary>
            The demand_is_met
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.solute_owners">
            <summary>
            The solute_owners
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3._work">
            <summary>
            The _work
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.slwork">
            <summary>
            The slwork
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3._hmin">
            <summary>
            The _hmin
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.gsurf">
            <summary>
            The gsurf
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.psid">
            <summary>
            The psid
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.n">
            <summary>
            The n
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.x">
            <summary>
            The x
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.dx">
            <summary>
            The dx
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.c">
            <summary>
            The c
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.k">
            <summary>
            The k
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.ivap">
            <summary>
            The ivap
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.isbc">
            <summary>
            The isbc
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.itbc">
            <summary>
            The itbc
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.ibbc">
            <summary>
            The ibbc
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.ex">
            <summary>
            The ex
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.cslgw">
            <summary>
            The CSLGW
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.slupf">
            <summary>
            The slupf
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.slsci">
            <summary>
            The slsci
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.slscr">
            <summary>
            The SLSCR
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.dcon">
            <summary>
            The dcon
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.init_psi">
            <summary>
            The initial psi
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.rhob">
            <summary>
            The rhob
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.exco">
            <summary>
            The exco
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.fip">
            <summary>
            The fip
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.slos">
            <summary>
            The slos
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.d0">
            <summary>
            The d0
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.solute_names">
            <summary>
            The solute_names
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.num_solutes">
            <summary>
            The num_solutes
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.bbc_value">
            <summary>
            The bbc_value
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.water_table_conductance">
            <summary>
            The water_table_conductance
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.subsurfaceDrain">
            <summary>
            The subsurface drain
            </summary>
        </member>
        <member name="M:Models.Soils.Swim3.OnInitialised">
            <summary>
            Eventhandeler - initialisation
            </summary>
        </member>
        <member name="M:Models.Soils.Swim3.OnSum_Report">
            <summary>
            EventHandler - generate a summary report
            </summary>
            <exception cref="T:System.Exception">bad bottom boundary conditions switch</exception>
        </member>
        <member name="M:Models.Soils.Swim3.ResizeProfileArrays(System.Int32)">
            <summary>
            Resizes arrays related to the soil profile
            That is, handles changes in the number of layers
            </summary>
            <param name="newSize">The new size.</param>
        </member>
        <member name="M:Models.Soils.Swim3.ResizeCropArrays(System.Int32)">
            <summary>
            Resizes arrays relating to crops
            </summary>
            <param name="newSize">The new size.</param>
        </member>
        <member name="M:Models.Soils.Swim3.ResizeSoluteArrays(System.Int32)">
            <summary>
            Resizes arrays related to solutes
            </summary>
            <param name="newSize">The new size.</param>
        </member>
        <member name="M:Models.Soils.Swim3.GetResidueVariables">
            <summary>
            Gets the value of residue cover
            </summary>
            <exception cref="T:System.Exception">Value for residue_cover outside the expected range of 0 to 1</exception>
        </member>
        <member name="M:Models.Soils.Swim3.RemoveInterception">
            <summary>
            Removes intercepted rainfall
            </summary>
        </member>
        <member name="M:Models.Soils.Swim3.RemoveFromRainfall(System.Double)">
            <summary>
            Reduces the amount of rainfall (e.g., because of interception)
            </summary>
            <param name="amount">Amount of rainfall to remove (mm)</param>
            <exception cref="T:System.Exception">Interception &gt; Rainfall</exception>
        </member>
        <member name="M:Models.Soils.Swim3.CalcEvapVariables">
            <summary>
            Sets up calculation of evaporation variables
            </summary>
            <exception cref="T:System.Exception">
            apswim can only calculate Eo for daily timestep
            or
            Failure to supply eo duration data
            </exception>
        </member>
        <member name="M:Models.Soils.Swim3.GetGreenCover">
            <summary>
            Gets total green cover
            </summary>
            <returns></returns>
            <exception cref="T:System.Exception">cover_green_sum outside the expected range of 0 to 1</exception>
        </member>
        <member name="M:Models.Soils.Swim3.PotEvapotranspiration">
            <summary>
            Calculates potential evapotranspiration
            </summary>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Swim3.EeqFac">
            <summary>
            Calculates coefficient for equilibrium evaporation rate
            </summary>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Swim3.SetOtherVariables">
            <summary>
            Current does nothing!
            </summary>
        </member>
        <member name="M:Models.Soils.Swim3.SetSoluteVariables">
            <summary>
            Sets the values of solute variables from other modules
            </summary>
            <exception cref="T:System.Exception">
            -ve concentration in apswim_set_solute_variables + Environment.NewLine + mess
            or
            -ve value for solute concentration + Environment.NewLine + mess
            </exception>
        </member>
        <member name="M:Models.Soils.Swim3.PublishUptakes">
            <summary>
            Publishes uptake values
            </summary>
        </member>
        <member name="M:Models.Soils.Swim3.GetObsEvapVariables">
            <summary>
            Get evaporation values from other modules
            </summary>
            <exception cref="T:System.Exception">Failure to supply eo duration data</exception>
        </member>
        <member name="M:Models.Soils.Swim3.RecalcEqrain">
            <summary>
            Recalcs the eqrain.
            </summary>
        </member>
        <member name="M:Models.Soils.Swim3.TimeToMins(System.String)">
            <summary>
            Converts an hours:minutes time string to a number of minutes
            </summary>
            <param name="timeString">The time string.</param>
            <returns></returns>
            <exception cref="T:System.Exception">bad time format</exception>
        </member>
        <member name="M:Models.Soils.Swim3.CNRunoff">
            <summary>
            Cns the runoff.
            </summary>
        </member>
        <member name="M:Models.Soils.Swim3.CoverSurfaceRunoff(System.Double@)">
            <summary>
            Covers the surface runoff.
            </summary>
            <param name="coverSurfaceRunoff">The cover surface runoff.</param>
        </member>
        <member name="M:Models.Soils.Swim3.AddCover(System.Double,System.Double)">
            <summary>
            Combines cover values
            </summary>
            <param name="cover1">The cover1.</param>
            <param name="cover2">The cover2.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Swim3.SCSRunoff(System.Double,System.Double@)">
            <summary>
            Calculates runoff using SCS curve number method
            </summary>
            <param name="rain">The rain.</param>
            <param name="runoff">The runoff.</param>
        </member>
        <member name="M:Models.Soils.Swim3.RunoffDepthFactor(System.Double[]@)">
            <summary>
            Calculates the weighting factor hydraulic effectiveness used
            to weight the effect of soil moisture on runoff.
            </summary>
            <param name="runoff_wf">The runoff_wf.</param>
        </member>
        <member name="M:Models.Soils.Swim3.FindSwimLayer(System.Double)">
            <summary>
            Returns the layer number for a depth within the soil profile
            </summary>
            <param name="depth">The depth.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Swim3.Time(System.Int32,System.Int32,System.Int32)">
            <summary>
            Times the specified yy.
            </summary>
            <param name="yy">The yy.</param>
            <param name="dd">The dd.</param>
            <param name="tt">The tt.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Swim3.PurgeLogInfo(System.Double,System.Double[]@,System.Double[]@)">
            <summary>
            Purges the log information.
            </summary>
            <param name="time">The time.</param>
            <param name="SWIMTime">The swim time.</param>
            <param name="SWIMAmt">The swim amt.</param>
        </member>
        <member name="M:Models.Soils.Swim3.InsertLoginfo(System.Double,System.Double,System.Double,System.Double[]@,System.Double[]@)">
            <summary>
            Inserts the loginfo.
            </summary>
            <param name="time">The time.</param>
            <param name="duration">The duration.</param>
            <param name="amount">The amount.</param>
            <param name="SWIMTime">The swim time.</param>
            <param name="SWIMAmt">The swim amt.</param>
            <exception cref="T:System.Exception">log time before start of run</exception>
        </member>
        <member name="M:Models.Soils.Swim3.ResetDailyTotals">
            <summary>
            Resets daily accumlators to zero
            </summary>
        </member>
        <member name="M:Models.Soils.Swim3.SetupThetaCurve">
            <summary>
            Sets up the theta curve
            </summary>
        </member>
        <member name="M:Models.Soils.Swim3.SetupKCurve">
            <summary>
            Sets up the K curve
            </summary>
        </member>
        <member name="M:Models.Soils.Swim3.ResetWaterBalance(System.Int32,System.Double[]@)">
            <summary>
            Resets the water balance.
            </summary>
            <param name="wcFlag">The wc flag.</param>
            <param name="waterContent">Content of the water.</param>
            <exception cref="T:System.Exception">Bad wc_type flag value</exception>
        </member>
        <member name="M:Models.Soils.Swim3.CSol(System.Int32,System.Double)">
            <summary>
            cs the sol.
            </summary>
            <param name="solnum">The solnum.</param>
            <param name="time">The time.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Swim3.CRain(System.Double)">
            <summary>
            cs the rain.
            </summary>
            <param name="time">The time.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Swim3.CEvap(System.Double)">
            <summary>
            cs the evap.
            </summary>
            <param name="time">The time.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Swim3.Eqrain(System.Double)">
            <summary>
            Eqrains the specified time.
            </summary>
            <param name="time">The time.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Swim3.WaterTable">
            <summary>
            Calculates depth of water table from soil surface
            </summary>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Swim3.Suction(System.Int32,System.Double)">
            <summary>
            Suctions the specified node.
            </summary>
            <param name="node">The node.</param>
            <param name="theta">The theta.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Swim3.SimpleS(System.Int32,System.Double)">
            <summary>
            Simples the s.
            </summary>
            <param name="layer">The layer.</param>
            <param name="psiValue">The psi value.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Swim3.SimpleTheta(System.Int32,System.Double)">
            <summary>
            Simples the theta.
            </summary>
            <param name="layer">The layer.</param>
            <param name="psiValue">The psi value.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Swim3.Interp(System.Int32,System.Double,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            Interps the specified node.
            </summary>
            <param name="node">The node.</param>
            <param name="tpsi">The tpsi.</param>
            <param name="tth">The TTH.</param>
            <param name="thd">The THD.</param>
            <param name="hklg">The HKLG.</param>
            <param name="hklgd">The HKLGD.</param>
        </member>
        <member name="M:Models.Soils.Swim3.SimpleK(System.Int32,System.Double)">
            <summary>
            Simples the k.
            </summary>
            <param name="layer">The layer.</param>
            <param name="psiValue">The psi value.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Swim3.Theta(System.Int32,System.Double)">
            <summary>
            Thetas the specified node.
            </summary>
            <param name="node">The node.</param>
            <param name="suction">The suction.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Swim3.DoSwim(System.Double,System.Double)">
            <summary>
            Does the swim.
            </summary>
            <param name="timestepStart">The timestep start.</param>
            <param name="timestep">The timestep.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Swim3.ShowDiagnostics(System.Double[])">
            <summary>
            Shows the diagnostics.
            </summary>
            <param name="pold">The pold.</param>
        </member>
        <member name="M:Models.Soils.Swim3.CheckDemand">
            <summary>
            Checks the demand.
            </summary>
        </member>
        <member name="M:Models.Soils.Swim3.HMin(System.Double,System.Double@)">
            <summary>
            hes the minimum.
            </summary>
            <param name="deqrain">The deqrain.</param>
            <param name="sstorage">The sstorage.</param>
        </member>
        <member name="M:Models.Soils.Swim3.GSurf(System.Double,System.Double@)">
            <summary>
            gs the surf.
            </summary>
            <param name="deqrain">The deqrain.</param>
            <param name="surfcon">The surfcon.</param>
        </member>
        <member name="M:Models.Soils.Swim3.Solve(System.Int32,System.Boolean@)">
            <summary>
            Solves the specified itlim.
            </summary>
            <param name="itlim">The itlim.</param>
            <param name="fail">if set to <c>true</c> [fail].</param>
        </member>
        <member name="M:Models.Soils.Swim3.GetSol(System.Int32,System.Double[]@,System.Double[]@,System.Double[]@,System.Double[]@,System.Double[]@,System.Double[]@,System.Double[]@,Models.Soils.Swim3.PondingData@,System.Boolean@)">
            <summary>
            Gets the sol.
            </summary>
            <param name="solnum">The solnum.</param>
            <param name="a">a.</param>
            <param name="b">The b.</param>
            <param name="c">The c.</param>
            <param name="d">The d.</param>
            <param name="rhs">The RHS.</param>
            <param name="c1">The c1.</param>
            <param name="c2">The c2.</param>
            <param name="pondingData">The ponding data.</param>
            <param name="fail">if set to <c>true</c> [fail].</param>
        </member>
        <member name="M:Models.Soils.Swim3.GetSoluteVariables">
            <summary>
            Gets the solute variables.
            </summary>
        </member>
        <member name="M:Models.Soils.Swim3.GetFlow(System.String,System.Double[]@,System.Boolean@)">
            <summary>
            Gets the flow.
            </summary>
            <param name="flowName">Name of the flow.</param>
            <param name="flowArray">The flow array.</param>
            <param name="flowFlag">if set to <c>true</c> [flow flag].</param>
        </member>
        <member name="M:Models.Soils.Swim3.ConcWaterSolute(System.String,System.Double[]@)">
            <summary>
            Concs the water solute.
            </summary>
            <param name="solname">The solname.</param>
            <param name="concWaterSolute">The conc water solute.</param>
            <exception cref="T:System.Exception">No module has registered ownership for solute:  + solname
            or
            -ve value for solute was passed to SWIM + mess
            or
            You have asked apswim to use a solute that it does not know about :- + solname</exception>
        </member>
        <member name="M:Models.Soils.Swim3.ConcAdsorbSolute(System.String,System.Double[]@)">
            <summary>
            Concs the adsorb solute.
            </summary>
            <param name="solname">The solname.</param>
            <param name="concAdsorbSolute">The conc adsorb solute.</param>
            <exception cref="T:System.Exception">No module has registered ownership for solute:  + solname
            or
            -ve value for solute was passed to SWIM + Environment.NewLine + mess
            or
            You have asked apswim to use a solute that it does not know about :- + solname</exception>
        </member>
        <member name="M:Models.Soils.Swim3.SoluteNumber(System.String)">
            <summary>
            Solutes the number.
            </summary>
            <param name="solname">The solname.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Swim3.SolveFreundlich(System.Int32,System.Int32,System.Double)">
            <summary>
            Solves the freundlich.
            </summary>
            <param name="node">The node.</param>
            <param name="solnum">The solnum.</param>
            <param name="Ctot">The ctot.</param>
            <returns></returns>
            <exception cref="T:System.Exception">-ve concentration was passed to Freundlich solution + mess
            or
            -ve value for Cw on solving Freundlich1 + mess
            or
            -ve value for Cw on solving Freundlich2 + mess
            or
            -ve value for solute found in adsorption isotherm + mess
            or
            APSwim failed to solve the freundlich isotherm</exception>
        </member>
        <member name="M:Models.Soils.Swim3.Freundlich(System.Int32,System.Int32,System.Double@,System.Double@,System.Double@)">
            <summary>
            Freundliches the specified node.
            </summary>
            <param name="node">The node.</param>
            <param name="solnum">The solnum.</param>
            <param name="Cw">The cw.</param>
            <param name="Ctot">The ctot.</param>
            <param name="dCtot">The d ctot.</param>
            <exception cref="T:System.Exception">-ve value has been passed to Freundlich solution + mess</exception>
        </member>
        <member name="M:Models.Soils.Swim3.Wpf">
            <summary>
            WPFs this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Swim3.Pf(System.Double)">
            <summary>
            Pfs the specified psi value.
            </summary>
            <param name="psiValue">The psi value.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Swim3.PStat(System.Int32,System.Double@)">
            <summary>
            ps the stat.
            </summary>
            <param name="istat">The istat.</param>
            <param name="tresp">The tresp.</param>
        </member>
        <member name="M:Models.Soils.Swim3.Slupf(System.Int32,System.Int32)">
            <summary>
            Slupfs the specified crop.
            </summary>
            <param name="crop">The crop.</param>
            <param name="solnum">The solnum.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Swim3.CoverEosRedn">
            <summary>
            Covers the eos redn.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Swim3.Watvar(System.Int32,System.Double,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            Watvars the specified ix.
            </summary>
            <param name="ix">The ix.</param>
            <param name="tp">The tp.</param>
            <param name="tpsi">The tpsi.</param>
            <param name="psip">The psip.</param>
            <param name="psipp">The psipp.</param>
            <param name="tth">The TTH.</param>
            <param name="thp">The THP.</param>
            <param name="thk">The THK.</param>
            <param name="hkp">The HKP.</param>
        </member>
        <member name="M:Models.Soils.Swim3.Trans(System.Double,System.Double@,System.Double@,System.Double@)">
            <summary>
            Transes the specified p.
            </summary>
            <param name="p">The p.</param>
            <param name="psi">The psi.</param>
            <param name="psip">The psip.</param>
            <param name="psipp">The psipp.</param>
        </member>
        <member name="M:Models.Soils.Swim3.Thomas(System.Int32,System.Int32,System.Double[]@,System.Double[]@,System.Double[]@,System.Double[]@,System.Double[]@,System.Double[]@,Models.Soils.Swim3.PondingData@,System.Boolean@)">
            <summary>
            Thomases the specified istart.
            </summary>
            <param name="istart">The istart.</param>
            <param name="n">The n.</param>
            <param name="a">a.</param>
            <param name="b">The b.</param>
            <param name="c">The c.</param>
            <param name="rhs">The RHS.</param>
            <param name="d">The d.</param>
            <param name="v">The v.</param>
            <param name="pondingData">The ponding data.</param>
            <param name="fail">if set to <c>true</c> [fail].</param>
        </member>
        <member name="F:Models.Soils.Swim3.ifirst">
            <summary>
            The ifirst
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.ilast">
            <summary>
            The ilast
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.gr">
            <summary>
            The gr
            </summary>
        </member>
        <member name="M:Models.Soils.Swim3.Baleq(System.Int32,System.Int32@,System.Double[]@,System.Double[][]@,System.Int32@,System.Int32@,System.Double[]@,System.Double[]@,System.Double[]@,System.Double[]@,Models.Soils.Swim3.PondingData@)">
            <summary>
            Baleqs the specified it.
            </summary>
            <param name="it">It.</param>
            <param name="iroots">The iroots.</param>
            <param name="tslos">The tslos.</param>
            <param name="tcsl">The TCSL.</param>
            <param name="ibegin">The ibegin.</param>
            <param name="iend">The iend.</param>
            <param name="a">a.</param>
            <param name="b">The b.</param>
            <param name="c">The c.</param>
            <param name="rhs">The RHS.</param>
            <param name="pondingData">The ponding data.</param>
        </member>
        <member name="M:Models.Soils.Swim3.SCond(System.Double,System.Double,System.Double@,System.Double@)">
            <summary>
            ses the cond.
            </summary>
            <param name="ttt">The TTT.</param>
            <param name="tth">The TTH.</param>
            <param name="g_">The g_.</param>
            <param name="gh">The gh.</param>
        </member>
        <member name="M:Models.Soils.Swim3.Runoff(System.Double,System.Double,System.Double@,System.Double@)">
            <summary>
            Runoffs the specified t.
            </summary>
            <param name="t">The t.</param>
            <param name="h">The h.</param>
            <param name="roff">The roff.</param>
            <param name="roffh">The roffh.</param>
        </member>
        <member name="M:Models.Soils.Swim3.Uptake(System.Double[]@,System.Double[]@,System.Double[]@,System.Double[]@,System.Double[]@,System.Double[0:,0:]@)">
            <summary>
            Uptakes the specified tpsi.
            </summary>
            <param name="tpsi">The tpsi.</param>
            <param name="thk">The THK.</param>
            <param name="tpsip">The tpsip.</param>
            <param name="thkp">The THKP.</param>
            <param name="tqex">The tqex.</param>
            <param name="tqexp">The tqexp.</param>
        </member>
        <member name="M:Models.Soils.Swim3.Drain(System.Double[]@,System.Double[]@)">
            <summary>
            Drains the specified qdrain.
            </summary>
            <param name="qdrain">The qdrain.</param>
            <param name="qdrainpsi">The qdrainpsi.</param>
        </member>
        <member name="M:Models.Soils.Swim3.Hooghoudt(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Hooghoudts the specified d.
            </summary>
            <param name="d">The d.</param>
            <param name="m">The m.</param>
            <param name="L">The l.</param>
            <param name="r">The r.</param>
            <param name="Ke">The ke.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Swim3.FindLayerNo(System.Double)">
            <summary>
            Finds the layer no.
            </summary>
            <param name="depth">The depth.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Swim3.IssueWarning(System.String)">
            <summary>
            Issues the warning.
            </summary>
            <param name="warningText">The warning text.</param>
        </member>
        <member name="P:Models.Soils.Swim3.Salb">
            <summary>
            Gets or sets the salb.
            </summary>
            <value>
            The salb.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.CN2Bare">
            <summary>
            Gets or sets the c n2 bare.
            </summary>
            <value>
            The c n2 bare.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.CNRed">
            <summary>
            Gets or sets the cn red.
            </summary>
            <value>
            The cn red.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.CNCov">
            <summary>
            Gets or sets the cn cov.
            </summary>
            <value>
            The cn cov.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.KDul">
            <summary>
            Gets or sets the k dul.
            </summary>
            <value>
            The k dul.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.PSIDul">
            <summary>
            Gets or sets the psi dul.
            </summary>
            <value>
            The psi dul.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.VC">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Models.Soils.Swim3"/> is vc.
            </summary>
            <value>
              <c>true</c> if vc; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.DTmin">
            <summary>
            Gets or sets the d tmin.
            </summary>
            <value>
            The d tmin.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.DTmax">
            <summary>
            Gets or sets the d tmax.
            </summary>
            <value>
            The d tmax.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.MaxWaterIncrement">
            <summary>
            Gets or sets the maximum water increment.
            </summary>
            <value>
            The maximum water increment.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.SpaceWeightingFactor">
            <summary>
            Gets or sets the space weighting factor.
            </summary>
            <value>
            The space weighting factor.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.SoluteSpaceWeightingFactor">
            <summary>
            Gets or sets the solute space weighting factor.
            </summary>
            <value>
            The solute space weighting factor.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.Diagnostics">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Models.Soils.Swim3"/> is diagnostics.
            </summary>
            <value>
              <c>true</c> if diagnostics; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.dtmin">
            <summary>
            Gets or sets the dtmin.
            </summary>
            <value>
            The dtmin.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.dtmax">
            <summary>
            Gets or sets the dtmax.
            </summary>
            <value>
            The dtmax.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.dw">
            <summary>
            Gets or sets the dw.
            </summary>
            <value>
            The dw.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.swt">
            <summary>
            Gets or sets the SWT.
            </summary>
            <value>
            The SWT.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.negative_conc_warn">
            <summary>
            Gets or sets the negative_conc_warn.
            </summary>
            <value>
            The negative_conc_warn.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.negative_conc_fatal">
            <summary>
            Gets or sets the negative_conc_fatal.
            </summary>
            <value>
            The negative_conc_fatal.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.max_iterations">
            <summary>
            Gets or sets the max_iterations.
            </summary>
            <value>
            The max_iterations.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.hm0">
            <summary>
            Gets or sets the HM0.
            </summary>
            <value>
            The HM0.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.minimum_surface_storage">
            <summary>
            Gets or sets the minimum_surface_storage.
            </summary>
            <value>
            The minimum_surface_storage.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.hm1">
            <summary>
            Gets or sets the HM1.
            </summary>
            <value>
            The HM1.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.maximum_surface_storage">
            <summary>
            Gets or sets the maximum_surface_storage.
            </summary>
            <value>
            The maximum_surface_storage.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.hrc">
            <summary>
            Gets or sets the HRC.
            </summary>
            <value>
            The HRC.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.grc">
            <summary>
            Gets or sets the GRC.
            </summary>
            <value>
            The GRC.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.roff0">
            <summary>
            Gets or sets the roff0.
            </summary>
            <value>
            The roff0.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.roff1">
            <summary>
            Gets or sets the roff1.
            </summary>
            <value>
            The roff1.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.cover_effects">
            <summary>
            Gets or sets the cover_effects.
            </summary>
            <value>
            The cover_effects.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.dppl">
            <summary>
            Gets or sets the DPPL.
            </summary>
            <value>
            The DPPL.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.dpnl">
            <summary>
            Gets or sets the DPNL.
            </summary>
            <value>
            The DPNL.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.slcerr">
            <summary>
            Gets or sets the slcerr.
            </summary>
            <value>
            The slcerr.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.minimum_conductance">
            <summary>
            Gets or sets the minimum_conductance.
            </summary>
            <value>
            The minimum_conductance.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.maximum_conductance">
            <summary>
            Gets or sets the maximum_conductance.
            </summary>
            <value>
            The maximum_conductance.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.ersoil">
            <summary>
            Gets or sets the ersoil.
            </summary>
            <value>
            The ersoil.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.ernode">
            <summary>
            Gets or sets the ernode.
            </summary>
            <value>
            The ernode.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.errex">
            <summary>
            Gets or sets the errex.
            </summary>
            <value>
            The errex.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.slswt">
            <summary>
            Gets or sets the SLSWT.
            </summary>
            <value>
            The SLSWT.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.a_to_evap_fact">
            <summary>
            Gets or sets the a_to_evap_fact.
            </summary>
            <value>
            The a_to_evap_fact.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.canopy_eos_coef">
            <summary>
            Gets or sets the canopy_eos_coef.
            </summary>
            <value>
            The canopy_eos_coef.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.kdul">
            <summary>
            kdul
            </summary>
            <value>
            The kdul.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.psidul">
            <summary>
            psidul
            </summary>
            <value>
            The psidul.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.canopy_fact">
            <summary>
            Canopy factors for cover runoff effect
            </summary>
            <value>
            The canopy_fact.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.canopy_fact_height">
            <summary>
            Heights for canopy factors (mm)
            </summary>
            <value>
            The canopy_fact_height.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.cn2_bare">
            <summary>
            Gets or sets the cn2_bare.
            </summary>
            <value>
            The cn2_bare.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.cn_red">
            <summary>
            Gets or sets the cn_red.
            </summary>
            <value>
            The cn_red.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.cn_cov">
            <summary>
            Gets or sets the cn_cov.
            </summary>
            <value>
            The cn_cov.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.default_rain_time">
            <summary>
            Default time of rainfall (hh:mm)
            </summary>
            <value>
            The default_rain_time.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.default_rain_duration">
            <summary>
            Default duration of rainfall (min)
            </summary>
            <value>
            The default_rain_duration.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.default_evap_time">
            <summary>
            Default time of evaporation (hh:mm)
            </summary>
            <value>
            The default_evap_time.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.default_evap_duration">
            <summary>
            Default duration of evaporation (min)
            </summary>
            <value>
            The default_evap_duration.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.hydrol_effective_depth">
            <summary>
            Gets or sets the hydrol_effective_depth.
            </summary>
            <value>
            The hydrol_effective_depth.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.min_crit_temp">
            <summary>
            Gets or sets the min_crit_temp.
            </summary>
            <value>
            The min_crit_temp.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.max_crit_temp">
            <summary>
            Gets or sets the max_crit_temp.
            </summary>
            <value>
            The max_crit_temp.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.max_albedo">
            <summary>
            Gets or sets the max_albedo.
            </summary>
            <value>
            The max_albedo.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.residue_albedo">
            <summary>
            Gets or sets the residue_albedo.
            </summary>
            <value>
            The residue_albedo.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.cover_surface_runoff">
            <summary>
            Gets the cover_surface_runoff.
            </summary>
            <value>
            The cover_surface_runoff.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.evap_source">
            <summary>
            Gets or sets the evap_source.
            </summary>
            <value>
            The evap_source.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.SwimSoluteParameters">
            <summary>
            Gets or sets the swim solute parameters.
            </summary>
            <value>
            The swim solute parameters.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.SwimWaterTable">
            <summary>
            Gets or sets the swim water table.
            </summary>
            <value>
            The swim water table.
            </value>
        </member>
        <member name="P:Models.Soils.Swim3.SwimSubsurfaceDrain">
            <summary>
            Gets or sets the swim subsurface drain.
            </summary>
            <value>
            The swim subsurface drain.
            </value>
        </member>
        <member name="E:Models.Soils.Swim3.WaterUptakesCalculated">
            <summary>
            WaterUptakesCalculated event
            </summary>
        </member>
        <member name="E:Models.Soils.Swim3.CohortWaterSupply">
            <summary>
            CohortWaterSupply event
            </summary>
        </member>
        <member name="E:Models.Soils.Swim3.NitrogenChanged">
            <summary>
            NewProfile event
            </summary>
        </member>
        <member name="T:Models.Soils.Swim3.PondingData">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.PondingData.b">
            <summary>
            The b
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.PondingData.c">
            <summary>
            The c
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.PondingData.rhs">
            <summary>
            The RHS
            </summary>
        </member>
        <member name="F:Models.Soils.Swim3.PondingData.v">
            <summary>
            The v
            </summary>
        </member>
        <member name="T:Models.Soils.Sample">
            <summary>
            The class represents a soil sample.
            </summary>
        </member>
        <member name="M:Models.Soils.Sample.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Models.Soils.Sample"/> class.
            </summary>
        </member>
        <member name="P:Models.Soils.Sample.Thickness">
            <summary>
            Gets or sets the sample thickness (mm)
            </summary>
        </member>
        <member name="P:Models.Soils.Sample.Depth">
            <summary>
            Gets or sets the depth strings e.g. 0-10
            </summary>
        </member>
        <member name="P:Models.Soils.Sample.NO3">
            <summary>
            Gets or sets the nitrate NO3. Units will be as specified by NO3Units
            </summary>
        </member>
        <member name="P:Models.Soils.Sample.NH4">
            <summary>
            Gets or sets ammonia NH4. Units will be as specified by NH4Units
            </summary>
        </member>
        <member name="P:Models.Soils.Sample.SW">
            <summary>
            Gets or sets soil water. Units will be as specified by SWUnits
            </summary>
        </member>
        <member name="P:Models.Soils.Sample.OC">
            <summary>
            Gets or sets organic carbon. Units will be as specified by OCUnits
            </summary>
        </member>
        <member name="P:Models.Soils.Sample.EC">
            <summary>
            Gets or sets electrical conductivity (1:5 dS/m)
            </summary>
        </member>
        <member name="P:Models.Soils.Sample.CL">
            <summary>
            Gets or sets chloride (mg/kg)
            </summary>
        </member>
        <member name="P:Models.Soils.Sample.ESP">
            <summary>
            Gets or sets ESP (%)
            </summary>
        </member>
        <member name="P:Models.Soils.Sample.PH">
            <summary>
            Gets or sets PH. Units will be as specified by PHUnits
            </summary>
        </member>
        <member name="P:Models.Soils.Sample.NO3Units">
            <summary>
            Gets or sets the units of NO3
            </summary>
        </member>
        <member name="P:Models.Soils.Sample.NH4Units">
            <summary>
            Gets or sets the units of NH4
            </summary>
        </member>
        <member name="P:Models.Soils.Sample.SWUnits">
            <summary>
            Gets or sets the units of SW
            </summary>
        </member>
        <member name="P:Models.Soils.Sample.OCUnits">
            <summary>
            Gets or sets the units of organic carbon
            </summary>
        </member>
        <member name="P:Models.Soils.Sample.PHUnits">
            <summary>
            Gets or sets the units of P
            </summary>
        </member>
        <member name="P:Models.Soils.Sample.NO3ppm">
            <summary>
            Gets NO3. Units: ppm.
            </summary>
        </member>
        <member name="P:Models.Soils.Sample.NO3kgha">
            <summary>
            Gets NO3. Units: kg/ha.
            </summary>
        </member>
        <member name="P:Models.Soils.Sample.NH4ppm">
            <summary>
            Gets NH4. Units: ppm.
            </summary>
        </member>
        <member name="P:Models.Soils.Sample.NH4kgha">
            <summary>
            Gets NH4. Units: kg/ha.
            </summary>
        </member>
        <member name="P:Models.Soils.Sample.SWmm">
            <summary>
            Gets SW. Units: mm/mm.
            </summary>
        </member>
        <member name="P:Models.Soils.Sample.SWVolumetric">
            <summary>
            Gets SW. Units: mm/mm.
            </summary>
        </member>
        <member name="P:Models.Soils.Sample.OCTotal">
            <summary>
            Gets organic carbon. Units: Total %
            </summary>
        </member>
        <member name="P:Models.Soils.Sample.PHWater">
            <summary>
            Gets PH. Units: (1:5 water)
            </summary>
        </member>
        <member name="P:Models.Soils.Sample.Soil">
            <summary>
            Gets the soil associated with this sample
            </summary>
        </member>
        <member name="T:Models.Soils.Sample.NUnitsEnum">
            <summary>
            An enumeration for specifying nitrogen units.
            </summary>
        </member>
        <member name="F:Models.Soils.Sample.NUnitsEnum.ppm">
            <summary>
            parts per million
            </summary>
        </member>
        <member name="F:Models.Soils.Sample.NUnitsEnum.kgha">
            <summary>
            kilograms per hectare
            </summary>
        </member>
        <member name="T:Models.Soils.Sample.SWUnitsEnum">
            <summary>
            An enumeration for specifying soil water units
            </summary>
        </member>
        <member name="F:Models.Soils.Sample.SWUnitsEnum.Volumetric">
            <summary>
            Volumetric mm/mm
            </summary>
        </member>
        <member name="F:Models.Soils.Sample.SWUnitsEnum.Gravimetric">
            <summary>
            Gravimetric soil water
            </summary>
        </member>
        <member name="F:Models.Soils.Sample.SWUnitsEnum.mm">
            <summary>
            mm of water
            </summary>
        </member>
        <member name="T:Models.Soils.Sample.OCSampleUnitsEnum">
            <summary>
            An enumeration for specifying organic carbon units
            </summary>
        </member>
        <member name="F:Models.Soils.Sample.OCSampleUnitsEnum.Total">
            <summary>
            Organic carbon as total percent
            </summary>
        </member>
        <member name="F:Models.Soils.Sample.OCSampleUnitsEnum.WalkleyBlack">
            <summary>
            Organic carbon as walkley black percent
            </summary>
        </member>
        <member name="T:Models.Soils.Sample.PHSampleUnitsEnum">
            <summary>
            An enumeration for specifying PH units
            </summary>
        </member>
        <member name="F:Models.Soils.Sample.PHSampleUnitsEnum.Water">
            <summary>
            PH as water method
            </summary>
        </member>
        <member name="F:Models.Soils.Sample.PHSampleUnitsEnum.CaCl2">
            <summary>
            PH as Calcium chloride method
            </summary>
        </member>
        <member name="T:Models.PMF.OldPlant.NStress">
            <summary>
            Nitrogen stress model for plant
            </summary>
        </member>
        <member name="F:Models.PMF.OldPlant.NStress.Leaf">
            <summary>The leaf</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.NStress.Stem">
            <summary>The stem</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.NStress.expansion">
            <summary>The expansion</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.NStress.pheno">
            <summary>The pheno</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.NStress.photo">
            <summary>The photo</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.NStress.grain">
            <summary>The grain</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.NStress._PhotoSum">
            <summary>The _ photo sum</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.NStress._PhotoCount">
            <summary>The _ photo count</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.NStress._GrainSum">
            <summary>The _ grain sum</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.NStress._GrainCount">
            <summary>The _ grain count</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.NStress.DoPlantNStress">
            <summary>Does the plant n stress.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.NStress.Update">
            <summary>Updates this instance.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.NStress.ResetAverage">
            <summary>Resets the average.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.NStress.critNFactor(Models.PMF.OldPlant.Leaf1,Models.PMF.OldPlant.Stem1,System.Double)">
            <summary>Crits the n factor.</summary>
            <param name="Leaf">The leaf.</param>
            <param name="Stem">The stem.</param>
            <param name="multiplier">The multiplier.</param>
            <returns></returns>
        </member>
        <member name="P:Models.PMF.OldPlant.NStress.N_fact_photo">
            <summary>Gets or sets the n_fact_photo.</summary>
            <value>The n_fact_photo.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.NStress.N_fact_pheno">
            <summary>Gets or sets the n_fact_pheno.</summary>
            <value>The n_fact_pheno.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.NStress.N_fact_expansion">
            <summary>Gets or sets the n_fact_expansion.</summary>
            <value>The n_fact_expansion.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.NStress.N_fact_grain">
            <summary>Gets or sets the n_fact_grain.</summary>
            <value>The n_fact_grain.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.NStress.PhotoStress">
            <summary>Gets the photo stress.</summary>
            <value>The photo stress.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.NStress.PhenoStress">
            <summary>Gets the pheno stress.</summary>
            <value>The pheno stress.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.NStress.ExpansionStress">
            <summary>Gets the expansion stress.</summary>
            <value>The expansion stress.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.NStress.GrainStress">
            <summary>Gets the grain stress.</summary>
            <value>The grain stress.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.NStress.Photo">
            <summary>Gets the photo.</summary>
            <value>The photo.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.NStress.Pheno">
            <summary>Gets the pheno.</summary>
            <value>The pheno.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.NStress.PhotoAverage">
            <summary>Gets the photo average.</summary>
            <value>The photo average.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.NStress.Expansion">
            <summary>Gets the expansion.</summary>
            <value>The expansion.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.NStress.Grain">
            <summary>Gets the grain.</summary>
            <value>The grain.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.NStress.GrainAverage">
            <summary>Gets the grain average.</summary>
            <value>The grain average.</value>
        </member>
        <member name="T:Models.PMF.Functions.PhaseLookup">
            <summary>
            Look up a value based upon the current growth phase.
            </summary>
        </member>
        <member name="F:Models.PMF.Functions.PhaseLookup.ChildFunctions">
            <summary>The child functions</summary>
        </member>
        <member name="M:Models.PMF.Functions.PhaseLookup.Document(System.Collections.Generic.List{Models.Core.AutoDocumentation.ITag},System.Int32,System.Int32)">
            <summary>Writes documentation for this function by adding to the list of documentation tags.</summary>
            <param name="tags">The list of tags to add to.</param>
            <param name="headingLevel">The level (e.g. H2) of the headings.</param>
            <param name="indent">The level of indentation 1, 2, 3 etc.</param>
        </member>
        <member name="P:Models.PMF.Functions.PhaseLookup.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
        </member>
        <member name="T:Models.PMF.Functions.InPhaseTtFunction">
            <summary>
            Returns the thermal time accumulation from the current phase in phenology
            </summary>
        </member>
        <member name="F:Models.PMF.Functions.InPhaseTtFunction.Phenology">
            <summary>The phenology</summary>
        </member>
        <member name="P:Models.PMF.Functions.InPhaseTtFunction.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
        </member>
        <member name="T:Models.PMF.OrganArbitrator">
            <summary>
            There are a number of passes involved in the allocation of Weight (Wt).
              Wt_Step 1. Set up DM supplies and demands.  Each organ may have a demand for Structural, Metabolic and Non-structural Wt.  Each organ may supply Fresh DM from photosynthesis and/or stored DM from retranslocation of its Non-structural pool.
              Wt_Step 2. In this step freshly fixed Wt is partitioned to organs based on their relative Structural and Metabolic demands such that if there is not enough freshly fixed Wt to meet these demands the organs with the highest demands get the greatest share of the photosynthesis.
              Wt_Step 3. In the second step any freshly fixed DM that was surplus to Structural and Metabolic demands is partitioned to sink organs.  An organ will be a sink if it is parameterised to have a Non-structural (mobile) component and the capacity of each organ to receive excess DM depends on its structural fraction (which determines the Non-structural Fraction and subsequent sink capacity).  If there is still fresh DM unallocated after the second pass this remains unallocated with the assumption that in this case the plant would down regulate photosynthesis due to lack of sink capacity.
              Wt_Step 4. In this step, Non-structural DM is reallocated from Non-Structural pools if there was insufficient DM to meet the structural and metabolic DM demands of organs.
              The arbitrator then sends a potential DM allocation to each organ that they use to calculate their N demands and then steps through N partitioning routines.  The final pass in biomass partitioning comes after N partitioning
              
              N_Step 1. Set up N supplies and demands.  Each organ may (or may not) supply N in a number of ways.  Each organ has (potentially) a structural, metabolic and Non-structural N Demand.  The structural N demand is that required to grow immobile biomass components, Metabolic N is that required to produce working biomass such as the photosynthetic mechanism in the leaves.  The Non-structural N demand is considered to be the luxury uptake and storage of highly mobile N compounds such as nitrate.
                  Each of the following 4 steps have a number of processes in common; Firstly the arbitrator determines each organs current N demand (that outstanding after previous N partitioning steps), then it allocates N to each demanding organ (There are three ways that N can be allocated, see below), then it sets for each supplying organ the amount of N that was taken up.
              N_Step 2. NReallocation.  This is the supply of N within the plant by the reallocation of sensing and/or Non-structural N which is the lowest energy form of N available to the plant so is partitioned first.
              N_Step 3. NUptake.  This is the supply of mineral N from the environment (typically by roots from the soil). In this step the arbitrator partitions the potential N uptake supply to satisfy all organs N demands (Structural, Metabolic and Non-structural).  If supply is sufficient this will replenish all Non-structural N that was reallocated in the previous step.  If not the N conc of organs with a Non-structural N component will begin to fall.  If total N demand is less than the uptake supply the crop will leave the surplus mineral N in the soil.
              N_Step 4. NFixation.  This is the supply of symbiotically fixed N and is redundant for Non-fixers!  The arbitrator will asks all N fixing organs (typically nodules) for their potential N fixation supply and then partition this to meet the Structural and Metabolic N demands of organs.  The arbitrator will not fix N to meet Non-structural N demands to minimise the biomass cost of fixation which is metabolically expensive.  Fixation follows uptake to enable the arbitrator to capture the "Lazy" N fixing behaviour of some legumes.  Once fixation is calculated the arbitrator determines the DM cost of this fixation.
              N_Step 5. NRetranslocation.  This is only invoked under sever N shortage when NReallocation and Uptake (and fixation if appropriate) cannot meet structural and metabolic N demands.  It this step the arbitrator will remove Metabolic N from older leaf cohorts to meet the N demand of new leaves and reproductive organs.
            
            
                  In all of these N partitioning steps there are three options the developer may chose for determining the allocation of N between demanding organs.
              1. RelativeAllocation.  If this option is used all N is partitioned to organs relative to their demand so that the organs with the larger N demand get a larger share of a limited N supply.
              2. PriorityAllocation.  If this option is used the arbitrator steps through all organs in order of priority (set by the order they appear in the IDE) allocating N to meet all of the first organs structural and metabolic N demands before partitioning any to the next organ in the hierarchy.  Once it has stepped through all organs and allocated their minimum (structural and metabolic) N demands it will then step through them again and allocate their luxury (Non-structural) N demands in the same way.
              3. PrioritythenRelativeAllocation.  If this option is used the arbitrator steps through all organs in order of priority allocating N to meet minimum N demands.  However on the second pass it allocated N relative to the organs outstanding demands such that the organ with the greatest luxury N demand will get the greatest share of the N allocation.
              
              Wt_Step 5. Once N is allocated the arbitrator then reduces the Wt allocation of each organ to account for the metabolic cost of N fixation.  The Wt reduction is spread around all organs and an organ will only have its Wt allocation limited until it reaches maximum N conc.
              Wt_Step 6. Then the arbitrator determines if the N allocated to each organ is sufficient for that organ to reach its minimum N concentration.  If not the arbitrator will constrain the biomass growth of that organ and discards the surplus biomass.  This assume that under sever N stress photosynthesis would be down regulated due to N inadequacy limiting sink strength.
              
              Once these steps are complete the Arbitrator finally communicates to each organ its state changes as a result of arbitration.
            </summary>
        </member>
        <member name="F:Models.PMF.OrganArbitrator.kgha2gsm">
            <summary>The kgha2gsm</summary>
        </member>
        <member name="F:Models.PMF.OrganArbitrator.Plant">
            <summary>The top level plant object in the Plant Modelling Framework</summary>
        </member>
        <member name="F:Models.PMF.OrganArbitrator.Clock">
            <summary>APSIMs clock model</summary>
        </member>
        <member name="F:Models.PMF.OrganArbitrator.NutrientDrivers">
            <summary>The nutrient drivers</summary>
        </member>
        <member name="M:Models.PMF.OrganArbitrator.OnInit">
            <summary>Called when [initialize].</summary>
        </member>
        <member name="M:Models.PMF.OrganArbitrator.Or(System.Boolean)">
            <summary>Ors the specified p.</summary>
            <param name="p">if set to <c>true</c> [p].</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Models.PMF.OrganArbitrator.OnPlantSowing(System.Object,Models.PMF.SowPlant2Type)">
            <summary>Called when crop is ending</summary>
            <param name="sender">The sender.</param>
            <param name="data">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Models.PMF.OrganArbitrator.DM">
            <summary>The dm</summary>
        </member>
        <member name="F:Models.PMF.OrganArbitrator.N">
            <summary>The n</summary>
        </member>
        <member name="F:Models.PMF.OrganArbitrator.NAware">
            <summary>The n aware</summary>
        </member>
        <member name="F:Models.PMF.OrganArbitrator.PAware">
            <summary>The p aware</summary>
        </member>
        <member name="F:Models.PMF.OrganArbitrator.KAware">
            <summary>The k aware</summary>
        </member>
        <member name="M:Models.PMF.OrganArbitrator.Clear">
            <summary>Clears this instance.</summary>
        </member>
        <member name="M:Models.PMF.OrganArbitrator.GetSWUptakes(Models.Soils.Arbitrator.SoilState)">
            <summary>
            Calculate the potential sw uptake for today
            </summary>
        </member>
        <member name="M:Models.PMF.OrganArbitrator.SetSWUptake(System.Collections.Generic.List{Models.Soils.Arbitrator.ZoneWaterAndN})">
            <summary>
            Set the sw uptake for today
            </summary>
        </member>
        <member name="M:Models.PMF.OrganArbitrator.GetNUptakes(Models.Soils.Arbitrator.SoilState)">
            <summary>
            Calculate the potential sw uptake for today. Should return null if crop is not in the ground.
            </summary>
        </member>
        <member name="M:Models.PMF.OrganArbitrator.SetNUptake(System.Collections.Generic.List{Models.Soils.Arbitrator.ZoneWaterAndN})">
            <summary>
            Set the sw uptake for today
            </summary>
        </member>
        <member name="M:Models.PMF.OrganArbitrator.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>Things the plant model does when the simulation starts</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.OrganArbitrator.OnDoPotentialPlantPartioning(System.Object,System.EventArgs)">
            <summary>Does the water limited dm allocations.  Water constaints to growth are accounted for in the calculation of DM supply
            and does initial N calculations to work out how much N uptake is required to pass to SoilArbitrator</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.OrganArbitrator.DoNUptakeDemandCalculations(Models.Soils.Arbitrator.SoilState)">
            <summary>Calculates how much N the roots will take up in the absence of competition</summary>
            <param name="soilstate">The state of the soil.</param>
        </member>
        <member name="M:Models.PMF.OrganArbitrator.DoNUptakeAllocations(System.Double[],System.Double[])">
            <summary>Allocates the NUptake that the soil arbitrator has returned</summary>
            <param name="AllocatedNO3Nuptake">AllocatedNO3Nuptake</param>
            <param name="AllocatedNH4Nuptake">AllocatedNH4Nuptake</param>
        </member>
        <member name="M:Models.PMF.OrganArbitrator.OnDoActualPlantPartioning(System.Object,System.EventArgs)">
            <summary>Does the nutrient allocations.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.OrganArbitrator.OnPlantEnding(System.Object,System.EventArgs)">
            <summary>Called when crop is ending</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.OrganArbitrator.DoDMSetup(Models.PMF.Interfaces.IArbitration[])">
            <summary>Does the dm setup.</summary>
            <param name="Organs">The organs.</param>
        </member>
        <member name="M:Models.PMF.OrganArbitrator.SendPotentialDMAllocations(Models.PMF.Interfaces.IArbitration[])">
            <summary>Sends the potential dm allocations.</summary>
            <param name="Organs">The organs.</param>
            <exception cref="T:System.Exception">Mass Balance Error in Photosynthesis DM Allocation</exception>
        </member>
        <member name="M:Models.PMF.OrganArbitrator.DoNutrientSetUp(Models.PMF.Interfaces.IArbitration[],Models.PMF.OrganArbitrator.BiomassArbitrationType@)">
            <summary>Does the nutrient set up.</summary>
            <param name="Organs">The organs.</param>
            <param name="BAT">The bat.</param>
        </member>
        <member name="M:Models.PMF.OrganArbitrator.DoReAllocation(Models.PMF.Interfaces.IArbitration[],Models.PMF.OrganArbitrator.BiomassArbitrationType,System.String)">
            <summary>Does the re allocation.</summary>
            <param name="Organs">The organs.</param>
            <param name="BAT">The bat.</param>
            <param name="Option">The option.</param>
        </member>
        <member name="M:Models.PMF.OrganArbitrator.DoPotentialNutrientUptake(Models.PMF.Interfaces.IArbitration[],Models.PMF.OrganArbitrator.BiomassArbitrationType@,Models.Soils.Arbitrator.SoilState)">
            <summary>Does the uptake.</summary>
            <param name="Organs">The organs.</param>
            <param name="BAT">The bat.</param>
            <param name="soilstate">The soilstate.</param>
        </member>
        <member name="M:Models.PMF.OrganArbitrator.DoUptake(Models.PMF.Interfaces.IArbitration[],Models.PMF.OrganArbitrator.BiomassArbitrationType,System.String)">
            <summary>Does the uptake.</summary>
            <param name="Organs">The organs.</param>
            <param name="BAT">The bat.</param>
            <param name="Option">The option.</param>
        </member>
        <member name="M:Models.PMF.OrganArbitrator.DoRetranslocation(Models.PMF.Interfaces.IArbitration[],Models.PMF.OrganArbitrator.BiomassArbitrationType,System.String)">
            <summary>Does the retranslocation.</summary>
            <param name="Organs">The organs.</param>
            <param name="BAT">The bat.</param>
            <param name="Option">The option.</param>
        </member>
        <member name="M:Models.PMF.OrganArbitrator.DoFixation(Models.PMF.Interfaces.IArbitration[],Models.PMF.OrganArbitrator.BiomassArbitrationType,System.String)">
            <summary>Does the fixation.</summary>
            <param name="Organs">The organs.</param>
            <param name="BAT">The bat.</param>
            <param name="Option">The option.</param>
            <exception cref="T:System.Exception">Crop is trying to Fix excessive amounts of BAT.  Check partitioning coefficients are giving realistic nodule size and that FixationRatePotential is realistic</exception>
        </member>
        <member name="M:Models.PMF.OrganArbitrator.DoNutrientConstrainedDMAllocation(Models.PMF.Interfaces.IArbitration[])">
            <summary>Determines Nutrient limitations to DM allocations</summary>
            <param name="Organs">The organs.</param>
        </member>
        <member name="M:Models.PMF.OrganArbitrator.SendDMAllocations(Models.PMF.Interfaces.IArbitration[])">
            <summary>Sends the dm allocations.</summary>
            <param name="Organs">The organs.</param>
        </member>
        <member name="M:Models.PMF.OrganArbitrator.SendNutrientAllocations(Models.PMF.Interfaces.IArbitration[])">
            <summary>Sends the nutrient allocations.</summary>
            <param name="Organs">The organs.</param>
            <exception cref="T:System.Exception">
            -ve N Allocation
            or
            N Mass balance violated!!!!.  Daily Plant N increment is greater than N supply
            or
            N Mass balance violated!!!!  Daily Plant N increment is greater than N demand
            or
            DM Mass Balance violated!!!!  Daily Plant Wt increment is greater than Photosynthetic DM supply
            or
            DM Mass Balance violated!!!!  Daily Plant Wt increment is greater than the sum of structural DM demand, metabolic DM demand and NonStructural DM capacity
            </exception>
        </member>
        <member name="M:Models.PMF.OrganArbitrator.RelativeAllocation(Models.PMF.Interfaces.IArbitration[],System.Double,System.Double@,Models.PMF.OrganArbitrator.BiomassArbitrationType)">
            <summary>Relatives the allocation.</summary>
            <param name="Organs">The organs.</param>
            <param name="TotalSupply">The total supply.</param>
            <param name="TotalAllocated">The total allocated.</param>
            <param name="BAT">The bat.</param>
        </member>
        <member name="M:Models.PMF.OrganArbitrator.PriorityAllocation(Models.PMF.Interfaces.IArbitration[],System.Double,System.Double@,Models.PMF.OrganArbitrator.BiomassArbitrationType)">
            <summary>Priorities the allocation.</summary>
            <param name="Organs">The organs.</param>
            <param name="TotalSupply">The total supply.</param>
            <param name="TotalAllocated">The total allocated.</param>
            <param name="BAT">The bat.</param>
        </member>
        <member name="M:Models.PMF.OrganArbitrator.PrioritythenRelativeAllocation(Models.PMF.Interfaces.IArbitration[],System.Double,System.Double@,Models.PMF.OrganArbitrator.BiomassArbitrationType)">
            <summary>Prioritythens the relative allocation.</summary>
            <param name="Organs">The organs.</param>
            <param name="TotalSupply">The total supply.</param>
            <param name="TotalAllocated">The total allocated.</param>
            <param name="BAT">The bat.</param>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.NArbitrationOption">
            <summary>The method used to arbitrate N allocations</summary>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.DMArbitrationOption">
            <summary>The mentod used to arbitrate DM allocations </summary>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.DMSupply">
            <summary>Gets the dm supply.</summary>
            <value>Supply of DM from photosynthesising organs</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.DMDemand">
            <summary>Gets the dm demand</summary>
            <value>Demand of DM from growing organs</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.DMAllocated">
            <summary>Gets the dm allocations</summary>
            <value>Allocation of DM to each organ</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.DMSinkLimitation">
            <summary>Gets the sink limitation to growth</summary>
            <value>The amount of DM that was not fixed because potential growth from organs did not require it</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.DMNutrientLimitation">
            <summary>Gets the nutrient limitation to growth</summary>
            <value>The amount of DM that was not assimilated because there was not enough nutrient to meet minimum concentrations</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.NDemand">
            <summary>Gets the n demand.</summary>
            <value>The n demand.</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.NSupply">
            <summary>Gets the n supply.</summary>
            <value>The n supply.</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.FN">
            <summary>Gets the n supply relative to N demand.</summary>
            <value>The n supply.</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.DeltaWt">
            <summary>Gets the delta wt.</summary>
            <value>The delta wt.</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.PotentialNO3NUptake">
            <summary>Gets and Sets NO3 Supply</summary>
            <value>NO3 supplies from each soil layer</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.TotalPotentialNO3Uptake">
            <summary>Gets and Sets NO3 Supply</summary>
            <value>NO3 supplies from each soil layer</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.PotentialNH4NUptake">
            <summary>Gets and Sets NH4 Supply</summary>
            <value>NH4 supplies from each soil layer</value>
        </member>
        <member name="T:Models.PMF.OrganArbitrator.BiomassArbitrationType">
            <summary>
            
            </summary>
        </member>
        <member name="M:Models.PMF.OrganArbitrator.BiomassArbitrationType.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Models.PMF.OrganArbitrator.BiomassArbitrationType"/> class.</summary>
        </member>
        <member name="M:Models.PMF.OrganArbitrator.BiomassArbitrationType.#ctor(System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:Models.PMF.OrganArbitrator.BiomassArbitrationType"/> class.</summary>
            <param name="Size">The size.</param>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.StructuralDemand">
            <summary>Gets or sets the structural demand.</summary>
            <value>Demand for structural biomass from each organ</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.TotalStructuralDemand">
            <summary>Gets or sets the total structural demand.</summary>
            <value>Demand for structural biomass from the crop</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.MetabolicDemand">
            <summary>Gets or sets the metabolic demand.</summary>
            <value>Demand for metabolic biomass from each organ</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.TotalMetabolicDemand">
            <summary>Gets or sets the total metabolic demand.</summary>
            <value>Demand for metabolic biomass from the crop</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.NonStructuralDemand">
            <summary>Gets or sets the non structural demand.</summary>
            <value>Demand for non-structural biomass from each organ</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.TotalNonStructuralDemand">
            <summary>Gets or sets the total non structural demand.</summary>
            <value>Demand for non-structural biomass from the crop</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.TotalDemand">
            <summary>Gets or sets the total demand.</summary>
            <value>Total biomass demand from each oragen, structural, non-sturctural and metabolic</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.RelativeStructuralDemand">
            <summary>Gets or sets the relative structural demand.</summary>
            <value>Structural biomass demand relative to total biomass demand</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.RelativeMetabolicDemand">
            <summary>Gets or sets the relative metabolic demand.</summary>
            <value>Metabolic biomass demand relative to total biomass demand</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.RelativeNonStructuralDemand">
            <summary>Gets or sets the relative non structural demand.</summary>
            <value>Non-structural biomass demand relative to total biomass demand</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.TotalPlantDemand">
            <summary>Gets or sets the total crop demand.</summary>
            <value>crop demand for biomass, structural, non-sturctural and metabolic</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.ReallocationSupply">
            <summary>Gets or sets the reallocation supply.</summary>
            <value>Biomass available for reallocation for each organ as it dies</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.TotalReallocationSupply">
            <summary>Gets or sets the total reallocation supply.</summary>
            <value>Biomass available for reallocation from the entire crop</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.UptakeSupply">
            <summary>Gets or sets the uptake supply.</summary>
            <value>Biomass available for uptake from each absorbing organ, generally limited to ntrient uptake in roots</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.TotalUptakeSupply">
            <summary>Gets or sets the total uptake supply.</summary>
            <value>Biomass available for uptake by the crop</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.FixationSupply">
            <summary>Gets or sets the fixation supply.</summary>
            <value>Biomass that may be fixed by the crop, eg DM fixed by photosynhesis in the leaves of N fixed by nodules</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.TotalFixationSupply">
            <summary>Gets or sets the total fixation supply.</summary>
            <value>Total fixation by the crop</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.RetranslocationSupply">
            <summary>Gets or sets the retranslocation supply.</summary>
            <value>Supply of labile biomass that can be retranslocated from each oragn</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.TotalRetranslocationSupply">
            <summary>Gets or sets the total retranslocation supply.</summary>
            <value>The total supply of labile biomass in the crop</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.TotalPlantSupply">
            <summary>Gets or sets the total crop supply.</summary>
            <value>crop supply from uptake, fixation, reallocation and remobilisation</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.Reallocation">
            <summary>Gets or sets the reallocation.</summary>
            <value>The amount of biomass reallocated from each organ as it dies</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.TotalReallocation">
            <summary>Gets or sets the total reallocation.</summary>
            <value>The total amount of biomass reallocated by the crop</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.Uptake">
            <summary>Gets or sets the uptake.</summary>
            <value>The actual uptake of biomass by each organ, generally limited to nutrients in the roots</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.Fixation">
            <summary>Gets or sets the fixation.</summary>
            <value>The actual uptake of biomass by the whole crop</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.Retranslocation">
            <summary>Gets or sets the retranslocation.</summary>
            <value>The actual retranslocation or biomass from each oragan</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.TotalRetranslocation">
            <summary>Gets or sets the total retranslocation.</summary>
            <value>The total amount of biomass retranslocated by the crop</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.Respiration">
            <summary>Gets or sets the respiration.</summary>
            <value>The amount of biomass respired by each organ</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.TotalRespiration">
            <summary>Gets or sets the total respiration.</summary>
            <value>Total respiration by the crop</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.ConstrainedGrowth">
            <summary>Gets or sets the constrained growth.</summary>
            <value>Biomass growth that is possible given nutrient availability and minimum N concentratins of organs</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.StructuralAllocation">
            <summary>Gets or sets the structural allocation.</summary>
            <value>The actual amount of structural biomass allocated to each organ</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.TotalStructuralAllocation">
            <summary>Gets or sets the total structural allocation.</summary>
            <value>The total structural biomass allocation to the whole crop</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.MetabolicAllocation">
            <summary>Gets or sets the metabolic allocation.</summary>
            <value>The actual meatabilic biomass allocation to each organ</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.TotalMetabolicAllocation">
            <summary>Gets or sets the total metabolic allocation.</summary>
            <value>The metabolic biomass allocation to each organ</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.NonStructuralAllocation">
            <summary>Gets or sets the non structural allocation.</summary>
            <value>The actual non-structural biomass allocation to each organ</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.TotalNonStructuralAllocation">
            <summary>Gets or sets the total non structural allocation.</summary>
            <value>The total non-structural allocationed to the crop</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.TotalAllocation">
            <summary>Gets or sets the total allocation.</summary>
            <value>The actual biomass allocation to each organ, structural, non-structural and metabolic</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.Allocated">
            <summary>Gets or sets the total allocated.</summary>
            <value>The amount of biomass allocated to the whole crop</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.NotAllocated">
            <summary>Gets or sets the not allocated.</summary>
            <value>The biomass available that was not allocated.</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.SinkLimitation">
            <summary>Gets or sets the sink limitation.</summary>
            <value>The amount of biomass that could have been assimilated but was not because the demand from organs was insufficient.</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.NutrientLimitation">
            <summary>Gets or sets the limitation due to nutrient shortage</summary>
            <value>The amount of biomass that could have been assimilated but was not becasue nutrient supply was insufficient to meet organs minimunn N concentrations</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.Start">
            <summary>Gets or sets the start.</summary>
            <value>The start.</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.End">
            <summary>Gets or sets the end.</summary>
            <value>The end.</value>
        </member>
        <member name="P:Models.PMF.OrganArbitrator.BiomassArbitrationType.BalanceError">
            <summary>Gets or sets the balance error.</summary>
            <value>The balance error.</value>
        </member>
        <member name="T:CultivarConstants">
            <summary>
            Cultivar constants class.
            </summary>
        </member>
        <member name="F:CultivarConstants.max_table">
            <summary>
            The max_table
            </summary>
        </member>
        <member name="F:CultivarConstants.max_leaf">
            <summary>
            The max_leaf
            </summary>
        </member>
        <member name="P:CultivarConstants.cultivar_name">
            <summary>
            Gets or sets the cultivar_name.
            </summary>
            <value>
            The cultivar_name.
            </value>
        </member>
        <member name="P:CultivarConstants.leaf_size">
            <summary>
            Gets or sets the leaf_size.
            </summary>
            <value>
            The leaf_size.
            </value>
        </member>
        <member name="P:CultivarConstants.leaf_size_no">
            <summary>
            Gets or sets the leaf_size_no.
            </summary>
            <value>
            The leaf_size_no.
            </value>
        </member>
        <member name="P:CultivarConstants.cane_fraction">
            <summary>
            Gets or sets the cane_fraction.
            </summary>
            <value>
            The cane_fraction.
            </value>
        </member>
        <member name="P:CultivarConstants.sucrose_fraction_stalk">
            <summary>
            Gets or sets the sucrose_fraction_stalk.
            </summary>
            <value>
            The sucrose_fraction_stalk.
            </value>
        </member>
        <member name="P:CultivarConstants.stress_factor_stalk">
            <summary>
            Gets or sets the stress_factor_stalk.
            </summary>
            <value>
            The stress_factor_stalk.
            </value>
        </member>
        <member name="P:CultivarConstants.sucrose_delay">
            <summary>
            Gets or sets the sucrose_delay.
            </summary>
            <value>
            The sucrose_delay.
            </value>
        </member>
        <member name="P:CultivarConstants.min_sstem_sucrose">
            <summary>
            Gets or sets the min_sstem_sucrose.
            </summary>
            <value>
            The min_sstem_sucrose.
            </value>
        </member>
        <member name="P:CultivarConstants.min_sstem_sucrose_redn">
            <summary>
            Gets or sets the min_sstem_sucrose_redn.
            </summary>
            <value>
            The min_sstem_sucrose_redn.
            </value>
        </member>
        <member name="P:CultivarConstants.tt_emerg_to_begcane">
            <summary>
            Gets or sets the tt_emerg_to_begcane.
            </summary>
            <value>
            The tt_emerg_to_begcane.
            </value>
        </member>
        <member name="P:CultivarConstants.tt_begcane_to_flowering">
            <summary>
            Gets or sets the tt_begcane_to_flowering.
            </summary>
            <value>
            The tt_begcane_to_flowering.
            </value>
        </member>
        <member name="P:CultivarConstants.tt_flowering_to_crop_end">
            <summary>
            Gets or sets the tt_flowering_to_crop_end.
            </summary>
            <value>
            The tt_flowering_to_crop_end.
            </value>
        </member>
        <member name="P:CultivarConstants.green_leaf_no">
            <summary>
            Gets or sets the green_leaf_no.
            </summary>
            <value>
            The green_leaf_no.
            </value>
        </member>
        <member name="P:CultivarConstants.tillerf_leaf_size">
            <summary>
            Gets or sets the tillerf_leaf_size.
            </summary>
            <value>
            The tillerf_leaf_size.
            </value>
        </member>
        <member name="P:CultivarConstants.tillerf_leaf_size_no">
            <summary>
            Gets or sets the tillerf_leaf_size_no.
            </summary>
            <value>
            The tillerf_leaf_size_no.
            </value>
        </member>
        <member name="P:CultivarConstants.num_leaf_size">
            <summary>
            Gets the num_leaf_size.
            </summary>
            <value>
            The num_leaf_size.
            </value>
        </member>
        <member name="P:CultivarConstants.num_stress_factor_stalk">
            <summary>
            Gets the num_stress_factor_stalk.
            </summary>
            <value>
            The num_stress_factor_stalk.
            </value>
        </member>
        <member name="P:CultivarConstants.num_tillerf_leaf_size">
            <summary>
            Gets the num_tillerf_leaf_size.
            </summary>
            <value>
            The num_tillerf_leaf_size.
            </value>
        </member>
        <member name="T:CropConstants">
            <summary>
            Sugar constants
            </summary>
        </member>
        <member name="F:CropConstants.max_table">
            <summary>
            The max_table
            </summary>
        </member>
        <member name="F:CropConstants.max_stage">
            <summary>
            The max_stage
            </summary>
        </member>
        <member name="F:CropConstants.max_part">
            <summary>
            The max_part
            </summary>
        </member>
        <member name="P:CropConstants.stage_names">
            <summary>
            Gets or sets the stage_names.
            </summary>
            <value>
            The stage_names.
            </value>
        </member>
        <member name="P:CropConstants.stage_code_list">
            <summary>
            Gets or sets the stage_code_list.
            </summary>
            <value>
            The stage_code_list.
            </value>
        </member>
        <member name="P:CropConstants.rue">
            <summary>
            Gets or sets the rue.
            </summary>
            <value>
            The rue.
            </value>
        </member>
        <member name="P:CropConstants.root_depth_rate">
            <summary>
            Gets or sets the root_depth_rate.
            </summary>
            <value>
            The root_depth_rate.
            </value>
        </member>
        <member name="P:CropConstants.ratio_root_shoot">
            <summary>
            Gets or sets the ratio_root_shoot.
            </summary>
            <value>
            The ratio_root_shoot.
            </value>
        </member>
        <member name="P:CropConstants.transp_eff_cf">
            <summary>
            Gets or sets the transp_eff_cf.
            </summary>
            <value>
            The transp_eff_cf.
            </value>
        </member>
        <member name="P:CropConstants.n_fix_rate">
            <summary>
            Gets or sets the n_fix_rate.
            </summary>
            <value>
            The n_fix_rate.
            </value>
        </member>
        <member name="P:CropConstants.extinction_coef">
            <summary>
            Gets or sets the extinction_coef.
            </summary>
            <value>
            The extinction_coef.
            </value>
        </member>
        <member name="P:CropConstants.extinction_coef_dead">
            <summary>
            Gets or sets the extinction_coef_dead.
            </summary>
            <value>
            The extinction_coef_dead.
            </value>
        </member>
        <member name="P:CropConstants.leaf_no_crit">
            <summary>
            Gets or sets the leaf_no_crit.
            </summary>
            <value>
            The leaf_no_crit.
            </value>
        </member>
        <member name="P:CropConstants.tt_emerg_limit">
            <summary>
            Gets or sets the tt_emerg_limit.
            </summary>
            <value>
            The tt_emerg_limit.
            </value>
        </member>
        <member name="P:CropConstants.days_germ_limit">
            <summary>
            Gets or sets the days_germ_limit.
            </summary>
            <value>
            The days_germ_limit.
            </value>
        </member>
        <member name="P:CropConstants.swdf_pheno_limit">
            <summary>
            Gets or sets the swdf_pheno_limit.
            </summary>
            <value>
            The swdf_pheno_limit.
            </value>
        </member>
        <member name="P:CropConstants.swdf_photo_limit">
            <summary>
            Gets or sets the swdf_photo_limit.
            </summary>
            <value>
            The swdf_photo_limit.
            </value>
        </member>
        <member name="P:CropConstants.swdf_photo_rate">
            <summary>
            Gets or sets the swdf_photo_rate.
            </summary>
            <value>
            The swdf_photo_rate.
            </value>
        </member>
        <member name="P:CropConstants.initial_root_depth">
            <summary>
            Gets or sets the initial_root_depth.
            </summary>
            <value>
            The initial_root_depth.
            </value>
        </member>
        <member name="P:CropConstants.specific_root_length">
            <summary>
            Gets or sets the specific_root_length.
            </summary>
            <value>
            The specific_root_length.
            </value>
        </member>
        <member name="P:CropConstants.x_plant_rld">
            <summary>
            Gets or sets the x_plant_rld.
            </summary>
            <value>
            The x_plant_rld.
            </value>
        </member>
        <member name="P:CropConstants.y_rel_root_rate">
            <summary>
            Gets or sets the y_rel_root_rate.
            </summary>
            <value>
            The y_rel_root_rate.
            </value>
        </member>
        <member name="P:CropConstants.root_die_back_fr">
            <summary>
            Gets or sets the root_die_back_fr.
            </summary>
            <value>
            The root_die_back_fr.
            </value>
        </member>
        <member name="P:CropConstants.initial_tpla">
            <summary>
            Gets or sets the initial_tpla.
            </summary>
            <value>
            The initial_tpla.
            </value>
        </member>
        <member name="P:CropConstants.sla_lfno">
            <summary>
            Gets or sets the sla_lfno.
            </summary>
            <value>
            The sla_lfno.
            </value>
        </member>
        <member name="P:CropConstants.sla_max">
            <summary>
            Gets or sets the sla_max.
            </summary>
            <value>
            The sla_max.
            </value>
        </member>
        <member name="P:CropConstants.sla_min">
            <summary>
            Gets or sets the sla_min.
            </summary>
            <value>
            The sla_min.
            </value>
        </member>
        <member name="P:CropConstants.x_stem_wt">
            <summary>
            Gets or sets the x_stem_wt.
            </summary>
            <value>
            The x_stem_wt.
            </value>
        </member>
        <member name="P:CropConstants.y_height">
            <summary>
            Gets or sets the y_height.
            </summary>
            <value>
            The y_height.
            </value>
        </member>
        <member name="P:CropConstants.svp_fract">
            <summary>
            Gets or sets the svp_fract.
            </summary>
            <value>
            The svp_fract.
            </value>
        </member>
        <member name="P:CropConstants.eo_crop_factor_default">
            <summary>
            Gets or sets the eo_crop_factor_default.
            </summary>
            <value>
            The eo_crop_factor_default.
            </value>
        </member>
        <member name="P:CropConstants.pesw_germ">
            <summary>
            Gets or sets the pesw_germ.
            </summary>
            <value>
            The pesw_germ.
            </value>
        </member>
        <member name="P:CropConstants.fasw_emerg">
            <summary>
            Gets or sets the fasw_emerg.
            </summary>
            <value>
            The fasw_emerg.
            </value>
        </member>
        <member name="P:CropConstants.rel_emerg_rate">
            <summary>
            Gets or sets the rel_emerg_rate.
            </summary>
            <value>
            The rel_emerg_rate.
            </value>
        </member>
        <member name="P:CropConstants.leaf_no_at_emerg">
            <summary>
            Gets or sets the leaf_no_at_emerg.
            </summary>
            <value>
            The leaf_no_at_emerg.
            </value>
        </member>
        <member name="P:CropConstants.shoot_lag">
            <summary>
            Gets or sets the shoot_lag.
            </summary>
            <value>
            The shoot_lag.
            </value>
        </member>
        <member name="P:CropConstants.shoot_rate">
            <summary>
            Gets or sets the shoot_rate.
            </summary>
            <value>
            The shoot_rate.
            </value>
        </member>
        <member name="P:CropConstants.x_node_no_app">
            <summary>
            Gets or sets the x_node_no_app.
            </summary>
            <value>
            The x_node_no_app.
            </value>
        </member>
        <member name="P:CropConstants.y_node_app_rate">
            <summary>
            Gets or sets the y_node_app_rate.
            </summary>
            <value>
            The y_node_app_rate.
            </value>
        </member>
        <member name="P:CropConstants.x_node_no_leaf">
            <summary>
            Gets or sets the x_node_no_leaf.
            </summary>
            <value>
            The x_node_no_leaf.
            </value>
        </member>
        <member name="P:CropConstants.y_leaves_per_node">
            <summary>
            Gets or sets the y_leaves_per_node.
            </summary>
            <value>
            The y_leaves_per_node.
            </value>
        </member>
        <member name="P:CropConstants.dm_root_init">
            <summary>
            Gets or sets the dm_root_init.
            </summary>
            <value>
            The dm_root_init.
            </value>
        </member>
        <member name="P:CropConstants.dm_sstem_init">
            <summary>
            Gets or sets the dm_sstem_init.
            </summary>
            <value>
            The dm_sstem_init.
            </value>
        </member>
        <member name="P:CropConstants.dm_leaf_init">
            <summary>
            Gets or sets the dm_leaf_init.
            </summary>
            <value>
            The dm_leaf_init.
            </value>
        </member>
        <member name="P:CropConstants.dm_cabbage_init">
            <summary>
            Gets or sets the dm_cabbage_init.
            </summary>
            <value>
            The dm_cabbage_init.
            </value>
        </member>
        <member name="P:CropConstants.dm_sucrose_init">
            <summary>
            Gets or sets the dm_sucrose_init.
            </summary>
            <value>
            The dm_sucrose_init.
            </value>
        </member>
        <member name="P:CropConstants.leaf_cabbage_ratio">
            <summary>
            Gets or sets the leaf_cabbage_ratio.
            </summary>
            <value>
            The leaf_cabbage_ratio.
            </value>
        </member>
        <member name="P:CropConstants.cabbage_sheath_fr">
            <summary>
            Gets or sets the cabbage_sheath_fr.
            </summary>
            <value>
            The cabbage_sheath_fr.
            </value>
        </member>
        <member name="P:CropConstants.dm_root_sen_frac">
            <summary>
            Gets or sets the dm_root_sen_frac.
            </summary>
            <value>
            The dm_root_sen_frac.
            </value>
        </member>
        <member name="P:CropConstants.dead_detach_frac">
            <summary>
            Gets or sets the dead_detach_frac.
            </summary>
            <value>
            The dead_detach_frac.
            </value>
        </member>
        <member name="P:CropConstants.sen_detach_frac">
            <summary>
            Gets or sets the sen_detach_frac.
            </summary>
            <value>
            The sen_detach_frac.
            </value>
        </member>
        <member name="P:CropConstants.leaf_no_correction">
            <summary>
            Gets or sets the leaf_no_correction.
            </summary>
            <value>
            The leaf_no_correction.
            </value>
        </member>
        <member name="P:CropConstants.lai_sen_light">
            <summary>
            Gets or sets the lai_sen_light.
            </summary>
            <value>
            The lai_sen_light.
            </value>
        </member>
        <member name="P:CropConstants.sen_light_slope">
            <summary>
            Gets or sets the sen_light_slope.
            </summary>
            <value>
            The sen_light_slope.
            </value>
        </member>
        <member name="P:CropConstants.frost_temp">
            <summary>
            Gets or sets the frost_temp.
            </summary>
            <value>
            The frost_temp.
            </value>
        </member>
        <member name="P:CropConstants.frost_fraction">
            <summary>
            Gets or sets the frost_fraction.
            </summary>
            <value>
            The frost_fraction.
            </value>
        </member>
        <member name="P:CropConstants.sen_rate_water">
            <summary>
            Gets or sets the sen_rate_water.
            </summary>
            <value>
            The sen_rate_water.
            </value>
        </member>
        <member name="P:CropConstants.twilight">
            <summary>
            Gets or sets the twilight.
            </summary>
            <value>
            The twilight.
            </value>
        </member>
        <member name="P:CropConstants.x_stage_code">
            <summary>
            Gets or sets the x_stage_code.
            </summary>
            <value>
            The x_stage_code.
            </value>
        </member>
        <member name="P:CropConstants.y_n_conc_crit_leaf">
            <summary>
            critical N concentration of leaf (g N/g biomass)
            </summary>
            <value>
            The y_n_conc_crit_leaf.
            </value>
        </member>
        <member name="P:CropConstants.y_n_conc_min_leaf">
            <summary>
            minimum N concentration of leaf (g N/g biomass)
            </summary>
            <value>
            The y_n_conc_min_leaf.
            </value>
        </member>
        <member name="P:CropConstants.y_n_conc_crit_cane">
            <summary>
            critical N concentration of stem (g N/g biomass)
            </summary>
            <value>
            The y_n_conc_crit_cane.
            </value>
        </member>
        <member name="P:CropConstants.y_n_conc_min_cane">
            <summary>
            minimum N concentration of stem (g N/g biomass)
            </summary>
            <value>
            The y_n_conc_min_cane.
            </value>
        </member>
        <member name="P:CropConstants.y_n_conc_crit_cabbage">
            <summary>
            critical N concentration of flower(g N/g biomass)
            </summary>
            <value>
            The y_n_conc_crit_cabbage.
            </value>
        </member>
        <member name="P:CropConstants.y_n_conc_min_cabbage">
            <summary>
            minimum N concentration of flower (g N/g biomass)
            </summary>
            <value>
            The y_n_conc_min_cabbage.
            </value>
        </member>
        <member name="P:CropConstants.n_conc_crit_root">
            <summary>
            Gets or sets the n_conc_crit_root.
            </summary>
            <value>
            The n_conc_crit_root.
            </value>
        </member>
        <member name="P:CropConstants.n_conc_min_root">
            <summary>
            Gets or sets the n_conc_min_root.
            </summary>
            <value>
            The n_conc_min_root.
            </value>
        </member>
        <member name="P:CropConstants.n_root_init_conc">
            <summary>
            Gets or sets the n_root_init_conc.
            </summary>
            <value>
            The n_root_init_conc.
            </value>
        </member>
        <member name="P:CropConstants.n_sstem_init_conc">
            <summary>
            Gets or sets the n_sstem_init_conc.
            </summary>
            <value>
            The n_sstem_init_conc.
            </value>
        </member>
        <member name="P:CropConstants.n_leaf_init_conc">
            <summary>
            Gets or sets the n_leaf_init_conc.
            </summary>
            <value>
            The n_leaf_init_conc.
            </value>
        </member>
        <member name="P:CropConstants.n_cabbage_init_conc">
            <summary>
            Gets or sets the n_cabbage_init_conc.
            </summary>
            <value>
            The n_cabbage_init_conc.
            </value>
        </member>
        <member name="P:CropConstants.n_root_sen_conc">
            <summary>
            Gets or sets the n_root_sen_conc.
            </summary>
            <value>
            The n_root_sen_conc.
            </value>
        </member>
        <member name="P:CropConstants.n_leaf_sen_conc">
            <summary>
            Gets or sets the n_leaf_sen_conc.
            </summary>
            <value>
            The n_leaf_sen_conc.
            </value>
        </member>
        <member name="P:CropConstants.n_cabbage_sen_conc">
            <summary>
            Gets or sets the n_cabbage_sen_conc.
            </summary>
            <value>
            The n_cabbage_sen_conc.
            </value>
        </member>
        <member name="P:CropConstants.x_ave_temp">
            <summary>
            Gets or sets the x_ave_temp.
            </summary>
            <value>
            The x_ave_temp.
            </value>
        </member>
        <member name="P:CropConstants.y_stress_photo">
            <summary>
            Gets or sets the y_stress_photo.
            </summary>
            <value>
            The y_stress_photo.
            </value>
        </member>
        <member name="P:CropConstants.x_ave_temp_stalk">
            <summary>
            Gets or sets the x_ave_temp_stalk.
            </summary>
            <value>
            The x_ave_temp_stalk.
            </value>
        </member>
        <member name="P:CropConstants.y_stress_stalk">
            <summary>
            Gets or sets the y_stress_stalk.
            </summary>
            <value>
            The y_stress_stalk.
            </value>
        </member>
        <member name="P:CropConstants.x_temp">
            <summary>
            Gets or sets the x_temp.
            </summary>
            <value>
            The x_temp.
            </value>
        </member>
        <member name="P:CropConstants.y_tt">
            <summary>
            Gets or sets the y_tt.
            </summary>
            <value>
            The y_tt.
            </value>
        </member>
        <member name="P:CropConstants.x_sw_demand_ratio">
            <summary>
            Gets or sets the x_sw_demand_ratio.
            </summary>
            <value>
            The x_sw_demand_ratio.
            </value>
        </member>
        <member name="P:CropConstants.y_swdef_leaf">
            <summary>
            Gets or sets the y_swdef_leaf.
            </summary>
            <value>
            The y_swdef_leaf.
            </value>
        </member>
        <member name="P:CropConstants.x_demand_ratio_stalk">
            <summary>
            Gets or sets the x_demand_ratio_stalk.
            </summary>
            <value>
            The x_demand_ratio_stalk.
            </value>
        </member>
        <member name="P:CropConstants.y_swdef_stalk">
            <summary>
            Gets or sets the y_swdef_stalk.
            </summary>
            <value>
            The y_swdef_stalk.
            </value>
        </member>
        <member name="P:CropConstants.x_sw_avail_ratio">
            <summary>
            Gets or sets the x_sw_avail_ratio.
            </summary>
            <value>
            The x_sw_avail_ratio.
            </value>
        </member>
        <member name="P:CropConstants.y_swdef_pheno">
            <summary>
            Gets or sets the y_swdef_pheno.
            </summary>
            <value>
            The y_swdef_pheno.
            </value>
        </member>
        <member name="P:CropConstants.x_sw_ratio">
            <summary>
            Gets or sets the x_sw_ratio.
            </summary>
            <value>
            The x_sw_ratio.
            </value>
        </member>
        <member name="P:CropConstants.y_sw_fac_root">
            <summary>
            Gets or sets the y_sw_fac_root.
            </summary>
            <value>
            The y_sw_fac_root.
            </value>
        </member>
        <member name="P:CropConstants.k_nfact_photo">
            <summary>
            Gets or sets the k_nfact_photo.
            </summary>
            <value>
            The k_nfact_photo.
            </value>
        </member>
        <member name="P:CropConstants.k_nfact_expansion">
            <summary>
            Gets or sets the k_nfact_expansion.
            </summary>
            <value>
            The k_nfact_expansion.
            </value>
        </member>
        <member name="P:CropConstants.k_nfact_stalk">
            <summary>
            Gets or sets the k_nfact_stalk.
            </summary>
            <value>
            The k_nfact_stalk.
            </value>
        </member>
        <member name="P:CropConstants.k_nfact_pheno">
            <summary>
            Gets or sets the k_nfact_pheno.
            </summary>
            <value>
            The k_nfact_pheno.
            </value>
        </member>
        <member name="P:CropConstants.oxdef_photo_rtfr">
            <summary>
            Gets or sets the oxdef_photo_rtfr.
            </summary>
            <value>
            The oxdef_photo_rtfr.
            </value>
        </member>
        <member name="P:CropConstants.oxdef_photo">
            <summary>
            Gets or sets the oxdef_photo.
            </summary>
            <value>
            The oxdef_photo.
            </value>
        </member>
        <member name="P:CropConstants.x_afps">
            <summary>
            Gets or sets the x_afps.
            </summary>
            <value>
            The x_afps.
            </value>
        </member>
        <member name="P:CropConstants.y_afps_fac">
            <summary>
            Gets or sets the y_afps_fac.
            </summary>
            <value>
            The y_afps_fac.
            </value>
        </member>
        <member name="P:CropConstants.cane_dmf_max">
            <summary>
            Gets or sets the cane_dmf_max.
            </summary>
            <value>
            The cane_dmf_max.
            </value>
        </member>
        <member name="P:CropConstants.cane_dmf_min">
            <summary>
            Gets or sets the cane_dmf_min.
            </summary>
            <value>
            The cane_dmf_min.
            </value>
        </member>
        <member name="P:CropConstants.cane_dmf_tt">
            <summary>
            Gets or sets the cane_dmf_tt.
            </summary>
            <value>
            The cane_dmf_tt.
            </value>
        </member>
        <member name="P:CropConstants.cane_dmf_rate">
            <summary>
            Gets or sets the cane_dmf_rate.
            </summary>
            <value>
            The cane_dmf_rate.
            </value>
        </member>
        <member name="P:CropConstants.stress_lodge">
            <summary>
            Gets or sets the stress_lodge.
            </summary>
            <value>
            The stress_lodge.
            </value>
        </member>
        <member name="P:CropConstants.death_fr_lodge">
            <summary>
            Gets or sets the death_fr_lodge.
            </summary>
            <value>
            The death_fr_lodge.
            </value>
        </member>
        <member name="P:CropConstants.lodge_redn_photo">
            <summary>
            Gets or sets the lodge_redn_photo.
            </summary>
            <value>
            The lodge_redn_photo.
            </value>
        </member>
        <member name="P:CropConstants.lodge_redn_sucrose">
            <summary>
            Gets or sets the lodge_redn_sucrose.
            </summary>
            <value>
            The lodge_redn_sucrose.
            </value>
        </member>
        <member name="P:CropConstants.lodge_redn_green_leaf">
            <summary>
            Gets or sets the lodge_redn_green_leaf.
            </summary>
            <value>
            The lodge_redn_green_leaf.
            </value>
        </member>
        <member name="P:CropConstants.num_plant_rld">
            <summary>
            Gets the num_plant_rld.
            </summary>
            <value>
            The num_plant_rld.
            </value>
        </member>
        <member name="P:CropConstants.num_sla_lfno">
            <summary>
            Gets the num_sla_lfno.
            </summary>
            <value>
            The num_sla_lfno.
            </value>
        </member>
        <member name="P:CropConstants.num_stem_wt">
            <summary>
            Gets the num_stem_wt.
            </summary>
            <value>
            The num_stem_wt.
            </value>
        </member>
        <member name="P:CropConstants.num_fasw_emerg">
            <summary>
            Gets the num_fasw_emerg.
            </summary>
            <value>
            The num_fasw_emerg.
            </value>
        </member>
        <member name="P:CropConstants.num_node_no_app">
            <summary>
            Gets the num_node_no_app.
            </summary>
            <value>
            The num_node_no_app.
            </value>
        </member>
        <member name="P:CropConstants.num_node_no_leaf">
            <summary>
            Gets the num_node_no_leaf.
            </summary>
            <value>
            The num_node_no_leaf.
            </value>
        </member>
        <member name="P:CropConstants.num_frost_temp">
            <summary>
            Gets the num_frost_temp.
            </summary>
            <value>
            The num_frost_temp.
            </value>
        </member>
        <member name="P:CropConstants.num_N_conc_stage">
            <summary>
            Gets the num_ n_conc_stage.
            </summary>
            <value>
            The num_ n_conc_stage.
            </value>
        </member>
        <member name="P:CropConstants.num_ave_temp">
            <summary>
            Gets the num_ave_temp.
            </summary>
            <value>
            The num_ave_temp.
            </value>
        </member>
        <member name="P:CropConstants.num_ave_temp_stalk">
            <summary>
            Gets the num_ave_temp_stalk.
            </summary>
            <value>
            The num_ave_temp_stalk.
            </value>
        </member>
        <member name="P:CropConstants.num_temp">
            <summary>
            Gets the num_temp.
            </summary>
            <value>
            The num_temp.
            </value>
        </member>
        <member name="P:CropConstants.num_sw_demand_ratio">
            <summary>
            Gets the num_sw_demand_ratio.
            </summary>
            <value>
            The num_sw_demand_ratio.
            </value>
        </member>
        <member name="P:CropConstants.num_demand_ratio_stalk">
            <summary>
            Gets the num_demand_ratio_stalk.
            </summary>
            <value>
            The num_demand_ratio_stalk.
            </value>
        </member>
        <member name="P:CropConstants.num_sw_avail_ratio">
            <summary>
            Gets the num_sw_avail_ratio.
            </summary>
            <value>
            The num_sw_avail_ratio.
            </value>
        </member>
        <member name="P:CropConstants.num_sw_ratio">
            <summary>
            Gets the num_sw_ratio.
            </summary>
            <value>
            The num_sw_ratio.
            </value>
        </member>
        <member name="P:CropConstants.num_oxdef_photo">
            <summary>
            Gets the num_oxdef_photo.
            </summary>
            <value>
            The num_oxdef_photo.
            </value>
        </member>
        <member name="P:CropConstants.num_afps">
            <summary>
            Gets the num_afps.
            </summary>
            <value>
            The num_afps.
            </value>
        </member>
        <member name="P:CropConstants.num_cane_dmf">
            <summary>
            Gets the num_cane_dmf.
            </summary>
            <value>
            The num_cane_dmf.
            </value>
        </member>
        <member name="P:CropConstants.num_stress_lodge">
            <summary>
            Gets the num_stress_lodge.
            </summary>
            <value>
            The num_stress_lodge.
            </value>
        </member>
        <member name="T:Models.Soils.SoilWaterBackend.Surfaces">
            <summary>
            Surfaces enumeration
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Surfaces.NormalSurface">
            <summary>
            The normal surface
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Surfaces.PondSurface">
            <summary>
            The pond surface
            </summary>
        </member>
        <member name="T:Models.Soils.SoilWaterBackend.Surface">
            <summary>
            A surface class.
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Surface.SurfaceType">
            <summary>
            The surface type
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Surface.Runoff">
            <summary>
            The runoff
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Surface.Infiltration">
            <summary>
            The infiltration
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Surface.Eos">
            <summary>
            The eos
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Surface.Es">
            <summary>
            The es
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.Surface.CalcRunoff">
            <summary>
            Calculates the runoff.
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.Surface.CalcInfiltration">
            <summary>
            Calculates the infiltration.
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.Surface.CalcEvaporation">
            <summary>
            Calculates the evaporation.
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.Surface.AddInfiltrationToSoil(Models.Soils.SoilWaterBackend.SoilWaterSoil@)">
            <summary>
            Adds the infiltration to soil.
            </summary>
            <param name="SoilOject">The soil oject.</param>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.Surface.RemoveEvaporationFromSoil(Models.Soils.SoilWaterBackend.SoilWaterSoil@)">
            <summary>
            Removes the evaporation from soil.
            </summary>
            <param name="SoilObject">The soil object.</param>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.Surface.AddBackedUpWaterToSurface(System.Double,Models.Soils.SoilWaterBackend.SoilWaterSoil@)">
            <summary>
            Adds the backed up water to surface.
            </summary>
            <param name="BackedUp">The backed up.</param>
            <param name="SoilObject">The soil object.</param>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Surface.constants">
            <summary>
            The constants
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Surface.Clock">
            <summary>
            The clock
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Surface.Met">
            <summary>
            The met
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Surface.Runon">
            <summary>
            The runon
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Surface.Irrig">
            <summary>
            The irrig
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Surface.Canopy">
            <summary>
            The canopy
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Surface.SurfaceCover">
            <summary>
            The surface cover
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Surface.SoilObject">
            <summary>
            The soil object
            </summary>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.Surface.Eo">
            <summary>
            Gets or sets the eo.
            </summary>
            <value>
            The eo.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.Surface.TodaysWaterForRunoff">
            <summary>
            Gets the todays water for runoff.
            </summary>
            <value>
            The todays water for runoff.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.Surface.TodaysWaterForInfiltration">
            <summary>
            Gets the todays water for infiltration.
            </summary>
            <value>
            The todays water for infiltration.
            </value>
        </member>
        <member name="T:Models.Soils.SoilWaterBackend.SurfaceFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SurfaceFactory.GetSurface(Models.Soils.SoilWaterBackend.SoilWaterSoil,Models.Clock)">
            <summary>
            Gets the surface.
            </summary>
            <param name="SoilObject">The soil object.</param>
            <param name="Clock">The clock.</param>
            <returns></returns>
        </member>
        <member name="T:Models.Soils.SoilWaterBackend.NormalSurface">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.NormalSurface.cover_surface_runoff">
            <summary>
            The cover_surface_runoff
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.NormalSurface.cn2_new">
            <summary>
            The cn2_new
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.NormalSurface.sumes1">
            <summary>
            The sumes1
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.NormalSurface.sumes2">
            <summary>
            The sumes2
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.NormalSurface.t">
            <summary>
            The t
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.NormalSurface.runoff">
            <summary>
            The runoff
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.NormalSurface.evap">
            <summary>
            The evap
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.NormalSurface.#ctor(Models.Soils.SoilWaterBackend.SoilWaterSoil,Models.Clock)">
            <summary>
            Initializes a new instance of the <see cref="T:Models.Soils.SoilWaterBackend.NormalSurface"/> class.
            </summary>
            <param name="SoilObject">The soil object.</param>
            <param name="Clock">The clock.</param>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.NormalSurface.CalcRunoff">
            <summary>
            Calculates the runoff.
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.NormalSurface.CalcInfiltration">
            <summary>
            Calculates the infiltration.
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.NormalSurface.CalcEvaporation">
            <summary>
            Calculates the evaporation.
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.NormalSurface.AddInfiltrationToSoil(Models.Soils.SoilWaterBackend.SoilWaterSoil@)">
            <summary>
            Adds the infiltration to soil.
            </summary>
            <param name="SoilObject">The soil object.</param>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.NormalSurface.RemoveEvaporationFromSoil(Models.Soils.SoilWaterBackend.SoilWaterSoil@)">
            <summary>
            Removes the evaporation from soil.
            </summary>
            <param name="SoilObject">The soil object.</param>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.NormalSurface.AddBackedUpWaterToSurface(System.Double,Models.Soils.SoilWaterBackend.SoilWaterSoil@)">
            <summary>
            Adds the backed up water to surface.
            </summary>
            <param name="BackedUp">The backed up.</param>
            <param name="SoilObject">The soil object.</param>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.NormalSurface.UpdateTillageCnRedVars(System.Double,System.Double)">
            <summary>
            Updates the tillage cn red vars.
            </summary>
            <param name="CumWater">The cum water.</param>
            <param name="Reduction">The reduction.</param>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.NormalSurface.ResetCumWaterSinceTillage">
            <summary>
            Resets the cum water since tillage.
            </summary>
        </member>
        <member name="T:Models.Soils.SoilWaterBackend.PondSurface">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.PondSurface.pond">
            <summary>
            The pond
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.PondSurface.pond_evap">
            <summary>
            The pond_evap
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.PondSurface.#ctor(Models.Soils.SoilWaterBackend.SoilWaterSoil,Models.Clock)">
            <summary>
            Initializes a new instance of the <see cref="T:Models.Soils.SoilWaterBackend.PondSurface"/> class.
            </summary>
            <param name="SoilObject">The soil object.</param>
            <param name="Clock">The clock.</param>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.PondSurface.CalcRunoff">
            <summary>
            Calculates the runoff.
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.PondSurface.CalcInfiltration">
            <summary>
            Calculates the infiltration.
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.PondSurface.CalcEvaporation">
            <summary>
            Calculates the evaporation.
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.PondSurface.AddBackedUpWaterToSurface(System.Double,Models.Soils.SoilWaterBackend.SoilWaterSoil@)">
            <summary>
            Adds the backed up water to surface.
            </summary>
            <param name="BackedUp">The backed up.</param>
            <param name="SoilObject">The soil object.</param>
        </member>
        <member name="T:Models.PMF.Cultivar">
            <summary>
            Cultivar class for holding cultivar overrides.
            </summary>
            <remarks>
            A cultivar includes \p Aliases to indicate other common names
            and \p Commands to specify genotypic parameters.
            The format of \p Commands is "name=value". The "name" of parameter
            should include the full path under Plant function,
            e.g. [Phenology].Vernalisation.PhotopSens = 3.5.
            </remarks>
        </member>
        <member name="F:Models.PMF.Cultivar.properties">
            <summary>
            The properties for each command
            </summary>
        </member>
        <member name="F:Models.PMF.Cultivar.oldPropertyValues">
            <summary>
            The original property values before the command was applied. Allows undo.
            </summary>
        </member>
        <member name="M:Models.PMF.Cultivar.Find(System.Collections.Generic.List{Models.PMF.Cultivar},System.String)">
            <summary>
            Find a cultivar in a list of cultivars and return it. Will throw if not found
            </summary>
            <param name="cultivars">The list of cultivars to look through</param>
            <param name="cultivarName">The cultivar name to look for</param>
            <returns>The found cultivar. Never returns null</returns>
        </member>
        <member name="M:Models.PMF.Cultivar.Apply(Models.Core.Model)">
            <summary>
            Apply commands.
            </summary>
            <param name="model">The underlying model to apply the commands to</param>
        </member>
        <member name="M:Models.PMF.Cultivar.OnSimulationCompleted(System.Object,System.EventArgs)">
            <summary>
            Simulation is now completed. Make sure that we undo any commands. i.e. reset
            back to default state.
            </summary>
        </member>
        <member name="M:Models.PMF.Cultivar.Unapply">
            <summary>
            Undo the cultivar commands. i.e. put the model back into its original state
            </summary>
        </member>
        <member name="P:Models.PMF.Cultivar.Aliases">
            <summary>
            Gets or sets a collection of names this cultivar is known as.
            </summary>
        </member>
        <member name="P:Models.PMF.Cultivar.Commands">
            <summary>
            Gets or sets a collection of commands that must be executed when applying this cultivar.
            </summary>
        </member>
        <member name="T:Models.Core.VariableProperty">
            <summary>
            Encapsulates a discovered property of a model. Provides properties for
            returning information about the property. 
            </summary>
        </member>
        <member name="T:Models.Core.IVariable">
            <summary>
            This abstract base class encapsulates the interface for a variable from a Model.
            source code.
            </summary>
        </member>
        <member name="P:Models.Core.IVariable.Name">
            <summary>
            Gets the name of the property.
            </summary>
        </member>
        <member name="P:Models.Core.IVariable.Object">
            <summary>
            Gets or sets the object this variable is relative to
            </summary>
        </member>
        <member name="P:Models.Core.IVariable.Value">
            <summary>
            Gets or sets the value of the property.
            </summary>
        </member>
        <member name="P:Models.Core.IVariable.Description">
            <summary>
            Gets a description of the property or null if not found.
            </summary>
        </member>
        <member name="P:Models.Core.IVariable.Units">
            <summary>
            Gets or sets the units of the property (in brackets) or null if not found.
            </summary>
        </member>
        <member name="F:Models.Core.VariableProperty.property">
            <summary>
            Gets or sets the PropertyInfo for this property.
            </summary>
        </member>
        <member name="F:Models.Core.VariableProperty.lowerArraySpecifier">
            <summary>
            An optional lower bound array index.
            </summary>
        </member>
        <member name="F:Models.Core.VariableProperty.upperArraySpecifier">
            <summary>
            An optional upper bound array index.
            </summary>
        </member>
        <member name="M:Models.Core.VariableProperty.#ctor(System.Object,System.Reflection.PropertyInfo,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Models.Core.VariableProperty"/> class.
            </summary>
            <param name="model">The underlying model for the property</param>
            <param name="property">The PropertyInfo for this property</param>
            <param name="arraySpecifier">An optional array specification e.g. 1:3</param>
        </member>
        <member name="M:Models.Core.VariableProperty.SetFromString(System.String)">
            <summary>
            Set the value of this object via a string.
            </summary>
            <param name="value">The string value to set this property to</param>
        </member>
        <member name="P:Models.Core.VariableProperty.Object">
            <summary>
            Gets or sets the underlying model that this property belongs to.
            </summary>
        </member>
        <member name="P:Models.Core.VariableProperty.Name">
            <summary>
            Return the name of the property.
            </summary>
        </member>
        <member name="P:Models.Core.VariableProperty.Description">
            <summary>
            Gets the description of the property
            </summary>
        </member>
        <member name="P:Models.Core.VariableProperty.Units">
            <summary>
            Gets the units of the property
            </summary>
        </member>
        <member name="P:Models.Core.VariableProperty.AllowableUnits">
            <summary>
            Gets a list of allowable units
            </summary>
        </member>
        <member name="P:Models.Core.VariableProperty.IsReadOnly">
            <summary>
            Gets a value indicating whether the property is readonly.
            </summary>
        </member>
        <member name="P:Models.Core.VariableProperty.Metadata">
            <summary>
            Gets the metadata for each layer. Returns new string[0] if none available.
            </summary>
        </member>
        <member name="P:Models.Core.VariableProperty.DataType">
            <summary>
            Gets the data type of the property
            </summary>
        </member>
        <member name="P:Models.Core.VariableProperty.Value">
            <summary>
            Gets the values of the property
            </summary>
        </member>
        <member name="P:Models.Core.VariableProperty.ValueWithArrayHandling">
            <summary>
            Gets or sets the value of the specified property with arrays converted to comma separated strings.
            </summary>
        </member>
        <member name="P:Models.Core.VariableProperty.Format">
            <summary>
            Gets the display format for this property e.g. 'N3'. Can return null if not present.
            </summary>
        </member>
        <member name="P:Models.Core.VariableProperty.CropName">
            <summary>
            Gets the crop name of the property or null if this property isn't a crop one.
            </summary>
        </member>
        <member name="P:Models.Core.VariableProperty.Total">
            <summary>
            Gets the sum of all values in this array property if the property has been 
            marked as [DisplayTotal]. Otherwise return double.Nan
            </summary>
        </member>
        <member name="P:Models.Core.VariableProperty.DisplayType">
            <summary>
            Gets the associated display type for the related property.
            </summary>
        </member>
        <member name="T:Models.Core.UnitsAttribute">
            <summary>
            Specifies the units of the related field or property. Units must conform to the specification in Section 2.6.
            </summary>
        </member>
        <member name="F:Models.Core.UnitsAttribute.unitsString">
            <summary>
            The units passed through the constructor
            </summary>
        </member>
        <member name="M:Models.Core.UnitsAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Models.Core.UnitsAttribute"/> class.
            </summary>
            <param name="units">The units of the associated field or property</param>
        </member>
        <member name="M:Models.Core.UnitsAttribute.ToString">
            <summary>
            Returns the units.
            </summary>
            <returns>The units string</returns>
        </member>
        <member name="T:Models.Core.Replacements">
            <summary>
            A replacements model
            </summary>
        </member>
        <member name="T:Models.Core.AutoDocumentation">
            <summary>
            A class of auto-documentation methods and HTML building widgets.
            </summary>
        </member>
        <member name="M:Models.Core.AutoDocumentation.GetUnits(Models.Core.IModel,System.String)">
            <summary>Gets the units from a declaraion.</summary>
            <param name="model">The model containing the declaration field.</param>
            <param name="fieldName">The declaration field name.</param>
            <returns>The units (no brackets) or any empty string.</returns>
        </member>
        <member name="M:Models.Core.AutoDocumentation.GetDescription(Models.Core.IModel,System.String)">
            <summary>Gets the description from a declaraion.</summary>
            <param name="model">The model containing the declaration field.</param>
            <param name="fieldName">The declaration field name.</param>
            <returns>The description or any empty string.</returns>
        </member>
        <member name="M:Models.Core.AutoDocumentation.GetClassDescription(System.Object,System.Collections.Generic.List{Models.Core.AutoDocumentation.ITag},System.Int32)">
            <summary>Writes the description of a class to the tags.</summary>
            <param name="model">The model to get documentation for.</param>
            <param name="tags">The tags to add to.</param>
            <param name="indent">The indentation level.</param>
        </member>
        <member name="T:Models.Core.AutoDocumentation.ITag">
            <summary>
            Describes an interface for a auto-doc command.
            </summary>
        </member>
        <member name="T:Models.Core.AutoDocumentation.Heading">
            <summary>
            Describes an auto-doc heading command.
            </summary>
        </member>
        <member name="F:Models.Core.AutoDocumentation.Heading.text">
            <summary>The heading text</summary>
        </member>
        <member name="F:Models.Core.AutoDocumentation.Heading.headingLevel">
            <summary>The heading level</summary>
        </member>
        <member name="M:Models.Core.AutoDocumentation.Heading.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Models.Core.AutoDocumentation.Heading"/> class.
            </summary>
            <param name="text">The heading text.</param>
            <param name="headingLevel">The heading level.</param>
        </member>
        <member name="T:Models.Core.AutoDocumentation.Paragraph">
            <summary>
            Describes an auto-doc paragraph command.
            </summary>
        </member>
        <member name="F:Models.Core.AutoDocumentation.Paragraph.text">
            <summary>The paragraph text.</summary>
        </member>
        <member name="F:Models.Core.AutoDocumentation.Paragraph.indent">
            <summary>The indent level.</summary>
        </member>
        <member name="F:Models.Core.AutoDocumentation.Paragraph.bookmarkName">
            <summary>The bookmark name (optional)</summary>
        </member>
        <member name="F:Models.Core.AutoDocumentation.Paragraph.handingIndent">
            <summary>Should the paragraph indent all lines except the first?</summary>
        </member>
        <member name="M:Models.Core.AutoDocumentation.Paragraph.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Models.Core.AutoDocumentation.Paragraph"/> class.
            </summary>
            <param name="text">The paragraph text.</param>
            <param name="indent">The paragraph indent.</param>
        </member>
        <member name="T:Models.Core.AutoDocumentation.GraphAndTable">
            <summary>
            Describes an auto-doc table command.
            </summary>
        </member>
        <member name="F:Models.Core.AutoDocumentation.GraphAndTable.xyPairs">
            <summary>The data to show in graph and table.</summary>
        </member>
        <member name="F:Models.Core.AutoDocumentation.GraphAndTable.title">
            <summary>The graph title</summary>
        </member>
        <member name="F:Models.Core.AutoDocumentation.GraphAndTable.xName">
            <summary>The x axis title.</summary>
        </member>
        <member name="F:Models.Core.AutoDocumentation.GraphAndTable.yName">
            <summary>The y axis title</summary>
        </member>
        <member name="F:Models.Core.AutoDocumentation.GraphAndTable.indent">
            <summary>The indent level.</summary>
        </member>
        <member name="M:Models.Core.AutoDocumentation.GraphAndTable.#ctor(Models.PMF.Functions.XYPairs,System.String,System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Models.Core.AutoDocumentation.GraphAndTable"/> class.
            </summary>
            <param name="xyPairs">The xy pairs.</param>
            <param name="title">Graph title.</param>
            <param name="xName">The x axis title.</param>
            <param name="yName">The y axis title.</param>
            <param name="indent">The indentation.</param>
        </member>
        <member name="T:Models.Agroforestry.StaticForestrySystem">
            <summary>
            A simple agroforestry model
            </summary>
        </member>
        <member name="T:Models.Core.Zone">
            <summary>A generic system that can have children</summary>
        </member>
        <member name="M:Models.Core.Zone.Get(System.String)">
            <summary>Gets the value of a variable or model.</summary>
            <param name="namePath">The name of the object to return</param>
            <returns>The found object or null if not found</returns>
        </member>
        <member name="M:Models.Core.Zone.GetVariableObject(System.String)">
            <summary>Get the underlying variable object for the given path.</summary>
            <param name="namePath">The name of the variable to return</param>
            <returns>The found object or null if not found</returns>
        </member>
        <member name="M:Models.Core.Zone.Set(System.String,System.Object)">
            <summary>Sets the value of a variable. Will throw if variable doesn't exist.</summary>
            <param name="namePath">The name of the object to set</param>
            <param name="value">The value to set the property to</param>
        </member>
        <member name="M:Models.Core.Zone.Locator">
            <summary>Gets the locater model for the specified model.</summary>
            <returns>The an instance of a locater class for the specified model. Never returns null.</returns>
        </member>
        <member name="P:Models.Core.Zone.Area">
            <summary>Area of the zone.</summary>
            <value>The area.</value>
        </member>
        <member name="P:Models.Core.Zone.Slope">
            <summary>Gets or sets the slope.</summary>
            <value>The slope.</value>
        </member>
        <member name="P:Models.Core.Zone.Plants">
            <summary>Gets an array of plant models that are in scope.</summary>
            <value>The plants.</value>
        </member>
        <member name="F:Models.Agroforestry.StaticForestrySystem.ZoneInfoList">
            <summary>
            A list containing forestry information for each zone.
            </summary>
        </member>
        <member name="M:Models.Agroforestry.StaticForestrySystem.GetDistanceFromTrees(Models.Core.Zone)">
            <summary>
            Return the distance from the tree for a given zone
            </summary>
            <param name="z">Zone</param>
            <returns>Distance from a static tree</returns>
        </member>
        <member name="M:Models.Agroforestry.StaticForestrySystem.GetShade(Models.Core.Zone)">
            <summary>
            Return the %Shade for a given zone
            </summary>
            <param name="z">Zone</param>
            <returns>%Shade</returns>
        </member>
        <member name="M:Models.Agroforestry.StaticForestrySystem.GetWindReduction(Models.Core.Zone)">
            <summary>
            Return the %Wind Reduction for a given zone
            </summary>
            <param name="z">Zone</param>
            <returns>%Wind Reduction</returns>
        </member>
        <member name="M:Models.Agroforestry.StaticForestrySystem.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>Called when [simulation commencing].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.Agroforestry.StaticForestrySystem.GetSWUptakes(Models.Soils.Arbitrator.SoilState)">
            <summary>
            Returns soil water uptake from each zone by the static tree model
            </summary>
            <param name="soilstate"></param>
            <returns></returns>
        </member>
        <member name="M:Models.Agroforestry.StaticForestrySystem.GetNUptakes(Models.Soils.Arbitrator.SoilState)">
            <summary>
            Returns soil Nitrogen uptake from each zone by the static tree model
            </summary>
            <param name="soilstate"></param>
            <returns></returns>
        </member>
        <member name="M:Models.Agroforestry.StaticForestrySystem.SetSWUptake(System.Collections.Generic.List{Models.Soils.Arbitrator.ZoneWaterAndN})">
            <summary>
             Accepts the actual soil water uptake from the soil arbitrator.
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Models.Agroforestry.StaticForestrySystem.SetNUptake(System.Collections.Generic.List{Models.Soils.Arbitrator.ZoneWaterAndN})">
            <summary>
            Accepts the actual soil Nitrogen uptake from the soil arbitrator.
            </summary>
            <param name="info"></param>
        </member>
        <member name="P:Models.Agroforestry.StaticForestrySystem.Table">
            <summary>Gets or sets the table data.</summary>
            <value>The table.</value>
        </member>
        <member name="P:Models.Agroforestry.StaticForestrySystem.NDemand">
            <summary>Allows the user to set a nitrogen demand for the tree.</summary>
            <value>The nitrogen demand.</value>
        </member>
        <member name="P:Models.Agroforestry.StaticForestrySystem.RootRadius">
            <summary>The root radius.</summary>
            <value>The root radius.</value>
        </member>
        <member name="P:Models.Agroforestry.StaticForestrySystem.Area">
            <summary>
            Return the area of the zone.
            </summary>
        </member>
        <member name="P:Models.Agroforestry.StaticForestrySystem.InterceptedRadiation">
            <summary>
            Calculate the total intercepted radiation by the tree canopy (MJ)
            </summary>
        </member>
        <member name="T:Models.Agroforestry.ZoneInfo">
            <summary>
            A structure holding forestry information for a single zone.
            </summary>
        </member>
        <member name="F:Models.Agroforestry.ZoneInfo.zone">
            <summary>
            The name of the zone.
            </summary>
        </member>
        <member name="F:Models.Agroforestry.ZoneInfo.WindReduction">
            <summary>
            Wind value.
            </summary>
        </member>
        <member name="F:Models.Agroforestry.ZoneInfo.Shade">
            <summary>
            Shade value.
            </summary>
        </member>
        <member name="F:Models.Agroforestry.ZoneInfo.RLD">
            <summary>
            Root Length Density information for each soil layer in a zone.
            </summary>
        </member>
        <member name="T:Models.Core.Simulation">
            <summary>
            A simulation model
            </summary>
        </member>
        <member name="F:Models.Core.Simulation._IsRunning">
            <summary>The _ is running</summary>
        </member>
        <member name="F:Models.Core.Simulation.timer">
            <summary>The timer</summary>
        </member>
        <member name="F:Models.Core.Simulation.locater">
            <summary>A locater object for finding models and variables.</summary>
        </member>
        <member name="F:Models.Core.Simulation.Clock">
            <summary>Get a reference to the clock model.</summary>
        </member>
        <member name="M:Models.Core.Simulation.#ctor">
            <summary>Constructor</summary>
        </member>
        <member name="M:Models.Core.Simulation.Run(System.Object,System.ComponentModel.DoWorkEventArgs)">
            <summary>Run the simulation. Will throw on error.</summary>
            <param name="sender"></param>
            <param name="e"></param>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Models.Core.Simulation.StartRun">
            <summary>Startup the run.</summary>
        </member>
        <member name="M:Models.Core.Simulation.DoRun(System.Object)">
            <summary>Perform the run. Will throw if error occurs.</summary>
            <param name="sender">The sender.</param>
            <exception cref="T:Models.Core.ApsimXException">Cannot invoke Commenced</exception>
        </member>
        <member name="M:Models.Core.Simulation.CleanupRun(System.String)">
            <summary>Cleanup after the run.</summary>
        </member>
        <member name="P:Models.Core.Simulation.IsCompleted">
            <summary>Gets a value indicating whether this job is completed. Set by JobManager.</summary>
        </member>
        <member name="P:Models.Core.Simulation.ErrorMessage">
            <summary>Gets the error message. Can be null if no error. Set by JobManager.</summary>
        </member>
        <member name="P:Models.Core.Simulation.IsComputationallyTimeConsuming">
            <summary>Gets a value indicating whether this instance is computationally time consuming.</summary>
        </member>
        <member name="E:Models.Core.Simulation.Commencing">
            <summary>Occurs when [commencing].</summary>
        </member>
        <member name="E:Models.Core.Simulation.Completed">
            <summary>Occurs when [completed].</summary>
        </member>
        <member name="P:Models.Core.Simulation.Locater">
            <summary>Cache to speed up scope lookups.</summary>
            <value>The locater.</value>
        </member>
        <member name="E:Models.Core.Simulation.DoCommence">
            <summary>To commence the simulation, this event will be invoked.</summary>
        </member>
        <member name="P:Models.Core.Simulation.FileName">
            <summary>Return the filename that this simulation sits in.</summary>
            <value>The name of the file.</value>
        </member>
        <member name="P:Models.Core.Simulation.IsRunning">
            <summary>Return true if the simulation is running.</summary>
            <value>
            <c>true</c> if this instance is running; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Models.Graph.Series">
            <summary>
            The class represents a single series on a graph
            </summary>
        </member>
        <member name="M:Models.Graph.Series.#ctor">
            <summary>
            Constructor for a series
            </summary>
        </member>
        <member name="P:Models.Graph.Series.Title">
            <summary>
            Gets or sets the series title
            </summary>
        </member>
        <member name="P:Models.Graph.Series.Type">
            <summary>
            Gets or sets the series type
            </summary>
        </member>
        <member name="P:Models.Graph.Series.XAxis">
            <summary>
            Gets or sets the associated x axis
            </summary>
        </member>
        <member name="P:Models.Graph.Series.YAxis">
            <summary>
            Gets or sets the associated y axis
            </summary>
        </member>
        <member name="P:Models.Graph.Series.ColourArgb">
            <summary>
            Gets or sets the color represented as a red, green, blue integer
            </summary>
        </member>
        <member name="P:Models.Graph.Series.Colour">
            <summary>
            Gets or sets the color 
            </summary>
        </member>
        <member name="P:Models.Graph.Series.Marker">
            <summary>
            Gets or sets the marker to show
            </summary>
        </member>
        <member name="P:Models.Graph.Series.Line">
            <summary>
            Gets or sets the line type to show
            </summary>
        </member>
        <member name="P:Models.Graph.Series.X">
            <summary>
            Gets or sets the x values
            </summary>
        </member>
        <member name="P:Models.Graph.Series.Y">
            <summary>
            Gets or sets the y values
            </summary>
        </member>
        <member name="P:Models.Graph.Series.X2">
            <summary>
            Gets or sets the second x values
            </summary>
        </member>
        <member name="P:Models.Graph.Series.Y2">
            <summary>
            Gets or sets the second y values
            </summary>
        </member>
        <member name="P:Models.Graph.Series.ShowRegressionLine">
            <summary>
            Gets or sets a value indicating whether a regression line should be shown for this series.
            </summary>
        </member>
        <member name="P:Models.Graph.Series.ShowInLegend">
            <summary>
            Gets or sets a value indicating whether the series should be shown in the legend
            </summary>
        </member>
        <member name="P:Models.Graph.Series.Cumulative">
            <summary>
            Gets or sets a string indicating what the series should be split on e.g. 'simulation' or 'experiment'
            </summary>
        </member>
        <member name="T:Models.Graph.Series.SeriesType">
            <summary>
            An enumeration for the different types of graph series
            </summary>
        </member>
        <member name="F:Models.Graph.Series.SeriesType.Line">
            <summary>
            A line series. Kept for compatibility reasons
            </summary>
        </member>
        <member name="F:Models.Graph.Series.SeriesType.Bar">
            <summary>
            A bar series
            </summary>
        </member>
        <member name="F:Models.Graph.Series.SeriesType.Scatter">
            <summary>
            A scatter series
            </summary>
        </member>
        <member name="F:Models.Graph.Series.SeriesType.Area">
            <summary>
            An area series
            </summary>
        </member>
        <member name="T:Models.Graph.Series.MarkerType">
            <summary>
            An enumeration for the different types of markers
            </summary>
        </member>
        <member name="F:Models.Graph.Series.MarkerType.None">
            <summary>
            No marker should be display
            </summary>
        </member>
        <member name="F:Models.Graph.Series.MarkerType.Circle">
            <summary>
            A circle marker
            </summary>
        </member>
        <member name="F:Models.Graph.Series.MarkerType.Diamond">
            <summary>
            A diamond marker
            </summary>
        </member>
        <member name="F:Models.Graph.Series.MarkerType.Square">
            <summary>
            A square marker
            </summary>
        </member>
        <member name="F:Models.Graph.Series.MarkerType.Triangle">
            <summary>
            A triangle marker
            </summary>
        </member>
        <member name="F:Models.Graph.Series.MarkerType.Cross">
            <summary>
            A cross marker
            </summary>
        </member>
        <member name="F:Models.Graph.Series.MarkerType.Plus">
            <summary>
            A plus marker
            </summary>
        </member>
        <member name="F:Models.Graph.Series.MarkerType.Star">
            <summary>
            A star marker
            </summary>
        </member>
        <member name="F:Models.Graph.Series.MarkerType.FilledCircle">
            <summary>
            A filled circle marker
            </summary>
        </member>
        <member name="F:Models.Graph.Series.MarkerType.FilledDiamond">
            <summary>
            A filled diamond marker
            </summary>
        </member>
        <member name="F:Models.Graph.Series.MarkerType.FilledSquare">
            <summary>
            A filled square marker
            </summary>
        </member>
        <member name="F:Models.Graph.Series.MarkerType.FilledTriangle">
            <summary>
            A filled triangle marker
            </summary>
        </member>
        <member name="T:Models.Graph.Series.LineType">
            <summary>
            An enumeration representing the different types of lines
            </summary>
        </member>
        <member name="F:Models.Graph.Series.LineType.Solid">
            <summary>
            A solid line
            </summary>
        </member>
        <member name="F:Models.Graph.Series.LineType.Dash">
            <summary>
            A dashed line
            </summary>
        </member>
        <member name="F:Models.Graph.Series.LineType.Dot">
            <summary>
            A dotted line
            </summary>
        </member>
        <member name="F:Models.Graph.Series.LineType.DashDot">
            <summary>
            A dash dot line
            </summary>
        </member>
        <member name="F:Models.Graph.Series.LineType.None">
            <summary>
            No line
            </summary>
        </member>
        <member name="T:Models.Core.Simulations">
            <summary>
            Encapsulates a collection of simulations. It is responsible for creating this collection,
            changing the structure of the components within the simulations, renaming components, adding
            new ones, deleting components. The user interface talks to an instance of this class.
            </summary>
        </member>
        <member name="F:Models.Core.Simulations._FileName">
            <summary>The _ file name</summary>
        </member>
        <member name="F:Models.Core.Simulations.jobManager">
            <summary>The job manager</summary>
        </member>
        <member name="M:Models.Core.Simulations.Read(System.String)">
            <summary>Create a simulations object by reading the specified filename</summary>
            <param name="FileName">Name of the file.</param>
            <returns></returns>
            <exception cref="T:System.Exception">Simulations.Read() failed. Invalid simulation file.\n</exception>
        </member>
        <member name="M:Models.Core.Simulations.Read(System.Xml.XmlNode)">
            <summary>Create a simulations object by reading the specified filename</summary>
            <param name="node">The node.</param>
            <returns></returns>
            <exception cref="T:System.Exception">Simulations.Read() failed. Invalid simulation file.\n</exception>
        </member>
        <member name="M:Models.Core.Simulations.CallOnLoaded(Models.Core.IModel)">
            <summary>Call Loaded event in specified model and all children</summary>
            <param name="model">The model.</param>
        </member>
        <member name="M:Models.Core.Simulations.Write(System.String)">
            <summary>Write the specified simulation set to the specified filename</summary>
            <param name="FileName">Name of the file.</param>
        </member>
        <member name="M:Models.Core.Simulations.Write(System.IO.TextWriter)">
            <summary>Write the specified simulation set to the specified 'stream'</summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Models.Core.Simulations.#ctor">
            <summary>Constructor, private to stop developers using it. Use Simulations.Read instead.</summary>
        </member>
        <member name="M:Models.Core.Simulations.FindAllSimulationsToRun(Models.Core.Model)">
            <summary>Find all simulations under the specified parent model.</summary>
            <param name="parent">The parent.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Core.Simulations.FindAllSimulationNames">
            <summary>Find all simulation names that are going to be run.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.Core.Simulations.SetFileNameInAllSimulations">
            <summary>Look through all models. For each simulation found set the filename.</summary>
        </member>
        <member name="M:Models.Core.Simulations.RootSimulations(Models.Core.Model)">
            <summary>Roots the simulations.</summary>
            <param name="model">The model.</param>
            <returns></returns>
        </member>
        <member name="F:Models.Core.Simulations.NumToRun">
            <summary>The number to run</summary>
        </member>
        <member name="F:Models.Core.Simulations.NumCompleted">
            <summary>The number completed</summary>
        </member>
        <member name="M:Models.Core.Simulations.Run(System.Object,System.ComponentModel.DoWorkEventArgs)">
            <summary>Run all simulations.</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Models.Core.Simulations.MakeSubstitutions(Models.Core.Simulation[])">
            <summary>Make model substitutions if necessary.</summary>
            <param name="simulations">The simulations to make substitutions in.</param>
        </member>
        <member name="M:Models.Core.Simulations.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>This gets called everytime a simulation commences.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.Core.Simulations.OnSimulationCompleted(System.Object,System.EventArgs)">
            <summary>
            This gets called everytime a simulation completes. When all are done then
            invoke each model's OnAllCompleted method.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.Core.Simulations.CallAllCompleted">
            <summary>Call the all completed event in all models.</summary>
        </member>
        <member name="M:Models.Core.Simulations.DocumentModel(System.String,System.Collections.Generic.List{Models.Core.AutoDocumentation.ITag},System.Int32)">
            <summary>Documents the specified model.</summary>
            <param name="modelNameToDocument">The model name to document.</param>
            <param name="tags">The auto doc tags.</param>
            <param name="headingLevel">The starting heading level.</param>
        </member>
        <member name="P:Models.Core.Simulations.ExplorerWidth">
            <summary>Gets or sets the width of the explorer.</summary>
            <value>The width of the explorer.</value>
        </member>
        <member name="P:Models.Core.Simulations.IsCompleted">
            <summary>Gets a value indicating whether this job is completed. Set by JobManager.</summary>
        </member>
        <member name="P:Models.Core.Simulations.ErrorMessage">
            <summary>Gets the error message. Can be null if no error. Set by JobManager.</summary>
        </member>
        <member name="P:Models.Core.Simulations.IsComputationallyTimeConsuming">
            <summary>Gets a value indicating whether this instance is computationally time consuming.</summary>
        </member>
        <member name="P:Models.Core.Simulations.FileName">
            <summary>The name of the file containing the simulations.</summary>
            <value>The name of the file.</value>
        </member>
        <member name="P:Models.Core.Simulations.LoadErrors">
            <summary>
            A list of all exceptions thrown during the creation and loading of the simulation.
            </summary>
            <value>The load errors.</value>
        </member>
        <member name="P:Models.Core.Simulations.SimulationToRun">
            <summary>
            Allows the GUI to specify a simulation to run. It then calls
            'Run' below to run this simulation.
            </summary>
            <value>The simulation to run.</value>
        </member>
        <member name="T:Models.Soils.FOMType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.Soils.FOMType.amount">
            <summary>The amount</summary>
        </member>
        <member name="F:Models.Soils.FOMType.C">
            <summary>The c</summary>
        </member>
        <member name="F:Models.Soils.FOMType.N">
            <summary>The n</summary>
        </member>
        <member name="F:Models.Soils.FOMType.P">
            <summary>The p</summary>
        </member>
        <member name="F:Models.Soils.FOMType.AshAlk">
            <summary>The ash alk</summary>
        </member>
        <member name="T:Models.Soils.FOMPoolType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.Soils.FOMPoolType.Layer">
            <summary>The layer</summary>
        </member>
        <member name="T:Models.Soils.FOMPoolLayerType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.Soils.FOMPoolLayerType.thickness">
            <summary>The thickness</summary>
        </member>
        <member name="F:Models.Soils.FOMPoolLayerType.no3">
            <summary>The no3</summary>
        </member>
        <member name="F:Models.Soils.FOMPoolLayerType.nh4">
            <summary>The NH4</summary>
        </member>
        <member name="F:Models.Soils.FOMPoolLayerType.po4">
            <summary>The po4</summary>
        </member>
        <member name="F:Models.Soils.FOMPoolLayerType.Pool">
            <summary>The pool</summary>
        </member>
        <member name="T:Models.Soils.FOMLayerType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.Soils.FOMLayerType.Type">
            <summary>The type</summary>
        </member>
        <member name="F:Models.Soils.FOMLayerType.Layer">
            <summary>The layer</summary>
        </member>
        <member name="T:Models.Soils.SurfaceOrganicMatterDecompPoolType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.Soils.SurfaceOrganicMatterDecompPoolType.Name">
            <summary>The name</summary>
        </member>
        <member name="F:Models.Soils.SurfaceOrganicMatterDecompPoolType.OrganicMatterType">
            <summary>The organic matter type</summary>
        </member>
        <member name="F:Models.Soils.SurfaceOrganicMatterDecompPoolType.FOM">
            <summary>The fom</summary>
        </member>
        <member name="T:Models.Soils.SurfaceOrganicMatterDecompType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.Soils.SurfaceOrganicMatterDecompType.Pool">
            <summary>The pool</summary>
        </member>
        <member name="T:Models.Soils.FOMdecompData">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.Soils.FOMdecompData.dlt_c_hum">
            <summary>The dlt_c_hum</summary>
        </member>
        <member name="F:Models.Soils.FOMdecompData.dlt_c_biom">
            <summary>The dlt_c_biom</summary>
        </member>
        <member name="F:Models.Soils.FOMdecompData.dlt_c_atm">
            <summary>The dlt_c_atm</summary>
        </member>
        <member name="F:Models.Soils.FOMdecompData.dlt_fom_n">
            <summary>The dlt_fom_n</summary>
        </member>
        <member name="F:Models.Soils.FOMdecompData.dlt_n_min">
            <summary>The dlt_n_min</summary>
        </member>
        <member name="T:Models.Soils.ExternalMassFlowType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.Soils.ExternalMassFlowType.PoolClass">
            <summary>The pool class</summary>
        </member>
        <member name="F:Models.Soils.ExternalMassFlowType.FlowType">
            <summary>The flow type</summary>
        </member>
        <member name="F:Models.Soils.ExternalMassFlowType.C">
            <summary>The c</summary>
        </member>
        <member name="F:Models.Soils.ExternalMassFlowType.N">
            <summary>The n</summary>
        </member>
        <member name="F:Models.Soils.ExternalMassFlowType.P">
            <summary>The p</summary>
        </member>
        <member name="F:Models.Soils.ExternalMassFlowType.DM">
            <summary>The dm</summary>
        </member>
        <member name="F:Models.Soils.ExternalMassFlowType.SW">
            <summary>The sw</summary>
        </member>
        <member name="T:Models.Soils.NewSoluteType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.Soils.NewSoluteType.OwnerFullPath">
            <summary>The owner full path</summary>
        </member>
        <member name="F:Models.Soils.NewSoluteType.solutes">
            <summary>The solutes</summary>
        </member>
        <member name="T:Models.Soils.NitrogenChangedType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.Soils.NitrogenChangedType.Sender">
            <summary>The sender</summary>
        </member>
        <member name="F:Models.Soils.NitrogenChangedType.SenderType">
            <summary>The sender type</summary>
        </member>
        <member name="F:Models.Soils.NitrogenChangedType.DeltaNO3">
            <summary>The delta n o3</summary>
        </member>
        <member name="F:Models.Soils.NitrogenChangedType.DeltaNH4">
            <summary>The delta n h4</summary>
        </member>
        <member name="F:Models.Soils.NitrogenChangedType.DeltaUrea">
            <summary>The delta urea</summary>
        </member>
        <member name="T:Models.Soils.NitrogenChangedDelegate">
            <summary>
            
            </summary>
            <param name="Data">The data.</param>
        </member>
        <member name="T:Models.Soils.MergeSoilCNPatchType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.Soils.MergeSoilCNPatchType.Sender">
            <summary>The sender</summary>
        </member>
        <member name="F:Models.Soils.MergeSoilCNPatchType.AffectedPatches_nm">
            <summary>The affected patches_nm</summary>
        </member>
        <member name="F:Models.Soils.MergeSoilCNPatchType.AffectedPatches_id">
            <summary>The affected patches_id</summary>
        </member>
        <member name="F:Models.Soils.MergeSoilCNPatchType.MergeAll">
            <summary>The merge all</summary>
        </member>
        <member name="T:Models.Soils.FOMLayerLayerType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.Soils.FOMLayerLayerType.FOM">
            <summary>The fom</summary>
        </member>
        <member name="F:Models.Soils.FOMLayerLayerType.CNR">
            <summary>The CNR</summary>
        </member>
        <member name="F:Models.Soils.FOMLayerLayerType.LabileP">
            <summary>The labile p</summary>
        </member>
        <member name="T:Models.Soils.AddUrineType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.Soils.AddUrineType.Urinations">
            <summary>The urinations</summary>
        </member>
        <member name="F:Models.Soils.AddUrineType.VolumePerUrination">
            <summary>The volume per urination</summary>
        </member>
        <member name="F:Models.Soils.AddUrineType.AreaPerUrination">
            <summary>The area per urination</summary>
        </member>
        <member name="F:Models.Soils.AddUrineType.Eccentricity">
            <summary>The eccentricity</summary>
        </member>
        <member name="F:Models.Soils.AddUrineType.Urea">
            <summary>The urea</summary>
        </member>
        <member name="F:Models.Soils.AddUrineType.POX">
            <summary>The pox</summary>
        </member>
        <member name="F:Models.Soils.AddUrineType.SO4">
            <summary>The s o4</summary>
        </member>
        <member name="F:Models.Soils.AddUrineType.AshAlk">
            <summary>The ash alk</summary>
        </member>
        <member name="T:Models.Soils.SoilNitrogen">
            <summary>
            Initially ported from Fortran SoilN model by Eric Zurcher Sept/Oct-2010.
            Code tidied up by RCichota on Aug/Sep-2012: mostly modifying how some variables are handled (substitute 'get's by [input]), added regions
            to ease access, updated error messages, moved all soilTemp code to a separate class (the idea is to eliminate it in the future), also added
            some of the constants to xml.
            Changes on Sep/Oct-2012 by RCichota, add patch capability: move all code for soil C and N to a separate class (SoilCNPatch), allow several
            instances to be initialised, modified inputs to handle the partitioning of incoming N, also modified outputs to sum up the pools from the
            several instances (patches)
            </summary>
            <summary>
            This partial class contains most of the variables and input properties of SoilNitrogen
            </summary>
            <summary>This partial class contains the various methods to handle patches</summary>
            <summary>
            This partial class contains the SoilCN patch class
            </summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.SurfaceOrganicMatter">
            <summary>The surface organic matter</summary>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Models.Soils.SoilNitrogen"/> class.</summary>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>Performs the initial checks and setup</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.Reset">
            <summary>Reset the state values to those set during the initialisation</summary>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.CheckParams">
            <summary>Check general initialisation parameters, and let user know of some settings</summary>
            <exception cref="T:System.Exception">
            Number of \fract_carb\ different to \fom_type\
            or
            Number of \fract_cell\ different to \fom_type\
            or
            Number of \fract_lign\ different to \fom_type\
            </exception>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.InitCalc">
            <summary>Do the initial setup and calculations - this is also used onReset</summary>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.ResizeLayerArrays(System.Int32)">
            <summary>Set the size of all public arrays (with nLayers)</summary>
            <param name="nLayers">The n layers.</param>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.AdvertiseMySolutes">
            <summary>Notify any interested module about this module's ownership of solute information.</summary>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.SaveState">
            <summary>Stores the total amounts of C an N</summary>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.DeltaState">
            <summary>Calculates variations in C an N, and publishes MassFlows to APSIM</summary>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.OnDoSoilOrganicMatter(System.Object,System.EventArgs)">
            <summary>
            Get the information on potential residue decomposition - perform daily calculations as part of this.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.OnDoDailyInitialisation(System.Object,System.EventArgs)">
            <summary>Performs every-day calculations - before begining of day tasks</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.OnDoUpdate(System.Object,System.EventArgs)">
            <summary>Performs every-day calculations - end of day processes</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.SendActualResidueDecompositionCalculated">
            <summary>Send back to SurfaceOM the information about residue decomposition</summary>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.OnIncorpFOM(Models.Soils.FOMLayerType)">
            <summary>Partition the given FOM C and N into fractions in each layer (one FOM)</summary>
            <param name="inFOMdata">The in fo mdata.</param>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.OnIncorpFOMPool(Models.Soils.FOMPoolType)">
            <summary>Partition the given FOM C and N into fractions in each layer (FOM pools)</summary>
            <param name="inFOMPoolData">The in fom pool data.</param>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.OnNitrogenChanged(Models.Soils.NitrogenChangedType)">
            <summary>Gets the changes in mineral N made by other modules</summary>
            <param name="NitrogenChanges">The nitrogen changes.</param>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.OnAddUrine(Models.Soils.AddUrineType)">
            <summary>Get the information about urine being added</summary>
            <param name="UrineAdded">Urine deposition data (includes urea N amount, volume, area affected, etc)</param>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.OnAddSoilCNPatch(Models.Soils.SoilNitrogen.AddSoilCNPatchType)">
            <summary>Gets and handles the information about new patch and add it to patch list</summary>
            <param name="PatchtoAdd">Patch data</param>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.OnMergeSoilCNPatch(Models.Soils.MergeSoilCNPatchType)">
            <summary>Gets the list of patches that will be merge into one, as defined by user</summary>
            <param name="MergeCNPatch">The list of CNPatches to merge</param>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.SendExternalMassFlowN(System.Double)">
            <summary>Comunicate other components that N amount in the soil has changed</summary>
            <param name="dltN">N changes</param>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.SendExternalMassFlowC(System.Double)">
            <summary>Comunicate other components that C amount in the soil has changed</summary>
            <param name="dltC">C changes</param>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.convFactor_kgha2ppm(System.Int32)">
            <summary>Conversion factor: kg/ha to ppm (mg/kg)</summary>
            <param name="Layer">layer to calculate</param>
            <returns>conversion factor</returns>
            <exception cref="T:System.Exception"> Error on computing convertion factor, kg/ha to ppm. Value for dlayer or bulk density not valid</exception>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.hasValues(System.Double[],System.Double)">
            <summary>Check whether there is any considerable values in the array</summary>
            <param name="anArray">The array to analyse</param>
            <param name="Lowerue">The minimum considerable value</param>
            <returns>True if there is any value greater than the minimum, false otherwise</returns>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.SumDoubleArray(System.Double[])">
            <summary>Calculate the sum of all values of an array of doubles</summary>
            <param name="anArray">The array of values</param>
            <returns>The sum</returns>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.getCumulativeIndex(System.Double,System.Double[])">
            <summary>Find the index at which the cumulative amount is equal or greater than 'sum'</summary>
            <param name="sumTarget">The target value</param>
            <param name="anArray">The array to analyse</param>
            <returns>The index of the array item at which the sum is equal or greater than the target</returns>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.Clock">
            <summary>Link to APSIM's clock</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.MetFile">
            <summary>Link to APSIM's metFile (weather data)</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.Soil">
            <summary>The soil</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.SoilOrganicMatter">
            <summary>The soil organic matter</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.useNewSTFFunction">
            <summary>The use new STF function</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.useNewSWFFunction">
            <summary>The use new SWF function</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.useNewProcesses">
            <summary>The use new processes</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.useSingleMinerFactors">
            <summary>The use single miner factors</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.useFactorsBySOMpool">
            <summary>The use factors by so mpool</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.useFactorsByFOMpool">
            <summary>The use factors by fo mpool</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.NPartitionApproach">
            <summary>The n partition approach</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.SoilTextureID">
            <summary>The soil texture identifier</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.n2o_approach">
            <summary>The n2o_approach</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.wnmm_n_alpha">
            <summary>The wnmm_n_alpha</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.wnmm_dn_alpha">
            <summary>The wnmm_dn_alpha</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.nemis_dn_km">
            <summary>The nemis_dn_km</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.nemis_dn_pot">
            <summary>The nemis_dn_pot</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.cent_n_soilt_ave">
            <summary>The cent_n_soilt_ave</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.cent_n_maxt_ave">
            <summary>The cent_n_maxt_ave</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.cent_n_wfps_ave">
            <summary>The cent_n_wfps_ave</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.cent_n_max_rate">
            <summary>The cent_n_max_rate</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.SoilCNParameterSet">
            <summary>Soil parameterisation set to use</summary>
            <remarks>Used to determine which node of xml file will be used to read 's</remarks>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.AllowsimpleSoilTemp">
            <summary>Indicates whether simpleSoilTemp is allowed</summary>
            <remarks>
            When 'yes', soil temperature may be computed internally, if an external value is not supplied.
            If 'no', a value for soil temperature must be supplied or an fatal error will occur.
            </remarks>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.AllowProfileReduction">
            <summary>Indicates whether soil profile reduction is allowed (from erosion)</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.useOrganicSolutes">
            <summary>Indicates whether organic solutes are to be simulated</summary>
            <remarks>Always false as this is not implemented yet</remarks>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.ureappm_min">
            <summary>Minimum allowable Urea content (ppm)</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.nh4ppm_min">
            <summary>Minimum allowable NH4 content (ppm)</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.no3ppm_min">
            <summary>Minimum allowable NO3 content (ppm)</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.fom_min">
            <summary>Minimum allowable FOM content (kg/ha)</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.ini_FOMtype">
            <summary>FOM type for initalisation</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.oc2om_factor">
            <summary>Factor to convert from OC to OM</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.defaultFOMCarbonContent">
            <summary>Default weight fraction of C in carbohydrates</summary>
            <remarks>Used to convert FOM amount into fom_c</remarks>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.ini_pH">
            <summary>Defaul value for initialising soil pH</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.MinimumPatchArea">
            <summary>Minimum relative area (fraction of paddock) for any patch</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.WarningThreshold">
            <summary>
            Absolute threshold value to trigger a warning message when negative values are detected
            </summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.FatalThreshold">
            <summary>
            Absolute threshold value to trigger a fatal error when negative values are detected
            </summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.enr_a_coeff">
            <summary>Coefficient a of the enrichment equation</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.enr_b_coeff">
            <summary>Coefficient b of the enrichment equation</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.hum_cn">
            <summary>The C:N ratio of the soil humus (active + inert)</summary>
            <remarks>Remains fixed throughout the simulation</remarks>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.biom_cn">
            <summary>The C:N ratio of microbial biomass</summary>
            <remarks>Remains fixed throughout the simulation</remarks>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.fbiom">
            <summary>Proportion of biomass-C in the initial mineralizable humic-C (0-1)</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.finert">
            <summary>
            Proportion of the initial total soil C that is inert, not subject to mineralisation (0-1)
            </summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.iniFomWt">
            <summary>Initial weight of fom in the soil (kgDM/ha)</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.iniFomDepth">
            <summary>Initial depth over which fom is distributed within the soil profile (mm)</summary>
            <remarks>
            If not given fom will be distributed over the whole soil profile
            Distribution is homogenous over this depth
            </remarks>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.iniFomCNratio">
            <summary>Initial C:N ratio of roots (actually FOM)</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.fomPoolsCNratio">
            <summary>
            Initial C:N ratio of each of the three fom composition pools (carbohydrate, cellulose, and lignin)
            </summary>
            <remarks>Case not given, iniFomCNratio is used</remarks>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.root_cn_pool">
            <summary>The root_cn_pool</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.fom_types">
            <summary>List of available FOM types names</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.fract_carb">
            <summary>Fraction of carbohydrate in FOM (0-1), for each FOM type</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.fract_cell">
            <summary>Fraction of cellulose in FOM (0-1), for each FOM type</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.fract_lign">
            <summary>Fraction of lignin in FOM (0-1), for each FOM type</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.ef_res">
            <summary>Fraction of residue C mineralised retained in system (0-1)</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.fr_res_biom">
            <summary>Fraction of retained residue C transferred to biomass (0-1)</summary>
            <remarks>Remaining will got into humus</remarks>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.min_depth">
            <summary>
            Depth from which mineral N can be immobilised when decomposing surface residues (mm)
            </summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.rd_carb">
            <summary>
            Optimum rate constant for decomposition of FOM pools [carbohydrate component] (0-1)
            </summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.rd_cell">
            <summary>Optimum rate constant for decomposition of FOM pools [cellulose component] (0-1)</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.rd_lign">
            <summary>Optimum rate constant for decomposition of FOM pools [lignin component] (0-1)</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.ef_fom">
            <summary>Fraction of FOM C mineralised retained in system (0-1)</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.fr_fom_biom">
            <summary>Fraction of retained FOM C transferred to biomass (0-1)</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.cnrf_coeff">
            <summary>Coeff. to determine the magnitude of C:N effects on decomposition of FOM</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.cnrf_optcn">
            <summary>C:N above which decomposition rate of FOM declines</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.TempFactorData_MinerFOM">
            <summary>Data for calculating the temperature effect on FOM mineralisation</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.MoistFactorData_MinerFOM">
            <summary>Parameters for calculating the soil moisture factor for FOM mineralisation</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.CNFactorMinerFOM_OptCN">
            <summary>Optimum C:N ratio, below which mineralisation of FOM is unlimited</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.CNFactorMinerFOM_RateCN">
            <summary>Decrease for the CN factor when C:N is greater then optimum</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.rd_biom">
            <summary>Potential rate of soil biomass mineralisation (fraction per day)</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.ef_biom">
            <summary>Fraction of biomass C mineralised retained in system (0-1)</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.fr_biom_biom">
            <summary>Fraction of retained biomass C returned to biomass (0-1)</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.rd_hum">
            <summary>Potential rate of humus mineralisation (per day)</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.ef_hum">
            <summary>Fraction of humic C mineralised retained in system (0-1)</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.opt_temp">
            <summary>
            Soil temperature above which there is no further effect on mineralisation and nitrification (oC)
            </summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.wfmin_index">
            <summary>Index specifying water content for computing moisture factor for mineralisation</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.wfmin_values">
            <summary>Value of moisture factor (for mineralisation) function at given index values</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.TempFactorData_MinerSOM">
            <summary>Data to calculate the temperature effect on SOM mineralisation</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.MoistFactorData_MinerSOM">
            <summary>Parameters to calculate soil moisture factor for OM mineralisation</summary>
            <remarks>These are pairs of points representing a broken stick function</remarks>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.TempFactorData_MinerSOM_Hum">
            <summary>Parameters to calculate the temperature effects on mineralisation - humus</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.MoistFactorData_MinerSOM_Hum">
            <summary>Parameters to calculate the soil moisture factor for mineralisation of humus</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.TempFactorData_MinerSOM_Biom">
            <summary>Parameters to calculate the temperature effects on mineralisation - biom</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.MoistFactorData_MinerSOM_Biom">
            <summary>Parameters to calculate the soil moisture factor for mineralisation of biom</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.TempFactorData_UHydrol">
            <summary>Parameters to calculate the temperature effect on urea hydrolysis</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.MoistFactorData_UHydrol">
            <summary>Parameters to calculate the moisture effect on urea hydrolysis</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.potHydrol_min">
            <summary>Minimum value for hydrolysis rate</summary>
            Parameters for calculating the potential urea hydrolisys
        </member>
        <member name="F:Models.Soils.SoilNitrogen.potHydrol_parmA">
            <summary>Paramter A of the function determining potential urea hydrolysis</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.potHydrol_parmB">
            <summary>Paramter B of the function determining potential urea hydrolysis</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.potHydrol_parmC">
            <summary>Paramter C of the function determining potential urea hydrolysis</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.potHydrol_parmD">
            <summary>Paramter D of the function determining potential urea hydrolysis</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.nitrification_pot">
            <summary>Maximum potential nitrification (ppm/day)</summary>
            <remarks>
            This is the parameter M on Michaelis-Menten equation
            r = MC/(k+C)
            </remarks>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.nh4_at_half_pot">
            <summary>NH4 conc. at half potential rate (ppm)</summary>
            <remarks>
            This is the parameter k on Michaelis-Menten equation
            r = MC/(k+C)
            </remarks>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.wfnit_index">
            <summary>Index specifying water content for water factor for nitrification</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.wfnit_values">
            <summary>Value of water factor (for nitrification) function at given index values</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.pHf_nit_pH">
            <summary>pH values for specifying pH factor for nitrification</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.pHf_nit_values">
            <summary>Value of pH factor (for nitrification) function for given pH values</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.TempFactorData_Nitrif">
            <summary>Parameters to calculate the temperature effect on nitrification</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.MoistFactorData_Nitrif">
            <summary>Parameters to calculate the soil moisture factor for nitrification</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.pHFactorData_Nitrif">
            <summary>Parameters to calculate the soil pH factor for nitrification</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.dnit_rate_coeff">
            <summary>Denitrification rate coefficient (kg/mg)</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.dnit_nitrf_loss">
            <summary>Fraction of nitrification lost as denitrification</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.dnit_k1">
            <summary>Parameter k1 from Thorburn et al (2010) for N2O model</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.dnit_wf_power">
            <summary>Power term to calculate water factor for denitrification</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.dnit_wfps">
            <summary>Values of WFPS for calculating the N2O fraction of denitrification</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.dnit_n2o_factor">
            <summary>Values of WFPS factor for N2O fraction of denitrification</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.actC_parmB">
            <summary>Parameter A to compute active carbon (for denitrification)</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.actC_parmA">
            <summary>Parameter B to compute active carbon (for denitrification)</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.TempFactorData_Denit">
            <summary>Parameters to calculate the temperature effect on denitrification</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.MoistFactorData_Denit">
            <summary>Parameters to calculate the soil moisture factor for denitrification</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.N2N2O_parmA">
            <summary>Parameter A in the N2N2O function</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.N2N2O_parmB">
            <summary>Parameter B in the N2N2O function</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.WFPSFactorData_N2N2O">
            <summary>Parameters to calculate the soil moisture factor for denitrification gas ratio</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.dlayer">
            <summary>Soil layers' thichness (mm)</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.bd">
            <summary>Soil bulk density for each layer (g/cm3)</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.sat_dep">
            <summary>Soil water amount at saturation (mm)</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.dul_dep">
            <summary>Soil water amount at drainage upper limit (mm)</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.ll15_dep">
            <summary>Soil water amount at drainage lower limit (mm)</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.sw_dep">
            <summary>Today's soil water amount (mm)</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.salb">
            <summary>Soil albedo (0-1)</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.ave_soil_temp">
            <summary>Soil temperature (oC), as computed by an external module (SoilTemp)</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.ph">
            <summary>pH of soil (assumed equivalent to a 1:1 soil-water slurry)</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.OC_reset">
            <summary>
            Stores initial OC values until dlayer is available, can be used for a Reset operation
            </summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.ureappm_reset">
            <summary>
            Stores initial values until dlayer is available, can be used for a Reset operation
            </summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.nh4ppm_reset">
            <summary>
            Stores initial values until dlayer is available, can be used for a Reset operation
            </summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.no3ppm_reset">
            <summary>
            Stores initial values until dlayer is available, can be used for a Reset operation
            </summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.allowProfileReduction">
            <summary>Indicates whether soil profile reduction is allowed (from erosion)</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.soil_loss">
            <summary>Soil loss, due to erosion (?)</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.isPondActive">
            <summary>Indicates whether pond is active or not</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.pond_biom_C">
            <summary>Amount of C decomposed in pond that is added to soil m. biomass</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.pond_hum_C">
            <summary>Amount of C decomposed in pond that is added to soil humus</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.InhibitionFactor_UHydrolysis">
            <summary>The inhibition factor_ u hydrolysis</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.InhibitionFactor_Nitrification">
            <summary>Factor reducing nitrification due to the presence of a inhibitor</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.InhibitionFactor_Denitrification">
            <summary>The inhibition factor_ denitrification</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.InhibitionFactor_Mineralisation">
            <summary>The inhibition factor_ mineralisation</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.urea_min">
            <summary>Minimum allowable urea amount in each layer</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.nh4_min">
            <summary>Minimum allowable NH4 amount in each layer</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.no3_min">
            <summary>Minimum allowable NO3 amount in each layer</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.Tsoil">
            <summary>Soil temperature (oC), values actually used in the model</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.PatchesData">
            <summary>The patches data</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.EPSILON">
            <summary>Value to evaluate precision against floating point variables</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.Patch">
            <summary>List of all existing patches (internal instances of C and N processes)</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.simpleST">
            <summary>The internal soil temp module - to be avoided (deprecated)</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.initDone">
            <summary>Marker for whether initialisation has been finished or not</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.inReset">
            <summary>Marker for whether a reset is going on</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.use_external_st">
            <summary>Marker for whether external soil temperature is supplied, otherwise use internal</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.use_external_ph">
            <summary>Marker for whether external ph is supplied, otherwise default is used</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.is_pond_active">
            <summary>
            Marker for whether there is pond water, decomposition of surface OM will be done by that model
            </summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.dailyInitialC">
            <summary>Total C content at the beginning of the day</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.dailyInitialN">
            <summary>Total N content at the beginning of the day</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.fom_type">
            <summary>Type of fom</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.num_residues">
            <summary>Number of surface residues whose decomposition is being calculated</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.UreaHydrolysisApproach">
            <summary>Approach to be used when computing urea hydrolysis</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.NitrificationApproach">
            <summary>Approach to be used when computing nitrification</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.DenitrificationApproach">
            <summary>Approach to be used when computing denitrification</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.Summary">
            <summary>The summary</summary>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.AddNewCNPatch(Models.Soils.SoilNitrogen.AddSoilCNPatchType)">
            <summary>Handles the addition of new CNPatches</summary>
            <param name="PatchtoAdd">Patch data</param>
            <exception cref="T:System.Exception"> Cannot create new patch, area of selected patches ( + AreaAffected.ToString(#0.00#)
                                               + ) is smaller than area of new patch( + PatchtoAdd.AreaFraction.ToString(#0.00#) + )</exception>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.SplitPatch(System.Int32)">
            <summary>
            Split an existing patch in two. That is, creates a new patch (k) based on an existing one (j)
            </summary>
            <param name="j">The j.</param>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.AmalgamatePatches(System.Collections.Generic.List{System.Int32})">
            <summary>Controls the merging of a group of patches into a single one</summary>
            <param name="PatchesToMerge">List of patches to merge</param>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.MergePatches(System.Int32,System.Int32)">
            <summary>Merges two patches</summary>
            <param name="recipient">Patch which will recieve the areas and the status of the disappearing patch</param>
            <param name="disappearing">Patch that will no longer exist</param>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.DeletePatches(System.Collections.Generic.List{System.Int32})">
            <summary>Delete patches in the list</summary>
            <param name="PatchesToDelete">List of patches to delete</param>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.CheckPatchIDs(System.Int32[],System.String[])">
            <summary>Check the list of patch names and ids passed by 'AddSoilCNPatch' event</summary>
            <param name="IDsToCheck">IDs or indices of patches</param>
            <param name="NamesToCheck">Name of patches</param>
            <returns>List of patch IDs, or indices</returns>
            <remarks>
            Verify whether the names correspond to existing patches, verify whether there are replicates
            </remarks>
            <documentation>
            With the AddSoilCNPatch event the user can tell the index or the name of the patch to which urine (or whatever) is added;
            this function will then check whether the patch(es) exist or not and filter out any replicates.
            User can pass ids (indices) or names of patches, or even both. This function will check both, eliminate replicates and
            non-existent references. The output is only the indices of selected patches
            </documentation>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.ComparePatches">
            <summary>Compare the diffs for all existing patches</summary>
            <returns>The IDs of pairs that can be merged</returns>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.AddStuffToPatches(System.Collections.Generic.List{System.Int32},Models.Soils.SoilNitrogen.AddSoilCNPatchType)">
            <summary>Controls the addition of several variables to the especified patches</summary>
            <param name="PatchesToAdd">The list of patches to which the stuff will be added</param>
            <param name="StuffToAdd">The values of the variables to add (supplied as deltas)</param>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.partitionDelta(System.Double[],System.String,System.String)">
            <summary>calculate how the dlt's (C and N) are partitioned amongst patches</summary>
            <param name="incomingDelta">The dlt to be partioned amongst patches</param>
            <param name="SoluteName">The solute or pool that is changing</param>
            <param name="PartitionType">Type of the partition.</param>
            <returns>The values of dlt for each existing patch</returns>
            <exception cref="T:System.Exception">
             The solute + SoluteName
                                            +  is not recognised by SoilNitrogen -  solute partition
            or
             problems with partitioning  + SoluteName + -  + e.ToString()
            </exception>
        </member>
        <member name="E:Models.Soils.SoilNitrogen.ExternalMassFlow">
            <summary>Occurs when [external mass flow].</summary>
        </member>
        <member name="E:Models.Soils.SoilNitrogen.NewSolute">
            <summary>Occurs when [new solute].</summary>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.useAllNewFunctions">
            <summary>Sets the use all new functions.</summary>
            <value>The use all new functions.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.useNewFunction4TF">
            <summary>Sets the use new function4 tf.</summary>
            <value>The use new function4 tf.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.useNewFunction4WF">
            <summary>Sets the use new function4 wf.</summary>
            <value>The use new function4 wf.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.useSingleFactors4Miner">
            <summary>Sets the use single factors4 miner.</summary>
            <value>The use single factors4 miner.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.useMultiFactors4MinerSOM">
            <summary>Sets the use multi factors4 miner som.</summary>
            <value>The use multi factors4 miner som.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.useMultiFactors4MinerFOM">
            <summary>Sets the use multi factors4 miner fom.</summary>
            <value>The use multi factors4 miner fom.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.texture">
            <summary>Sets the texture.</summary>
            <value>The texture.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.soiltype">
            <summary>Gets or sets the soiltype.</summary>
            <value>The soiltype.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.allow_simpleSoilTemp">
            <summary>Gets or sets the allow_simple soil temporary.</summary>
            <value>The allow_simple soil temporary.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.profile_reduction">
            <summary>Gets or sets the profile_reduction.</summary>
            <value>The profile_reduction.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.use_organic_solutes">
            <summary>Gets or sets the use_organic_solutes.</summary>
            <value>The use_organic_solutes.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.c_in_fom">
            <summary>Gets or sets the c_in_fom.</summary>
            <value>The c_in_fom.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.minPatchArea">
            <summary>Gets or sets the minimum patch area.</summary>
            <value>The minimum patch area.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.soil_cn">
            <summary>The C:N ratio of the soil OM, from xml/GUI (actually of humus)</summary>
            <value>The soil_cn.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.mcn">
            <summary>Gets or sets the MCN.</summary>
            <value>The MCN.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.root_wt">
            <summary>Gets or sets the root_wt.</summary>
            <value>The root_wt.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.root_depth">
            <summary>Gets or sets the root_depth.</summary>
            <value>The root_depth.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.root_cn">
            <summary>Gets or sets the root_cn.</summary>
            <value>The root_cn.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.stfMinerFOM_Topt">
            <summary>Optimum temperature for mineralisation of FOM</summary>
            <value>The STF miner fo m_ topt.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.stfMinerFOM_FctrZero">
            <summary>Temperature factor for mineralisation of FOM at zero degrees</summary>
            <value>The STF miner fo m_ FCTR zero.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.stfMinerFOM_CvExp">
            <summary>Curve exponent for temperature factor for mineralisation of FOM</summary>
            <value>The STF miner fo m_ cv exp.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.swfMinerFOM_x">
            <summary>Values of modified soil water content at which the moisture factor is given</summary>
            <value>The SWF miner fo M_X.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.swfMinerFOM_y">
            <summary>Moiture factor values for the given modified soil water content</summary>
            <value>The SWF miner fo m_y.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.cnfMinerFOM_OptCN">
            <summary>Sets the CNF miner fo m_ opt cn.</summary>
            <value>The CNF miner fo m_ opt cn.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.cnfMinerFOM_RateCN">
            <summary>Sets the CNF miner fo m_ rate cn.</summary>
            <value>The CNF miner fo m_ rate cn.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.stfMiner_Topt">
            <summary>Optimum temperature for OM mineralisation</summary>
            <value>The STF miner_ topt.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.stfMiner_FctrZero">
            <summary>Temperature factor for OM mineralisation at zero degree</summary>
            <value>The STF miner_ FCTR zero.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.stfMiner_CvExp">
            <summary>Curve exponent to calculate temperature factor for OM mineralisation</summary>
            <value>The STF miner_ cv exp.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.swfMiner_x">
            <summary>Values of the modified soil water content at which misture factor is know</summary>
            <value>The SWF miner_x.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.swfMiner_y">
            <summary>Values of the moisture factor at the given modified water content</summary>
            <value>The SWF miner_y.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.stfMinerHum_Topt">
            <summary>Optimum temperature for mineralisation of humus</summary>
            <value>The STF miner hum_ topt.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.stfMinerHum_FctrZero">
            <summary>Temperature factor for mineralisation of humus at zero degrees</summary>
            <value>The STF miner hum_ FCTR zero.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.stfMinerHum_CvExp">
            <summary>Curve exponent for calculating the temperature factor for mineralisation of humus</summary>
            <value>The STF miner hum_ cv exp.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.swfMinerHum_x">
            <summary>Values of the modified soil water content at which the moisture factor is know</summary>
            <value>The SWF miner hum_x.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.swfMinerHum_y">
            <summary>Values of the moisture factor at given water content values</summary>
            <value>The SWF miner hum_y.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.stfMinerBiom_Topt">
            <summary>Optimum temperature for mineralisation of biom</summary>
            <value>The STF miner biom_ topt.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.stfMinerBiom_FctrZero">
            <summary>Temperature factor for mineralisation of biom at zero degrees</summary>
            <value>The STF miner biom_ FCTR zero.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.stfMinerBiom_CvExp">
            <summary>Curve exponent for calculating the temperature factor for mineralisation of biom</summary>
            <value>The STF miner biom_ cv exp.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.swfMinerBiom_x">
            <summary>Values of the modified soil water content at which the moisture factor is know</summary>
            <value>The SWF miner biom_x.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.swfMinerBiom_y">
            <summary>Values of the moisture factor at given water content values</summary>
            <value>The SWF miner biom_y.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.stfHydrol_Topt">
            <summary>Optimum temperature for urea hydrolisys</summary>
            <value>The STF hydrol_ topt.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.stfHydrol_FctrZero">
            <summary>Temperature factor for urea hydrolisys at zero degrees</summary>
            <value>The STF hydrol_ FCTR zero.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.stfHydrol_CvExp">
            <summary>Curve exponent to calculate the temperature factor for urea hydrolisys</summary>
            <value>The STF hydrol_ cv exp.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.swfHydrol_x">
            <summary>Values of the modified soil water content at which factor is known</summary>
            <value>The SWF hydrol_x.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.swfHydrol_y">
            <summary>Values of the modified moisture factor at given water content</summary>
            <value>The SWF hydrol_y.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.stfNitrif_Topt">
            <summary>Optimum temperature for nitrification</summary>
            <value>The STF nitrif_ topt.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.stfNitrif_FctrZero">
            <summary>Temperature factor for nitrification at zero degrees</summary>
            <value>The STF nitrif_ FCTR zero.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.stfNitrif_CvExp">
            <summary>Curve exponent for calculating the temperature factor for nitrification</summary>
            <value>The STF nitrif_ cv exp.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.swfNitrif_x">
            <summary>Values of the modified soil water content at which the moisture factor is known</summary>
            <value>The SWF nitrif_x.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.swfNitrif_y">
            <summary>Values of the moisture factor at given water content</summary>
            <value>The SWF nitrif_y.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.sphfNitrif_x">
            <summary>Values of pH at which factors is known</summary>
            <value>The SPHF nitrif_x.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.sphfNitrif_y">
            <summary>Values of pH factor ar given pH values</summary>
            <value>The SPHF nitrif_y.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.stfDenit_Topt">
            <summary>Optimum temperature for denitrification</summary>
            <value>The STF denit_ topt.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.stfDenit_FctrZero">
            <summary>Temperature factor for denitrification at zero degrees</summary>
            <value>The STF denit_ FCTR zero.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.stfDenit_CvExp">
            <summary>Curve exponent for calculating the temperature factor for denitrification</summary>
            <value>The STF denit_ cv exp.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.swfDenit_x">
            <summary>Values of modified soil water content at which the moisture factor is known</summary>
            <value>The SWF denit_x.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.swfDenit_y">
            <summary>Values of the moisture factor at given water content values</summary>
            <value>The SWF denit_y.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.wfpsN2N2O_x">
            <summary>Values of modified soil water content at which the moisture factor is known</summary>
            <value>The WFPS n2 n2 o_x.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.wfpsN2N2O_y">
            <summary>Values of the moisture factor at given water content values</summary>
            <value>The WFPS n2 n2 o_y.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.oc">
            <summary>Total soil organic carbon content (%)</summary>
            <value>The oc.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.ureappm">
            <summary>Soil urea nitrogen content (ppm)</summary>
            <value>The ureappm.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.urea">
            <summary>Soil urea nitrogen amount (kgN/ha)</summary>
            <value>The urea.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.NH4ppm">
            <summary>Soil ammonium nitrogen content (ppm)</summary>
            <value>The NH4PPM.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.NH4">
            <summary>Soil ammonium nitrogen amount (kg/ha)</summary>
            <value>The NH4.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.NO3ppm">
            <summary>Soil nitrate nitrogen content (ppm)</summary>
            <value>The no3ppm.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.NO3">
            <summary>Soil nitrate nitrogen amount (kgN/ha)</summary>
            <value>The no3.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.n_reduction">
            <summary>Sets the n_reduction.</summary>
            <value>The n_reduction.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.pond_active">
            <summary>Sets the pond_active.</summary>
            <value>The pond_active.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.hydrolysis_inhibition">
            <summary>Gets or sets the hydrolysis_inhibition.</summary>
            <value>The hydrolysis_inhibition.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.nitrification_inhibition">
            <summary>Sets the nitrification_inhibition.</summary>
            <value>The nitrification_inhibition.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.Denitrification_inhibition">
            <summary>Gets or sets the denitrification_inhibition.</summary>
            <value>The denitrification_inhibition.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.mineralisation_inhibition">
            <summary>Gets or sets the mineralisation_inhibition.</summary>
            <value>The mineralisation_inhibition.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.dlt_ureappm">
            <summary>Variations in ureappm as given by another component</summary>
            <value>The dlt_ureappm.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.dlt_urea">
            <summary>Variations in urea as given by another component</summary>
            <value>The dlt_urea.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.dlt_nh4ppm">
            <summary>Variations in nh4ppm as given by another component</summary>
            <value>The DLT_NH4PPM.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.dlt_nh4">
            <summary>Variations in nh4 as given by another component</summary>
            <value>The DLT_NH4.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.dlt_no3ppm">
            <summary>Variations in no3ppm as given by another component</summary>
            <value>The dlt_no3ppm.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.dlt_no3">
            <summary>Variations in no3 as given by another component</summary>
            <value>The dlt_no3.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.dlt_org_n">
            <summary>Variations in org_n as given by another component</summary>
            <value>The dlt_org_n.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.dlt_org_c_pool1">
            <summary>Variations in org_c_pool1 as given by another component</summary>
            <value>The dlt_org_c_pool1.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.dlt_org_c_pool2">
            <summary>Variations in org_c_pool2 as given by another component</summary>
            <value>The dlt_org_c_pool2.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.dlt_org_c_pool3">
            <summary>Variations in org_c_pool3 as given by another component</summary>
            <value>The dlt_org_c_pool3.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.org_c_pool1">
            <summary>Amount of C in pool1 of FOM - doesn't seem to be fully implemented</summary>
            <value>The org_c_pool1.</value>
            <exception cref="T:System.Exception">Value given for fom_c_pool1 is negative</exception>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.org_c_pool2">
            <summary>Amount of C in pool2 of FOM - doesn't seem to be fully implemented</summary>
            <value>The org_c_pool2.</value>
            <exception cref="T:System.Exception">Value given for fom_c_pool2 is negative</exception>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.org_c_pool3">
            <summary>Amount of C in pool3 of FOM - doesn't seem to be fully implemented</summary>
            <value>The org_c_pool3.</value>
            <exception cref="T:System.Exception">Value given for fom_c_pool3 is negative</exception>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.org_n">
            <summary>Amount of N in FOM - doesn't seem to be fully implemented</summary>
            <value>The org_n.</value>
            <exception cref="T:System.Exception">Value given for fom_n is negative</exception>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.dlt_n_loss_in_sed">
            <summary>N carried out in sediment via runoff/erosion</summary>
            <value>The dlt_n_loss_in_sed.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.dlt_nh4_net">
            <summary>Net nh4 change today</summary>
            <value>The dlt_nh4_net.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.nh4_transform_net">
            <summary>Net NH4 transformation today</summary>
            <value>The nh4_transform_net.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.dlt_no3_net">
            <summary>Net no3 change today</summary>
            <value>The dlt_no3_net.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.no3_transform_net">
            <summary>Net NO3 transformation today</summary>
            <value>The no3_transform_net.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.MineralisedN">
            <summary>Net mineralisation today</summary>
            <value>The dlt_n_min.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.dlt_n_min_res">
            <summary>Net N mineralisation from residue decomposition</summary>
            <value>The dlt_n_min_res.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.dlt_res_nh4_min">
            <summary>Net NH4 mineralisation from residue decomposition</summary>
            <value>The dlt_res_nh4_min.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.dlt_res_no3_min">
            <summary>Net NO3 mineralisation from residue decomposition</summary>
            <value>The dlt_res_no3_min.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.dlt_fom_n_min">
            <summary>Net fom N mineralised (negative for immobilisation)</summary>
            <value>The dlt_fom_n_min.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.dlt_hum_n_min">
            <summary>Net N mineralised for humic pool</summary>
            <value>The dlt_hum_n_min.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.dlt_biom_n_min">
            <summary>Net N mineralised from m. biomass pool</summary>
            <value>The dlt_biom_n_min.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.dlt_n_min_tot">
            <summary>Total net N mineralised (residues plus soil OM)</summary>
            <value>The dlt_n_min_tot.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.dlt_urea_hydrol">
            <summary>Nitrogen coverted by hydrolysis (from urea to NH4)</summary>
            <value>The dlt_urea_hydrol.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.dlt_rntrf">
            <summary>
            Nitrogen coverted by nitrification (from NH4 to either NO3 or N2O) - alias of nitrification
            </summary>
            <value>The DLT_RNTRF.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.Nitrification">
            <summary>Nitrogen coverted by nitrification (from NH4 to either NO3 or N2O)</summary>
            <value>The nitrification.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.effective_nitrification">
            <summary>Effective, or net, nitrogen coverted by nitrification (from NH4 to NO3)</summary>
            <value>The effective_nitrification.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.dlt_nh4_dnit">
            <summary>NH4 N denitrified</summary>
            <value>The dlt_nh4_dnit.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.dlt_no3_dnit">
            <summary>NO3 N denitrified</summary>
            <value>The dlt_no3_dnit.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.n2o_atm">
            <summary>Total N2O amount produced today</summary>
            <value>The n2o_atm.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.n2o_atm_nitrification">
            <summary>Amount of N2O produced by nitrification</summary>
            <value>The n2o_atm_nitrification.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.n2o_atm_dentrification">
            <summary>Amount of N2O produced by denitrification</summary>
            <value>The n2o_atm_dentrification.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.n2_atm">
            <summary>Amount of N2 produced</summary>
            <value>The n2_atm.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.Denitrification">
            <summary>N converted by denitrification</summary>
            <value>The dnit.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.nh4_deficit_immob">
            <summary>Excess N required above NH4 supply (for immobilisation)</summary>
            <value>The nh4_deficit_immob.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.FOMN">
            <summary>Total nitrogen in FOM</summary>
            <value>The fom_n.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.fom_n_pool1">
            <summary>Nitrogen in FOM pool 1</summary>
            <value>The fom_n_pool1.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.fom_n_pool2">
            <summary>Nitrogen in FOM pool 2</summary>
            <value>The fom_n_pool2.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.fom_n_pool3">
            <summary>Nitrogen in FOM pool 3</summary>
            <value>The fom_n_pool3.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.HumicN">
            <summary>Soil humic N</summary>
            <value>The hum_n.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.MicrobialN">
            <summary>Soil biomass nitrogen</summary>
            <value>The biom_n.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.TotalN">
            <summary>Total N in soil</summary>
            <value>The nit_tot.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.nitrogenbalance">
            <summary>Balance of nitrogen: deltaN - losses</summary>
            <value>The nitrogenbalance.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.num_fom_types">
            <summary>Number of fom types read - is this really needed?</summary>
            <value>The num_fom_types.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.fr_carb">
            <summary>Carbohydrate fraction of FOM (0-1)</summary>
            <value>The fr_carb.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.fr_cell">
            <summary>Cellulose fraction of FOM (0-1)</summary>
            <value>The fr_cell.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.fr_lign">
            <summary>Lignin fraction of FOM (0-1)</summary>
            <value>The fr_lign.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.dlt_c_loss_in_sed">
            <summary>Carbon loss in sediment, via runoff/erosion</summary>
            <value>The dlt_c_loss_in_sed.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.dlt_fom_c_hum">
            <summary>Amount of C converted from FOM to humic (kg/ha)</summary>
            <value>The dlt_fom_c_hum.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.dlt_fom_c_biom">
            <summary>Amount of C converted from FOM to m. biomass (kg/ha)</summary>
            <value>The dlt_fom_c_biom.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.dlt_fom_c_atm">
            <summary>Amount of C lost to atmosphere from FOM</summary>
            <value>The dlt_fom_c_atm.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.dlt_hum_c_biom">
            <summary>Humic C converted to biomass</summary>
            <value>The dlt_hum_c_biom.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.dlt_hum_c_atm">
            <summary>Humic C lost to atmosphere</summary>
            <value>The dlt_hum_c_atm.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.dlt_biom_c_hum">
            <summary>Biomass C converted to humic</summary>
            <value>The dlt_biom_c_hum.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.dlt_biom_c_atm">
            <summary>Biomass C lost to atmosphere</summary>
            <value>The dlt_biom_c_atm.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.dlt_res_c_biom">
            <summary>Carbon from residues converted to biomass C</summary>
            <value>The dlt_res_c_biom.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.dlt_res_c_hum">
            <summary>Carbon from residues converted to humic C</summary>
            <value>The dlt_res_c_hum.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.dlt_res_c_atm">
            <summary>Carbon from residues lost to atmosphere</summary>
            <value>The dlt_res_c_atm.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.dlt_fom_c_pool1">
            <summary>Delta C in pool 1 of FOM</summary>
            <value>The dlt_fom_c_pool1.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.dlt_fom_c_pool2">
            <summary>Delta C in pool 2 of FOM</summary>
            <value>The dlt_fom_c_pool2.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.dlt_fom_c_pool3">
            <summary>Delta C in pool 3 of FOM</summary>
            <value>The dlt_fom_c_pool3.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.soilp_dlt_res_c_atm">
            <summary>Carbon lost from all residues to atmosphere</summary>
            <value>The soilp_dlt_res_c_atm.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.soilp_dlt_res_c_hum">
            <summary>Carbon from all residues to humic pool</summary>
            <value>The soilp_dlt_res_c_hum.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.soilp_dlt_res_c_biom">
            <summary>Carbon from all residues to m. biomass</summary>
            <value>The soilp_dlt_res_c_biom.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.FOMC">
            <summary>Fresh organic C - FOM</summary>
            <value>The fom_c.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.fom_c_pool1">
            <summary>Amount of C in pool 1 of FOM</summary>
            <value>The fom_c_pool1.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.fom_c_pool2">
            <summary>Amount of C in pool 2 of FOM</summary>
            <value>The fom_c_pool2.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.fom_c_pool3">
            <summary>Amount of C in pool 3 of FOM</summary>
            <value>The fom_c_pool3.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.HumicC">
            <summary>Amount of C in humic pool</summary>
            <value>The hum_c.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.InertC">
            <summary>Amount of C in inert humic pool</summary>
            <value>The inert_c.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.MicrobialC">
            <summary>Amount of C in m. biomass pool</summary>
            <value>The biom_c.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.TotalC">
            <summary>Total carbon amount in the soil</summary>
            <value>The carbon_tot.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.carbonbalance">
            <summary>Balance of C in soil: deltaC - losses</summary>
            <value>The carbonbalance.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.soilp_dlt_org_p">
            <summary>amount of P coverted by residue mineralisation</summary>
            <value>The soilp_dlt_org_p.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.st">
            <summary>SoilN's simple soil temperature</summary>
            <value>The st.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.tf">
            <summary>Temperature factor for nitrification and mineralisation</summary>
            <value>The tf.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.numPatches">
            <summary>Number of internal patches</summary>
            <value>The number patches.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.PatchArea">
            <summary>Relative area of each internal patch</summary>
            <value>The patch area.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.CNPatch_no3">
            <summary>Relative area of each internal patch</summary>
            <value>The cn patch_no3.</value>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.CNPatch_hum_c">
            <summary>Relative area of each internal patch</summary>
            <value>The cn patch_hum_c.</value>
        </member>
        <member name="T:Models.Soils.SoilNitrogen.ExternalMassFlowDelegate">
            <summary>
            Event to communicate other modules of C and/or N changes to/from outside the simulation
            </summary>
            <param name="Data">The data.</param>
        </member>
        <member name="T:Models.Soils.SoilNitrogen.NewSoluteDelegate">
            <summary>
            Event to communicate other modules that solutes have been added to the simulation (owned by SoilNitrogen)
            </summary>
            <param name="Data">The data.</param>
        </member>
        <member name="T:Models.Soils.SoilNitrogen.SurfaceOrganicMatterDecompDelegate">
            <summary>Event to comunicate other modules (SurfaceOM) that residues have been decomposed</summary>
            <param name="Data">The data.</param>
        </member>
        <member name="T:Models.Soils.SoilNitrogen.PatchIDs">
            <summary>List with patch ids to merge</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.PatchIDs.disappearing">
            <summary>IDs of disappearing patches</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.PatchIDs.recipient">
            <summary>IDs of patches receiving the area and status of disappearing patches</summary>
        </member>
        <member name="T:Models.Soils.SoilNitrogen.BentStickData">
            <summary>
            The parameters to compute a exponential type function (used for example for temperature factor)
            </summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.BentStickData.xValueForOptimum">
            <summary>Optimum temperature, when factor is equal to one</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.BentStickData.yValueAtZero">
            <summary>Value of factor when temperature is equal to zero celsius</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.BentStickData.CurveExponent">
            <summary>Exponent defining the curvature of the factors</summary>
        </member>
        <member name="T:Models.Soils.SoilNitrogen.BrokenStickData">
            <summary>
            Lists of x and y values used to describe certain a 'broken stick' function (e.g. moisture factor)
            </summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.BrokenStickData.xVals">
            <summary>The values in the x-axis</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.BrokenStickData.yVals">
            <summary>The values in the y-axis</summary>
        </member>
        <member name="T:Models.Soils.SoilNitrogen.UreaHydrolysisApproaches">
            <summary>List of approaches available for computing urea hydrolysis</summary>
        </member>
        <member name="T:Models.Soils.SoilNitrogen.NitrificationApproaches">
            <summary>List of approaches available for computing nitrification</summary>
        </member>
        <member name="T:Models.Soils.SoilNitrogen.DenitrificationApproaches">
            <summary>List of approaches available for computing denitrification</summary>
        </member>
        <member name="T:Models.Soils.SoilNitrogen.AddSoilCNPatchType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.AddSoilCNPatchType.Sender">
            <summary>The sender</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.AddSoilCNPatchType.DepositionType">
            <summary>The deposition type</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.AddSoilCNPatchType.AffectedPatches_nm">
            <summary>The affected patches_nm</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.AddSoilCNPatchType.AffectedPatches_id">
            <summary>The affected patches_id</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.AddSoilCNPatchType.AreaFraction">
            <summary>The area fraction</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.AddSoilCNPatchType.PatchName">
            <summary>The patch name</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.AddSoilCNPatchType.Water">
            <summary>The water</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.AddSoilCNPatchType.Urea">
            <summary>The urea</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.AddSoilCNPatchType.NH4">
            <summary>The n h4</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.AddSoilCNPatchType.NO3">
            <summary>The n o3</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.AddSoilCNPatchType.POX">
            <summary>The pox</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.AddSoilCNPatchType.SO4">
            <summary>The s o4</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.AddSoilCNPatchType.AshAlk">
            <summary>The ash alk</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.AddSoilCNPatchType.FOM_C">
            <summary>The fo m_ c</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.AddSoilCNPatchType.FOM_C_pool1">
            <summary>The fo m_ c_pool1</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.AddSoilCNPatchType.FOM_C_pool2">
            <summary>The fo m_ c_pool2</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.AddSoilCNPatchType.FOM_C_pool3">
            <summary>The fo m_ c_pool3</summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.AddSoilCNPatchType.FOM_N">
            <summary>The fo m_ n</summary>
        </member>
        <member name="T:Models.Soils.SoilNitrogen.soilCNPatch">
            <summary>
            Class containing all the specific soil C and N processes
            </summary>
            <remarks>
            It can instanciated many times, thus describing several patches (soil variability)
            </remarks>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.soilCNPatch.PatchName">
            <summary>
            Name of this patch
            </summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.soilCNPatch.RelativeArea">
            <summary>
            Relative area of this patch (0-1)
            </summary>
        </member>
        <member name="F:Models.Soils.SoilNitrogen.soilCNPatch.g">
            <summary>
            Reference to main SoilNitrogen Class - for accessing the parameters and input variables
            </summary>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.soilCNPatch.UreaHydrolysis(System.Int32)">
            <summary>
            Purpose: Calculate the amount of urea converted to NH4 via hydrolysis (kgN/ha)
            </summary>
            <remarks>
            + Assumptions:
                - very small amounts of urea are hydrolysed promptly, regardless the hydrolysis approach
                - the actual hydrolysis is computed in another method according to the approach chosen
                - parameters are given in pairs, for aerobic and anaerobic conditions (with pond)
            </remarks>
            <documentation>
            
            </documentation>
            <param name="layer">the node number representing soil layer for which calculations will be made</param>
            <returns>delta N coverted from urea into NH4</returns>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.soilCNPatch.UreaHydrolysis_ApsimSoilN(System.Int32)">
            <summary>
            Purpose: Compute the hydrolysis of urea using the approach from APSIM-SoilN
            </summary>
            <remarks>
            + Assumptions:
                - parameters are given in pairs, for aerobic and anaerobic conditions (with pond)
            </remarks>
            <documentation>
            This approach was used in APSIM-SoilN module, and has been adapted from CERES. See Godwin, D.C. and Jones, C.A. (1991). Nitrogen dynamics in
             soil-plant systems. In: Hanks, J. and Ritchie, J.T. Modeling plant and soil systems. pp. 287-321.
            This has not been tested especifically in APSIM
            </documentation>
            <param name="layer">the node number representing soil layer for which calculations will be made</param>
            <returns>delta N coverted from urea into NH4</returns>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.soilCNPatch.UreaHydrolysis_ApsimSoilNitrogen(System.Int32)">
            <summary>
            Purpose: Compute the hydrolysis of urea using the approach from APSIM-SoilNitrogen
            </summary>
            <remarks>
            + Assumptions:
                - parameters are given in pairs, for aerobic and anaerobic conditions (with pond)
            </remarks>
            <documentation>
            This approach is an updated version of original used in APSIM-SoilN module. Initially based on CERES, see Godwin, D.C. and Jones, C.A. (1991).
             Nitrogen dynamics in soil-plant systems. In: Hanks, J. and Ritchie, J.T. Modeling plant and soil systems. pp. 287-321.
            Major differences include renaming some of the variables and allowing paramater values to be changed by user. Also organic carbon is updated
             at each time step.
            This has not been tested especifically in APSIM
            </documentation>
            <param name="layer">the node number representing soil layer for which calculations will be made</param>
            <returns>delta N coverted from urea into NH4</returns>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.soilCNPatch.Nitrification(System.Int32)">
            <summary>
            Calculate the amount of NH4 converted to NO3 via nitrification
            </summary>
            <remarks>
            - This routine is much simplified from original CERES code
            - pH effect on nitrification is not invoked
            - The actual nitrification is computed in another method according to the approach chosen
            </remarks>
            <param name="layer">the node number representing soil layer for which calculations will be made</param>
            <returns>delta N coverted from NH4 into NO3</returns>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.soilCNPatch.Nitrification_ApsimSoilN(System.Int32)">
            <summary>
            Calculate the amount of NH4 converted to NO3 via nitrification
            </summary>
            <remarks>
            This approach was used in APSIM-SoilN module
            - parameters are given in pairs, for aerobic and anaerobic conditions (with pond)
            </remarks>
            <param name="layer">the node number representing soil layer for which calculations will be made</param>
            <returns>delta N coverted from NH4 into NO3</returns>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.soilCNPatch.Nitrification_ApsimSoilNitrogen(System.Int32)">
            <summary>
            Calculate the amount of NH4 converted to NO3 via nitrification
            </summary>
            <remarks>
            This approach is default of APSIM-SoilNitrogen module - includes nitrification inhibition
            - parameters are given in pairs, for aerobic and anaerobic conditions (with pond)
            </remarks>
            <param name="layer">the node number representing soil layer for which calculations will be made</param>
            <returns>delta N coverted from NH4 into NO3</returns>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.soilCNPatch.N2OLostInNitrification_ApsimSoilNitrogen(System.Int32)">
            <summary>
            Calculate the amount of N2O produced during nitrification
            </summary>
            <param name="layer">the soil layer index for which calculations will be made</param>
            <returns>delta N coverted into N2O during nitrification</returns>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.soilCNPatch.Denitrification(System.Int32)">
            <summary>
            Calculate amount of NO3 transformed via denitrification
            </summary>
            <remarks>
            - The actual denitrification is computed in another method according to the approach chosen
            </remarks>
            <param name="layer">the soil layer index for which calculations will be made</param>
            <returns>delta N coverted from NO3 into gaseous forms</returns>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.soilCNPatch.Denitrification_ApsimSoilN(System.Int32)">
            <summary>
            Calculate amount of NO3 transformed via denitrification
            </summary>
            <remarks>
            This approach was used in APSIM-SoilN module
            - parameters are given in pairs, for aerobic and anaerobic conditions (with pond)
            </remarks>
            <param name="layer">the soil layer index for which calculations will be made</param>
            <returns>delta N coverted from NO3 into gaseous forms</returns>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.soilCNPatch.Denitrification_ApsimSoilNitrogen(System.Int32)">
            <summary>
            Calculate amount of NO3 transformed via denitrification
            </summary>
            <remarks>
            This approach is default of APSIM-SoilNitrogen module
            - parameters are given in pairs, for aerobic and anaerobic conditions (with pond)
            </remarks>
            <param name="layer">the soil layer index for which calculations will be made</param>
            <returns>delta N coverted from NO3 into gaseous forms</returns>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.soilCNPatch.Denitrification_Nratio(System.Int32)">
            <summary>
            Calculate the N2 to N2O ratio during denitrification
            </summary>
            <remarks>
            - parameters are given in pairs, for aerobic and anaerobic conditions (with pond)
            </remarks>
            <param name="layer">the soil layer index for which calculations will be made</param>
            <returns>The ratio between N2 and N2O (0-1)</returns>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.soilCNPatch.PackActualResidueDecomposition">
            <summary>
            Send back the information about actual residue decomposition
            </summary>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.soilCNPatch.ResizeLayerArrays(System.Int32)">
            <summary>
            Set/reset the size of all public arrays
            </summary>
            <remarks>
            This doesn't clear the existing values
            </remarks>
            <param name="nLayers">the new array length</param>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.soilCNPatch.CheckProfile(System.Double[])">
            <summary>
            Check whether profile has changed and move values between layers
            </summary>
            <param name="new_dlayer">New values for dlayer</param>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.soilCNPatch.MoveLayers(System.Double[]@,System.Double[])">
            <summary>
            Move the values of a given varible between layers, from bottom to top
            </summary>
            <param name="variable">Variable to move layers</param>
            <param name="new_dlayer">new dlayer array</param>
            <returns>Amount of C or N lost because of changes in profile</returns>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.soilCNPatch.SoilTempFactor(System.Int32,System.Int32,Models.Soils.SoilNitrogen.BentStickData)">
            <summary>
            Calculate a temperature factor for C and N processes
            </summary>
            <param name="layer">The soil layer to calculate</param>
            <param name="index">Parameter indication whether pond exists</param>
            <param name="Parameters">Parameter data</param>
            <returns>Temperature limiting factor (0-1)</returns>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.soilCNPatch.SoilMoistFactor(System.Int32,System.Int32,Models.Soils.SoilNitrogen.BrokenStickData)">
            <summary>
            Calculate a soil moist factor for C and N processes
            </summary>
            <param name="layer">The soil layer to calculate</param>
            <param name="index">Parameter indication whether pond exists</param>
            <param name="Parameters">Parameter data</param>
            <returns>Soil moisture limiting factor (0-1)</returns>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.soilCNPatch.WaterFilledPoreSpaceFactor(System.Int32,System.Int32,Models.Soils.SoilNitrogen.BrokenStickData)">
            <summary>
            Calculate a water filled pore space factor for denitrification processes
            </summary>
            <param name="layer">The soil layer to calculate</param>
            <param name="index">Parameter indication whether pond exists</param>
            <param name="Parameters">Parameter data</param>
            <returns>limiting factor due to water filled pore space (0-1)</returns>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.soilCNPatch.SoilpHFactor(System.Int32,System.Int32,Models.Soils.SoilNitrogen.BrokenStickData)">
            <summary>
            Calculate a pH factor for C and N processes
            </summary>
            <param name="layer">The soil layer to calculate</param>
            <param name="index">Parameter indication whether pond exists</param>
            <param name="Parameters">Parameter data</param>
            <returns>Soil pH limiting factor (0-1)</returns>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.soilCNPatch.CNratioFactor(System.Int32,System.Int32,System.Double,System.Double)">
            <summary>
            Calculate a C:N ratio factor for C and N processes
            </summary>
            <param name="layer">The soil layer to calculate</param>
            <param name="index">Parameter indication whether pond exists</param>
            <param name="OptCN">The optimum CN ration, below which there is no limitations</param>
            <param name="rateCN">A rate factor to increase limitation as function of increasing CN ratio</param>
            <returns>The CN ratio limiting factor</returns>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.soilCNPatch.CheckNegativeValues(System.Double,System.Int32,System.String)">
            <summary>
            Checks whether the variable is negative, consider thresholds
            </summary>
            <param name="TheVariable">variable to be tested</param>
            <param name="layer">layer to which the variable belongs to</param>
            <param name="VariableName">name of the variable</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.SoilNitrogen.soilCNPatch.CheckVariableBounds(System.Double@,System.Int32,System.String,System.Double,System.Double,System.Boolean)">
            <summary>
            Checks whether the variable is within acceptable bounds, may reset if not
            </summary>
            <param name="TheVariable">variable to be tested</param>
            <param name="layer">layer to which the variable belongs to</param>
            <param name="VariableName">name of the variable</param>
            <param name="MinimumValue">minimum value for the variable</param>
            <param name="MaximumValue">maximum value for the variable</param>
            <param name="canReset">whether the value will be reset if not within bounds. Throw fatal error otherwise.</param>
            <returns></returns>
        </member>
        <member name="P:Models.Soils.SoilNitrogen.soilCNPatch.oc">
            <summary>
            Total soil organic carbon content (%)
            </summary>
        </member>
        <member name="T:Models.Soils.IrrigationApplicationType">
            <summary>
            Irrigation application type
            </summary>
        </member>
        <member name="F:Models.Soils.IrrigationApplicationType.Amount">
            <summary>The amount</summary>
        </member>
        <member name="F:Models.Soils.IrrigationApplicationType.will_runoff">
            <summary>The will_runoff</summary>
        </member>
        <member name="F:Models.Soils.IrrigationApplicationType.Depth">
            <summary>The depth</summary>
        </member>
        <member name="F:Models.Soils.IrrigationApplicationType.NO3">
            <summary>The n o3</summary>
        </member>
        <member name="F:Models.Soils.IrrigationApplicationType.NH4">
            <summary>The n h4</summary>
        </member>
        <member name="F:Models.Soils.IrrigationApplicationType.CL">
            <summary>The cl</summary>
        </member>
        <member name="T:Models.PMF.Phen.LeafAppearancePhase">
            <summary>
            This phase extends from the end of the previous phase until the end of leaf appearance.  The duration of this phase is determined by leaf appearance and the final main stem leaf number.
            </summary>
        </member>
        <member name="T:Models.PMF.Phen.Phase">
            <summary>
            A base model representing a phenological phase。
            </summary>
            \warning Do not use this model in \ref Models.PMF.Phen.Phenology "Phenology" model.
            \pre All Phase models have to be the children of 
                \ref Models.PMF.Phen.Phenology "Phenology" model.
            \param End The stage name of phase ending, 
                which should be the same as the Start name 
                in previous phase except the first phase.
            \param Start The stage name of phase starting, 
                which should be the same as the End name.
                in next phase except the last phase.
            \param ThermalTime Optional. The daily thermal time.
            \param Stress Optional. The environmental stress factors.
            \retval TTinPhase The cumulated thermal time in current phase (<sup>o</sup>Cd).
            \retval TTForToday The thermal time for today in current phase (<sup>o</sup>Cd).
            \retval FractionComplete The complete fraction in current phase (from 0 to 1).
            <remarks>
            This is a base model in phenology. \ref Models.PMF.Phen.Phenology "Phenology" model
            will call \a DoTimeStep to calculate phenology development.
            
            The actual daily thermal time (\f$\Delta TT_{pheno}\f$) is calculated 
            the daily thermal time (\f$\Delta TT\f$) multiply by 
            generic and/or environmental stresses (\f$f_{s,\, pheno}\f$) if child \a Stress exists. 
            \f[
                \Delta TT_{pheno}=\Delta TT\times f_{s,\, pheno}
            \f]
            if \a Stress no exist.
            \f[
                \Delta TT_{pheno}=\Delta TT
            \f] 
            The daily thermal time (\f$\Delta TT\f$) gets from the value of \a ThermalTime. 
            The generic and/or environmental stresses (\f$f_{s,\, pheno}\f$) gets from the value of \a Stress. 
            </remarks>
        </member>
        <member name="F:Models.PMF.Phen.Phase.Phenology">
            <summary>The phenology</summary>
        </member>
        <member name="F:Models.PMF.Phen.Phase.ThermalTime">
            <summary>The thermal time</summary>
        </member>
        <member name="F:Models.PMF.Phen.Phase.Stress">
            <summary>The stress</summary>
        </member>
        <member name="F:Models.PMF.Phen.Phase.PropOfDayUnused">
            <summary>The property of day unused</summary>
        </member>
        <member name="F:Models.PMF.Phen.Phase._TTForToday">
            <summary>The _ tt for today</summary>
        </member>
        <member name="F:Models.PMF.Phen.Phase._TTinPhase">
            <summary>The _ t tin phase</summary>
        </member>
        <member name="M:Models.PMF.Phen.Phase.DoTimeStep(System.Double)">
            <summary>
            This function increments thermal time accumulated in each phase
            and returns a non-zero value if the phase target is met today so
            the phenology class knows to progress to the next phase and how
            much tt to pass it on the first day.
            </summary>
            <param name="PropOfDayToUse">The property of day to use.</param>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.Phen.Phase.AddTT(System.Double)">
            <summary>Adds the tt.</summary>
            <param name="PropOfDayToUse">The property of day to use.</param>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.Phen.Phase.Add(System.Double)">
            <summary>Adds the specified DLT_TT.</summary>
            <param name="dlt_tt">The DLT_TT.</param>
        </member>
        <member name="M:Models.PMF.Phen.Phase.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>Called when [simulation commencing].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Phen.Phase.ResetPhase">
            <summary>Resets the phase.</summary>
        </member>
        <member name="M:Models.PMF.Phen.Phase.WriteSummary(System.IO.TextWriter)">
            <summary>Writes the summary.</summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:Models.PMF.Phen.Phase.Document(System.Collections.Generic.List{Models.Core.AutoDocumentation.ITag},System.Int32,System.Int32)">
            <summary>Writes documentation for this function by adding to the list of documentation tags.</summary>
            <param name="tags">The list of tags to add to.</param>
            <param name="headingLevel">The level (e.g. H2) of the headings.</param>
            <param name="indent">The level of indentation 1, 2, 3 etc.</param>
        </member>
        <member name="P:Models.PMF.Phen.Phase.Start">
            <summary>The start</summary>
        </member>
        <member name="P:Models.PMF.Phen.Phase.End">
            <summary>The end</summary>
        </member>
        <member name="P:Models.PMF.Phen.Phase.TTForToday">
            <summary>Gets the tt for today.</summary>
            <value>The tt for today.</value>
        </member>
        <member name="P:Models.PMF.Phen.Phase.TTinPhase">
            <summary>Gets the t tin phase.</summary>
            <value>The t tin phase.</value>
        </member>
        <member name="P:Models.PMF.Phen.Phase.FractionComplete">
            <summary>Gets the fraction complete.</summary>
            <value>The fraction complete.</value>
        </member>
        <member name="F:Models.PMF.Phen.LeafAppearancePhase.Leaf">
            <summary>The leaf</summary>
        </member>
        <member name="F:Models.PMF.Phen.LeafAppearancePhase.Structure">
            <summary>The structure</summary>
        </member>
        <member name="F:Models.PMF.Phen.LeafAppearancePhase.CohortNoAtStart">
            <summary>The cohort no at start</summary>
        </member>
        <member name="F:Models.PMF.Phen.LeafAppearancePhase.First">
            <summary>The first</summary>
        </member>
        <member name="F:Models.PMF.Phen.LeafAppearancePhase.RemainingLeaves">
            <summary>The remaining leaves</summary>
        </member>
        <member name="F:Models.PMF.Phen.LeafAppearancePhase.FractionCompleteYesterday">
            <summary>The fraction complete yesterday</summary>
        </member>
        <member name="M:Models.PMF.Phen.LeafAppearancePhase.ResetPhase">
            <summary>Reset phase</summary>
        </member>
        <member name="M:Models.PMF.Phen.LeafAppearancePhase.DoTimeStep(System.Double)">
            <summary>Do our timestep development</summary>
            <param name="PropOfDayToUse">The property of day to use.</param>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.Phen.LeafAppearancePhase.AddTT(System.Double)">
            <summary>Adds the tt.</summary>
            <param name="PropOfDayToUse">The property of day to use.</param>
            <returns></returns>
        </member>
        <member name="P:Models.PMF.Phen.LeafAppearancePhase.FractionComplete">
            <summary>Return a fraction of phase complete.</summary>
            <value>The fraction complete.</value>
        </member>
        <member name="T:Models.PMF.Organs.GenericOrgan">
            <summary>
            Model of generic organ 
            </summary>
            \param <b>(IFunction, Optional)</b> SenescenceRateFunction Rate of organ senescence 
                (default 0 if this parameter does not exist, i.e no senescence).
            \param <b>(IFunction, Optional)</b> StructuralFraction Fraction of organ structural component 
                (default 1 if this parameter does not exist, i.e all biomass is structural).
            \param <b>(IFunction, Optional)</b> InitialWtFunction Initial weight of organ 
                 (default 0 if this parameter does not exist, i.e. no initial weight).
            \param <b>(IFunction, Optional)</b> InitialStructuralFraction Fraction of initial weight of organ 
                 (default 1 if this parameter does not exist, i.e. all initial biomass is structural).
            \param <b>(IFunction, Optional)</b> NReallocationFactor Factor of nitrogen reallocation  
                 (0-1; default 0 if this parameter does not exist, i.e. no nitrogen reallocation).
            \param <b>(IFunction, Optional)</b> NRetranslocationFactor Factor of nitrogen retranslocation  
                  (0-1; default 0 if this parameter does not exist, i.e. no nitrogen retranslocation).
            \param MinimumNConc MinimumNConc Minimum nitrogen concentration
            \param MinimumNConc MaximumNConc Maximum nitrogen concentration.
            \retval LiveFWt The live fresh weight (g m<sup>-2</sup>)
            <remarks>
            Biomass demand 
            -----------------------
            
            Biomass supply
            -----------------------
            </remarks>
        </member>
        <member name="T:Models.PMF.Organs.BaseOrgan">
            <summary>
            This class represents a base organ
            </summary>
        </member>
        <member name="T:Models.PMF.Interfaces.IOrgan">
            <summary>
            Base organ model
            </summary>
        </member>
        <member name="M:Models.PMF.Interfaces.IOrgan.DoHarvest">
            <summary>
            Do Harvest logic for this organ.
            </summary>
        </member>
        <member name="T:Models.PMF.Interfaces.IArbitration">
            <summary>
            An interface that defines what needs to be implemented by an organ
            that communicates to the OrganArbitrator.
            </summary>
            <remarks>
             PFM considers four types of biomass supply, i.e.
             - fixation
             - reallocation
             - uptake
             - retranslocation
            PFM considers eight types of biomass allocation, i.e.
             - structural
             - non-structural
             - metabolic
             - retranslocation
             - reallocation
             - respired
             - uptake
             - fixation
            </remarks>
        </member>
        <member name="M:Models.PMF.Interfaces.IArbitration.WaterSupply(System.Collections.Generic.List{Models.Soils.Arbitrator.ZoneWaterAndN})">
            <summary>Gets the water supply for the given water state.</summary>
        </member>
        <member name="M:Models.PMF.Interfaces.IArbitration.DoWaterUptake(System.Double[])">
            <summary>Does the water uptake.</summary>
            <param name="uptake">The uptake.</param>
        </member>
        <member name="M:Models.PMF.Interfaces.IArbitration.DoNitrogenUptake(System.Double[],System.Double[])">
            <summary>Does the water uptake.</summary>
            <param name="NO3NUptake">The NO3NUptake.</param>
            <param name="NH4Uptake">The NH4Uptake.</param>
        </member>
        <member name="M:Models.PMF.Interfaces.IArbitration.NO3NSupply(System.Collections.Generic.List{Models.Soils.Arbitrator.ZoneWaterAndN})">
            <summary>Gets the Nitrate uptake supply for the given nitrogen state.</summary>
            <param name="zones">water zones</param>
        </member>
        <member name="M:Models.PMF.Interfaces.IArbitration.NH4NSupply(System.Collections.Generic.List{Models.Soils.Arbitrator.ZoneWaterAndN})">
            <summary>Gets the Ammonium uptake supply for the given nitrogen state.</summary>
            <param name="zones">water zones</param>
        </member>
        <member name="P:Models.PMF.Interfaces.IArbitration.DMPotentialAllocation">
            <summary>Sets the dm potential allocation.</summary>
        </member>
        <member name="P:Models.PMF.Interfaces.IArbitration.DMDemand">
            <summary>Gets or sets the dm demand.</summary>
        </member>
        <member name="P:Models.PMF.Interfaces.IArbitration.DMSupply">
            <summary>Gets or sets the dm supply.</summary>
        </member>
        <member name="P:Models.PMF.Interfaces.IArbitration.DMAllocation">
            <summary>Sets the dm allocation.</summary>
        </member>
        <member name="P:Models.PMF.Interfaces.IArbitration.NDemand">
            <summary>Gets or sets the n demand.</summary>
        </member>
        <member name="P:Models.PMF.Interfaces.IArbitration.NSupply">
            <summary>Gets or sets the n supply.</summary>
        </member>
        <member name="P:Models.PMF.Interfaces.IArbitration.NAllocation">
            <summary>Sets the n allocation.</summary>
        </member>
        <member name="P:Models.PMF.Interfaces.IArbitration.MaxNconc">
            <summary>Gets or sets the maximum nconc.</summary>
        </member>
        <member name="P:Models.PMF.Interfaces.IArbitration.MinNconc">
            <summary>Gets or sets the minimum nconc.</summary>
        </member>
        <member name="P:Models.PMF.Interfaces.IArbitration.NFixationCost">
            <summary>Gets or sets the n fixation cost.</summary>
        </member>
        <member name="P:Models.PMF.Interfaces.IArbitration.TotalDM">
            <summary>Gets the total (live + dead) dm (g/m2)</summary>
        </member>
        <member name="P:Models.PMF.Interfaces.IArbitration.TotalN">
            <summary>Gets the total (live + dead) n (g/m2).</summary>
        </member>
        <member name="P:Models.PMF.Interfaces.IArbitration.WaterDemand">
            <summary>Gets or sets the water demand.</summary>
        </member>
        <member name="P:Models.PMF.Interfaces.IArbitration.WaterAllocation">
            <summary>Gets or sets the water allocation.</summary>
        </member>
        <member name="P:Models.PMF.Interfaces.IArbitration.WaterUptake">
            <summary>Gets or sets the water uptake.</summary>
        </member>
        <member name="P:Models.PMF.Interfaces.IArbitration.NUptake">
            <summary>Gets or sets the water uptake.</summary>
        </member>
        <member name="F:Models.PMF.Organs.BaseOrgan.Live">
            <summary>The live</summary>
        </member>
        <member name="F:Models.PMF.Organs.BaseOrgan.Dead">
            <summary>The dead</summary>
        </member>
        <member name="F:Models.PMF.Organs.BaseOrgan.Clock">
            <summary>The clock</summary>
        </member>
        <member name="F:Models.PMF.Organs.BaseOrgan.MetData">
            <summary>The met data</summary>
        </member>
        <member name="M:Models.PMF.Organs.BaseOrgan.NO3NSupply(System.Collections.Generic.List{Models.Soils.Arbitrator.ZoneWaterAndN})">
            <summary>Gets the NO3 supply for the given N state.</summary>
        </member>
        <member name="M:Models.PMF.Organs.BaseOrgan.NH4NSupply(System.Collections.Generic.List{Models.Soils.Arbitrator.ZoneWaterAndN})">
            <summary>Gets the NH4 supply for the given N state.</summary>
        </member>
        <member name="M:Models.PMF.Organs.BaseOrgan.WaterSupply(System.Collections.Generic.List{Models.Soils.Arbitrator.ZoneWaterAndN})">
            <summary>Gets the water supply for the given water state.</summary>
        </member>
        <member name="M:Models.PMF.Organs.BaseOrgan.DoWaterUptake(System.Double[])">
            <summary>Does the water uptake.</summary>
            <param name="uptake">The uptake.</param>
        </member>
        <member name="M:Models.PMF.Organs.BaseOrgan.DoNitrogenUptake(System.Double[],System.Double[])">
            <summary>Does the N uptake.</summary>
            <param name="NO3NUptake">The NO3NUptake.</param>
            <param name="NH4Uptake">The NH4Uptake.</param>
        </member>
        <member name="M:Models.PMF.Organs.BaseOrgan.DoPotentialNutrient">
            <summary>Does the potential nutrient.</summary>
        </member>
        <member name="M:Models.PMF.Organs.BaseOrgan.Clear">
            <summary>Clears this instance.</summary>
        </member>
        <member name="M:Models.PMF.Organs.BaseOrgan.DoHarvest">
            <summary>
            Do harvest logic for this organ
            </summary>
        </member>
        <member name="M:Models.PMF.Organs.BaseOrgan.Document(System.Collections.Generic.List{Models.Core.AutoDocumentation.ITag},System.Int32,System.Int32)">
            <summary>Writes documentation for this function by adding to the list of documentation tags.</summary>
            <param name="tags">The list of tags to add to.</param>
            <param name="headingLevel">The level (e.g. H2) of the headings.</param>
            <param name="indent">The level of indentation 1, 2, 3 etc.</param>
        </member>
        <member name="P:Models.PMF.Organs.BaseOrgan.DMSupply">
            <summary>Gets or sets the dm supply.</summary>
            <value>The dm supply.</value>
        </member>
        <member name="P:Models.PMF.Organs.BaseOrgan.DMPotentialAllocation">
            <summary>Sets the dm potential allocation.</summary>
            <value>The dm potential allocation.</value>
        </member>
        <member name="P:Models.PMF.Organs.BaseOrgan.DMAllocation">
            <summary>Sets the dm allocation.</summary>
            <value>The dm allocation.</value>
        </member>
        <member name="P:Models.PMF.Organs.BaseOrgan.DMDemand">
            <summary>Gets or sets the dm demand.</summary>
            <value>The dm demand.</value>
        </member>
        <member name="P:Models.PMF.Organs.BaseOrgan.NSupply">
            <summary>Gets or sets the n supply.</summary>
            <value>The n supply.</value>
        </member>
        <member name="P:Models.PMF.Organs.BaseOrgan.NAllocation">
            <summary>Sets the n allocation.</summary>
            <value>The n allocation.</value>
        </member>
        <member name="P:Models.PMF.Organs.BaseOrgan.NFixationCost">
            <summary>Gets or sets the n fixation cost.</summary>
            <value>The n fixation cost.</value>
        </member>
        <member name="P:Models.PMF.Organs.BaseOrgan.NDemand">
            <summary>Gets or sets the n demand.</summary>
            <value>The n demand.</value>
        </member>
        <member name="P:Models.PMF.Organs.BaseOrgan.WaterDemand">
            <summary>Gets or sets the water demand.</summary>
            <value>The water demand.</value>
        </member>
        <member name="P:Models.PMF.Organs.BaseOrgan.WaterUptake">
            <summary>Gets or sets the water uptake.</summary>
            <value>The water uptake.</value>
            <exception cref="T:System.Exception">Cannot set water uptake for  + Name</exception>
        </member>
        <member name="P:Models.PMF.Organs.BaseOrgan.NUptake">
            <summary>Gets or sets the water uptake.</summary>
            <value>The water uptake.</value>
            <exception cref="T:System.Exception">Cannot set water uptake for  + Name</exception>
        </member>
        <member name="P:Models.PMF.Organs.BaseOrgan.WaterAllocation">
            <summary>Gets or sets the water allocation.</summary>
            <value>The water allocation.</value>
            <exception cref="T:System.Exception">Cannot set water allocation for  + Name</exception>
        </member>
        <member name="P:Models.PMF.Organs.BaseOrgan.MaxNconc">
            <summary>Gets or sets the maximum nconc.</summary>
            <value>The maximum nconc.</value>
        </member>
        <member name="P:Models.PMF.Organs.BaseOrgan.MinNconc">
            <summary>Gets or sets the minimum nconc.</summary>
            <value>The minimum nconc.</value>
        </member>
        <member name="P:Models.PMF.Organs.BaseOrgan.DMSupplyPhotosynthesis">
            <summary>Gets the dm supply photosynthesis.</summary>
            <value>The dm supply photosynthesis.</value>
        </member>
        <member name="P:Models.PMF.Organs.BaseOrgan.NSupplyUptake">
            <summary>Gets the n supply uptake.</summary>
            <value>The n supply uptake.</value>
        </member>
        <member name="P:Models.PMF.Organs.BaseOrgan.TotalDM">
            <summary>Gets the total (live + dead) dm (g/m2)</summary>
        </member>
        <member name="P:Models.PMF.Organs.BaseOrgan.TotalN">
            <summary>Gets the total (live + dead) n (g/m2)</summary>
        </member>
        <member name="F:Models.PMF.Organs.GenericOrgan.Plant">
            <summary>The plant</summary>
        </member>
        <member name="F:Models.PMF.Organs.GenericOrgan.StartLive">
            <summary>The start live</summary>
        </member>
        <member name="F:Models.PMF.Organs.GenericOrgan.SenescenceRateFunction">
            <summary>The senescence rate function</summary>
        </member>
        <member name="F:Models.PMF.Organs.GenericOrgan.DetachmentRateFunction">
            <summary>The detachment rate function</summary>
        </member>
        <member name="F:Models.PMF.Organs.GenericOrgan.NReallocationFactor">
            <summary>The n reallocation factor</summary>
        </member>
        <member name="F:Models.PMF.Organs.GenericOrgan.NRetranslocationFactor">
            <summary>The n retranslocation factor</summary>
        </member>
        <member name="F:Models.PMF.Organs.GenericOrgan.NitrogenDemandSwitch">
            <summary>The nitrogen demand switch</summary>
        </member>
        <member name="F:Models.PMF.Organs.GenericOrgan.DMRetranslocationFactor">
            <summary>The dm retranslocation factor</summary>
        </member>
        <member name="F:Models.PMF.Organs.GenericOrgan.StructuralFraction">
            <summary>The structural fraction</summary>
        </member>
        <member name="F:Models.PMF.Organs.GenericOrgan.DMDemandFunction">
            <summary>The dm demand Function</summary>
        </member>
        <member name="F:Models.PMF.Organs.GenericOrgan.InitialWtFunction">
            <summary>The initial wt function</summary>
        </member>
        <member name="F:Models.PMF.Organs.GenericOrgan.InitialStructuralFraction">
            <summary>The initial structural fraction</summary>
        </member>
        <member name="F:Models.PMF.Organs.GenericOrgan.DryMatterContent">
            <summary>The dry matter content</summary>
        </member>
        <member name="F:Models.PMF.Organs.GenericOrgan.MaximumNConc">
            <summary>The maximum n conc</summary>
        </member>
        <member name="F:Models.PMF.Organs.GenericOrgan.MinimumNConc">
            <summary>The minimum n conc</summary>
        </member>
        <member name="F:Models.PMF.Organs.GenericOrgan.SenescenceRate">
            <summary>The senescence rate</summary>
        </member>
        <member name="F:Models.PMF.Organs.GenericOrgan._StructuralFraction">
            <summary>The _ structural fraction</summary>
        </member>
        <member name="F:Models.PMF.Organs.GenericOrgan.StartNRetranslocationSupply">
            <summary>The start n retranslocation supply</summary>
        </member>
        <member name="F:Models.PMF.Organs.GenericOrgan.StartNReallocationSupply">
            <summary>The start n reallocation supply</summary>
        </member>
        <member name="F:Models.PMF.Organs.GenericOrgan.PotentialDMAllocation">
            <summary>The potential dm allocation</summary>
        </member>
        <member name="F:Models.PMF.Organs.GenericOrgan.PotentialStructuralDMAllocation">
            <summary>The potential structural dm allocation</summary>
        </member>
        <member name="F:Models.PMF.Organs.GenericOrgan.PotentialMetabolicDMAllocation">
            <summary>The potential metabolic dm allocation</summary>
        </member>
        <member name="F:Models.PMF.Organs.GenericOrgan.StructuralDMDemand">
            <summary>The structural dm demand</summary>
        </member>
        <member name="F:Models.PMF.Organs.GenericOrgan.NonStructuralDMDemand">
            <summary>The non structural dm demand</summary>
        </member>
        <member name="F:Models.PMF.Organs.GenericOrgan.InitialWt">
            <summary>The initial wt</summary>
        </member>
        <member name="F:Models.PMF.Organs.GenericOrgan.InitStutFraction">
            <summary>The initialize stut fraction</summary>
        </member>
        <member name="M:Models.PMF.Organs.GenericOrgan.Clear">
            <summary>Clears this instance.</summary>
        </member>
        <member name="M:Models.PMF.Organs.GenericOrgan.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>Called when [simulation commencing].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Organs.GenericOrgan.OnPlantSowing(System.Object,Models.PMF.SowPlant2Type)">
            <summary>Called when crop is ending</summary>
            <param name="sender">The sender.</param>
            <param name="data">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Organs.GenericOrgan.OnDoPotentialPlantGrowth(System.Object,System.EventArgs)">
            <summary>Event from sequencer telling us to do our potential growth.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Organs.GenericOrgan.OnDoActualPlantGrowth(System.Object,System.EventArgs)">
            <summary>Does the nutrient allocations.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Organs.GenericOrgan.OnPlantEnding(System.Object,System.EventArgs)">
            <summary>Called when crop is ending</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Models.PMF.Organs.GenericOrgan.LiveFWt">
            <summary>Gets or sets the live f wt.</summary>
            <value>The live f wt.</value>
        </member>
        <member name="P:Models.PMF.Organs.GenericOrgan.DMDemand">
            <summary>Gets or sets the dm demand.</summary>
            <value>The dm demand.</value>
        </member>
        <member name="P:Models.PMF.Organs.GenericOrgan.DMPotentialAllocation">
            <summary>Sets the dm potential allocation.</summary>
            <value>The dm potential allocation.</value>
            <exception cref="T:System.Exception">Invalid allocation of potential DM in  + Name</exception>
        </member>
        <member name="P:Models.PMF.Organs.GenericOrgan.DMSupply">
            <summary>Gets or sets the dm supply.</summary>
            <value>The dm supply.</value>
        </member>
        <member name="P:Models.PMF.Organs.GenericOrgan.NDemand">
            <summary>Gets or sets the n demand.</summary>
            <value>The n demand.</value>
        </member>
        <member name="P:Models.PMF.Organs.GenericOrgan.NSupply">
            <summary>Gets or sets the n supply.</summary>
            <value>The n supply.</value>
        </member>
        <member name="P:Models.PMF.Organs.GenericOrgan.DMAllocation">
            <summary>Sets the dm allocation.</summary>
            <value>The dm allocation.</value>
            <exception cref="T:System.Exception">
            -ve NonStructuralDM Allocation to  + Name
            or
            StructuralDM Allocation to  + Name +  is in excess of its Capacity
            or
            Retranslocation exceeds nonstructural biomass in organ:  + Name
            </exception>
        </member>
        <member name="P:Models.PMF.Organs.GenericOrgan.NAllocation">
            <summary>Sets the n allocation.</summary>
            <value>The n allocation.</value>
            <exception cref="T:System.Exception">
            N Retranslocation exceeds nonstructural nitrogen in organ:  + Name
            or
            -ve N Retranslocation requested from  + Name
            or
            N Reallocation exceeds nonstructural nitrogen in organ:  + Name
            or
            -ve N Reallocation requested from  + Name
            </exception>
        </member>
        <member name="P:Models.PMF.Organs.GenericOrgan.MaxNconc">
            <summary>Gets or sets the maximum nconc.</summary>
            <value>The maximum nconc.</value>
        </member>
        <member name="P:Models.PMF.Organs.GenericOrgan.MinNconc">
            <summary>Gets or sets the minimum nconc.</summary>
            <value>The minimum nconc.</value>
        </member>
        <member name="T:Models.PMF.OldPlant.Stem1">
            <summary>
            A stem model for plant15
            </summary>
        </member>
        <member name="T:Models.PMF.Interfaces.AboveGround">
            <summary>An above ground interface</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Stem1.Plant">
            <summary>The plant</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Stem1.Population">
            <summary>The population</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Stem1.HeightFunction">
            <summary>The height function</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Stem1.GrowthStructuralFractionStage">
            <summary>The growth structural fraction stage</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Stem1.DMSenescenceFraction">
            <summary>The dm senescence fraction</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Stem1.NConcentrationCritical">
            <summary>The n concentration critical</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Stem1.NConcentrationMinimum">
            <summary>The n concentration minimum</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Stem1.NConcentrationMaximum">
            <summary>The n concentration maximum</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Stem1.RetainFraction">
            <summary>The retain fraction</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Stem1.Leaf">
            <summary>The leaf</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Stem1.dlt_n_senesced_retrans">
            <summary>The dlt_n_senesced_retrans</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Stem1.dlt_n_senesced_trans">
            <summary>The dlt_n_senesced_trans</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Stem1.dlt_height">
            <summary>The dlt_height</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Stem1.dlt_width">
            <summary>The dlt_width</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Stem1._DMGreenDemand">
            <summary>The _ dm green demand</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Stem1._NDemand">
            <summary>The _ n demand</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Stem1._SoilNDemand">
            <summary>The _ soil n demand</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Stem1.NMax">
            <summary>The n maximum</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Stem1.sw_demand">
            <summary>The sw_demand</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Stem1.n_conc_crit">
            <summary>The n_conc_crit</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Stem1.n_conc_max">
            <summary>The n_conc_max</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Stem1.n_conc_min">
            <summary>The n_conc_min</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Stem1.DeltaHeight">
            <summary>The delta height</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Stem1.DoSWDemand(System.Double)">
            <summary>Does the sw demand.</summary>
            <param name="Supply">The supply.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Stem1.DoSWUptake(System.Double)">
            <summary>Does the sw uptake.</summary>
            <param name="SWDemand">The sw demand.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Stem1.DoDMDemand(System.Double)">
            <summary>Does the dm demand.</summary>
            <param name="DMSupply">The dm supply.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Stem1.DoDmRetranslocate(System.Double,System.Double)">
            <summary>Does the dm retranslocate.</summary>
            <param name="dlt_dm_retrans_to_fruit">The dlt_dm_retrans_to_fruit.</param>
            <param name="demand_differential_begin">The demand_differential_begin.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Stem1.GiveDmGreen(System.Double)">
            <summary>Gives the dm green.</summary>
            <param name="Delta">The delta.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Stem1.DoSenescence">
            <summary>Does the senescence.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Stem1.DoDetachment">
            <summary>Does the detachment.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Stem1.RemoveBiomass">
            <summary>Removes the biomass.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Stem1.AdjustMorphologyAfterARemoveBiomass">
            <summary>Adjusts the morphology after a remove biomass.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Stem1.DoNDemand(System.Boolean)">
            <summary>Does the n demand.</summary>
            <param name="IncludeRetransloation">if set to <c>true</c> [include retransloation].</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Stem1.DoNDemand1Pot(System.Double)">
            <summary>Does the n demand1 pot.</summary>
            <param name="dltDmPotRue">The DLT dm pot rue.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Stem1.DoSoilNDemand">
            <summary>Does the soil n demand.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Stem1.DoNSupply">
            <summary>Does the n supply.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Stem1.DoNRetranslocate(System.Double,System.Double)">
            <summary>Does the n retranslocate.</summary>
            <param name="NSupply">The n supply.</param>
            <param name="GrainNDemand">The grain n demand.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Stem1.DoNSenescence">
            <summary>Does the n senescence.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Stem1.DoNSenescedRetranslocation(System.Double,System.Double)">
            <summary>Does the n senesced retranslocation.</summary>
            <param name="navail">The navail.</param>
            <param name="n_demand_tot">The n_demand_tot.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Stem1.DoNPartition(System.Double)">
            <summary>Does the n partition.</summary>
            <param name="GrowthN">The growth n.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Stem1.DoNFixRetranslocate(System.Double,System.Double)">
            <summary>Does the n fix retranslocate.</summary>
            <param name="NFixUptake">The n fix uptake.</param>
            <param name="nFixDemandTotal">The n fix demand total.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Stem1.DoNConccentrationLimits">
            <summary>Does the n conccentration limits.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Stem1.ZeroDltNSenescedTrans">
            <summary>Zeroes the DLT n senesced trans.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Stem1.DoNUptake(System.Double)">
            <summary>Does the n uptake.</summary>
            <param name="PotNFix">The pot n fix.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Stem1.DoPotentialRUE">
            <summary>Does the potential rue.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Stem1.interceptRadiation(System.Double)">
            <summary>Intercepts the radiation.</summary>
            <param name="incomingSolarRadiation">The incoming solar radiation.</param>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.OldPlant.Stem1.DoCover">
            <summary>Does the cover.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Stem1.Update">
            <summary>Updates this instance.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Stem1.Morphology">
            <summary>Morphologies this instance.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Stem1.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>Called when [simulation commencing].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Stem1.OnPrepare(System.Object,System.EventArgs)">
            <summary>Called when [prepare].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Stem1.OnHarvest(Models.PMF.OldPlant.HarvestType,Models.PMF.BiomassRemovedType)">
            <summary>Called when [harvest].</summary>
            <param name="Harvest">The harvest.</param>
            <param name="BiomassRemoved">The biomass removed.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Stem1.OnEndCrop(Models.PMF.BiomassRemovedType)">
            <summary>Called when [end crop].</summary>
            <param name="BiomassRemoved">The biomass removed.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Stem1.OnPhaseChanged(Models.PMF.Phen.PhaseChangedType)">
            <summary>Called when [phase changed].</summary>
            <param name="PhenologyChange">The phenology change.</param>
        </member>
        <member name="P:Models.PMF.OldPlant.Stem1.NDeficitUptakeFraction">
            <summary>Gets or sets the n deficit uptake fraction.</summary>
            <value>The n deficit uptake fraction.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Stem1.NSenescenceConcentration">
            <summary>Gets or sets the n senescence concentration.</summary>
            <value>The n senescence concentration.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Stem1.SenescenceDetachmentFraction">
            <summary>Gets or sets the senescence detachment fraction.</summary>
            <value>The senescence detachment fraction.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Stem1.InitialWt">
            <summary>Gets or sets the initial wt.</summary>
            <value>The initial wt.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Stem1.InitialNConcentration">
            <summary>Gets or sets the initial n concentration.</summary>
            <value>The initial n concentration.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Stem1.Senescing">
            <summary>Gets or sets the senescing.</summary>
            <value>The senescing.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Stem1.Retranslocation">
            <summary>Gets or sets the retranslocation.</summary>
            <value>The retranslocation.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Stem1.Growth">
            <summary>Gets or sets the growth.</summary>
            <value>The growth.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Stem1.Detaching">
            <summary>Gets or sets the detaching.</summary>
            <value>The detaching.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Stem1.GreenRemoved">
            <summary>Gets or sets the green removed.</summary>
            <value>The green removed.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Stem1.SenescedRemoved">
            <summary>Gets or sets the senesced removed.</summary>
            <value>The senesced removed.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Stem1.SWSupply">
            <summary>Gets the sw supply.</summary>
            <value>The sw supply.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Stem1.SWDemand">
            <summary>Gets the sw demand.</summary>
            <value>The sw demand.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Stem1.SWUptake">
            <summary>Gets the sw uptake.</summary>
            <value>The sw uptake.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Stem1.DMSupply">
            <summary>Gets the dm supply.</summary>
            <value>The dm supply.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Stem1.DMRetransSupply">
            <summary>Gets the dm retrans supply.</summary>
            <value>The dm retrans supply.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Stem1.dltDmPotRue">
            <summary>Gets the DLT dm pot rue.</summary>
            <value>The DLT dm pot rue.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Stem1.DMGreenDemand">
            <summary>Gets the dm green demand.</summary>
            <value>The dm green demand.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Stem1.DMDemandDifferential">
            <summary>Gets the dm demand differential.</summary>
            <value>The dm demand differential.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Stem1.NDemand">
            <summary>Gets the n demand.</summary>
            <value>The n demand.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Stem1.NSupply">
            <summary>Gets the n supply.</summary>
            <value>The n supply.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Stem1.NUptake">
            <summary>Gets the n uptake.</summary>
            <value>The n uptake.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Stem1.SoilNDemand">
            <summary>Gets the soil n demand.</summary>
            <value>The soil n demand.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Stem1.NCapacity">
            <summary>Gets the n capacity.</summary>
            <value>The n capacity.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Stem1.NDemandDifferential">
            <summary>Gets the n demand differential.</summary>
            <value>The n demand differential.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Stem1.AvailableRetranslocateN">
            <summary>Gets the available retranslocate n.</summary>
            <value>The available retranslocate n.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Stem1.DltNSenescedRetrans">
            <summary>Gets the DLT n senesced retrans.</summary>
            <value>The DLT n senesced retrans.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Stem1.CoverGreen">
            <summary>Gets or sets the cover green.</summary>
            <value>The cover green.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Stem1.CoverSen">
            <summary>Gets or sets the cover sen.</summary>
            <value>The cover sen.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Stem1.NCrit">
            <summary>Gets the n crit.</summary>
            <value>The n crit.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Stem1.NMin">
            <summary>Gets the n minimum.</summary>
            <value>The n minimum.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Stem1.Height">
            <summary>Gets the height.</summary>
            <value>The height.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Stem1.Width">
            <summary>Gets the width.</summary>
            <value>The width.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Stem1.FractionHeightRemoved">
            <summary>Gets the fraction height removed.</summary>
            <value>The fraction height removed.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Stem1.GreenWtPerPlant">
            <summary>Gets the green wt per plant.</summary>
            <value>The green wt per plant.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Stem1.AvailableToAnimal">
            <summary>Gets the available to animal.</summary>
            <value>The available to animal.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Stem1.RemovedByAnimal">
            <summary>Sets the removed by animal.</summary>
            <value>The removed by animal.</value>
        </member>
        <member name="T:Models.Irrigation">
            <summary>Irrigation class.</summary>
        </member>
        <member name="F:Models.Irrigation.Summary">
            <summary>The summary</summary>
        </member>
        <member name="M:Models.Irrigation.Apply(System.Double,System.Double,System.Double,System.Boolean)">
            <summary>Apply irrigatopm.</summary>
            <param name="amount">The amount.</param>
            <param name="depth">The depth.</param>
            <param name="efficiency">The efficiency.</param>
            <param name="willRunoff">if set to <c>true</c> [will runoff].</param>
            <exception cref="T:Models.Core.ApsimXException">Efficiency value for irrigation event must bet between 0 and 1 </exception>
        </member>
        <member name="M:Models.Irrigation.OnDoDailyInitialisation(System.Object,System.EventArgs)">
            <summary>Called when [do daily initialisation].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Models.Irrigation.IrrigationApplied">
            <summary>Gets or sets the irrigation applied.</summary>
            <value>The irrigation applied.</value>
        </member>
        <member name="E:Models.Irrigation.Irrigated">
            <summary>Occurs when [irrigated].</summary>
        </member>
        <member name="T:Models.Core.VariableObject">
            <summary>
            This class encapsulates a single property of a model. Has properties for getting the value
            of the property, the value in the base model and the default value as definned in the 
            source code.
            </summary>
        </member>
        <member name="M:Models.Core.VariableObject.#ctor(System.Object)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Models.Core.VariableObject.Object">
            <summary>
            Gets or sets the object this variable is relative to
            </summary>
        </member>
        <member name="P:Models.Core.VariableObject.Name">
            <summary>
            Return the name of the property.
            </summary>
        </member>
        <member name="P:Models.Core.VariableObject.Value">
            <summary>
            Returns the value of the property.
            </summary>
        </member>
        <member name="P:Models.Core.VariableObject.Description">
            <summary>
            Returns a description of the property or null if not found.
            </summary>
        </member>
        <member name="P:Models.Core.VariableObject.Units">
            <summary>
            Returns the units of the property (in brackets) or null if not found.
            </summary>
        </member>
        <member name="T:Models.Core.VariableField">
            <summary>
            This class encapsulates a single field of a model. Has properties for getting the value
            of the property, the value in the base model and the default value as definned in the 
            source code.
            </summary>
        </member>
        <member name="M:Models.Core.VariableField.#ctor(System.Object,System.Reflection.FieldInfo)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Models.Core.VariableField.Object">
            <summary>
            Gets or sets the object this variable is relative to
            </summary>
        </member>
        <member name="P:Models.Core.VariableField.Name">
            <summary>
            Return the name of the property.
            </summary>
        </member>
        <member name="P:Models.Core.VariableField.Value">
            <summary>
            Returns the value of the property.
            </summary>
        </member>
        <member name="P:Models.Core.VariableField.Description">
            <summary>
            Returns a description of the property or null if not found.
            </summary>
        </member>
        <member name="P:Models.Core.VariableField.Units">
            <summary>
            Returns the units of the property (in brackets) or null if not found.
            </summary>
        </member>
        <member name="T:Models.Memo">
            <summary>This is a memo/text component that stores user entered text information.</summary>
        </member>
        <member name="M:Models.Memo.Document(System.Collections.Generic.List{Models.Core.AutoDocumentation.ITag},System.Int32,System.Int32)">
            <summary>Writes documentation for this function by adding to the list of documentation tags.</summary>
            <param name="tags">The list of tags to add to.</param>
            <param name="headingLevel">The level (e.g. H2) of the headings.</param>
            <param name="indent">The level of indentation 1, 2, 3 etc.</param>
        </member>
        <member name="P:Models.Memo.MemoText">
            <summary>Gets or sets the memo text.</summary>
        </member>
        <member name="P:Models.Memo.CodeCData">
            <summary>Gets or sets the code c data.</summary>
        </member>
        <member name="T:Models.PMF.Phen.NodeNumberPhase">
            <summary>
            Leaf appearance phenological phase
            </summary>
        </member>
        <member name="F:Models.PMF.Phen.NodeNumberPhase.Structure">
            <summary>The structure</summary>
        </member>
        <member name="F:Models.PMF.Phen.NodeNumberPhase.CompletionNodeNumber">
            <summary>The Number of main-stem leave appeared when the phase ends</summary>
        </member>
        <member name="F:Models.PMF.Phen.NodeNumberPhase.CohortNoAtStart">
            <summary>The cohort no at start</summary>
        </member>
        <member name="F:Models.PMF.Phen.NodeNumberPhase.First">
            <summary>The first</summary>
        </member>
        <member name="F:Models.PMF.Phen.NodeNumberPhase.FractionCompleteYesterday">
            <summary>The fraction complete yesterday</summary>
        </member>
        <member name="M:Models.PMF.Phen.NodeNumberPhase.ResetPhase">
            <summary>Reset phase</summary>
        </member>
        <member name="M:Models.PMF.Phen.NodeNumberPhase.DoTimeStep(System.Double)">
            <summary>Do our timestep development</summary>
            <param name="PropOfDayToUse">The property of day to use.</param>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.Phen.NodeNumberPhase.AddTT(System.Double)">
            <summary>Adds the tt.</summary>
            <param name="PropOfDayToUse">The property of day to use.</param>
            <returns></returns>
        </member>
        <member name="P:Models.PMF.Phen.NodeNumberPhase.FractionComplete">
            <summary>Return a fraction of phase complete.</summary>
            <value>The fraction complete.</value>
        </member>
        <member name="T:Models.AgPasture1.Sward">
            <summary>A multi-mySpecies pasture model</summary>
        </member>
        <member name="T:Models.Interfaces.ICanopy">
            <summary>This interface describes MicroClimate / canopy comms.</summary>
        </member>
        <member name="P:Models.Interfaces.ICanopy.CanopyType">
            <summary>Canopy type</summary>
        </member>
        <member name="P:Models.Interfaces.ICanopy.LAI">
            <summary>Gets the LAI (m^2/m^2)</summary>
        </member>
        <member name="P:Models.Interfaces.ICanopy.LAITotal">
            <summary>Gets the maximum LAI (m^2/m^2)</summary>
        </member>
        <member name="P:Models.Interfaces.ICanopy.CoverGreen">
            <summary>Gets the cover green (0-1)</summary>
        </member>
        <member name="P:Models.Interfaces.ICanopy.CoverTotal">
            <summary>Gets the cover total (0-1)</summary>
        </member>
        <member name="P:Models.Interfaces.ICanopy.Height">
            <summary>Gets the canopy height (mm)</summary>
        </member>
        <member name="P:Models.Interfaces.ICanopy.Depth">
            <summary>Gets the canopy depth (mm)</summary>
        </member>
        <member name="P:Models.Interfaces.ICanopy.FRGR">
            <summary>Gets  FRGR.</summary>
        </member>
        <member name="P:Models.Interfaces.ICanopy.PotentialEP">
            <summary>Sets the potential evapotranspiration.</summary>
        </member>
        <member name="P:Models.Interfaces.ICanopy.LightProfile">
            <summary>Sets the light profile.</summary>
        </member>
        <member name="F:Models.AgPasture1.Sward.CinDM">
            <summary>Average carbon content in plant dry matter</summary>
        </member>
        <member name="F:Models.AgPasture1.Sward.N2Protein">
            <summary>Nitrogen to protein conversion factor</summary>
        </member>
        <member name="F:Models.AgPasture1.Sward.MetData">
            <summary>Link to APSIM's WeatherFile (meteorological information)</summary>
        </member>
        <member name="F:Models.AgPasture1.Sward.Soil">
            <summary>Link to the Soil (soil layers and other information)</summary>
        </member>
        <member name="F:Models.AgPasture1.Sward.interceptedRadn">
            <summary>The intercepted solar radiation</summary>
        </member>
        <member name="F:Models.AgPasture1.Sward.myLightProfile">
            <summary>Light profile (energy available for each canopy layer)</summary>
        </member>
        <member name="M:Models.AgPasture1.Sward.DoNewCropEvent">
            <summary>Invokes the NewCrop event (info about this crop type)</summary>
        </member>
        <member name="F:Models.AgPasture1.Sward.numSpecies">
            <summary>The number of species in the sward</summary>
        </member>
        <member name="F:Models.AgPasture1.Sward.isSwardControlled">
            <summary>Flag whether the sward controls the species routines</summary>
        </member>
        <member name="F:Models.AgPasture1.Sward.waterUptakeSource">
            <summary>Flag for the model controlling the water uptake</summary>
        </member>
        <member name="F:Models.AgPasture1.Sward.nUptakeSource">
            <summary>Flag for the model controlling the N uptake</summary>
        </member>
        <member name="F:Models.AgPasture1.Sward.useAltWUptake">
            <summary>Flag whether the alternative water uptake process is to be used</summary>
        </member>
        <member name="F:Models.AgPasture1.Sward.useAltNUptake">
            <summary>Flag whether the alternative N uptake process is to be used</summary>
        </member>
        <member name="F:Models.AgPasture1.Sward.referenceKSuptake">
            <summary>The reference hydraulic conductivity for water uptake</summary>
        </member>
        <member name="F:Models.AgPasture1.Sward.rootDistributionMethod">
            <summary>Flag for the root distribution method</summary>
        </member>
        <member name="F:Models.AgPasture1.Sward.expoLinearDepthParam">
            <summary>The fraction of root zone where distribution is constant (expo-linear function)</summary>
        </member>
        <member name="F:Models.AgPasture1.Sward.expoLinearCurveParam">
            <summary>The exponent to determine mass distribution in the soil profile (expo-linear function)</summary>
        </member>
        <member name="F:Models.AgPasture1.Sward.HeightFromMass">
            <summary>Broken stick type function describing how plant height varies with DM</summary>
        </member>
        <member name="F:Models.AgPasture1.Sward.hasInitialised">
            <summary>Flag whether the initialisation procedures have been performed</summary>
        </member>
        <member name="F:Models.AgPasture1.Sward.isAlive">
            <summary>Flag whether crop is alive (not killed)</summary>
        </member>
        <member name="F:Models.AgPasture1.Sward.swardRootDepth">
            <summary>sward root depth (maximum depth of all species)</summary>
        </member>
        <member name="F:Models.AgPasture1.Sward.swardRootFraction">
            <summary>average root distribution over the soil profile</summary>
        </member>
        <member name="F:Models.AgPasture1.Sward.avgSRL">
            <summary>average specific root length</summary>
        </member>
        <member name="F:Models.AgPasture1.Sward.soilAvailableWater">
            <summary>Amount of soil water available to the sward, from each soil layer (mm)</summary>
        </member>
        <member name="F:Models.AgPasture1.Sward.swardWaterDemand">
            <summary>Daily soil water demand for the whole sward (mm)</summary>
        </member>
        <member name="F:Models.AgPasture1.Sward.swardWaterUptake">
            <summary>Soil water uptake for the whole sward, from each soil layer (mm)</summary>
        </member>
        <member name="F:Models.AgPasture1.Sward.soilAvailableN">
            <summary>Amount of soil N available for uptake to the whole sward</summary>
        </member>
        <member name="F:Models.AgPasture1.Sward.soilNH4Available">
            <summary>Amount of NH4 available for uptake to the whole sward</summary>
        </member>
        <member name="F:Models.AgPasture1.Sward.soilNO3Available">
            <summary>Amount of NO3 available for uptake to the whole sward</summary>
        </member>
        <member name="F:Models.AgPasture1.Sward.swardNFixation">
            <summary>The N fixation amount for the whole sward</summary>
        </member>
        <member name="F:Models.AgPasture1.Sward.swardNdemand">
            <summary>The basic N demand for the sward (for optimum growth)</summary>
        </member>
        <member name="F:Models.AgPasture1.Sward.swardSoilNdemand">
            <summary>The soil N demand for the whole sward</summary>
        </member>
        <member name="F:Models.AgPasture1.Sward.swardSoilNuptake">
            <summary>The total N uptake for the whole sward</summary>
        </member>
        <member name="F:Models.AgPasture1.Sward.swardRemobilisedN">
            <summary>The remobilised N in the whole sward</summary>
        </member>
        <member name="F:Models.AgPasture1.Sward.swardNRemobNewGrowth">
            <summary>The remobilised N to new growth</summary>
        </member>
        <member name="F:Models.AgPasture1.Sward.swardNewGrowthN">
            <summary>The N amount in new growth, for the whole sward</summary>
        </member>
        <member name="F:Models.AgPasture1.Sward.swardNFastRemob2">
            <summary>The N remobilised from tissue 2, for the whole sward</summary>
        </member>
        <member name="F:Models.AgPasture1.Sward.swardNFastRemob3">
            <summary>The N remobilised from tissue 3, for the whole sward</summary>
        </member>
        <member name="F:Models.AgPasture1.Sward.nLayers">
            <summary>Number of soil layers</summary>
        </member>
        <member name="F:Models.AgPasture1.Sward.initialLightExtCoeff">
            <summary>The average light extinction coefficient for the whole sward at the beginning of the simulation</summary>
        </member>
        <member name="M:Models.AgPasture1.Sward.OnLoaded">
            <summary>Called when [loaded].</summary>
        </member>
        <member name="M:Models.AgPasture1.Sward.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>Called when [simulation commencing].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.AgPasture1.Sward.OnDoDailyInitialisation(System.Object,System.EventArgs)">
            <summary>EventHandler - preparation before the main process</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/>instance containing the event data.</param>
        </member>
        <member name="M:Models.AgPasture1.Sward.OnDoPlantGrowth(System.Object,System.EventArgs)">
            <summary>Performs the plant growth calculations</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.AgPasture1.Sward.OnWaterUptakesCalculated(Models.PMF.WaterUptakesCalculatedType)">
            <summary>Gets the water uptake for each layer as calculated by an external module (SWIM)</summary>
            <param name="SoilWater">The soil water.</param>
        </member>
        <member name="M:Models.AgPasture1.Sward.DoWaterCalculations">
            <summary>Water uptake processes</summary>
        </member>
        <member name="M:Models.AgPasture1.Sward.GetSoilAvailableWater">
            <summary>Finds out the amount soil water available (consider all mySpecies)</summary>
            <returns>The amount of water available to plants in each layer</returns>
        </member>
        <member name="M:Models.AgPasture1.Sward.DoSoilWaterUptake">
            <summary>Does the actual water uptake and send the deltas to soil module</summary>
            <exception cref="T:System.Exception">Error on computing water uptake</exception>
            <remarks>The amount of water taken up from each soil layer is set per mySpecies</remarks>
        </member>
        <member name="M:Models.AgPasture1.Sward.DoNitrogenCalculations">
            <summary>Performs the computations for N uptake</summary>
        </member>
        <member name="M:Models.AgPasture1.Sward.GetSoilAvailableN">
            <summary>
            Find out the amount of Nitrogen in the soil available to plants for each soil layer
            </summary>
        </member>
        <member name="M:Models.AgPasture1.Sward.GetNDemand">
            <summary>
            Get the N demanded for plant growth (with optimum and luxury uptake) for each mySpecies
            </summary>
        </member>
        <member name="M:Models.AgPasture1.Sward.CalcNFixation">
            <summary>Computes the amount of N fixed for each mySpecies</summary>
            <returns>The total amount of N fixed in the sward</returns>
        </member>
        <member name="M:Models.AgPasture1.Sward.CalcSoilNUptake">
            <summary>Computes the amount of N to be taken up from the soil</summary>
            <returns>The total amount of N to be actually taken up from the soil</returns>
        </member>
        <member name="M:Models.AgPasture1.Sward.DoSoilNitrogenUptake">
            <summary>
            Computes the distribution of N uptake over the soil profile and send the delta to soil module
            </summary>
            <exception cref="T:System.Exception">
             Error on computing N uptake
             or
             N uptake source was not recognised. Please specify it as either \"sward\" or \"species\".
            </exception>
        </member>
        <member name="M:Models.AgPasture1.Sward.Sow(System.String,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Sows the plant</summary>
            <param name="cultivar">Cultivar type</param>
            <param name="population">Plants per area</param>
            <param name="depth">Sowing depth</param>
            <param name="rowSpacing">space between rows</param>
            <param name="maxCover">maximum ground cover</param>
            <param name="budNumber">Number of buds</param>
        </member>
        <member name="M:Models.AgPasture1.Sward.OnKillCrop(Models.KillCropType)">
            <summary>Kills all the plant mySpecies in the sward (zero variables and set to not alive)</summary>
            <param name="KillData">Fraction of crop to kill (here always 100%)</param>
        </member>
        <member name="M:Models.AgPasture1.Sward.Harvest(System.Double,System.String)">
            <summary>Harvest (remove DM) the sward</summary>
            <param name="amount">DM amount</param>
            <param name="type">How the amount is interpreted (remove or residual)</param>
        </member>
        <member name="M:Models.AgPasture1.Sward.OnGraze(Models.GrazeType)">
            <summary>Graze event, remove DM from sward</summary>
            <param name="GrazeData">How amount of DM to remove is defined</param>
        </member>
        <member name="M:Models.AgPasture1.Sward.Onremove_crop_biomass(Models.RemoveCropBiomassType)">
            <summary>Remove biomass from sward</summary>
            <param name="RemovalData">Info about what and how much to remove</param>
            <remarks>Greater details on how much and which parts are removed is given</remarks>
        </member>
        <member name="M:Models.AgPasture1.Sward.DoSurfaceOMReturn(System.Double,System.Double)">
            <summary>Return a given amount of DM (and N) to surface organic matter</summary>
            <param name="amountDM">DM amount to return</param>
            <param name="amountN">N amount to return</param>
        </member>
        <member name="M:Models.AgPasture1.Sward.DoIncorpFomEvent(System.Double,System.Double)">
            <summary>Return senescent roots to fresh organic matter pool in the soil</summary>
            <param name="amountDM">DM amount to return</param>
            <param name="amountN">N amount to return</param>
        </member>
        <member name="M:Models.AgPasture1.Sward.GetSWUptakes(Models.Soils.Arbitrator.SoilState)">
            <summary>Placeholder for SoilArbitrator</summary>
            <param name="soilstate">some info</param>
            <returns>soil info</returns>
        </member>
        <member name="M:Models.AgPasture1.Sward.GetNUptakes(Models.Soils.Arbitrator.SoilState)">
            <summary>Placeholder for SoilArbitrator</summary>
            <param name="soilstate">soilstate</param>
            <returns></returns>
        </member>
        <member name="M:Models.AgPasture1.Sward.SetSWUptake(System.Collections.Generic.List{Models.Soils.Arbitrator.ZoneWaterAndN})">
            <summary>Set the soil water uptake for today</summary>
            <param name="info">Some info</param>
        </member>
        <member name="M:Models.AgPasture1.Sward.SetNUptake(System.Collections.Generic.List{Models.Soils.Arbitrator.ZoneWaterAndN})">
            <summary>
            Set the n uptake for today
            </summary>
            <param name="info">Some info</param>
        </member>
        <member name="M:Models.AgPasture1.Sward.RootProfileDistribution">
            <summary>Compute the distribution of roots in the soil profile (sum is equal to one)</summary>
            <returns>The proportion of root mass in each soil layer</returns>
            <exception cref="T:System.Exception">
            No valid method for computing root distribution was selected
            or
            Could not calculate root distribution
            </exception>
        </member>
        <member name="M:Models.AgPasture1.Sward.LayerFractionWithRoots(System.Int32)">
            <summary>
            Compute how much of the layer is actually explored by roots (considering depth only)
            </summary>
            <param name="layer">The index for the layer being considered</param>
            <returns>Fraction of the layer in consideration that is explored by roots</returns>
        </member>
        <member name="E:Models.AgPasture1.Sward.Sowing">
            <summary>Event to be invoked when sowing or at initialisation (tell models about existence of this plant).</summary>
        </member>
        <member name="E:Models.AgPasture1.Sward.IncorpFOM">
            <summary>Occurs when plant is depositing senesced roots.</summary>
        </member>
        <member name="E:Models.AgPasture1.Sward.BiomassRemoved">
            <summary>Occurs when plant is depositing litter.</summary>
        </member>
        <member name="E:Models.AgPasture1.Sward.WaterChanged">
            <summary>Occurs when plant takes up water.</summary>
        </member>
        <member name="E:Models.AgPasture1.Sward.NitrogenChanged">
            <summary>Occurs when the plant takes up soil N.</summary>
        </member>
        <member name="P:Models.AgPasture1.Sward.CanopyType">
            <summary>Canopy type</summary>
        </member>
        <member name="P:Models.AgPasture1.Sward.LAI">
            <summary>Gets the LAI (m^2/m^2)</summary>
        </member>
        <member name="P:Models.AgPasture1.Sward.LAITotal">
            <summary>Gets the maximum LAI (m^2/m^2)</summary>
        </member>
        <member name="P:Models.AgPasture1.Sward.CoverGreen">
            <summary>Gets the cover green (0-1)</summary>
        </member>
        <member name="P:Models.AgPasture1.Sward.CoverTotal">
            <summary>Gets the cover total (0-1)</summary>
        </member>
        <member name="P:Models.AgPasture1.Sward.Height">
            <summary>Gets the canopy height (mm)</summary>
        </member>
        <member name="P:Models.AgPasture1.Sward.Depth">
            <summary>Gets the canopy depth (mm)</summary>
        </member>
        <member name="P:Models.AgPasture1.Sward.FRGR">
            <summary>Gets the plant growth limiting factor, supplied to another module calculating potential transpiration</summary>
        </member>
        <member name="P:Models.AgPasture1.Sward.PotentialEP">
            <summary>Gets or sets the potential evapotranspiration, as calculated by MicroClimate</summary>
        </member>
        <member name="P:Models.AgPasture1.Sward.LightProfile">
            <summary>Gets or sets the light profile for this plant, as calculated by MicroClimate</summary>
        </member>
        <member name="P:Models.AgPasture1.Sward.CultivarNames">
            <summary>Gets a list of cultivar names (not used by AgPasture)</summary>
        </member>
        <member name="P:Models.AgPasture1.Sward.mySward">
            <summary>Gets the reference to the species present in the sward.</summary>
            <value>Pasture species.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.NumSpecies">
            <summary>Gets or sets the number species in the sward.</summary>
            <value>The number of species.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.AgPastureControlled">
            <summary>Gets or sets whether the sward controls the processes in all species.</summary>
            <value>A yes/no value.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.WaterUptakeSource">
            <summary>Gets or sets the model controlling the water uptake.</summary>
            <value>A flag indicating a valid model ('sward', 'species', or 'apsim').</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.NUptakeSource">
            <summary>Gets or sets the model controlling the N uptake.</summary>
            <value>A flag indicating a valid model ('sward', 'species', or 'apsim').</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.UseAlternativeWaterUptake">
            <summary>Gets or sets whether the alternative water uptake is to be used.</summary>
            <value>A yes/no value.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.UseAlternativeNUptake">
            <summary>Gets or sets whether the alternative N uptake is to be used.</summary>
            <value>A yes/no value.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.ReferenceKSuptake">
            <summary>Gets or sets the reference soil hydraulic conductivity for water uptake.</summary>
            <value>The Ksat value.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.RootDistributionMethod">
            <summary>Gets or sets the root distribution method.</summary>
            <value>The root distribution method.</value>
            <exception cref="T:System.Exception">No valid method for computing root distribution was selected</exception>
        </member>
        <member name="P:Models.AgPasture1.Sward.ExpoLinearDepthParam">
            <summary>Gets or sets the depth parameter for the expo-linear function.</summary>
            <value>The fraction of root zone where distribution is constant.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.ExpoLinearCurveParam">
            <summary>Gets or sets the curve parameter for the expo-linear function.</summary>
            <value>The exponent to determine mass distribution in the soil profile.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.IsAlive">
            <summary>
            Gets a value indicating whether the plant is alive.
            </summary>
        </member>
        <member name="P:Models.AgPasture1.Sward.PlantStatus">
            <summary>Gets the plant status.</summary>
            <value>The plant status (dead, alive, etc).</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.Stage">
            <summary>Gets the index for the plant development stage.</summary>
            <value>The stage index.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.StageName">
            <summary>Gets the name of the plant development stage.</summary>
            <value>The name of the stage.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.TotalC">
            <summary>Gets the total plant C content.</summary>
            <value>The plant C content.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.TotalWt">
            <summary>Gets the plant total dry matter weight.</summary>
            <value>The total DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.AboveGroundWt">
            <summary>Gets the plant DM weight above ground.</summary>
            <value>The above ground DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.AboveGroundLiveWt">
            <summary>Gets the DM weight of live plant parts above ground.</summary>
            <value>The above ground DM weight of live plants.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.AboveGroundDeadWt">
            <summary>Gets the DM weight of dead plant parts above ground.</summary>
            <value>The above ground dead DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.BelowGroundWt">
            <summary>Gets the DM weight of the plant below ground.</summary>
            <value>The below ground DM weight of plant.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.StandingWt">
            <summary>Gets the total standing DM weight.</summary>
            <value>The DM weight of leaves and stems.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.StandingLiveWt">
            <summary>Gets the DM weight of standing live plant material.</summary>
            <value>The DM weight of live leaves and stems.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.StandingDeadWt">
            <summary>Gets the DM weight of standing dead plant material.</summary>
            <value>The DM weight of dead leaves and stems.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.LeafWt">
            <summary>Gets the total DM weight of leaves.</summary>
            <value>The leaf DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.LeafLiveWt">
            <summary>Gets the DM weight of green leaves.</summary>
            <value>The green leaf DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.LeafDeadWt">
            <summary>Gets the DM weight of dead leaves.</summary>
            <value>The dead leaf DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.StemWt">
            <summary>Gets the total DM weight of stems and sheath.</summary>
            <value>The stem DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.StemLiveWt">
            <summary>Gets the DM weight of live stems and sheath.</summary>
            <value>The live stems DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.StemDeadWt">
            <summary>Gets the DM weight of dead stems and sheath.</summary>
            <value>The dead stems DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.StolonWt">
            <summary>Gets the total DM weight od stolons.</summary>
            <value>The stolon DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.RootWt">
            <summary>Gets the total DM weight of roots.</summary>
            <value>The root DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.GrossPotentialGrowthWt">
            <summary>Gets the gross potential growth rate.</summary>
            <value>The potential C assimilation, in DM equivalent.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.RespirationWt">
            <summary>Gets the respiration rate.</summary>
            <value>The loss of C due to respiration, in DM equivalent.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.RemobilisationWt">
            <summary>Gets the remobilisation rate.</summary>
            <value>The C remobilised, in DM equivalent.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.NetPotentialGrowthWt">
            <summary>Gets the net potential growth rate.</summary>
            <value>The potential growth rate after respiration and remobilisation.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.PotGrowthWt_Wstress">
            <summary>Gets the potential growth rate after water stress.</summary>
            <value>The potential growth after water stress.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.ActualGrowthWt">
            <summary>Gets the actual growth rate.</summary>
            <value>The actual growth rate, after nutrient limitations.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.EffectiveGrowthWt">
            <summary>Gets the effective growth rate.</summary>
            <value>The effective growth rate, after senescence.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.HerbageGrowthWt">
            <summary>Gets the effective herbage growth rate.</summary>
            <value>The herbage growth rate.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.RootGrowthWt">
            <summary>Gets the effective root growth rate.</summary>
            <value>The root growth DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.LitterDepositionWt">
            <summary>Gets the litter DM weight deposited onto soil surface.</summary>
            <value>The litter DM weight deposited.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.RootSenescenceWt">
            <summary>Gets the senesced root DM weight.</summary>
            <value>The senesced root DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.GPP">
            <summary>Gets the gross primary productivity.</summary>
            <value>The gross primary productivity.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.NPP">
            <summary>Gets the net primary productivity.</summary>
            <value>The net primary productivity.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.NAPP">
            <summary>Gets the net above-ground primary productivity.</summary>
            <value>The net above-ground primary productivity.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.NBPP">
            <summary>Gets the net below-ground primary productivity.</summary>
            <value>The net below-ground primary productivity.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.TotalN">
            <summary>Gets the plant total N content.</summary>
            <value>The total N content.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.AboveGroundN">
            <summary>Gets the N content in the plant above ground.</summary>
            <value>The above ground N content.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.AboveGroundLiveN">
            <summary>Gets the N content in live plant material above ground.</summary>
            <value>The N content above ground of live plants.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.AboveGroundDeadN">
            <summary>Gets the N content of dead plant material above ground.</summary>
            <value>The N content above ground of dead plants.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.BelowGroundN">
            <summary>Gets the N content of plants below ground.</summary>
            <value>The below ground N content.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.StandingN">
            <summary>Gets the N content of standing plants.</summary>
            <value>The N content of leaves and stems.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.StandingLiveN">
            <summary>Gets the N content of standing live plant material.</summary>
            <value>The N content of live leaves and stems.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.StandingDeadN">
            <summary>Gets the N content  of standing dead plant material.</summary>
            <value>The N content of dead leaves and stems.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.LeafN">
            <summary>Gets the total N content of leaves.</summary>
            <value>The leaf N content.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.StemN">
            <summary>Gets the total N content of stems and sheath.</summary>
            <value>The stem N content.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.StolonN">
            <summary>Gets the total N content of stolons.</summary>
            <value>The stolon N content.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.RootN">
            <summary>Gets the total N content of roots.</summary>
            <value>The roots N content.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.StandingNConc">
            <summary>Gets the average N concentration of standing plant material.</summary>
            <value>The average N concentration of leaves and stems.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.LeafNConc">
            <summary>Gets the average N concentration of leaves.</summary>
            <value>The leaf N concentration.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.StemNConc">
            <summary>Gets the average N concentration of stems and sheath.</summary>
            <value>The stem N concentration.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.StolonNConc">
            <summary>Gets the average N concentration of stolons.</summary>
            <value>The stolon N concentration.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.RootNConc">
            <summary>Gets the average N concentration of roots.</summary>
            <value>The root N concentration.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.GrowthNConc">
            <summary>Gets the average N concentration of new grown tissue.</summary>
            <value>The N concentration of new grown tissue.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.RemobilisedN">
            <summary>Gets the amount of N remobilised from senesced tissue.</summary>
            <value>The remobilised N amount.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.LuxuryNRemobilisable">
            <summary>Gets the amount of luxury N potentially remobilisable.</summary>
            <value>The potentially remobilisable luxury N amount.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.LuxuryNRemobilised">
            <summary>Gets the amount of luxury N remobilised.</summary>
            <value>The remobilised luxury N amount.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.FixedN">
            <summary>Gets the amount of atmospheric N fixed.</summary>
            <value>The fixed N amount.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.NitrogenRequiredLuxury">
            <summary>Gets the amount of N required with luxury uptake.</summary>
            <value>The required N with luxury.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.NitrogenRequiredOptimum">
            <summary>Gets the amount of N required for optimum N content.</summary>
            <value>The required optimum N amount.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.NitrogenDemand">
            <summary>Gets the amount of N demanded from soil.</summary>
            <value>The N demand from soil.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.NitrogenAvailable">
            <summary>Gets the amount of plant available N in soil layer.</summary>
            <value>The soil available N.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.NitrogenUptake">
            <summary>Gets the amount of N taken up from each soil layer.</summary>
            <value>The N taken up from soil.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.LitterDepositionN">
            <summary>Gets the amount of N deposited as litter onto soil surface.</summary>
            <value>The litter N amount.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.RootSenescenceN">
            <summary>Gets the amount of N from senesced roots added to soil FOM.</summary>
            <value>The senesced root N amount.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.ActualGrowthN">
            <summary>Gets the amount of N in new grown tissue.</summary>
            <value>The actual growth N amount.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.ActualGrowthNConc">
            <summary>Gets the N concentration in new grown tissue.</summary>
            <value>The actual growth N concentration.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.DMToShoot">
            <summary>Gets the DM weight allocated to shoot.</summary>
            <value>The DM allocated to shoot.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.DMToRoots">
            <summary>Gets the DM weight allocated to roots.</summary>
            <value>The DM allocated to roots.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.FractionGrowthToRoot">
            <summary>Gets the fraction of new growth allocated to root.</summary>
            <value>The fraction allocated to root.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.FractionGrowthToShoot">
            <summary>Gets the fraction of new growth allocated to shoot.</summary>
            <value>The fraction allocated to shoot.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.TotalLAI">
            <summary>Gets the total plant LAI (leaf area index).</summary>
            <value>The total LAI.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.GreenLAI">
            <summary>Gets the plant's green LAI (leaf area index).</summary>
            <value>The green LAI.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.DeadLAI">
            <summary>Gets the plant's dead LAI (leaf area index).</summary>
            <value>The dead LAI.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.LightExtCoeff">
            <summary>Gets the average light extinction coefficient.</summary>
            <value>The light extinction coefficient.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.TotalCover">
            <summary>Gets the plant's total cover.</summary>
            <value>The total cover.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.GreenCover">
            <summary>Gets the plant's green cover.</summary>
            <value>The green cover.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.DeadCover">
            <summary>Gets the plant's dead cover.</summary>
            <value>The dead cover.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.RootZoneDepth">
            <summary>Gets the root zone depth.</summary>
            <value>The root depth.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.RootFrontier">
            <summary>Gets the root frontier.</summary>
            <value>The layer at bottom of root zone.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.RootWtFraction">
            <summary>Gets the fraction of root dry matter for each soil layer.</summary>
            <value>The root fraction.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.RLD">
            <summary>Gets the plant's root length density for each soil layer.</summary>
            <value>The root length density.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.WaterDemand">
            <summary>Gets the amount of water demanded by plants.</summary>
            <value>The water demand.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.SoilAvailableWater">
            <summary>Gets the amount of soil water available for uptake.</summary>
            <value>The soil available water.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.WaterUptake">
            <summary>Gets the amount of water taken up by the plants.</summary>
            <value>The water uptake.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.GlfN">
            <summary>Gets the average growth limiting factor due to N availability.</summary>
            <value>The growth limiting factor due to N.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.GlfNConcentration">
            <summary>Gets the average growth limiting factor due to N concentration in the plant.</summary>
            <value>The growth limiting factor due to N concentration.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.GlfTemperature">
            <summary>Gets the average growth limiting factor due to temperature.</summary>
            <value>The growth limiting factor due to temperature.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.GlfWater">
            <summary>Gets the average growth limiting factor due to water availability.</summary>
            <value>The growth limiting factor due to water.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.GlfGeneric">
            <summary>Gets the average generic growth limiting factor (arbitrary limitation).</summary>
            <value>The generic growth limiting factor.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.FVPD">
            <summary>Gets the vapour pressure deficit factor.</summary>
            <value>The vapour pressure deficit factor.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.HarvestableWt">
            <summary>Gets the amount of dry matter harvestable (leaf + stem).</summary>
            <value>The harvestable DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.HarvestedWt">
            <summary>Gets the amount of dry matter harvested.</summary>
            <value>The harvested DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.HarvestedN">
            <summary>Gets the amount of plant N removed by harvest.</summary>
            <value>The harvested N amount.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.HarvestedNConc">
            <summary>Gets the N concentration in harvested DM.</summary>
            <value>The N concentration in harvested DM.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.HerbageDigestibility">
            <summary>Gets the average herbage digestibility.</summary>
            <value>The herbage digestibility.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.HarvestedDigestibility">
            <summary>Gets the average digestibility of harvested DM.</summary>
            <value>The harvested digestibility.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.HerbageME">
            <summary>Gets the average herbage ME (metabolisable energy).</summary>
            <value>The herbage ME.</value>
        </member>
        <member name="P:Models.AgPasture1.Sward.HarvestedME">
            <summary>Gets the average ME (metabolisable energy) of harvested DM.</summary>
            <value>The harvested ME.</value>
        </member>
        <member name="T:Models.AgPasture1.Sward.NewCropDelegate">
            <summary>Reference to a NewCrop event</summary>
            <param name="Data">Data about crop type</param>
        </member>
        <member name="T:Models.AgPasture1.Sward.NewCanopyDelegate">
            <summary>Reference to a NewCanopy event</summary>
            <param name="Data">The data about this plant's canopy.</param>
        </member>
        <member name="T:Models.AgPasture1.Sward.FOMLayerDelegate">
            <summary>Reference to a FOM incorporation event</summary>
            <param name="Data">The data with soil FOM to be added.</param>
        </member>
        <member name="T:Models.AgPasture1.Sward.BiomassRemovedDelegate">
            <summary>Reference to a BiomassRemoved event</summary>
            <param name="Data">The data about biomass deposited by this plant to the soil surface.</param>
        </member>
        <member name="T:Models.AgPasture1.Sward.WaterChangedDelegate">
            <summary>Reference to a WaterChanged event</summary>
            <param name="Data">The changes in the amount of water for each soil layer.</param>
        </member>
        <member name="T:Models.AgPasture1.Sward.NitrogenChangedDelegate">
            <summary>Reference to a NitrogenChanged event</summary>
            <param name="Data">The changes in the soil N for each soil layer.</param>
        </member>
        <member name="T:Models.Zones.RectangularZone">
            <summary>A rectangular zone.</summary>
        </member>
        <member name="P:Models.Zones.RectangularZone.Length">
            <summary>Length of the zone.</summary>
            <value>The length.</value>
        </member>
        <member name="P:Models.Zones.RectangularZone.Width">
            <summary>Width of the zone.</summary>
            <value>The width.</value>
        </member>
        <member name="P:Models.Zones.RectangularZone.Distance">
            <summary>
            Returns the distance from edge of system
            </summary>
        </member>
        <member name="P:Models.Zones.RectangularZone.Area">
            <summary>
            Return the area of the zone.
            </summary>
        </member>
        <member name="T:Models.Core.ISummary">
            <summary>
            A summary model interface for writing to the summary file.
            </summary>
        </member>
        <member name="M:Models.Core.ISummary.WriteMessage(Models.Core.IModel,System.String)">
            <summary>
            Write a message to the summary
            </summary>
            <param name="model">The model writing the message</param>
            <param name="message">The message to write</param>
        </member>
        <member name="M:Models.Core.ISummary.WriteWarning(Models.Core.IModel,System.String)">
            <summary>
            Write a message to the summary
            </summary>
            <param name="model">The model writing the message</param>
            <param name="message">The message to write</param>
        </member>
        <member name="T:Models.Soils.SwimWaterTable">
            <summary>
            SWIM water table
            </summary>
        </member>
        <member name="P:Models.Soils.SwimWaterTable.WaterTableDepth">
            <summary>Gets or sets the water table depth.</summary>
            <value>The water table depth.</value>
        </member>
        <member name="T:Models.PMF.Phen.PhaseChangedType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.PMF.Phen.PhaseChangedType.OldPhaseName">
            <summary>The old phase name</summary>
        </member>
        <member name="F:Models.PMF.Phen.PhaseChangedType.NewPhaseName">
            <summary>The new phase name</summary>
        </member>
        <member name="F:Models.PMF.Phen.PhaseChangedType.EventStageName">
            <summary>The stage at phase change</summary>
        </member>
        <member name="T:Models.PMF.Phen.Phenology">
            <summary>
            This model simulates the development of the crop through successive growth <i>phases</i>.  Each phase is bound by distinct growth <i>stages</i>.  Phases often require a target to be reached to signal movement to the next phase.  Differences between cultivars are specified by changing the values of the default parameters shown below.
            </summary>
            \warning An \ref Models.PMF.Phen.EndPhase "EndPhase" model 
            should be included as the last child of 
            \ref Models.PMF.Phen.Phenology "Phenology" model
            \pre A Models.Clock "Clock" model has to exist.
            \retval CurrentPhaseName The current phase name.
            \retval CurrentStageName The current stage name. 
            Return name of parameter \p Start of 
            \ref Models.PMF.Phen.Phase "Phase" model 
            on the day of phase starting, or ? in other days.
            \retval Stage A one based stage number (start from 1).
            \retval DaysAfterSowing The day after sowing. 
            \retval FractionInCurrentPhase The fraction in current phase (0-1).
            <remarks>
            Generally, the plant phenology is divided into \f$N_{p}\f$ 
            phases (i.e. \ref Models.PMF.Phen.Phase "Phase" functions) and stages 
            (children number of Phenology model, only count 
            \ref Models.PMF.Phen.Phase "Phase" models).
            
            Any models inherited from \ref Models.PMF.Phen.Phase "Phase" models 
            could be used as children of Phenology model, except the last phase,
            which should be the \ref Models.PMF.Phen.EndPhase "EndPhase" model.
            The stage names are defined by the \p Start and \p End parameters 
            in each \ref Models.PMF.Phen.Phase "Phase" model. Consequently,
            The parameter value of \p Start should equal to the parameter value
            of \p End of previous \ref Models.PMF.Phen.Phase "Phase" model,
            except for the first phase. The parameter value of \p End 
            should equal to the parameter value of \p Start of next 
            \ref Models.PMF.Phen.Phase "Phase" function, except for the last phase. 
            The equality of stage and phase number raise from the last phase,
            which is \ref Models.PMF.Phen.EndPhase "EndPhase" model and the 
            \p End stage is unused. 
            
            For example, the wheat phenology model defines 9 stages from sowing to maturity.
            See the diagram below for definitions of stages and phases, 
            and models used for each phase.
            
            \startuml
            Sowing -> Germination : Germinating
            Germination -> Emergence : Emerging
            Emergence ->  TerminalSpikelet : Vegetative
            TerminalSpikelet-> FlagLeaf : FloralInitiation\nToFlagLeaf
            FlagLeaf -> Flowering : Spike\nDevelopment
            Flowering -> StartGrainFill: Grain\nDevelopment
            StartGrainFill -> EndGrainFill : GrainFilling
            EndGrainFill -> Maturity : Maturing
            Maturity -> Unused: ReadyFor\nHarvesting
            
            note over Sowing, Germination : GerminatingPhase
            note over Germination, Emergence : EmergingPhase
            note over Emergence, TerminalSpikelet : GenericPhase
            note over TerminalSpikelet, FlagLeaf : LeafAppearancePhase
            note over FlagLeaf, Flowering : GenericPhase
            note over Flowering, StartGrainFill: GenericPhase
            note over StartGrainFill, EndGrainFill : GenericPhase
            note over EndGrainFill, Maturity : GenericPhase
            note over Maturity, Unused: EndPhase
            \enduml
            
            On commencing simulation and sowing
            ----------------
            On commencing simulation and sowing
            \ref Models.PMF.Phen.Phenology "Phenology" function and all related 
            \ref Models.PMF.Phen.Phase "Phase" functions will be reset.
            On harvest
            -----------------
            On harvest, \ref Models.PMF.Phen.Phenology "Phenology" will 
            jump to the last phase function i.e. \ref Models.PMF.Phen.EndPhase 
            "EndPhase" function.
            On daily
            -----------------
            Phenology function performs a daily time step function, get the current 
            phase to do its development for the day. If thermal time is leftover after 
            Phase is progressed, and the time step for the subsequent phase is calculated 
            using leftover thermal time.
            
            </remarks>
        </member>
        <member name="F:Models.PMF.Phen.Phenology.Clock">
            <summary>The clock</summary>
        </member>
        <member name="F:Models.PMF.Phen.Phenology.RewindDueToBiomassRemoved">
            <summary>The rewind due to biomass removed</summary>
        </member>
        <member name="F:Models.PMF.Phen.Phenology.AboveGroundPeriod">
            <summary>The above ground period</summary>
        </member>
        <member name="F:Models.PMF.Phen.Phenology.ThermalTime">
            <summary>The thermal time</summary>
        </member>
        <member name="F:Models.PMF.Phen.Phenology.Phases">
            <summary>The phases</summary>
        </member>
        <member name="F:Models.PMF.Phen.Phenology.CurrentPhaseIndex">
            <summary>The current phase index</summary>
        </member>
        <member name="F:Models.PMF.Phen.Phenology._AccumulatedTT">
            <summary>The _ accumulated tt</summary>
        </member>
        <member name="F:Models.PMF.Phen.Phenology.CurrentlyOnFirstDayOfPhase">
            <summary>The currently on first day of phase.  This is an array that lists all the stages that are pased on this day</summary>
        </member>
        <member name="F:Models.PMF.Phen.Phenology.StagesPassedToday">
            <summary>The number of stages that have been passed today</summary>
        </member>
        <member name="F:Models.PMF.Phen.Phenology.JustInitialised">
            <summary>The just initialised</summary>
        </member>
        <member name="F:Models.PMF.Phen.Phenology.FractionBiomassRemoved">
            <summary>The fraction biomass removed</summary>
        </member>
        <member name="F:Models.PMF.Phen.Phenology.SowDate">
            <summary>The sow date</summary>
        </member>
        <member name="F:Models.PMF.Phen.Phenology.Emerged">
            <summary>The emerged</summary>
        </member>
        <member name="M:Models.PMF.Phen.Phenology.Clear">
            <summary>Clears this instance.</summary>
        </member>
        <member name="M:Models.PMF.Phen.Phenology.#ctor">
            <summary>Constructor</summary>
        </member>
        <member name="M:Models.PMF.Phen.Phenology.OnLoaded">
            <summary>Initialize the phase list of phenology.</summary>
        </member>
        <member name="M:Models.PMF.Phen.Phenology.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>Called when [simulation commencing].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Phen.Phenology.OnPlantSowing(System.Object,Models.PMF.SowPlant2Type)">
            <summary>Called when crop is ending</summary>
            <param name="sender">The sender.</param>
            <param name="data">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Phen.Phenology.OnHarvesting(System.Object,System.EventArgs)">
            <summary>Called when crop is being harvested.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Phen.Phenology.OnPlantEnding(System.Object,System.EventArgs)">
            <summary>Called when crop is ending</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Phen.Phenology.OnStartOfDay(System.Object,System.EventArgs)">
            <summary>Called at the start of each day</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Phen.Phenology.IndexOfPhase(System.String)">
            <summary>Look for a particular phase and return it's index or -1 if not found.</summary>
            <param name="Name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.Phen.Phenology.OnDoPhenology(System.Object,System.EventArgs)">
            <summary>Called by sequencer to perform phenology.</summary>
            <remarks>
            Perform our daily timestep function. Get the current phase to do its
            development for the day. If TT is leftover after Phase is progressed,
            and the timestep for the subsequent phase is calculated using leftover TT
            </remarks>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
            <exception cref="T:System.Exception">Cannot transition to the next phase. No more phases exist</exception>
        </member>
        <member name="M:Models.PMF.Phen.Phenology.OnDayOf(System.String)">
            <summary>
            A utility function to return true if the simulation is on the first day of the
            specified stage.
            </summary>
            <param name="StageName">Name of the stage.</param>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.Phen.Phenology.InPhase(System.String)">
            <summary>
            A utility function to return true if the simulation is currently in the
            specified phase.
            </summary>
            <param name="PhaseName">Name of the phase.</param>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.Phen.Phenology.Between(System.String,System.String)">
            <summary>
            A utility function to return true if the simulation is currently between
            the specified start and end stages.
            </summary>
            <param name="Start">The start.</param>
            <param name="End">The end.</param>
            <returns></returns>
            <exception cref="T:System.Exception">Cannot test between stages  + Start +   + End</exception>
        </member>
        <member name="M:Models.PMF.Phen.Phenology.Beyond(System.String)">
            <summary>
            A utility function to return true if the simulation is at or past
            the specified startstage.
            </summary>
            <param name="Start">The start.</param>
            <returns></returns>
            <exception cref="T:System.Exception">Cannot test between stages  + Start +   + End</exception>
        </member>
        <member name="M:Models.PMF.Phen.Phenology.PhaseStartingWith(System.String)">
            <summary>
            A utility function to return the phenological phase that starts with
            the specified start stage name.
            </summary>
            <param name="Start">The start.</param>
            <returns></returns>
            <exception cref="T:System.Exception">Unable to find phase starting with  + Start</exception>
        </member>
        <member name="M:Models.PMF.Phen.Phenology.PhaseEndingWith(System.String)">
            <summary>
            A utility function to return the phenological phase that ends with
            the specified start stage name.
            </summary>
            <param name="End">The end.</param>
            <returns></returns>
            <exception cref="T:System.Exception">Unable to find phase ending with  + End</exception>
        </member>
        <member name="M:Models.PMF.Phen.Phenology.IsValidPhase(System.String)">
            <summary>A utility function to return true if a phenological phase is valid.</summary>
            <param name="Start">The start.</param>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.Phen.Phenology.IsValidPhase2(System.String)">
            <summary>A utility function to return true if a phenological phase is valid.</summary>
            <param name="PhaseName">Name of the phase.</param>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.Phen.Phenology.WriteSummary(System.IO.TextWriter)">
            <summary>Write phenology info to summary file.</summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:Models.PMF.Phen.Phenology.OnRemoveBiomass(System.Double)">
            <summary>Respond to a remove biomass event.</summary>
            <param name="removeBiomPheno">The remove biom pheno.</param>
        </member>
        <member name="E:Models.PMF.Phen.Phenology.PhaseChanged">
            <summary>Occurs when [phase changed].</summary>
        </member>
        <member name="E:Models.PMF.Phen.Phenology.GrowthStage">
            <summary>Occurs when [growth stage].</summary>
        </member>
        <member name="E:Models.PMF.Phen.Phenology.PostPhenology">
            <summary>Occurs when daily phenology timestep completed</summary>
        </member>
        <member name="P:Models.PMF.Phen.Phenology.Stage">
            <summary>A one based stage number.</summary>
        </member>
        <member name="P:Models.PMF.Phen.Phenology.CurrentPhaseName">
            <summary>This property is used to retrieve or set the current phase name.</summary>
            <value>The name of the current phase.</value>
            <exception cref="T:System.Exception">Cannot jump to phenology phase:  + value + . Phase not found.</exception>
        </member>
        <member name="P:Models.PMF.Phen.Phenology.CurrentStageName">
            <summary>Return current stage name.</summary>
            <value>The name of the current stage.</value>
        </member>
        <member name="P:Models.PMF.Phen.Phenology.FractionInCurrentPhase">
            <summary>Gets the fraction in current phase.</summary>
            <value>The fraction in current phase.</value>
        </member>
        <member name="P:Models.PMF.Phen.Phenology.DaysAfterSowing">
            <summary>Gets the days after sowing.</summary>
            <value>The days after sowing.</value>
        </member>
        <member name="P:Models.PMF.Phen.Phenology.PlantIsAlive">
            <summary>
            A helper property that checks the parent plant (old or new) to see if it is alive.
            </summary>
            <value><c>true</c> if plant is alive; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Models.PMF.Phen.Phenology.CurrentPhase">
            <summary>A utility property to return the current phase.</summary>
            <value>The current phase.</value>
            <exception cref="T:System.Exception">
            Cannot jump to phenology phase:  + value + . Phase not found.
            or
            Cannot goto phase:  + GotoP.PhaseNameToGoto + . Phase not found.
            </exception>
        </member>
        <member name="P:Models.PMF.Phen.Phenology.TTInAboveGroundPhase">
            <summary>Gets the tt in above ground phase.</summary>
            <value>The tt in above ground phase.</value>
            <exception cref="T:System.Exception">Cannot find Phenology.AboveGroundPeriod function in xml file</exception>
        </member>
        <member name="T:Models.PMF.Phen.Phenology.PhaseChangedDelegate">
            <summary>Delegate for a phase changed event</summary>
            <param name="Data">The data describing the phase change.</param>
        </member>
        <member name="T:Models.PMF.Organs.GenericAboveGroundOrgan">
            <summary>
            A generic above ground organ
            </summary>
        </member>
        <member name="F:Models.PMF.Organs.GenericAboveGroundOrgan.Summary">
            <summary>The summary</summary>
        </member>
        <member name="M:Models.PMF.Organs.GenericAboveGroundOrgan.OnPrune(Models.PMF.PruneType)">
            <summary>Called when [prune].</summary>
            <param name="Prune">The prune.</param>
        </member>
        <member name="M:Models.PMF.Organs.GenericAboveGroundOrgan.OnCutting(System.Object,System.EventArgs)">
            <summary>Called when crop is being cut.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Models.PMF.OldPlant.SWStress">
            <summary>
            plant soil water stress model
            </summary>
        </member>
        <member name="F:Models.PMF.OldPlant.SWStress._Photo">
            <summary>The _ photo</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.SWStress._Pheno">
            <summary>The _ pheno</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.SWStress._PhenoFlower">
            <summary>The _ pheno flower</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.SWStress._PhenoGrainFilling">
            <summary>The _ pheno grain filling</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.SWStress._Expansion">
            <summary>The _ expansion</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.SWStress._Fixation">
            <summary>The _ fixation</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.SWStress._OxygenDeficitPhoto">
            <summary>The _ oxygen deficit photo</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.SWStress._PhotoSum">
            <summary>The _ photo sum</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.SWStress._PhotoCount">
            <summary>The _ photo count</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.SWStress._ExpansionSum">
            <summary>The _ expansion sum</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.SWStress._ExpansionCount">
            <summary>The _ expansion count</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.SWStress.Plant">
            <summary>The plant</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.SWStress.ExpansionFactor">
            <summary>The expansion factor</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.SWStress.PhenoFactor">
            <summary>The pheno factor</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.SWStress.FixationFactor">
            <summary>The fixation factor</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.SWStress.OxygenDeficitPhotoFactor">
            <summary>The oxygen deficit photo factor</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.SWStress.PhenoFlowerFactor">
            <summary>The pheno flower factor</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.SWStress.PhenoGrainFillingFactor">
            <summary>The pheno grain filling factor</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.SWStress.DoPlantWaterStress(System.Double)">
            <summary>Does the plant water stress.</summary>
            <param name="sw_demand">The sw_demand.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.SWStress.SWDefPhoto(System.Double)">
            <summary>
            Calculate the soil water supply to demand ratio and therefore the 0-1 stress factor
            for photosysnthesis. 1 is no stress, 0 is full stress.
            </summary>
            <param name="sw_demand">The sw_demand.</param>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.OldPlant.SWStress.ResetAverage">
            <summary>Resets the average.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.SWStress.Update">
            <summary>Updates this instance.</summary>
        </member>
        <member name="P:Models.PMF.OldPlant.SWStress.PhotoStress">
            <summary>Gets the photo stress.</summary>
            <value>The photo stress.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.SWStress.PhenoStress">
            <summary>Gets the pheno stress.</summary>
            <value>The pheno stress.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.SWStress.ExpansionStress">
            <summary>Gets the expansion stress.</summary>
            <value>The expansion stress.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.SWStress.FixationStress">
            <summary>Gets the fixation stress.</summary>
            <value>The fixation stress.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.SWStress.Photo">
            <summary>Gets the photo.</summary>
            <value>The photo.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.SWStress.PhotoAverage">
            <summary>Gets the photo average.</summary>
            <value>The photo average.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.SWStress.ExpansionAverage">
            <summary>Gets the expansion average.</summary>
            <value>The expansion average.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.SWStress.Fixation">
            <summary>Gets the fixation.</summary>
            <value>The fixation.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.SWStress.OxygenDeficitPhoto">
            <summary>Gets the oxygen deficit photo.</summary>
            <value>The oxygen deficit photo.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.SWStress.Expansion">
            <summary>Gets the expansion.</summary>
            <value>The expansion.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.SWStress.Pheno">
            <summary>Gets the pheno.</summary>
            <value>The pheno.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.SWStress.PhenoFlower">
            <summary>Gets the pheno flower.</summary>
            <value>The pheno flower.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.SWStress.PhenoGrainFilling">
            <summary>Gets the pheno grain filling.</summary>
            <value>The pheno grain filling.</value>
        </member>
        <member name="T:Models.PMF.OldPlant.Grain">
            <summary>
            A grain organ for Plant15
            </summary>
        </member>
        <member name="T:Models.PMF.Interfaces.Reproductive">
            <summary>Indicates the organ is a reproductive one.</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Grain.Plant">
            <summary>The plant</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Grain.SWStress">
            <summary>The sw stress</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Grain.NStress">
            <summary>The n stress</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Grain.TempStress">
            <summary>The temporary stress</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Grain.Stem">
            <summary>The stem</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Grain.Phenology">
            <summary>The phenology</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Grain.Population">
            <summary>The population</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Grain.GrainGrowthPeriod">
            <summary>The grain growth period</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Grain.ReproductivePeriod">
            <summary>The reproductive period</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Grain.RelativeGrainFill">
            <summary>The relative grain fill</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Grain.RelativeGrainNFill">
            <summary>The relative grain n fill</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Grain.DMSenescenceFraction">
            <summary>The dm senescence fraction</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Grain.NConcentrationCritical">
            <summary>The n concentration critical</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Grain.NConcentrationMinimum">
            <summary>The n concentration minimum</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Grain.NConcentrationMaximum">
            <summary>The n concentration maximum</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Grain.GrowthStructuralFractionStage">
            <summary>The growth structural fraction stage</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Grain.dlt_dm_pot_rue">
            <summary>The dlt_dm_pot_rue</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Grain.dlt_n_senesced_retrans">
            <summary>The dlt_n_senesced_retrans</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Grain.dlt_n_senesced_trans">
            <summary>The dlt_n_senesced_trans</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Grain.dlt_height">
            <summary>The dlt_height</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Grain.dlt_width">
            <summary>The dlt_width</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Grain._DMGreenDemand">
            <summary>The _ dm green demand</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Grain._NDemand">
            <summary>The _ n demand</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Grain._SoilNDemand">
            <summary>The _ soil n demand</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Grain.sw_demand">
            <summary>The sw_demand</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Grain.n_conc_crit">
            <summary>The n_conc_crit</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Grain.n_conc_max">
            <summary>The n_conc_max</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Grain.n_conc_min">
            <summary>The n_conc_min</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Grain.DltDMGrainDemand">
            <summary>The DLT dm grain demand</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Grain.N_grain_demand">
            <summary>The n_grain_demand</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Grain.DoSWDemand(System.Double)">
            <summary>Does the sw demand.</summary>
            <param name="Supply">The supply.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Grain.DoSWUptake(System.Double)">
            <summary>Does the sw uptake.</summary>
            <param name="SWDemand">The sw demand.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Grain.DoDMDemand(System.Double)">
            <summary>Does the dm demand.</summary>
            <param name="DMSupply">The dm supply.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Grain.DoDmRetranslocate(System.Double,System.Double)">
            <summary>Does the dm retranslocate.</summary>
            <param name="DMAvail">The dm avail.</param>
            <param name="DMDemandDifferentialTotal">The dm demand differential total.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Grain.GiveDmGreen(System.Double)">
            <summary>Gives the dm green.</summary>
            <param name="Delta">The delta.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Grain.DoSenescence">
            <summary>Does the senescence.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Grain.DoDetachment">
            <summary>Does the detachment.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Grain.RemoveBiomass">
            <summary>Removes the biomass.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Grain.DoNDemand(System.Boolean)">
            <summary>Does the n demand.</summary>
            <param name="IncludeRetranslocation">if set to <c>true</c> [include retranslocation].</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Grain.DoNDemand1Pot(System.Double)">
            <summary>Does the n demand1 pot.</summary>
            <param name="dltDmPotRue">The DLT dm pot rue.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Grain.DoSoilNDemand">
            <summary>Does the soil n demand.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Grain.DoNSupply">
            <summary>Does the n supply.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Grain.DoNRetranslocate(System.Double,System.Double)">
            <summary>Does the n retranslocate.</summary>
            <param name="NSupply">The n supply.</param>
            <param name="GrainNDemand">The grain n demand.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Grain.DoNSenescence">
            <summary>Does the n senescence.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Grain.DoNSenescedRetranslocation(System.Double,System.Double)">
            <summary>Does the n senesced retranslocation.</summary>
            <param name="navail">The navail.</param>
            <param name="n_demand_tot">The n_demand_tot.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Grain.DoNPartition(System.Double)">
            <summary>Does the n partition.</summary>
            <param name="GrowthN">The growth n.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Grain.DoNFixRetranslocate(System.Double,System.Double)">
            <summary>Does the n fix retranslocate.</summary>
            <param name="NFixUptake">The n fix uptake.</param>
            <param name="nFixDemandTotal">The n fix demand total.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Grain.DoNConccentrationLimits">
            <summary>Does the n conccentration limits.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Grain.ZeroDltNSenescedTrans">
            <summary>Zeroes the DLT n senesced trans.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Grain.DoNUptake(System.Double)">
            <summary>Does the n uptake.</summary>
            <param name="PotNFix">The pot n fix.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Grain.DoPotentialRUE">
            <summary>Does the potential rue.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Grain.interceptRadiation(System.Double)">
            <summary>Intercepts the radiation.</summary>
            <param name="incomingSolarRadiation">The incoming solar radiation.</param>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.OldPlant.Grain.DoCover">
            <summary>Does the cover.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Grain.Update">
            <summary>Updates this instance.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Grain.doProcessBioDemand">
            <summary>Does the process bio demand.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Grain.DoGrainNumber">
            <summary>Does the grain number.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Grain.DoDMDemandStress">
            <summary>Does the dm demand stress.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Grain.DoDMDemandGrain">
            <summary>Does the dm demand grain.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Grain.DoNDemandGrain">
            <summary>Does the n demand grain.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Grain.WriteCultivarInfo(System.IO.TextWriter)">
            <summary>Writes the cultivar information.</summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Grain.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>Called when [simulation commencing].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Grain.OnPrepare(System.Object,System.EventArgs)">
            <summary>Called when [prepare].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Grain.OnHarvest(Models.PMF.OldPlant.HarvestType,Models.PMF.BiomassRemovedType)">
            <summary>Called when [harvest].</summary>
            <param name="Harvest">The harvest.</param>
            <param name="BiomassRemoved">The biomass removed.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Grain.OnEndCrop(Models.PMF.BiomassRemovedType)">
            <summary>Called when [end crop].</summary>
            <param name="BiomassRemoved">The biomass removed.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Grain.OnPhaseChanged(Models.PMF.Phen.PhaseChangedType)">
            <summary>Called when [phase changed].</summary>
            <param name="PhenologyChange">The phenology change.</param>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.InitialWt">
            <summary>Gets or sets the initial wt.</summary>
            <value>The initial wt.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.InitialNConcentration">
            <summary>Gets or sets the initial n concentration.</summary>
            <value>The initial n concentration.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.GrainsPerGramStem">
            <summary>Gets or sets the grains per gram stem.</summary>
            <value>The grains per gram stem.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.PotentialGrainFillingRate">
            <summary>Gets or sets the potential grain filling rate.</summary>
            <value>The potential grain filling rate.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.PotentialGrainGrowthRate">
            <summary>Gets or sets the potential grain growth rate.</summary>
            <value>The potential grain growth rate.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.MinimumGrainNFillingRate">
            <summary>Gets or sets the minimum grain n filling rate.</summary>
            <value>The minimum grain n filling rate.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.CriticalGrainFillingRate">
            <summary>Gets or sets the critical grain filling rate.</summary>
            <value>The critical grain filling rate.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.GrainMaxDailyNConc">
            <summary>Gets or sets the grain maximum daily n conc.</summary>
            <value>The grain maximum daily n conc.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.PotentialGrainNFillingRate">
            <summary>Gets or sets the potential grain n filling rate.</summary>
            <value>The potential grain n filling rate.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.MaxGrainSize">
            <summary>Gets or sets the maximum size of the grain.</summary>
            <value>The maximum size of the grain.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.NSenescenceConcentration">
            <summary>Gets or sets the n senescence concentration.</summary>
            <value>The n senescence concentration.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.SenescenceDetachmentFraction">
            <summary>Gets or sets the senescence detachment fraction.</summary>
            <value>The senescence detachment fraction.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.WaterContentFraction">
            <summary>Gets or sets the water content fraction.</summary>
            <value>The water content fraction.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.Senescing">
            <summary>Gets or sets the senescing.</summary>
            <value>The senescing.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.Retranslocation">
            <summary>Gets or sets the retranslocation.</summary>
            <value>The retranslocation.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.Growth">
            <summary>Gets or sets the growth.</summary>
            <value>The growth.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.Detaching">
            <summary>Gets or sets the detaching.</summary>
            <value>The detaching.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.GreenRemoved">
            <summary>Gets or sets the green removed.</summary>
            <value>The green removed.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.SenescedRemoved">
            <summary>Gets or sets the senesced removed.</summary>
            <value>The senesced removed.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.SWSupply">
            <summary>Gets the sw supply.</summary>
            <value>The sw supply.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.SWDemand">
            <summary>Gets the sw demand.</summary>
            <value>The sw demand.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.SWUptake">
            <summary>Gets the sw uptake.</summary>
            <value>The sw uptake.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.DMSupply">
            <summary>Gets the dm supply.</summary>
            <value>The dm supply.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.DMRetransSupply">
            <summary>Gets the dm retrans supply.</summary>
            <value>The dm retrans supply.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.dltDmPotRue">
            <summary>Gets the DLT dm pot rue.</summary>
            <value>The DLT dm pot rue.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.DMGreenDemand">
            <summary>Gets the dm green demand.</summary>
            <value>The dm green demand.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.DMDemandDifferential">
            <summary>Gets the dm demand differential.</summary>
            <value>The dm demand differential.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.NDemand">
            <summary>Gets the n demand.</summary>
            <value>The n demand.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.NSupply">
            <summary>Gets the n supply.</summary>
            <value>The n supply.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.NUptake">
            <summary>Gets the n uptake.</summary>
            <value>The n uptake.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.SoilNDemand">
            <summary>Gets the soil n demand.</summary>
            <value>The soil n demand.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.NCapacity">
            <summary>Gets the n capacity.</summary>
            <value>The n capacity.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.NDemandDifferential">
            <summary>Gets the n demand differential.</summary>
            <value>The n demand differential.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.AvailableRetranslocateN">
            <summary>Gets the available retranslocate n.</summary>
            <value>The available retranslocate n.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.DltNSenescedRetrans">
            <summary>Gets the DLT n senesced retrans.</summary>
            <value>The DLT n senesced retrans.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.CoverGreen">
            <summary>Gets or sets the cover green.</summary>
            <value>The cover green.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.CoverSen">
            <summary>Gets or sets the cover sen.</summary>
            <value>The cover sen.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.Yield">
            <summary>Gets the yield.</summary>
            <value>The yield.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.GrainNo">
            <summary>Gets the grain no.</summary>
            <value>The grain no.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.Protein">
            <summary>Gets the protein.</summary>
            <value>The protein.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.NConc">
            <summary>Gets the n conc.</summary>
            <value>The n conc.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.Wt">
            <summary>Gets the wt.</summary>
            <value>The wt.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.N">
            <summary>Gets the n.</summary>
            <value>The n.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.Size">
            <summary>Gets the size.</summary>
            <value>The size.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.NDemand2">
            <summary>Gets the n demand2.</summary>
            <value>The n demand2.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.DltDmPotentialGrain">
            <summary>Gets the DLT dm potential grain.</summary>
            <value>The DLT dm potential grain.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.AvailableToAnimal">
            <summary>Gets the available to animal.</summary>
            <value>The available to animal.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Grain.RemovedByAnimal">
            <summary>Sets the removed by animal.</summary>
            <value>The removed by animal.</value>
        </member>
        <member name="T:Models.PMF.Functions.StructureFunctions.InPhaseTemperatureFunction">
            <summary>
            Returns the current InPhase temperature accumulation
            </summary>
        </member>
        <member name="F:Models.PMF.Functions.StructureFunctions.InPhaseTemperatureFunction.Phenology">
            <summary>The phenology</summary>
        </member>
        <member name="P:Models.PMF.Functions.StructureFunctions.InPhaseTemperatureFunction.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
        </member>
        <member name="T:Models.PMF.Functions.LessThanFunction">
            <summary>FIXME: This can be generalised to a IF function</summary>
        </member>
        <member name="F:Models.PMF.Functions.LessThanFunction.ChildFunctions">
            <summary>The child functions</summary>
        </member>
        <member name="P:Models.PMF.Functions.LessThanFunction.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
        </member>
        <member name="T:Models.SugarCane">
            <summary>
            .NET port of the Fortran Sugar model
            Ported by Shaun Verrall Nov 2014
            </summary>
        </member>
        <member name="F:Models.SugarCane.max_leaf">
            <summary>
            The max_leaf
            </summary>
        </member>
        <member name="F:Models.SugarCane.max_layer">
            <summary>
            The max_layer
            </summary>
        </member>
        <member name="F:Models.SugarCane.max_table">
            <summary>
            The max_table
            </summary>
        </member>
        <member name="F:Models.SugarCane.crop_alive">
            <summary>
            The crop_alive
            </summary>
        </member>
        <member name="F:Models.SugarCane.crop_dead">
            <summary>
            The crop_dead
            </summary>
        </member>
        <member name="F:Models.SugarCane.crop_out">
            <summary>
            The crop_out
            </summary>
        </member>
        <member name="F:Models.SugarCane.photo">
            <summary>
            The photo
            </summary>
        </member>
        <member name="F:Models.SugarCane.expansion">
            <summary>
            The expansion
            </summary>
        </member>
        <member name="F:Models.SugarCane.pheno">
            <summary>
            The pheno
            </summary>
        </member>
        <member name="F:Models.SugarCane.root">
            <summary>
            The root
            </summary>
        </member>
        <member name="F:Models.SugarCane.leaf">
            <summary>
            The leaf
            </summary>
        </member>
        <member name="F:Models.SugarCane.sstem">
            <summary>
            The sstem
            </summary>
        </member>
        <member name="F:Models.SugarCane.cabbage">
            <summary>
            The cabbage
            </summary>
        </member>
        <member name="F:Models.SugarCane.sucrose">
            <summary>
            The sucrose
            </summary>
        </member>
        <member name="F:Models.SugarCane.max_part">
            <summary>
            The max_part
            </summary>
        </member>
        <member name="F:Models.SugarCane.max_stage">
            <summary>
            The max_stage
            </summary>
        </member>
        <member name="F:Models.SugarCane.now">
            <summary>
            The now
            </summary>
        </member>
        <member name="F:Models.SugarCane.crop_end">
            <summary>
            The crop_end
            </summary>
        </member>
        <member name="F:Models.SugarCane.fallow">
            <summary>
            The fallow
            </summary>
        </member>
        <member name="F:Models.SugarCane.sowing">
            <summary>
            The sowing
            </summary>
        </member>
        <member name="F:Models.SugarCane.sow_to_sprouting">
            <summary>
            The sow_to_sprouting
            </summary>
        </member>
        <member name="F:Models.SugarCane.sprouting">
            <summary>
            The sprouting
            </summary>
        </member>
        <member name="F:Models.SugarCane.sprouting_to_emerg">
            <summary>
            The sprouting_to_emerg
            </summary>
        </member>
        <member name="F:Models.SugarCane.emerg">
            <summary>
            The emerg
            </summary>
        </member>
        <member name="F:Models.SugarCane.emerg_to_begcane">
            <summary>
            The emerg_to_begcane
            </summary>
        </member>
        <member name="F:Models.SugarCane.begcane">
            <summary>
            The begcane
            </summary>
        </member>
        <member name="F:Models.SugarCane.begcane_to_flowering">
            <summary>
            The begcane_to_flowering
            </summary>
        </member>
        <member name="F:Models.SugarCane.flowering">
            <summary>
            The flowering
            </summary>
        </member>
        <member name="F:Models.SugarCane.flowering_to_crop_end">
            <summary>
            The flowering_to_crop_end
            </summary>
        </member>
        <member name="F:Models.SugarCane.smm2m">
            <summary>
            The SMM2M
            </summary>
        </member>
        <member name="F:Models.SugarCane.sm2smm">
            <summary>
            The SM2SMM
            </summary>
        </member>
        <member name="F:Models.SugarCane.smm2sm">
            <summary>
            The SMM2SM
            </summary>
        </member>
        <member name="F:Models.SugarCane.kg2gm">
            <summary>
            The KG2GM
            </summary>
        </member>
        <member name="F:Models.SugarCane.ha2sm">
            <summary>
            The ha2sm
            </summary>
        </member>
        <member name="F:Models.SugarCane.fract2pcnt">
            <summary>
            The fract2pcnt
            </summary>
        </member>
        <member name="F:Models.SugarCane.gm2kg">
            <summary>
            The GM2KG
            </summary>
        </member>
        <member name="F:Models.SugarCane.sm2ha">
            <summary>
            The sm2ha
            </summary>
        </member>
        <member name="F:Models.SugarCane.t2g">
            <summary>
            The T2G
            </summary>
        </member>
        <member name="F:Models.SugarCane.g2t">
            <summary>
            The G2T
            </summary>
        </member>
        <member name="F:Models.SugarCane.Clock">
            <summary>
            The clock
            </summary>
        </member>
        <member name="F:Models.SugarCane.Weather">
            <summary>
            The weather
            </summary>
        </member>
        <member name="F:Models.SugarCane.Soil">
            <summary>
            The soil
            </summary>
        </member>
        <member name="F:Models.SugarCane.Summary">
            <summary>
            The summary
            </summary>
        </member>
        <member name="F:Models.SugarCane.part_name">
            <summary>
            The part_name
            </summary>
        </member>
        <member name="F:Models.SugarCane.maxt_lb">
            <summary>
            The maxt_lb
            </summary>
        </member>
        <member name="F:Models.SugarCane.crop">
            <summary>
            The crop
            </summary>
        </member>
        <member name="F:Models.SugarCane.cult">
            <summary>
            The cult
            </summary>
        </member>
        <member name="F:Models.SugarCane.xf">
            <summary>
            The xf
            </summary>
        </member>
        <member name="F:Models.SugarCane.ll">
            <summary>
            The ll
            </summary>
        </member>
        <member name="F:Models.SugarCane.kl">
            <summary>
            The kl
            </summary>
        </member>
        <member name="M:Models.SugarCane.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Models.SugarCane"/> class.
            </summary>
        </member>
        <member name="F:Models.SugarCane.fr_intc_radn_">
            <summary>
            The fr_intc_radn_
            </summary>
        </member>
        <member name="F:Models.SugarCane.swim3">
            <summary>
            The swim3
            </summary>
        </member>
        <member name="F:Models.SugarCane.dlayer">
            <summary>
            The dlayer
            </summary>
        </member>
        <member name="F:Models.SugarCane.bd">
            <summary>
            The bd
            </summary>
        </member>
        <member name="F:Models.SugarCane.dul_dep">
            <summary>
            The dul_dep
            </summary>
        </member>
        <member name="F:Models.SugarCane.sw_dep">
            <summary>
            The sw_dep
            </summary>
        </member>
        <member name="F:Models.SugarCane.sat_dep">
            <summary>
            The sat_dep
            </summary>
        </member>
        <member name="F:Models.SugarCane.ll15_dep">
            <summary>
            The ll15_dep
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_ll_dep">
            <summary>
            The g_ll_dep
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_root_length">
            <summary>
            The g_root_length
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_crop_status">
            <summary>
            The g_crop_status
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_crop_cultivar">
            <summary>
            The g_crop_cultivar
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_plant_status_out_today">
            <summary>
            The g_plant_status_out_today
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_sowing_depth">
            <summary>
            The g_sowing_depth
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_year">
            <summary>
            The g_year
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_day_of_year">
            <summary>
            The g_day_of_year
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_temp_stress_photo">
            <summary>
            The g_temp_stress_photo
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_temp_stress_stalk">
            <summary>
            The g_temp_stress_stalk
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_swdef_expansion">
            <summary>
            The g_swdef_expansion
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_swdef_stalk">
            <summary>
            The g_swdef_stalk
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_swdef_photo">
            <summary>
            The g_swdef_photo
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_swdef_pheno">
            <summary>
            The g_swdef_pheno
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_swdef_fixation">
            <summary>
            The g_swdef_fixation
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_nfact_expansion">
            <summary>
            The g_nfact_expansion
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_nfact_stalk">
            <summary>
            The g_nfact_stalk
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_nfact_photo">
            <summary>
            The g_nfact_photo
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_nfact_pheno">
            <summary>
            The g_nfact_pheno
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_lodge_redn_photo">
            <summary>
            The g_lodge_redn_photo
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_lodge_redn_sucrose">
            <summary>
            The g_lodge_redn_sucrose
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_lodge_redn_green_leaf">
            <summary>
            The g_lodge_redn_green_leaf
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_sucrose_fraction">
            <summary>
            The g_sucrose_fraction
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_oxdef_photo">
            <summary>
            The g_oxdef_photo
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_cnd_photo">
            <summary>
            The g_cnd_photo
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_cswd_photo">
            <summary>
            The g_cswd_photo
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_cswd_expansion">
            <summary>
            The g_cswd_expansion
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_cswd_pheno">
            <summary>
            The g_cswd_pheno
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_tt">
            <summary>
            The G_DLT_TT
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_tt_tot">
            <summary>
            The g_tt_tot
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_phase_tt">
            <summary>
            The g_phase_tt
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_stage">
            <summary>
            The g_dlt_stage
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_current_stage">
            <summary>
            The g_current_stage
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_previous_stage">
            <summary>
            The g_previous_stage
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_days_tot">
            <summary>
            The g_days_tot
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_canopy_height">
            <summary>
            The g_dlt_canopy_height
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_canopy_height">
            <summary>
            The g_canopy_height
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_phase_devel">
            <summary>
            The g_phase_devel
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_ratoon_no">
            <summary>
            The g_ratoon_no
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_plants">
            <summary>
            The g_plants
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_plants">
            <summary>
            The g_dlt_plants
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_initial_plant_density">
            <summary>
            The g_initial_plant_density
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_root_depth">
            <summary>
            The g_dlt_root_depth
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_root_depth">
            <summary>
            The g_root_depth
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_lodge_flag">
            <summary>
            The g_lodge_flag
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_transpiration_tot">
            <summary>
            The g_transpiration_tot
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_n_demand_tot">
            <summary>
            The g_n_demand_tot
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_n_conc_act_stover_tot">
            <summary>
            The g_n_conc_act_stover_tot
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_lai_max">
            <summary>
            The g_lai_max
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_isdate">
            <summary>
            The g_isdate
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_plant_wc">
            <summary>
            The g_plant_wc
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_plant_wc">
            <summary>
            The g_dlt_plant_wc
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_sw_dep">
            <summary>
            The g_dlt_sw_dep
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_sw_demand">
            <summary>
            The g_sw_demand
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_sw_demand_te">
            <summary>
            The g_sw_demand_te
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_sw_avail_pot">
            <summary>
            The g_sw_avail_pot
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_sw_avail">
            <summary>
            The g_sw_avail
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_sw_supply">
            <summary>
            The g_sw_supply
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_root_length">
            <summary>
            The g_dlt_root_length
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_root_length_senesced">
            <summary>
            The g_dlt_root_length_senesced
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_plants_death_drought">
            <summary>
            The g_dlt_plants_death_drought
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_plants_failure_leaf_sen">
            <summary>
            The g_dlt_plants_failure_leaf_sen
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_plants_failure_emergence">
            <summary>
            The g_dlt_plants_failure_emergence
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_plants_failure_germ">
            <summary>
            The g_dlt_plants_failure_germ
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_plants_death_lodging">
            <summary>
            The g_dlt_plants_death_lodging
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_dm">
            <summary>
            The G_DLT_DM
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_dm_green">
            <summary>
            The g_dlt_dm_green
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_dm_senesced">
            <summary>
            The g_dlt_dm_senesced
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_dm_realloc">
            <summary>
            The g_dlt_dm_realloc
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_dm_detached">
            <summary>
            The g_dlt_dm_detached
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_dm_dead_detached">
            <summary>
            The g_dlt_dm_dead_detached
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_dm_green_retrans">
            <summary>
            The g_dlt_dm_green_retrans
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dm_dead">
            <summary>
            The g_dm_dead
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dm_green">
            <summary>
            The g_dm_green
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dm_senesced">
            <summary>
            The g_dm_senesced
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dm_plant_top_tot">
            <summary>
            The g_dm_plant_top_tot
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_partition_xs">
            <summary>
            The g_partition_xs
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_dm_pot_rue">
            <summary>
            The g_dlt_dm_pot_rue
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_dm_pot_te">
            <summary>
            The g_dlt_dm_pot_te
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_dm_pot_rue_pot">
            <summary>
            The g_dlt_dm_pot_rue_pot
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_radn_int">
            <summary>
            The g_radn_int
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_transp_eff">
            <summary>
            The g_transp_eff
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_min_sstem_sucrose">
            <summary>
            The g_min_sstem_sucrose
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_slai">
            <summary>
            The g_slai
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_slai">
            <summary>
            The g_dlt_slai
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_lai">
            <summary>
            The g_dlt_lai
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_lai_pot">
            <summary>
            The g_dlt_lai_pot
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_lai_stressed">
            <summary>
            The g_dlt_lai_stressed
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_lai">
            <summary>
            The g_lai
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_tlai_dead">
            <summary>
            The g_tlai_dead
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_slai_detached">
            <summary>
            The g_dlt_slai_detached
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_tlai_dead_detached">
            <summary>
            The g_dlt_tlai_dead_detached
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_slai_age">
            <summary>
            The g_dlt_slai_age
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_slai_light">
            <summary>
            The g_dlt_slai_light
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_slai_water">
            <summary>
            The g_dlt_slai_water
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_slai_frost">
            <summary>
            The g_dlt_slai_frost
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_sla_min">
            <summary>
            The g_sla_min
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_leaf_no_zb">
            <summary>
            The g_leaf_no_zb
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_node_no_zb">
            <summary>
            The g_node_no_zb
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_node_no_dead_zb">
            <summary>
            The g_node_no_dead_zb
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_leaf_no">
            <summary>
            The g_dlt_leaf_no
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_node_no">
            <summary>
            The g_dlt_node_no
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_node_no_dead">
            <summary>
            The g_dlt_node_no_dead
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_leaf_area_zb">
            <summary>
            The g_leaf_area_zb
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_leaf_dm_zb">
            <summary>
            The g_leaf_dm_zb
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_node_no_detached_ob">
            <summary>
            The g_node_no_detached_ob
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_n_demand">
            <summary>
            The g_n_demand
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_n_green">
            <summary>
            The g_dlt_n_green
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_n_senesced">
            <summary>
            The g_dlt_n_senesced
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_n_realloc">
            <summary>
            The g_dlt_n_realloc
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_n_detached">
            <summary>
            The g_dlt_n_detached
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_n_dead_detached">
            <summary>
            The g_dlt_n_dead_detached
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_n_dead">
            <summary>
            The g_n_dead
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_n_green">
            <summary>
            The g_n_green
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_n_senesced">
            <summary>
            The g_n_senesced
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_n_retrans">
            <summary>
            The g_dlt_n_retrans
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_no3gsm">
            <summary>
            The g_dlt_no3gsm
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_dlt_nh4gsm">
            <summary>
            The G_DLT_NH4GSM
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_no3gsm">
            <summary>
            The g_no3gsm
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_nh4gsm">
            <summary>
            The G_NH4GSM
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_no3gsm_min">
            <summary>
            The g_no3gsm_min
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_nh4gsm_min">
            <summary>
            The g_nh4gsm_min
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_no3gsm_diffn_pot">
            <summary>
            The g_no3gsm_diffn_pot
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_no3gsm_mflow_avail">
            <summary>
            The g_no3gsm_mflow_avail
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_no3gsm_uptake_pot">
            <summary>
            The g_no3gsm_uptake_pot
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_nh4gsm_uptake_pot">
            <summary>
            The g_nh4gsm_uptake_pot
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_n_fix_pot">
            <summary>
            The g_n_fix_pot
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_n_conc_crit">
            <summary>
            The g_n_conc_crit
            </summary>
        </member>
        <member name="F:Models.SugarCane.g_n_conc_min">
            <summary>
            The g_n_conc_min
            </summary>
        </member>
        <member name="M:Models.SugarCane.ZeroArray(System.Double[]@)">
            <summary>
            Zeroes the array.
            </summary>
            <param name="A">a.</param>
        </member>
        <member name="M:Models.SugarCane.sugar_zero_globals">
            <summary>
            Sugar_zero_globalses this instance.
            </summary>
        </member>
        <member name="M:Models.SugarCane.sugar_zero_daily_variables">
            <summary>
            Sugar_zero_daily_variableses this instance.
            </summary>
        </member>
        <member name="M:Models.SugarCane.sugar_zero_variables">
            <summary>
            Sugar_zero_variableses this instance.
            </summary>
        </member>
        <member name="M:Models.SugarCane.FindLayerNo_ob(System.Double)">
            <summary>
            Finds the layer no_ob.
            </summary>
            <param name="Depth">The depth.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.root_proportion(System.Int32,System.Double[],System.Double)">
            <summary>
            Root_proportions the specified layer_ob.
            </summary>
            <param name="Layer_ob">The layer_ob.</param>
            <param name="Dlayer">The dlayer.</param>
            <param name="RootDepth">The root depth.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.on_day_of(System.Int32,System.Double)">
            <summary>
            On_day_ofs the specified stage_no.
            </summary>
            <param name="stage_no">The stage_no.</param>
            <param name="current_stage">The current_stage.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.stage_is_between(System.Int32,System.Int32,System.Double)">
            <summary>
            Stage_is_betweens the specified start_ob.
            </summary>
            <param name="start_ob">The start_ob.</param>
            <param name="finish_ob">The finish_ob.</param>
            <param name="current_stage">The current_stage.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.linint_3hrly_temp(System.Double,System.Double,System.Double[],System.Double[])">
            <summary>
            Linint_3hrly_temps the specified i_tmax.
            </summary>
            <param name="i_tmax">The i_tmax.</param>
            <param name="i_tmin">The i_tmin.</param>
            <param name="i_temps">The i_temps.</param>
            <param name="i_y">The i_y.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.temp_3hr(System.Double,System.Double,System.Int32)">
            <summary>
            Temp_3hrs the specified i_tmax.
            </summary>
            <param name="i_tmax">The i_tmax.</param>
            <param name="i_tmin">The i_tmin.</param>
            <param name="i_period">The i_period.</param>
            <returns></returns>
            <exception cref="T:Models.Core.ApsimXException">
             3 hr. number + i_period +  is below 1
            or
             3 hr. number + i_period +  is above 8
            </exception>
        </member>
        <member name="M:Models.SugarCane.accumulate_ob(System.Double,System.Double[]@,System.Double,System.Double)">
            <summary>
            Accumulate_obs the specified i_value.
            </summary>
            <param name="i_value">The i_value.</param>
            <param name="i_array_zb">The i_array_zb.</param>
            <param name="i_index_ob">The i_index_ob.</param>
            <param name="i_dlt_index">The i_dlt_index.</param>
        </member>
        <member name="M:Models.SugarCane.accumulate_zb(System.Double,System.Double[]@,System.Double,System.Double)">
            <summary>
            Accumulate_zbs the specified i_value.
            </summary>
            <param name="i_value">The i_value.</param>
            <param name="io_array_zb">The io_array_zb.</param>
            <param name="i_index_zb">The i_index_zb.</param>
            <param name="i_dlt_index">The i_dlt_index.</param>
        </member>
        <member name="M:Models.SugarCane.error_margin(System.Double)">
            <summary>
            Error_margins the specified variable.
            </summary>
            <param name="Variable">The variable.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.get_cumulative_index_real(System.Double,System.Double[])">
            <summary>
            Get_cumulative_index_reals the specified cum_sum.
            </summary>
            <param name="cum_sum">The cum_sum.</param>
            <param name="A">a.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.count_of_real_vals(System.Double[],System.Int32)">
            <summary>
            Count_of_real_valses the specified a.
            </summary>
            <param name="A">a.</param>
            <param name="StopLayer_ob">The stop layer_ob.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.AddArray(System.Double[],System.Double[]@,System.Int32)">
            <summary>
            Adds the array.
            </summary>
            <param name="AddThis_zb">The add this_zb.</param>
            <param name="ToThis_zb">To this_zb.</param>
            <param name="NumElemToAdd_ob">The number elem to add_ob.</param>
        </member>
        <member name="M:Models.SugarCane.SubtractArray(System.Double[],System.Double[]@,System.Int32)">
            <summary>
            Subtracts the array.
            </summary>
            <param name="SubThis_zb">The sub this_zb.</param>
            <param name="FromThis_zb">From this_zb.</param>
            <param name="NumElemToSub_ob">The number elem to sub_ob.</param>
        </member>
        <member name="M:Models.SugarCane.SumArray(System.Double[],System.Int32)">
            <summary>
            Sums the array.
            </summary>
            <param name="A">a.</param>
            <param name="StopLayer_ob">The stop layer_ob.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.sum_between(System.Int32,System.Int32,System.Double[])">
            <summary>
            Sum_betweens the specified start_ob.
            </summary>
            <param name="start_ob">The start_ob.</param>
            <param name="finish_ob">The finish_ob.</param>
            <param name="array_zb">The array_zb.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.sum_between_zb(System.Int32,System.Int32,System.Double[])">
            <summary>
            Sum_between_zbs the specified start_zb.
            </summary>
            <param name="start_zb">The start_zb.</param>
            <param name="finish_zb">The finish_zb.</param>
            <param name="array_zb">The array_zb.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.fill_real_array(System.Double[]@,System.Double,System.Int32)">
            <summary>
            Fill_real_arrays the specified a_zb.
            </summary>
            <param name="A_zb">The a_zb.</param>
            <param name="Value">The value.</param>
            <param name="StopLayer_ob">The stop layer_ob.</param>
        </member>
        <member name="M:Models.SugarCane.l_bound(System.Double,System.Double)">
            <summary>
            L_bounds the specified a.
            </summary>
            <param name="A">a.</param>
            <param name="MinVal">The minimum value.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.u_bound(System.Double,System.Double)">
            <summary>
            U_bounds the specified a.
            </summary>
            <param name="A">a.</param>
            <param name="MaxVal">The maximum value.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.bound(System.Double,System.Double,System.Double)">
            <summary>
            Bounds the specified a.
            </summary>
            <param name="A">a.</param>
            <param name="MinVal">The minimum value.</param>
            <param name="MaxVal">The maximum value.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.max(System.Double[])">
            <summary>
            Allows any number of parameters (unlike Math.Max())
            </summary>
            <param name="A">a.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.min(System.Double[])">
            <summary>
            Allows any number of parameters (unlike Math.Min())
            </summary>
            <param name="A">a.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.bound_check_real_array(System.Double[],System.Double,System.Double,System.String,System.Int32)">
            <summary>
            Bound_check_real_arrays the specified array.
            </summary>
            <param name="array">The array.</param>
            <param name="lower_bound">The lower_bound.</param>
            <param name="upper_bound">The upper_bound.</param>
            <param name="array_name">The array_name.</param>
            <param name="array_size">The array_size.</param>
        </member>
        <member name="M:Models.SugarCane.bound_check_integer_var(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Bound_check_integer_vars the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="lower">The lower.</param>
            <param name="upper">The upper.</param>
            <param name="vname">The vname.</param>
        </member>
        <member name="M:Models.SugarCane.bound_check_real_var(System.Double,System.Double,System.Double,System.String)">
            <summary>
            Bound_check_real_vars the specified variable.
            </summary>
            <param name="Variable">The variable.</param>
            <param name="LowerBound">The lower bound.</param>
            <param name="UpperBound">The upper bound.</param>
            <param name="VariableName">Name of the variable.</param>
        </member>
        <member name="M:Models.SugarCane.zb(System.Int32)">
            <summary>
            Returns Zero Based Index from One Based Index
            </summary>
            <param name="OneBased">The one based.</param>
            <returns>
            Zero Based Index
            </returns>
        </member>
        <member name="M:Models.SugarCane.ob(System.Int32)">
            <summary>
            Returns One Based Index from Zero Based Index
            </summary>
            <param name="ZeroBased">The zero based.</param>
            <returns>
            One Based Index
            </returns>
        </member>
        <member name="M:Models.SugarCane.zb_d(System.Double)">
            <summary>
            ZB_Ds the specified one based.
            </summary>
            <param name="OneBased">The one based.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.sugar_nfact(System.Double[],System.Double[],System.Double[],System.Double[],System.Double,System.Double@)">
            <summary>
            Sugar_nfacts the specified i_dm_green.
            </summary>
            <param name="i_dm_green">The i_dm_green.</param>
            <param name="i_N_conc_crit">The i_ n_conc_crit.</param>
            <param name="i_N_conc_min">The i_ n_conc_min.</param>
            <param name="i_N_green">The i_ n_green.</param>
            <param name="c_k_nfact">The c_k_nfact.</param>
            <param name="o_nfact">The o_nfact.</param>
        </member>
        <member name="M:Models.SugarCane.sugar_temperature_stress(System.Int32,System.Double[],System.Double[],System.Double,System.Double,System.Double@)">
            <summary>
            Sugar_temperature_stresses the specified c_num_ave_temp.
            </summary>
            <param name="c_num_ave_temp">The c_num_ave_temp.</param>
            <param name="c_x_ave_temp">The c_x_ave_temp.</param>
            <param name="c_y_stress_photo">The c_y_stress_photo.</param>
            <param name="i_maxt">The i_maxt.</param>
            <param name="i_mint">The i_mint.</param>
            <param name="o_tfac">The o_tfac.</param>
        </member>
        <member name="M:Models.SugarCane.sugar_radn_int(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Sugar_radn_ints the specified c_extinction_coef.
            </summary>
            <param name="c_extinction_coef">The c_extinction_coef.</param>
            <param name="i_fr_intc_radn">The i_fr_intc_radn.</param>
            <param name="i_lai">The i_lai.</param>
            <param name="i_radn">The i_radn.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.cproc_transp_eff1(System.Double,System.Double[],System.Double,System.Double,System.Double)">
            <summary>
            Cproc_transp_eff1s the specified c_svp_fract.
            </summary>
            <param name="c_svp_fract">The c_svp_fract.</param>
            <param name="c_transp_eff_cf">The c_transp_eff_cf.</param>
            <param name="i_current_stage">The i_current_stage.</param>
            <param name="i_maxt">The i_maxt.</param>
            <param name="i_mint">The i_mint.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.vapour_pressure_deficit(System.Double,System.Double,System.Double)">
            <summary>
            Vapour_pressure_deficits the specified c_svp_fract.
            </summary>
            <param name="c_svp_fract">The c_svp_fract.</param>
            <param name="i_maxt">The i_maxt.</param>
            <param name="i_mint">The i_mint.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.svp(System.Double)">
            <summary>
            SVPs the specified temp_arg.
            </summary>
            <param name="temp_arg">The temp_arg.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.sugar_water_demand(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Sugar_water_demands the specified i_dlt_dm_pot_rue.
            </summary>
            <param name="i_dlt_dm_pot_rue">The i_dlt_dm_pot_rue.</param>
            <param name="i_transp_eff">The i_transp_eff.</param>
            <param name="i_lai">The i_lai.</param>
            <param name="i_eo">The i_eo.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.cproc_sw_demand_bound(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Cproc_sw_demand_bounds the specified i_sw_demand_unbounded.
            </summary>
            <param name="i_sw_demand_unbounded">The i_sw_demand_unbounded.</param>
            <param name="i_eo_crop_factor">The i_eo_crop_factor.</param>
            <param name="i_eo">The i_eo.</param>
            <param name="i_cover_green">The i_cover_green.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.sugar_nit_demand_est(System.Double[],System.Double,System.Double[],System.Double[],System.Double[]@)">
            <summary>
            Sugar_nit_demand_ests the specified i_dm_green.
            </summary>
            <param name="i_dm_green">The i_dm_green.</param>
            <param name="i_dlt_dm_pot_rue_pot">The i_dlt_dm_pot_rue_pot.</param>
            <param name="i_N_conc_crit">The i_ n_conc_crit.</param>
            <param name="i_N_green">The i_ n_green.</param>
            <param name="o_N_demand">The o_ n_demand.</param>
        </member>
        <member name="M:Models.SugarCane.sugar_N_demand(System.Double[],System.Double,System.Double[],System.Double[],System.Double[],System.Double[]@)">
            <summary>
            Sugar_s the n_demand.
            </summary>
            <param name="i_dlt_dm_green_pot">The i_dlt_dm_green_pot.</param>
            <param name="i_dlt_dm_pot_rue_pot">The i_dlt_dm_pot_rue_pot.</param>
            <param name="i_dm_green">The i_dm_green.</param>
            <param name="i_N_conc_crit">The i_ n_conc_crit.</param>
            <param name="i_N_green">The i_ n_green.</param>
            <param name="o_N_demand">The o_ n_demand.</param>
        </member>
        <member name="M:Models.SugarCane.sugar_root_depth_growth(System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Double,System.Double[],System.Double@,System.Double)">
            <summary>
            Sugar_root_depth_growthes the specified i_dlayer.
            </summary>
            <param name="i_dlayer">The i_dlayer.</param>
            <param name="c_x_sw_ratio">The c_x_sw_ratio.</param>
            <param name="c_y_sw_fac_root">The c_y_sw_fac_root.</param>
            <param name="c_x_afps">The c_x_afps.</param>
            <param name="c_y_afps_fac">The c_y_afps_fac.</param>
            <param name="i_dul_dep">The i_dul_dep.</param>
            <param name="i_sw_dep">The i_sw_dep.</param>
            <param name="i_ll_dep">The i_ll_dep.</param>
            <param name="c_root_depth_rate">The c_root_depth_rate.</param>
            <param name="i_current_stage">The i_current_stage.</param>
            <param name="i_xf">The i_xf.</param>
            <param name="o_dlt_root_depth">The o_dlt_root_depth.</param>
            <param name="i_root_depth">The i_root_depth.</param>
        </member>
        <member name="M:Models.SugarCane.crop_sw_avail_fac(System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Int32)">
            <summary>
            Crop_sw_avail_facs the specified c_x_sw_ratio.
            </summary>
            <param name="c_x_sw_ratio">The c_x_sw_ratio.</param>
            <param name="c_y_sw_fac_root">The c_y_sw_fac_root.</param>
            <param name="i_dul_dep">The i_dul_dep.</param>
            <param name="i_sw_dep">The i_sw_dep.</param>
            <param name="i_ll_dep">The i_ll_dep.</param>
            <param name="i_layer_ob">The i_layer_ob.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.sugar_afps_fac(System.Int32)">
            <summary>
            Sugar_afps_facs the specified i_layer_ob.
            </summary>
            <param name="i_layer_ob">The i_layer_ob.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.crop_root_depth_increase(System.Double[],System.Double,System.Double[],System.Double,System.Double,System.Double[])">
            <summary>
            Crop_root_depth_increases the specified c_root_depth_rate.
            </summary>
            <param name="c_root_depth_rate">The c_root_depth_rate.</param>
            <param name="i_current_stage">The i_current_stage.</param>
            <param name="i_dlayer">The i_dlayer.</param>
            <param name="i_root_depth">The i_root_depth.</param>
            <param name="i_sw_avail_fac_deepest_layer_ob">The i_sw_avail_fac_deepest_layer_ob.</param>
            <param name="i_xf">The i_xf.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.sugar_init_root_depth(System.Double[],System.Double[],System.Double,System.Double@)">
            <summary>
            Sugar_init_root_depthes the specified i_dlayer.
            </summary>
            <param name="i_dlayer">The i_dlayer.</param>
            <param name="i_root_length">The i_root_length.</param>
            <param name="i_root_depth">The i_root_depth.</param>
            <param name="o_dlt_root_depth">The o_dlt_root_depth.</param>
        </member>
        <member name="M:Models.SugarCane.GetSupplyFromSWIM">
            <summary>
            Gets the supply from swim.
            </summary>
            <exception cref="T:Models.Core.ApsimXException"> Sugar can't get 'supply' from  SWIM yet</exception>
        </member>
        <member name="M:Models.SugarCane.cproc_sw_supply1(System.Double,System.Double[],System.Double[],System.Double[],System.Double[],System.Double,System.Double[],System.Double[]@,System.Double[]@,System.Double[]@)">
            <summary>
            Cproc_sw_supply1s the specified C_SW_LB.
            </summary>
            <param name="c_sw_lb">The C_SW_LB.</param>
            <param name="i_dlayer">The i_dlayer.</param>
            <param name="i_ll_dep">The i_ll_dep.</param>
            <param name="i_dul_dep">The i_dul_dep.</param>
            <param name="i_sw_dep">The i_sw_dep.</param>
            <param name="i_root_depth">The i_root_depth.</param>
            <param name="i_kl">The i_kl.</param>
            <param name="o_sw_avail">The o_sw_avail.</param>
            <param name="o_sw_avail_pot">The o_sw_avail_pot.</param>
            <param name="o_sw_supply">The o_sw_supply.</param>
        </member>
        <member name="M:Models.SugarCane.crop_check_sw(System.Double,System.Double[],System.Double[],System.Double[],System.Double[])">
            <summary>
            Crop_check_sws the specified c_minsw.
            </summary>
            <param name="c_minsw">The c_minsw.</param>
            <param name="i_dlayer">The i_dlayer.</param>
            <param name="i_dul_dep">The i_dul_dep.</param>
            <param name="i_sw_dep">The i_sw_dep.</param>
            <param name="i_ll_dep">The i_ll_dep.</param>
        </member>
        <member name="M:Models.SugarCane.crop_sw_avail_pot(System.Double[],System.Double[],System.Double,System.Double[],System.Double[]@)">
            <summary>
            Crop_sw_avail_pots the specified i_dlayer.
            </summary>
            <param name="i_dlayer">The i_dlayer.</param>
            <param name="i_dul_dep">The i_dul_dep.</param>
            <param name="i_root_depth">The i_root_depth.</param>
            <param name="i_ll_dep">The i_ll_dep.</param>
            <param name="o_sw_avail_pot">The o_sw_avail_pot.</param>
        </member>
        <member name="M:Models.SugarCane.crop_sw_avail(System.Double[],System.Double,System.Double[],System.Double[],System.Double[]@)">
            <summary>
            Crop_sw_avails the specified i_dlayer.
            </summary>
            <param name="i_dlayer">The i_dlayer.</param>
            <param name="i_root_depth">The i_root_depth.</param>
            <param name="i_sw_dep">The i_sw_dep.</param>
            <param name="i_ll_dep">The i_ll_dep.</param>
            <param name="o_sw_avail">The o_sw_avail.</param>
        </member>
        <member name="M:Models.SugarCane.crop_sw_supply(System.Double[],System.Double,System.Double[],System.Double[],System.Double[],System.Double[]@)">
            <summary>
            Crop_sw_supplies the specified idlayer.
            </summary>
            <param name="idlayer">The idlayer.</param>
            <param name="i_root_depth">The i_root_depth.</param>
            <param name="i_sw_dep">The i_sw_dep.</param>
            <param name="i_kl">The i_kl.</param>
            <param name="i_ll_dep">The i_ll_dep.</param>
            <param name="o_sw_supply">The o_sw_supply.</param>
        </member>
        <member name="M:Models.SugarCane.GetUptakeFromSWIM">
            <summary>
            Gets the uptake from swim.
            </summary>
            <exception cref="T:Models.Core.ApsimXException"> Sugar can't get 'uptake' from SWIM yet</exception>
        </member>
        <member name="M:Models.SugarCane.cproc_sw_uptake1(System.Double[],System.Double,System.Double,System.Double[],System.Double[]@)">
            <summary>
            Cproc_sw_uptake1s the specified i_dlayer.
            </summary>
            <param name="i_dlayer">The i_dlayer.</param>
            <param name="i_root_depth">The i_root_depth.</param>
            <param name="i_sw_demand">The i_sw_demand.</param>
            <param name="i_sw_supply">The i_sw_supply.</param>
            <param name="o_dlt_sw_dep">The o_dlt_sw_dep.</param>
        </member>
        <member name="M:Models.SugarCane.crop_swdef_expansion(System.Double[],System.Double[],System.Double,System.Double,System.Double[],System.Double@)">
            <summary>
            Crop_swdef_expansions the specified c_x_sw_demand_ratio.
            </summary>
            <param name="c_x_sw_demand_ratio">The c_x_sw_demand_ratio.</param>
            <param name="c_y_swdef_leaf">The c_y_swdef_leaf.</param>
            <param name="i_root_depth">The i_root_depth.</param>
            <param name="i_sw_demand">The i_sw_demand.</param>
            <param name="i_sw_supply">The i_sw_supply.</param>
            <param name="o_swdef">The o_swdef.</param>
        </member>
        <member name="M:Models.SugarCane.sugar_swdef_demand_ratio(System.Double[],System.Double[],System.Double,System.Double,System.Double[],System.Double@)">
            <summary>
            Sugar_swdef_demand_ratioes the specified c_x_sw_demand_ratio.
            </summary>
            <param name="c_x_sw_demand_ratio">The c_x_sw_demand_ratio.</param>
            <param name="c_y_swdef_leaf">The c_y_swdef_leaf.</param>
            <param name="i_root_depth">The i_root_depth.</param>
            <param name="i_sw_demand">The i_sw_demand.</param>
            <param name="i_sw_supply">The i_sw_supply.</param>
            <param name="o_swdef">The o_swdef.</param>
        </member>
        <member name="M:Models.SugarCane.crop_swdef_pheno(System.Double[],System.Double[],System.Double,System.Double[],System.Double[],System.Double@)">
            <summary>
            Crop_swdef_phenoes the specified c_x_sw_avail_ratio.
            </summary>
            <param name="c_x_sw_avail_ratio">The c_x_sw_avail_ratio.</param>
            <param name="c_y_swdef_pheno">The c_y_swdef_pheno.</param>
            <param name="i_root_depth">The i_root_depth.</param>
            <param name="i_sw_avail">The i_sw_avail.</param>
            <param name="i_sw_avail_pot">The i_sw_avail_pot.</param>
            <param name="o_swdef">The o_swdef.</param>
        </member>
        <member name="M:Models.SugarCane.crop_swdef_photo(System.Double,System.Double,System.Double[],System.Double@)">
            <summary>
            Crop_swdef_photoes the specified i_root_depth.
            </summary>
            <param name="i_root_depth">The i_root_depth.</param>
            <param name="i_sw_demand">The i_sw_demand.</param>
            <param name="i_sw_supply">The i_sw_supply.</param>
            <param name="o_swdef">The o_swdef.</param>
        </member>
        <member name="M:Models.SugarCane.sugar_min_sstem_sucrose(System.Double@)">
            <summary>
            Sugar_min_sstem_sucroses the specified io_min_sstem_sucrose.
            </summary>
            <param name="io_min_sstem_sucrose">The io_min_sstem_sucrose.</param>
        </member>
        <member name="M:Models.SugarCane.sugar_phen_init(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double[]@)">
            <summary>
            Sugar_phen_inits the specified c_shoot_lag.
            </summary>
            <param name="c_shoot_lag">The c_shoot_lag.</param>
            <param name="c_shoot_rate">The c_shoot_rate.</param>
            <param name="i_current_stage">The i_current_stage.</param>
            <param name="i_sowing_depth">The i_sowing_depth.</param>
            <param name="i_ratoon_no">The i_ratoon_no.</param>
            <param name="c_tt_begcane_to_flowering">The c_tt_begcane_to_flowering.</param>
            <param name="c_tt_emerg_to_begcane">The c_tt_emerg_to_begcane.</param>
            <param name="c_tt_flowering_to_crop_end">The c_tt_flowering_to_crop_end.</param>
            <param name="io_phase_tt">The io_phase_tt.</param>
        </member>
        <member name="M:Models.SugarCane.crop_thermal_time(System.Double[],System.Double[],System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Double,System.Double)">
            <summary>
            Crop_thermal_times the specified c_x_temp.
            </summary>
            <param name="c_x_temp">The c_x_temp.</param>
            <param name="c_y_tt">The c_y_tt.</param>
            <param name="i_current_stage">The i_current_stage.</param>
            <param name="i_maxt">The i_maxt.</param>
            <param name="i_mint">The i_mint.</param>
            <param name="i_start_stress_stage">The i_start_stress_stage.</param>
            <param name="i_end_stress_stage">The i_end_stress_stage.</param>
            <param name="i_nfact_pheno">The i_nfact_pheno.</param>
            <param name="i_swdef_pheno">The i_swdef_pheno.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.crop_phase_devel(System.Int32,System.Int32,System.Int32,System.Double,System.Double[],System.Double[],System.Int32,System.Double,System.Double[],System.Double[],System.Int32,System.Double,System.Double[],System.Double[],System.Double[],System.Double@,System.Double[],System.Double[])">
            <summary>
            Crop_phase_devels the specified i_sowing_stage.
            </summary>
            <param name="i_sowing_stage">The i_sowing_stage.</param>
            <param name="i_germ_stage">The i_germ_stage.</param>
            <param name="i_end_development_stage">The i_end_development_stage.</param>
            <param name="c_pesw_germ">The c_pesw_germ.</param>
            <param name="c_fasw_emerg">The c_fasw_emerg.</param>
            <param name="c_rel_emerg_rate">The c_rel_emerg_rate.</param>
            <param name="c_num_fasw_emerg">The c_num_fasw_emerg.</param>
            <param name="i_current_stage">The i_current_stage.</param>
            <param name="i_days_tot">The i_days_tot.</param>
            <param name="i_dlayer">The i_dlayer.</param>
            <param name="i_max_layer">The i_max_layer.</param>
            <param name="i_sowing_depth">The i_sowing_depth.</param>
            <param name="i_sw_dep">The i_sw_dep.</param>
            <param name="i_dul_dep">The i_dul_dep.</param>
            <param name="i_ll_dep">The i_ll_dep.</param>
            <param name="io_dlt_tt">The io_dlt_tt.</param>
            <param name="i_phase_tt">The i_phase_tt.</param>
            <param name="i_tt_tot">The i_tt_tot.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.crop_germination(System.Int32,System.Int32,System.Double,System.Double,System.Double[],System.Double,System.Double[],System.Double[])">
            <summary>
            Crop_germinations the specified i_sowing_stage.
            </summary>
            <param name="i_sowing_stage">The i_sowing_stage.</param>
            <param name="i_germ_stage">The i_germ_stage.</param>
            <param name="c_pesw_germ">The c_pesw_germ.</param>
            <param name="i_current_stage">The i_current_stage.</param>
            <param name="i_dlayer">The i_dlayer.</param>
            <param name="i_sowing_depth">The i_sowing_depth.</param>
            <param name="i_sw_dep">The i_sw_dep.</param>
            <param name="i_ll_dep">The i_ll_dep.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.crop_germ_dlt_tt(System.Double[],System.Double[],System.Double,System.Int32,System.Double,System.Double[],System.Double[],System.Double[],System.Double@)">
            <summary>
            Crop_germ_dlt_tts the specified c_fasw_emerg.
            </summary>
            <param name="c_fasw_emerg">The c_fasw_emerg.</param>
            <param name="c_rel_emerg_rate">The c_rel_emerg_rate.</param>
            <param name="i_current_stage">The i_current_stage.</param>
            <param name="i_germ_phase">The i_germ_phase.</param>
            <param name="i_sowing_depth">The i_sowing_depth.</param>
            <param name="i_sw_dep">The i_sw_dep.</param>
            <param name="i_ll_dep">The i_ll_dep.</param>
            <param name="i_dul_dep">The i_dul_dep.</param>
            <param name="io_dlt_tt">The io_dlt_tt.</param>
        </member>
        <member name="M:Models.SugarCane.crop_phase_tt(System.Double,System.Double[],System.Double[],System.Double)">
            <summary>
            Crop_phase_tts the specified i_dlt_tt.
            </summary>
            <param name="i_dlt_tt">The i_dlt_tt.</param>
            <param name="i_phase_tt">The i_phase_tt.</param>
            <param name="i_tt_tot">The i_tt_tot.</param>
            <param name="i_stage_no">The i_stage_no.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.crop_devel(System.Double,System.Int32,System.Double,System.Double@,System.Double@)">
            <summary>
            Crop_devels the specified i_current_stage.
            </summary>
            <param name="i_current_stage">The i_current_stage.</param>
            <param name="i_max_stage">The i_max_stage.</param>
            <param name="i_phase_devel">The i_phase_devel.</param>
            <param name="o_dlt_stage">The o_dlt_stage.</param>
            <param name="io_current_stage">The io_current_stage.</param>
        </member>
        <member name="M:Models.SugarCane.cproc_canopy_height(System.Double,System.Double[],System.Double[],System.Double[],System.Double,System.Int32)">
            <summary>
            Cproc_canopy_heights the specified i_canopy_height.
            </summary>
            <param name="i_canopy_height">The i_canopy_height.</param>
            <param name="i_x_stem_wt">The i_x_stem_wt.</param>
            <param name="i_y_height">The i_y_height.</param>
            <param name="i_dm_green">The i_dm_green.</param>
            <param name="i_plants">The i_plants.</param>
            <param name="i_stem">The i_stem.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.cproc_leaf_no_init1(System.Double,System.Double,System.Int32,System.Double[]@,System.Double[]@)">
            <summary>
            Cproc_leaf_no_init1s the specified c_leaf_no_at_emerg.
            </summary>
            <param name="c_leaf_no_at_emerg">The c_leaf_no_at_emerg.</param>
            <param name="i_current_stage">The i_current_stage.</param>
            <param name="i_emerg">The i_emerg.</param>
            <param name="o_leaf_no_zb">The o_leaf_no_zb.</param>
            <param name="o_node_no_zb">The o_node_no_zb.</param>
        </member>
        <member name="M:Models.SugarCane.cproc_leaf_no_pot1(System.Double[],System.Double[],System.Double[],System.Double[],System.Double,System.Int32,System.Int32,System.Int32,System.Double,System.Double[],System.Double@,System.Double@)">
            <summary>
            Cproc_leaf_no_pot1s the specified c_x_node_no_app.
            </summary>
            <param name="c_x_node_no_app">The c_x_node_no_app.</param>
            <param name="c_y_node_app_rate">The c_y_node_app_rate.</param>
            <param name="c_x_node_no_leaf">The c_x_node_no_leaf.</param>
            <param name="c_y_leaves_per_node">The c_y_leaves_per_node.</param>
            <param name="i_current_stage">The i_current_stage.</param>
            <param name="i_start_node_app">The i_start_node_app.</param>
            <param name="i_end_node_app">The i_end_node_app.</param>
            <param name="i_emerg">The i_emerg.</param>
            <param name="i_dlt_tt">The i_dlt_tt.</param>
            <param name="i_node_no_zb">The i_node_no_zb.</param>
            <param name="o_dlt_leaf_no_pot">The o_dlt_leaf_no_pot.</param>
            <param name="o_dlt_node_no_pot">The o_dlt_node_no_pot.</param>
        </member>
        <member name="M:Models.SugarCane.sugar_leaf_area_devel(System.Double,System.Double,System.Double[],System.Double,System.Double[],System.Double[],System.Double[],System.Double[])">
            <summary>
            Sugar_leaf_area_devels the specified c_leaf_no_correction.
            </summary>
            <param name="c_leaf_no_correction">The c_leaf_no_correction.</param>
            <param name="i_dlt_leaf_no">The i_dlt_leaf_no.</param>
            <param name="i_leaf_no_zb">The i_leaf_no_zb.</param>
            <param name="i_plants">The i_plants.</param>
            <param name="c_leaf_size">The c_leaf_size.</param>
            <param name="c_leaf_size_no">The c_leaf_size_no.</param>
            <param name="c_tillerf_leaf_size">The c_tillerf_leaf_size.</param>
            <param name="c_tillerf_leaf_size_no">The c_tillerf_leaf_size_no.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.sugar_leaf_size(System.Double[],System.Double[],System.Double[],System.Double[],System.Double)">
            <summary>
            Sugar_leaf_sizes the specified c_leaf_size.
            </summary>
            <param name="c_leaf_size">The c_leaf_size.</param>
            <param name="c_leaf_size_no">The c_leaf_size_no.</param>
            <param name="c_tillerf_leaf_size">The c_tillerf_leaf_size.</param>
            <param name="c_tillerf_leaf_size_no">The c_tillerf_leaf_size_no.</param>
            <param name="i_leaf_no_ob">The i_leaf_no_ob.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.cproc_bio_water1(System.Double,System.Double[],System.Double)">
            <summary>
            Cproc_bio_water1s the specified i_root_depth.
            </summary>
            <param name="i_root_depth">The i_root_depth.</param>
            <param name="i_sw_supply">The i_sw_supply.</param>
            <param name="i_transp_eff">The i_transp_eff.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.crop_oxdef_photo1(System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Double)">
            <summary>
            Crop_oxdef_photo1s the specified c_oxdef_photo.
            </summary>
            <param name="c_oxdef_photo">The c_oxdef_photo.</param>
            <param name="c_oxdef_photo_rtfr">The c_oxdef_photo_rtfr.</param>
            <param name="i_ll15_dep">The i_ll15_dep.</param>
            <param name="i_sat_dep">The i_sat_dep.</param>
            <param name="i_sw_dep">The i_sw_dep.</param>
            <param name="i_dlayer">The i_dlayer.</param>
            <param name="i_root_length">The i_root_length.</param>
            <param name="i_root_depth">The i_root_depth.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.crop_root_dist(System.Double[],System.Double[],System.Double,System.Double[]@,System.Double)">
            <summary>
            Crop_root_dists the specified i_dlayer.
            </summary>
            <param name="i_dlayer">The i_dlayer.</param>
            <param name="i_root_length">The i_root_length.</param>
            <param name="i_root_depth">The i_root_depth.</param>
            <param name="o_root_array">The o_root_array.</param>
            <param name="i_root_sum">The i_root_sum.</param>
        </member>
        <member name="M:Models.SugarCane.sugar_dm_pot_rue(System.Double[],System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Sugar_dm_pot_rues the specified c_rue.
            </summary>
            <param name="c_rue">The c_rue.</param>
            <param name="i_current_stage">The i_current_stage.</param>
            <param name="i_radn_int">The i_radn_int.</param>
            <param name="i_nfact_photo">The i_nfact_photo.</param>
            <param name="i_temp_stress_photo">The i_temp_stress_photo.</param>
            <param name="i_oxdef_photo">The i_oxdef_photo.</param>
            <param name="i_lodge_redn_photo">The i_lodge_redn_photo.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.sugar_rue_reduction(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Sugar_rue_reductions the specified i_nfact_photo.
            </summary>
            <param name="i_nfact_photo">The i_nfact_photo.</param>
            <param name="i_temp_stress_photo">The i_temp_stress_photo.</param>
            <param name="i_oxdef_photo">The i_oxdef_photo.</param>
            <param name="i_lodge_redn_photo">The i_lodge_redn_photo.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.sugar_dm_pot_rue_pot(System.Double[],System.Double,System.Double)">
            <summary>
            Sugar_dm_pot_rue_pots the specified c_rue.
            </summary>
            <param name="c_rue">The c_rue.</param>
            <param name="i_current_stage">The i_current_stage.</param>
            <param name="i_radn_int">The i_radn_int.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.sugar_dm_init(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double[],System.Double,System.Double[],System.Double[]@,System.Double[]@)">
            <summary>
            Sugar_dm_inits the specified c_dm_cabbage_init.
            </summary>
            <param name="c_dm_cabbage_init">The c_dm_cabbage_init.</param>
            <param name="c_dm_leaf_init">The c_dm_leaf_init.</param>
            <param name="c_dm_sstem_init">The c_dm_sstem_init.</param>
            <param name="c_dm_sucrose_init">The c_dm_sucrose_init.</param>
            <param name="c_specific_root_length">The c_specific_root_length.</param>
            <param name="i_current_stage">The i_current_stage.</param>
            <param name="i_dlayer">The i_dlayer.</param>
            <param name="i_plants">The i_plants.</param>
            <param name="i_root_length">The i_root_length.</param>
            <param name="io_dm_green">The io_dm_green.</param>
            <param name="o_leaf_dm">The o_leaf_dm.</param>
        </member>
        <member name="M:Models.SugarCane.sugar_sucrose_fraction(System.Double[],System.Double[],System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Sugar_sucrose_fractions the specified c_stress_factor_stalk.
            </summary>
            <param name="c_stress_factor_stalk">The c_stress_factor_stalk.</param>
            <param name="c_sucrose_fraction_stalk">The c_sucrose_fraction_stalk.</param>
            <param name="i_swdef_stalk">The i_swdef_stalk.</param>
            <param name="i_nfact_stalk">The i_nfact_stalk.</param>
            <param name="i_temp_stress_stalk">The i_temp_stress_stalk.</param>
            <param name="i_lodge_redn_sucrose">The i_lodge_redn_sucrose.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.sugar_dm_partition_rules(System.Double,System.Double,System.Double,System.Double[],System.Double,System.Double,System.Double[],System.Double,System.Double,System.Double[],System.Double,System.Double,System.Double[]@,System.Double@)">
            <summary>
            Sugar_dm_partition_ruleses the specified c_cane_fraction.
            </summary>
            <param name="c_cane_fraction">The c_cane_fraction.</param>
            <param name="c_leaf_cabbage_ratio">The c_leaf_cabbage_ratio.</param>
            <param name="i_min_sstem_sucrose">The i_min_sstem_sucrose.</param>
            <param name="c_ratio_root_shoot">The c_ratio_root_shoot.</param>
            <param name="c_sucrose_delay">The c_sucrose_delay.</param>
            <param name="i_current_stage">The i_current_stage.</param>
            <param name="i_dm_green">The i_dm_green.</param>
            <param name="i_sla_min">The i_sla_min.</param>
            <param name="i_sucrose_fraction">The i_sucrose_fraction.</param>
            <param name="i_tt_tot">The i_tt_tot.</param>
            <param name="i_dlt_dm">The i_dlt_dm.</param>
            <param name="i_dlt_lai_pot">The i_dlt_lai_pot.</param>
            <param name="o_dlt_dm_green">The o_dlt_dm_green.</param>
            <param name="o_partition_xs">The o_partition_xs.</param>
        </member>
        <member name="M:Models.SugarCane.sugar_leaf_area(System.Double[],System.Double,System.Double,System.Double[],System.Double[],System.Double[])">
            <summary>
            Sugar_leaf_areas the specified i_dlt_dm_green.
            </summary>
            <param name="i_dlt_dm_green">The i_dlt_dm_green.</param>
            <param name="i_dlt_lai_stressed">The i_dlt_lai_stressed.</param>
            <param name="i_dlt_leaf_no">The i_dlt_leaf_no.</param>
            <param name="i_leaf_no_zb">The i_leaf_no_zb.</param>
            <param name="c_sla_lfno">The c_sla_lfno.</param>
            <param name="c_sla_max">The c_sla_max.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.cproc_root_length_growth1(System.Double[]@,System.Double,System.Double[],System.Double,System.Double,System.Double,System.Double[],System.Double,System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Int32)">
            <summary>
            Cproc_root_length_growth1s the specified o_dlt_root_length.
            </summary>
            <param name="o_dlt_root_length">The o_dlt_root_length.</param>
            <param name="c_specific_root_length">The c_specific_root_length.</param>
            <param name="i_dlayer">The i_dlayer.</param>
            <param name="i_dlt_root_wt">The i_dlt_root_wt.</param>
            <param name="i_dlt_root_depth">The i_dlt_root_depth.</param>
            <param name="i_root_depth">The i_root_depth.</param>
            <param name="i_root_length">The i_root_length.</param>
            <param name="i_plants">The i_plants.</param>
            <param name="i_xf">The i_xf.</param>
            <param name="c_x_sw_ratio">The c_x_sw_ratio.</param>
            <param name="c_y_sw_fac_root">The c_y_sw_fac_root.</param>
            <param name="c_x_plant_rld">The c_x_plant_rld.</param>
            <param name="c_y_rel_root_rate">The c_y_rel_root_rate.</param>
            <param name="i_dul_dep">The i_dul_dep.</param>
            <param name="i_sw_dep">The i_sw_dep.</param>
            <param name="i_ll_dep">The i_ll_dep.</param>
            <param name="i_max_layer">The i_max_layer.</param>
            <exception cref="T:Models.Core.ApsimXException">Too many layers for crop routines</exception>
        </member>
        <member name="M:Models.SugarCane.sugar_leaf_death_grass(System.Double,System.Double,System.Double,System.Double,System.Double[],System.Double[])">
            <summary>
            Sugar_leaf_death_grasses the specified c_green_leaf_no.
            </summary>
            <param name="c_green_leaf_no">The c_green_leaf_no.</param>
            <param name="i_lodge_redn_green_leaf">The i_lodge_redn_green_leaf.</param>
            <param name="i_current_stage">The i_current_stage.</param>
            <param name="i_dlt_leaf_no">The i_dlt_leaf_no.</param>
            <param name="i_leaf_no">The i_leaf_no.</param>
            <param name="i_node_no_dead">The i_node_no_dead.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.sugar_leaf_area_sen_age0(System.Double,System.Double,System.Double[],System.Double[],System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Sugar_leaf_area_sen_age0s the specified i_dlt_node_no_dead.
            </summary>
            <param name="i_dlt_node_no_dead">The i_dlt_node_no_dead.</param>
            <param name="i_lai">The i_lai.</param>
            <param name="i_leaf_area_zb">The i_leaf_area_zb.</param>
            <param name="i_node_no_dead_zb">The i_node_no_dead_zb.</param>
            <param name="i_plants">The i_plants.</param>
            <param name="i_slai">The i_slai.</param>
            <param name="i_node_no_detached_ob">The i_node_no_detached_ob.</param>
            <param name="c_leaf_no_at_emerg">The c_leaf_no_at_emerg.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.crop_leaf_area_sen_water1(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Crop_leaf_area_sen_water1s the specified i_sen_rate_water.
            </summary>
            <param name="i_sen_rate_water">The i_sen_rate_water.</param>
            <param name="i_lai">The i_lai.</param>
            <param name="i_swdef_photo">The i_swdef_photo.</param>
            <param name="i_plants">The i_plants.</param>
            <param name="i_min_tpla">The i_min_tpla.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.crop_leaf_area_sen_light1(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Crop_leaf_area_sen_light1s the specified i_lai_sen_light.
            </summary>
            <param name="i_lai_sen_light">The i_lai_sen_light.</param>
            <param name="i_sen_light_slope">The i_sen_light_slope.</param>
            <param name="i_lai">The i_lai.</param>
            <param name="i_plants">The i_plants.</param>
            <param name="i_min_tpla">The i_min_tpla.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.crop_leaf_area_sen_frost1(System.Double[],System.Double[],System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Crop_leaf_area_sen_frost1s the specified i_frost_temp.
            </summary>
            <param name="i_frost_temp">The i_frost_temp.</param>
            <param name="i_frost_fraction">The i_frost_fraction.</param>
            <param name="i_lai">The i_lai.</param>
            <param name="i_mint">The i_mint.</param>
            <param name="i_plants">The i_plants.</param>
            <param name="i_min_tpla">The i_min_tpla.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.sugar_dm_senescence(System.Double,System.Double,System.Double,System.Double[],System.Double,System.Double,System.Double[],System.Double[],System.Double,System.Double[],System.Double,System.Double,System.Double[],System.Double[]@)">
            <summary>
            Sugar_dm_senescences the specified c_dm_root_sen_frac.
            </summary>
            <param name="c_dm_root_sen_frac">The c_dm_root_sen_frac.</param>
            <param name="c_leaf_cabbage_ratio">The c_leaf_cabbage_ratio.</param>
            <param name="c_cabbage_sheath_fr">The c_cabbage_sheath_fr.</param>
            <param name="i_dlt_dm_green">The i_dlt_dm_green.</param>
            <param name="i_dlt_lai">The i_dlt_lai.</param>
            <param name="i_dlt_slai">The i_dlt_slai.</param>
            <param name="i_dm_green">The i_dm_green.</param>
            <param name="i_dm_senesced">The i_dm_senesced.</param>
            <param name="i_lai">The i_lai.</param>
            <param name="i_leaf_dm">The i_leaf_dm.</param>
            <param name="i_plants">The i_plants.</param>
            <param name="i_slai">The i_slai.</param>
            <param name="i_leaf_area">The i_leaf_area.</param>
            <param name="o_dlt_dm_senesced">The o_dlt_dm_senesced.</param>
        </member>
        <member name="M:Models.SugarCane.sugar_leaf_no_from_lai(System.Double[],System.Double,System.Double)">
            <summary>
            Sugar_leaf_no_from_lais the specified i_leaf_area.
            </summary>
            <param name="i_leaf_area">The i_leaf_area.</param>
            <param name="i_plants">The i_plants.</param>
            <param name="i_lai">The i_lai.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.cproc_root_length_senescence1(System.Double,System.Double[],System.Double,System.Double[],System.Double,System.Double[]@)">
            <summary>
            Cproc_root_length_senescence1s the specified c_specific_root_length.
            </summary>
            <param name="c_specific_root_length">The c_specific_root_length.</param>
            <param name="i_dlayer">The i_dlayer.</param>
            <param name="i_dlt_root_dm_senesced">The i_dlt_root_dm_senesced.</param>
            <param name="i_root_length">The i_root_length.</param>
            <param name="i_root_depth">The i_root_depth.</param>
            <param name="o_dlt_root_length_senesced">The o_dlt_root_length_senesced.</param>
        </member>
        <member name="M:Models.SugarCane.sugar_N_retranslocate(System.Double[],System.Double[],System.Double[],System.Double[]@)">
            <summary>
            Sugar_s the n_retranslocate.
            </summary>
            <param name="i_dm_green">The i_dm_green.</param>
            <param name="i_n_conc_min">The i_n_conc_min.</param>
            <param name="i_n_green">The i_n_green.</param>
            <param name="o_dlt_N_retrans">The o_dlt_ n_retrans.</param>
        </member>
        <member name="M:Models.SugarCane.sugar_N_retrans_avail(System.Double[],System.Double[],System.Double[],System.Double[]@)">
            <summary>
            Sugar_s the n_retrans_avail.
            </summary>
            <param name="i_dm_green">The i_dm_green.</param>
            <param name="i_N_conc_min">The i_ n_conc_min.</param>
            <param name="i_N_green">The i_ n_green.</param>
            <param name="o_N_avail">The o_ n_avail.</param>
        </member>
        <member name="M:Models.SugarCane.sugar_nit_supply(System.Int32)">
            <summary>
            Sugar_nit_supplies the specified i_option.
            </summary>
            <param name="i_option">The i_option.</param>
            <exception cref="T:Models.Core.ApsimXException">Invalid template option</exception>
        </member>
        <member name="M:Models.SugarCane.cproc_n_supply2(System.Double[],System.Int32,System.Double[],System.Double[],System.Double[],System.Double,System.Double[],System.Double[]@,System.Double[],System.Double[],System.Double[]@,System.Double,System.Double[],System.Double,System.Double,System.Double@)">
            <summary>
            Cproc_n_supply2s the specified i_dlayer.
            </summary>
            <param name="i_dlayer">The i_dlayer.</param>
            <param name="i_max_layer">The i_max_layer.</param>
            <param name="i_dlt_sw_dep">The i_dlt_sw_dep.</param>
            <param name="i_no3gsm">The i_no3gsm.</param>
            <param name="i_no3gsm_min">The i_no3gsm_min.</param>
            <param name="i_root_depth">The i_root_depth.</param>
            <param name="i_sw_dep">The i_sw_dep.</param>
            <param name="o_NO3gsm_mflow_avail">The o_ n o3gsm_mflow_avail.</param>
            <param name="i_sw_avail">The i_sw_avail.</param>
            <param name="i_sw_avail_pot">The i_sw_avail_pot.</param>
            <param name="o_no3gsm_diffn_pot">The o_no3gsm_diffn_pot.</param>
            <param name="i_current_stage">The i_current_stage.</param>
            <param name="c_n_fix_rate">The c_n_fix_rate.</param>
            <param name="i_fixation_determinant">The i_fixation_determinant.</param>
            <param name="i_swdef_fixation">The i_swdef_fixation.</param>
            <param name="o_n_fix_pot">The o_n_fix_pot.</param>
        </member>
        <member name="M:Models.SugarCane.crop_N_mass_flow1(System.Int32,System.Double[],System.Double[],System.Double[],System.Double[],System.Double,System.Double[],System.Double[]@)">
            <summary>
            Crop_s the n_mass_flow1.
            </summary>
            <param name="i_num_layer">The i_num_layer.</param>
            <param name="i_dlayer">The i_dlayer.</param>
            <param name="i_dlt_sw_dep">The i_dlt_sw_dep.</param>
            <param name="i_no3gsm">The i_no3gsm.</param>
            <param name="i_no3gsm_min">The i_no3gsm_min.</param>
            <param name="i_root_depth">The i_root_depth.</param>
            <param name="i_sw_dep">The i_sw_dep.</param>
            <param name="o_no3gsm_mflow_pot">The o_no3gsm_mflow_pot.</param>
        </member>
        <member name="M:Models.SugarCane.crop_N_diffusion1(System.Int32,System.Double[],System.Double[],System.Double[],System.Double,System.Double[],System.Double[],System.Double[]@)">
            <summary>
            Crop_s the n_diffusion1.
            </summary>
            <param name="i_num_layer">The i_num_layer.</param>
            <param name="i_dlayer">The i_dlayer.</param>
            <param name="i_no3gsm">The i_no3gsm.</param>
            <param name="i_no3gsm_min">The i_no3gsm_min.</param>
            <param name="i_root_depth">The i_root_depth.</param>
            <param name="i_sw_avail">The i_sw_avail.</param>
            <param name="i_sw_avail_pot">The i_sw_avail_pot.</param>
            <param name="o_no3gsm_diffn_pot">The o_no3gsm_diffn_pot.</param>
        </member>
        <member name="M:Models.SugarCane.crop_N_fixation_pot1(System.Double,System.Double[],System.Double,System.Double,System.Double@)">
            <summary>
            Crop_s the n_fixation_pot1.
            </summary>
            <param name="i_current_stage">The i_current_stage.</param>
            <param name="c_n_fix_rate">The c_n_fix_rate.</param>
            <param name="i_fixation_determinant">The i_fixation_determinant.</param>
            <param name="i_swdef_fixation">The i_swdef_fixation.</param>
            <param name="o_n_fix_pot">The o_n_fix_pot.</param>
        </member>
        <member name="M:Models.SugarCane.cproc_n_supply4(System.Double[],System.Double[],System.Int32,System.Double[],System.Double[],System.Double[]@,System.Double[],System.Double[],System.Double[]@,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double[],System.Double[],System.Double,System.Double[],System.Double,System.Double,System.Double@)">
            <summary>
            Cproc_n_supply4s the specified i_dlayer.
            </summary>
            <param name="i_dlayer">The i_dlayer.</param>
            <param name="i_bd">The i_bd.</param>
            <param name="i_max_layer">The i_max_layer.</param>
            <param name="i_no3gsm">The i_no3gsm.</param>
            <param name="i_no3gsm_min">The i_no3gsm_min.</param>
            <param name="o_no3gsm_uptake_pot">The o_no3gsm_uptake_pot.</param>
            <param name="i_nh4gsm">The i_nh4gsm.</param>
            <param name="i_nh4gsm_min">The i_nh4gsm_min.</param>
            <param name="o_nh4gsm_uptake_pot">The o_nh4gsm_uptake_pot.</param>
            <param name="i_root_depth">The i_root_depth.</param>
            <param name="c_n_stress_start_stage">The c_n_stress_start_stage.</param>
            <param name="c_kno3">The c_kno3.</param>
            <param name="c_no3ppm_min">The c_no3ppm_min.</param>
            <param name="c_knh4">The C_KNH4.</param>
            <param name="c_nh4ppm_min">The c_nh4ppm_min.</param>
            <param name="c_total_n_uptake_max">The c_total_n_uptake_max.</param>
            <param name="i_sw_avail_pot">The i_sw_avail_pot.</param>
            <param name="i_sw_avail">The i_sw_avail.</param>
            <param name="i_current_stage">The i_current_stage.</param>
            <param name="c_n_fix_rate">The c_n_fix_rate.</param>
            <param name="i_fixation_determinant">The i_fixation_determinant.</param>
            <param name="i_swdef_fixation">The i_swdef_fixation.</param>
            <param name="o_n_fix_pot">The o_n_fix_pot.</param>
        </member>
        <member name="M:Models.SugarCane.sugar_N_init(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double[],System.Double[],System.Double[]@)">
            <summary>
            Sugar_s the n_init.
            </summary>
            <param name="c_N_cabbage_init_conc">The c_ n_cabbage_init_conc.</param>
            <param name="c_N_leaf_init_conc">The c_ n_leaf_init_conc.</param>
            <param name="c_N_root_init_conc">The c_ n_root_init_conc.</param>
            <param name="c_N_sstem_init_conc">The c_ n_sstem_init_conc.</param>
            <param name="i_current_stage">The i_current_stage.</param>
            <param name="i_days_tot">The i_days_tot.</param>
            <param name="i_dm_green">The i_dm_green.</param>
            <param name="o_N_green">The o_ n_green.</param>
        </member>
        <member name="M:Models.SugarCane.sugar_nit_uptake(System.Int32)">
            <summary>
            Sugar_nit_uptakes the specified i_option.
            </summary>
            <param name="i_option">The i_option.</param>
            <exception cref="T:Models.Core.ApsimXException">Invalid template option</exception>
        </member>
        <member name="M:Models.SugarCane.cproc_N_uptake1(System.Double,System.Double[],System.Int32,System.Double[],System.Double[],System.Double,System.String,System.Double[],System.Double[],System.Int32,System.Double,System.Double[]@)">
            <summary>
            Cproc_s the n_uptake1.
            </summary>
            <param name="c_no3_diffn_const">The c_no3_diffn_const.</param>
            <param name="i_dlayer">The i_dlayer.</param>
            <param name="i_max_layer">The i_max_layer.</param>
            <param name="i_no3gsm_diffn_pot">The i_no3gsm_diffn_pot.</param>
            <param name="i_no3gsm_mflow_avail">The i_no3gsm_mflow_avail.</param>
            <param name="i_n_fix_pot">The i_n_fix_pot.</param>
            <param name="c_n_supply_preference">The c_n_supply_preference.</param>
            <param name="i_n_demand">The i_n_demand.</param>
            <param name="i_n_max">The i_n_max.</param>
            <param name="i_max_part">The i_max_part.</param>
            <param name="i_root_depth">The i_root_depth.</param>
            <param name="o_dlt_NO3gsm">The o_dlt_ n o3gsm.</param>
            <exception cref="T:Models.Core.ApsimXException">bad n supply preference</exception>
        </member>
        <member name="M:Models.SugarCane.cproc_n_uptake3(System.Double[],System.Int32,System.Double[],System.Double[],System.Double,System.String,System.Double[],System.Double[],System.Int32,System.Double,System.Double[]@,System.Double[]@)">
            <summary>
            Cproc_n_uptake3s the specified i_dlayer.
            </summary>
            <param name="i_dlayer">The i_dlayer.</param>
            <param name="i_max_layer">The i_max_layer.</param>
            <param name="i_no3gsm_uptake_pot">The i_no3gsm_uptake_pot.</param>
            <param name="i_nh4gsm_uptake_pot">The i_nh4gsm_uptake_pot.</param>
            <param name="i_n_fix_pot">The i_n_fix_pot.</param>
            <param name="c_n_supply_preference">The c_n_supply_preference.</param>
            <param name="i_soil_n_demand">The i_soil_n_demand.</param>
            <param name="i_n_max">The i_n_max.</param>
            <param name="i_max_part">The i_max_part.</param>
            <param name="i_root_depth">The i_root_depth.</param>
            <param name="o_dlt_no3gsm">The o_dlt_no3gsm.</param>
            <param name="o_dlt_nh4gsm">The o_dlt_nh4gsm.</param>
        </member>
        <member name="M:Models.SugarCane.sugar_N_partition(System.Double[],System.Double[],System.Double[],System.Double[],System.Double,System.Double[]@)">
            <summary>
            Sugar_s the n_partition.
            </summary>
            <param name="i_dlayer">The i_dlayer.</param>
            <param name="i_dlt_NO3gsm">The i_dlt_ n o3gsm.</param>
            <param name="i_dlt_NH4gsm">The i_dlt_ n H4GSM.</param>
            <param name="i_N_demand">The i_ n_demand.</param>
            <param name="i_root_depth">The i_root_depth.</param>
            <param name="o_dlt_N_green">The o_dlt_ n_green.</param>
        </member>
        <member name="M:Models.SugarCane.sugar_water_content(System.Double[],System.Double[],System.Double[],System.Int32,System.Double,System.Double,System.Double,System.Double,System.Double[],System.Double[],System.Double[],System.Double[]@,System.Double[])">
            <summary>
            Sugar_water_contents the specified c_cane_dmf_tt.
            </summary>
            <param name="c_cane_dmf_tt">The c_cane_dmf_tt.</param>
            <param name="c_cane_dmf_min">The c_cane_dmf_min.</param>
            <param name="c_cane_dmf_max">The c_cane_dmf_max.</param>
            <param name="c_num_cane_dmf">The c_num_cane_dmf.</param>
            <param name="c_cane_dmf_rate">The c_cane_dmf_rate.</param>
            <param name="i_swdef_stalk">The i_swdef_stalk.</param>
            <param name="i_nfact_stalk">The i_nfact_stalk.</param>
            <param name="i_temp_stress_stalk">The i_temp_stress_stalk.</param>
            <param name="i_dlt_dm_green">The i_dlt_dm_green.</param>
            <param name="i_dm_green">The i_dm_green.</param>
            <param name="i_dlt_plant_wc">The i_dlt_plant_wc.</param>
            <param name="o_plant_wc">The o_plant_wc.</param>
            <param name="i_tt_tot">The i_tt_tot.</param>
        </member>
        <member name="M:Models.SugarCane.sugar_plant_death">
            <summary>
            Sugar_plant_deathes this instance.
            </summary>
        </member>
        <member name="M:Models.SugarCane.sugar_failure_germination(System.Double,System.Double,System.Double[],System.Double,System.Double@)">
            <summary>
            Sugar_failure_germinations the specified c_days_germ_limit.
            </summary>
            <param name="c_days_germ_limit">The c_days_germ_limit.</param>
            <param name="i_current_stage">The i_current_stage.</param>
            <param name="i_days_tot">The i_days_tot.</param>
            <param name="i_plants">The i_plants.</param>
            <param name="o_dlt_plants">The o_dlt_plants.</param>
        </member>
        <member name="M:Models.SugarCane.sugar_failure_emergence(System.Double,System.Double,System.Double,System.Double[],System.Double@)">
            <summary>
            Sugar_failure_emergences the specified c_tt_emerg_limit.
            </summary>
            <param name="c_tt_emerg_limit">The c_tt_emerg_limit.</param>
            <param name="i_current_stage">The i_current_stage.</param>
            <param name="i_plants">The i_plants.</param>
            <param name="i_tt_tot">The i_tt_tot.</param>
            <param name="o_dlt_plants">The o_dlt_plants.</param>
        </member>
        <member name="M:Models.SugarCane.sugar_failure_leaf_sen(System.Double,System.Double,System.Double,System.Double@)">
            <summary>
            Sugar_failure_leaf_sens the specified i_current_stage.
            </summary>
            <param name="i_current_stage">The i_current_stage.</param>
            <param name="i_lai">The i_lai.</param>
            <param name="i_plants">The i_plants.</param>
            <param name="o_dlt_plants">The o_dlt_plants.</param>
        </member>
        <member name="M:Models.SugarCane.sugar_death_drought(System.Double,System.Double,System.Double,System.Double[],System.Double[],System.Double,System.Double,System.Double@)">
            <summary>
            Sugar_death_droughts the specified c_leaf_no_crit.
            </summary>
            <param name="c_leaf_no_crit">The c_leaf_no_crit.</param>
            <param name="c_swdf_photo_limit">The c_swdf_photo_limit.</param>
            <param name="c_swdf_photo_rate">The c_swdf_photo_rate.</param>
            <param name="i_cswd_photo">The i_cswd_photo.</param>
            <param name="i_leaf_no">The i_leaf_no.</param>
            <param name="i_plants">The i_plants.</param>
            <param name="i_swdef_photo">The i_swdef_photo.</param>
            <param name="o_dlt_plants">The o_dlt_plants.</param>
        </member>
        <member name="M:Models.SugarCane.sugar_death_lodging(System.Boolean,System.Double,System.Double,System.Double[],System.Double[],System.Int32,System.Double,System.Double@)">
            <summary>
            Sugar_death_lodgings the specified i_lodge_flag.
            </summary>
            <param name="i_lodge_flag">if set to <c>true</c> [i_lodge_flag].</param>
            <param name="i_swdef_photo">The i_swdef_photo.</param>
            <param name="i_oxdef_photo">The i_oxdef_photo.</param>
            <param name="c_stress_lodge">The c_stress_lodge.</param>
            <param name="c_death_fr_lodge">The c_death_fr_lodge.</param>
            <param name="c_num_stress_lodge">The c_num_stress_lodge.</param>
            <param name="i_plants">The i_plants.</param>
            <param name="o_dlt_plants_death_lodging">The o_dlt_plants_death_lodging.</param>
        </member>
        <member name="M:Models.SugarCane.sugar_realloc_cabbage(System.Int32,System.Int32,System.Int32,System.Int32,System.Double,System.Double[],System.Double[],System.Double[],System.Double[]@,System.Double[]@)">
            <summary>
            Sugar_realloc_cabbages the specified i_leaf.
            </summary>
            <param name="i_leaf">The i_leaf.</param>
            <param name="i_cabbage">The i_cabbage.</param>
            <param name="i_sstem">The i_sstem.</param>
            <param name="i_max_part">The i_max_part.</param>
            <param name="c_cabbage_sheath_fr">The c_cabbage_sheath_fr.</param>
            <param name="i_dm_green">The i_dm_green.</param>
            <param name="i_dlt_dm_senesced">The i_dlt_dm_senesced.</param>
            <param name="i_n_green">The i_n_green.</param>
            <param name="o_dlt_dm_realloc">The o_dlt_dm_realloc.</param>
            <param name="o_dlt_n_realloc">The o_dlt_n_realloc.</param>
        </member>
        <member name="M:Models.SugarCane.cproc_dm_detachment1(System.Int32,System.Double[],System.Double[],System.Double[]@,System.Double[],System.Double[],System.Double[]@)">
            <summary>
            Cproc_dm_detachment1s the specified i_max_part.
            </summary>
            <param name="i_max_part">The i_max_part.</param>
            <param name="c_sen_detach_frac">The c_sen_detach_frac.</param>
            <param name="i_dm_senesced">The i_dm_senesced.</param>
            <param name="o_dlt_dm_detached">The o_dlt_dm_detached.</param>
            <param name="c_dead_detach_frac">The c_dead_detach_frac.</param>
            <param name="i_dm_dead">The i_dm_dead.</param>
            <param name="o_dlt_dm_dead_detached">The o_dlt_dm_dead_detached.</param>
        </member>
        <member name="M:Models.SugarCane.cproc_n_detachment1(System.Int32,System.Double[],System.Double[],System.Double[]@,System.Double[],System.Double[],System.Double[]@)">
            <summary>
            Cproc_n_detachment1s the specified i_max_part.
            </summary>
            <param name="i_max_part">The i_max_part.</param>
            <param name="c_sen_detach_frac">The c_sen_detach_frac.</param>
            <param name="i_n_senesced">The i_n_senesced.</param>
            <param name="o_dlt_n_detached">The o_dlt_n_detached.</param>
            <param name="c_dead_detach_frac">The c_dead_detach_frac.</param>
            <param name="i_n_dead">The i_n_dead.</param>
            <param name="o_dlt_n_dead_detached">The o_dlt_n_dead_detached.</param>
        </member>
        <member name="M:Models.SugarCane.crop_pool_fraction_delta(System.Int32,System.Double[],System.Double[],System.Double[]@)">
            <summary>
            Crop_pool_fraction_deltas the specified i_num_part_ob.
            </summary>
            <param name="i_num_part_ob">The i_num_part_ob.</param>
            <param name="i_fraction_zb">The i_fraction_zb.</param>
            <param name="i_pool_zb">The i_pool_zb.</param>
            <param name="o_dlt_pool_zb">The o_dlt_pool_zb.</param>
        </member>
        <member name="M:Models.SugarCane.cproc_lai_detachment1(System.Int32,System.Double[],System.Double,System.Double@,System.Double[],System.Double,System.Double@)">
            <summary>
            Cproc_lai_detachment1s the specified i_leaf_zb.
            </summary>
            <param name="i_leaf_zb">The i_leaf_zb.</param>
            <param name="c_sen_detach_frac">The c_sen_detach_frac.</param>
            <param name="i_slai">The i_slai.</param>
            <param name="o_dlt_slai_detached">The o_dlt_slai_detached.</param>
            <param name="c_dead_detach_frac">The c_dead_detach_frac.</param>
            <param name="i_tlai_dead">The i_tlai_dead.</param>
            <param name="o_dlt_tlai_dead_detached">The o_dlt_tlai_dead_detached.</param>
        </member>
        <member name="M:Models.SugarCane.crop_part_fraction_delta(System.Int32,System.Double[],System.Double,System.Double@)">
            <summary>
            Crop_part_fraction_deltas the specified i_part_no_zb.
            </summary>
            <param name="i_part_no_zb">The i_part_no_zb.</param>
            <param name="i_fraction_zb">The i_fraction_zb.</param>
            <param name="i_part">The i_part.</param>
            <param name="o_dlt_part">The o_dlt_part.</param>
        </member>
        <member name="M:Models.SugarCane.sugar_update(System.Double@,System.Double[]@,System.Double[]@,System.Double[]@,System.Double[]@,System.Double,System.Double,System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Double,System.Double,System.Double,System.Double,System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Double,System.Double[],System.Double[],System.Double[],System.Double,System.Double,System.Double,System.Double,System.Double,System.Double[]@,System.Double[]@,System.Double[]@,System.Double[]@,System.Double@,System.Double[]@,System.Double[]@,System.Double[]@,System.Double[]@,System.Double[]@,System.Double,System.Double[]@,System.Double[]@,System.Double[]@,System.Double[]@,System.Double[]@,System.Double@,System.Double[]@,System.Double,System.Double[]@,System.Double@,System.Double@,System.Double,System.Double,System.Double,System.Double@,System.Double,System.Double,System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Double,System.Double[],System.Double[],System.Double[],System.Double@,System.Double)">
            <summary>
            Sugar_updates the specified io_canopy_height.
            </summary>
            <param name="io_canopy_height">The io_canopy_height.</param>
            <param name="io_cnd_photo">The io_cnd_photo.</param>
            <param name="io_cswd_expansion">The io_cswd_expansion.</param>
            <param name="io_cswd_pheno">The io_cswd_pheno.</param>
            <param name="io_cswd_photo">The io_cswd_photo.</param>
            <param name="i_dlt_canopy_height">The i_dlt_canopy_height.</param>
            <param name="i_dlt_dm">The i_dlt_dm.</param>
            <param name="i_dlt_dm_dead_detached">The i_dlt_dm_dead_detached.</param>
            <param name="i_dlt_dm_detached">The i_dlt_dm_detached.</param>
            <param name="i_dlt_dm_green">The i_dlt_dm_green.</param>
            <param name="i_dlt_dm_green_retrans">The i_dlt_dm_green_retrans.</param>
            <param name="i_dlt_dm_senesced">The i_dlt_dm_senesced.</param>
            <param name="i_dlt_dm_realloc">The i_dlt_dm_realloc.</param>
            <param name="i_dlt_lai">The i_dlt_lai.</param>
            <param name="i_dlt_leaf_no">The i_dlt_leaf_no.</param>
            <param name="i_dlt_node_no">The i_dlt_node_no.</param>
            <param name="i_dlt_node_no_dead">The i_dlt_node_no_dead.</param>
            <param name="i_dlt_n_dead_detached">The i_dlt_n_dead_detached.</param>
            <param name="i_dlt_n_detached">The i_dlt_n_detached.</param>
            <param name="i_dlt_n_green">The i_dlt_n_green.</param>
            <param name="i_dlt_n_retrans">The i_dlt_n_retrans.</param>
            <param name="i_dlt_n_senesced">The i_dlt_n_senesced.</param>
            <param name="i_dlt_n_realloc">The i_dlt_n_realloc.</param>
            <param name="i_dlt_plants">The i_dlt_plants.</param>
            <param name="i_dlt_plant_wc">The i_dlt_plant_wc.</param>
            <param name="i_dlt_root_length">The i_dlt_root_length.</param>
            <param name="i_dlt_root_length_senesced">The i_dlt_root_length_senesced.</param>
            <param name="i_dlt_root_depth">The i_dlt_root_depth.</param>
            <param name="i_dlt_slai">The i_dlt_slai.</param>
            <param name="i_dlt_slai_detached">The i_dlt_slai_detached.</param>
            <param name="i_dlt_stage">The i_dlt_stage.</param>
            <param name="i_dlt_tlai_dead_detached">The i_dlt_tlai_dead_detached.</param>
            <param name="io_dm_dead">The io_dm_dead.</param>
            <param name="io_dm_green">The io_dm_green.</param>
            <param name="io_dm_plant_top_tot">The io_dm_plant_top_tot.</param>
            <param name="io_dm_senesced">The io_dm_senesced.</param>
            <param name="io_lai">The io_lai.</param>
            <param name="io_leaf_area">The io_leaf_area.</param>
            <param name="io_leaf_dm">The io_leaf_dm.</param>
            <param name="io_leaf_no_zb">The io_leaf_no_zb.</param>
            <param name="io_node_no_zb">The io_node_no_zb.</param>
            <param name="io_node_no_dead_zb">The io_node_no_dead_zb.</param>
            <param name="i_nfact_photo">The i_nfact_photo.</param>
            <param name="io_n_conc_crit">The io_n_conc_crit.</param>
            <param name="io_n_conc_min">The io_n_conc_min.</param>
            <param name="io_n_dead">The io_n_dead.</param>
            <param name="io_n_green">The io_n_green.</param>
            <param name="io_n_senesced">The io_n_senesced.</param>
            <param name="io_plants">The io_plants.</param>
            <param name="io_plant_wc">The io_plant_wc.</param>
            <param name="i_previous_stage">The i_previous_stage.</param>
            <param name="io_root_length">The io_root_length.</param>
            <param name="io_root_depth">The io_root_depth.</param>
            <param name="io_slai">The io_slai.</param>
            <param name="i_swdef_expansion">The i_swdef_expansion.</param>
            <param name="i_swdef_pheno">The i_swdef_pheno.</param>
            <param name="i_swdef_photo">The i_swdef_photo.</param>
            <param name="io_tlai_dead">The io_tlai_dead.</param>
            <param name="c_n_conc_crit_root">The c_n_conc_crit_root.</param>
            <param name="c_n_conc_min_root">The c_n_conc_min_root.</param>
            <param name="c_x_stage_code">The c_x_stage_code.</param>
            <param name="c_y_n_conc_crit_cabbage">The c_y_n_conc_crit_cabbage.</param>
            <param name="c_y_n_conc_crit_cane">The c_y_n_conc_crit_cane.</param>
            <param name="c_y_n_conc_crit_leaf">The c_y_n_conc_crit_leaf.</param>
            <param name="c_y_n_conc_min_cabbage">The c_y_n_conc_min_cabbage.</param>
            <param name="c_y_n_conc_min_cane">The c_y_n_conc_min_cane.</param>
            <param name="c_y_n_conc_min_leaf">The c_y_n_conc_min_leaf.</param>
            <param name="i_current_stage">The i_current_stage.</param>
            <param name="c_stage_code_list">The c_stage_code_list.</param>
            <param name="i_phase_tt">The i_phase_tt.</param>
            <param name="i_tt_tot">The i_tt_tot.</param>
            <param name="io_node_no_detached_ob">The io_node_no_detached_ob.</param>
            <param name="c_leaf_no_at_emerg">The c_leaf_no_at_emerg.</param>
        </member>
        <member name="M:Models.SugarCane.sugar_N_conc_limits(System.Double,System.Double,System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Double,System.Double[],System.Double[],System.Double[],System.Double[]@,System.Double[]@)">
            <summary>
            Sugar_s the n_conc_limits.
            </summary>
            <param name="c_n_conc_crit_root">The c_n_conc_crit_root.</param>
            <param name="c_n_conc_min_root">The c_n_conc_min_root.</param>
            <param name="c_x_stage_code">The c_x_stage_code.</param>
            <param name="c_y_n_conc_crit_cabbage">The c_y_n_conc_crit_cabbage.</param>
            <param name="c_y_n_conc_crit_cane">The c_y_n_conc_crit_cane.</param>
            <param name="c_y_n_conc_crit_leaf">The c_y_n_conc_crit_leaf.</param>
            <param name="c_y_n_conc_min_cabbage">The c_y_n_conc_min_cabbage.</param>
            <param name="c_y_n_conc_min_cane">The c_y_n_conc_min_cane.</param>
            <param name="c_y_n_conc_min_leaf">The c_y_n_conc_min_leaf.</param>
            <param name="i_current_stage">The i_current_stage.</param>
            <param name="c_stage_code_list">The c_stage_code_list.</param>
            <param name="i_phase_tt">The i_phase_tt.</param>
            <param name="i_tt_tot">The i_tt_tot.</param>
            <param name="o_n_conc_crit">The o_n_conc_crit.</param>
            <param name="o_n_conc_min">The o_n_conc_min.</param>
        </member>
        <member name="M:Models.SugarCane.sugar_stage_code(System.Double[],System.Double[],System.Double[],System.Double,System.Double[],System.Int32)">
            <summary>
            Sugar_stage_codes the specified c_stage_code_list.
            </summary>
            <param name="c_stage_code_list">The c_stage_code_list.</param>
            <param name="i_phase_tt">The i_phase_tt.</param>
            <param name="i_tt_tot">The i_tt_tot.</param>
            <param name="i_stage_no">The i_stage_no.</param>
            <param name="i_stage_table">The i_stage_table.</param>
            <param name="i_numvals">The i_numvals.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.stage_no_of_ob(System.Double,System.Double[],System.Int32)">
            <summary>
            Stage_no_of_obs the specified i_stage_code.
            </summary>
            <param name="i_stage_code">The i_stage_code.</param>
            <param name="i_stage_code_list">The i_stage_code_list.</param>
            <param name="i_list_size">The i_list_size.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.position_in_real_array_zb(System.Double,System.Double[])">
            <summary>
            Position_in_real_array_zbs the specified i_ number.
            </summary>
            <param name="i_Number">The i_ number.</param>
            <param name="i_Array">The i_ array.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.sugar_totals(System.Double,System.Double[],System.Int32,System.Double[],System.Double[],System.Double[],System.Int32@,System.Double,System.Double@,System.Double@,System.Double[],System.Double@,System.Double[],System.Double,System.Double@)">
            <summary>
            Sugar_totalses the specified i_current_stage.
            </summary>
            <param name="i_current_stage">The i_current_stage.</param>
            <param name="i_days_tot">The i_days_tot.</param>
            <param name="i_day_of_year">The i_day_of_year.</param>
            <param name="i_dlayer">The i_dlayer.</param>
            <param name="i_dlt_sw_dep">The i_dlt_sw_dep.</param>
            <param name="i_dm_green">The i_dm_green.</param>
            <param name="o_isdate">The o_isdate.</param>
            <param name="i_lai">The i_lai.</param>
            <param name="io_lai_max">The io_lai_max.</param>
            <param name="o_n_conc_act_stover_tot">The o_n_conc_act_stover_tot.</param>
            <param name="i_n_demand">The i_n_demand.</param>
            <param name="io_n_demand_tot">The io_n_demand_tot.</param>
            <param name="i_n_green">The i_n_green.</param>
            <param name="i_root_depth">The i_root_depth.</param>
            <param name="io_transpiration_tot">The io_transpiration_tot.</param>
        </member>
        <member name="M:Models.SugarCane.sugar_event(System.Double[],System.String[],System.Double,System.Double[],System.Int32,System.Double[],System.Double[],System.Double[],System.Double[],System.Double,System.Double[],System.Double,System.Double[],System.Int32,System.Double[])">
            <summary>
            Sugar_events the specified c_stage_code_list.
            </summary>
            <param name="c_stage_code_list">The c_stage_code_list.</param>
            <param name="c_stage_names">The c_stage_names.</param>
            <param name="i_current_stage">The i_current_stage.</param>
            <param name="i_days_tot">The i_days_tot.</param>
            <param name="i_day_of_year">The i_day_of_year.</param>
            <param name="i_dlayer">The i_dlayer.</param>
            <param name="i_dm_dead">The i_dm_dead.</param>
            <param name="i_dm_green">The i_dm_green.</param>
            <param name="i_dm_senesced">The i_dm_senesced.</param>
            <param name="i_lai">The i_lai.</param>
            <param name="i_n_green">The i_n_green.</param>
            <param name="i_root_depth">The i_root_depth.</param>
            <param name="i_sw_dep">The i_sw_dep.</param>
            <param name="i_year">The i_year.</param>
            <param name="i_ll_dep">The i_ll_dep.</param>
        </member>
        <member name="M:Models.SugarCane.sugar_profile_fasw">
            <summary>
            Sugar_profile_fasws this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.GetSWUptakes(Models.Soils.Arbitrator.SoilState)">
            <summary>
            Placeholder for SoilArbitrator
            </summary>
            <param name="soilstate"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Models.SugarCane.GetNUptakes(Models.Soils.Arbitrator.SoilState)">
            <summary>
            Placeholder for SoilArbitrator
            </summary>
            <param name="soilstate"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Models.SugarCane.SetSWUptake(System.Collections.Generic.List{Models.Soils.Arbitrator.ZoneWaterAndN})">
            <summary>
            Set the sw uptake for today
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Models.SugarCane.SetNUptake(System.Collections.Generic.List{Models.Soils.Arbitrator.ZoneWaterAndN})">
            <summary>
            Set the n uptake for today
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Models.SugarCane.Sow(System.String,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Sows the plant
            </summary>
            <param name="cultivar">The cultivar.</param>
            <param name="population">The population.</param>
            <param name="depth">The depth.</param>
            <param name="rowSpacing">The row spacing.</param>
            <param name="maxCover">The maximum cover.</param>
            <param name="budNumber">The bud number.</param>
        </member>
        <member name="M:Models.SugarCane.CheckAllNUptakeOptionalsReadIn">
            <summary>
            Checks all n uptake optionals read in.
            </summary>
            <exception cref="T:Models.Core.ApsimXException">
            Using n_uptake_option == 1 and missing either 'NO3_diffn_const' or 'n_supply_preference' from ini file
            or
            Using n_uptake_option == 2 and missing either 'kno3', 'no3ppm_min', 'knh4', 'nh4ppm_min' or 'total_n_uptake_max' from ini file
            </exception>
        </member>
        <member name="M:Models.SugarCane.sugar_get_soil_variables(System.Double[]@,System.Double[]@,System.Double[]@,System.Double[]@)">
            <summary>
            Sugar_get_soil_variableses the specified o_no3gsm.
            </summary>
            <param name="o_no3gsm">The o_no3gsm.</param>
            <param name="o_no3gsm_min">The o_no3gsm_min.</param>
            <param name="o_nh4gsm">The o_nh4gsm.</param>
            <param name="o_nh4gsm_min">The o_nh4gsm_min.</param>
        </member>
        <member name="M:Models.SugarCane.OnStartOfSimulation(System.Object,System.EventArgs)">
            <summary>
            Called when [start of simulation].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.SugarCane.OnDoDailyInitialisation(System.Object,System.EventArgs)">
            <summary>
            Called when DoDailyInitialisation invoked.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.SugarCane.OnStartOfDay(System.Object,System.EventArgs)">
            <summary>
            Called when [start of day].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.SugarCane.OnDoActualPlantGrowth(System.Object,System.EventArgs)">
            <summary>
            Called when [do actual plant growth].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
            <exception cref="T:Models.Core.ApsimXException">Invalid detachment for leaf and cabbage ratio.</exception>
        </member>
        <member name="M:Models.SugarCane.sugar_start_crop(System.Double,System.Int32,System.Double,System.String)">
            <summary>
            Sugar_start_crops the specified plants.
            </summary>
            <param name="plants">The plants.</param>
            <param name="Ratoon">The ratoon.</param>
            <param name="sowing_depth">The sowing_depth.</param>
            <param name="Cultivar">The cultivar.</param>
            <exception cref="T:Models.Core.ApsimXException">
            \SugarCane\ was taken out today by \end_crop\ action -
                                        + \n
                                        +  Unable to accept sow action until the next day.
            or
            \SugarCane\  is still in the ground - unable to sow until it is taken out by \end_crop\ action.
            </exception>
        </member>
        <member name="M:Models.SugarCane.sugar_read_crop_constants(System.String)">
            <summary>
            Sugar_read_crop_constantses the specified crop type.
            </summary>
            <param name="CropType">Type of the crop.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.sugar_read_cultivar_params(System.String)">
            <summary>
            Sugar_read_cultivar_paramses the specified name.
            </summary>
            <param name="Name">The name.</param>
            <returns></returns>
            <exception cref="T:Models.Core.ApsimXException">Could not find in the SugarCane ini file a cultivar called:  + Name</exception>
        </member>
        <member name="M:Models.SugarCane.sugar_read_root_params">
            <summary>
            Sugar_read_root_paramses this instance.
            </summary>
            <exception cref="T:Models.Core.ApsimXException">
            No Crop Lower Limit found
            or
            Bad value for uptake_source
            </exception>
        </member>
        <member name="M:Models.SugarCane.sugar_harvest">
            <summary>
            Sugar_harvests this instance.
            </summary>
        </member>
        <member name="M:Models.SugarCane.sugar_kill_crop(System.String@,System.Double[],System.Double[],System.Double[])">
            <summary>
            Sugar_kill_crops the specified i_crop_status.
            </summary>
            <param name="i_crop_status">The i_crop_status.</param>
            <param name="i_dm_dead">The i_dm_dead.</param>
            <param name="i_dm_green">The i_dm_green.</param>
            <param name="i_dm_senesced">The i_dm_senesced.</param>
        </member>
        <member name="M:Models.SugarCane.sugar_end_crop">
            <summary>
            Sugar_end_crops this instance.
            </summary>
        </member>
        <member name="M:Models.SugarCane.Sow(System.Double,System.Double,System.String)">
            <summary>
            Sow a Newly Planted SugarCane Crop. (crop_status is set to "crop_alive")
            SugarCane will keep ratooning indefinitely until it is stopped by using an EndCrop or KillCrop.
            NB. All Ratoons are treated the same. No difference between first ratoon and second, third etc.
            </summary>
            <param name="PlantingDensity">Plant density (plants/m^2)</param>
            <param name="Depth">Sowing Depth (mm)</param>
            <param name="CultivarName">Name of the Cultivar.</param>
        </member>
        <member name="M:Models.SugarCane.Sow(System.Double,System.Double,System.String,System.Int32)">
            <summary>
            Sow a SugarCane Crop. (crop_status is set to "crop_alive")
            Can either sow a Newly Planted Crop, or a Ratoon Crop.
            SugarCane will keep ratooning indefinitely until it is stopped by using an EndCrop or KillCrop.
            NB. All Ratoons are treated the same. No difference between first ratoon and second, third etc.
            </summary>
            <param name="PlantingDensity">Plant density (plants/m^2)</param>
            <param name="Depth">Sowing Depth (mm)</param>
            <param name="CultivarName">Name of the Cultivar.
            NB. When sowing a ratoon, you don't need to add "_ratoon" to the cultivar name. It will be added automatically.</param>
            <param name="StartingRatoonNo">0 is a Newly Planted Crop, 1 is First Ratoon, 2 is Second Ratoon, etc.</param>
        </member>
        <member name="M:Models.SugarCane.HarvestCrop">
            <summary>
            HarvestCrop is the same as EndCrop (in that it gets rid of the biomass)
            only unlike EndCrop it can still ratoon again (crop_status is NOT set to "crop_out". It remains "crop_alive")
            </summary>
        </member>
        <member name="M:Models.SugarCane.KillCrop">
            <summary>
            KillCrop kills just this plant or ratoon (crop_status is set to "crop_dead") but the biomass is left there standing.
            You need to do a Tillage to get rid of the above ground biomass.
            It will not grow or ratoon again. It just sits there dead with an above ground biomass.
            </summary>
        </member>
        <member name="M:Models.SugarCane.EndCrop">
            <summary>
            EndCrop gets rid of the biomass and requires a replant to start growing again.  (crop_status is set to "crop_out")
            </summary>
        </member>
        <member name="M:Models.SugarCane.LodgeTheCane">
            <summary>
            Lodge the SugarCane Today.
            The arguments for how to modify the SugarCane due to lodging are specified in the ini file.
            </summary>
        </member>
        <member name="M:Models.SugarCane.HillUpTheSoil(System.Double,System.Double)">
            <summary>
            Mound soil around base of crop and bury some plant material.
            Burying the plant material incorporates it as fresh organic matter into the Soil.
            This applies no matter the state of the plant material: Green, Senesced and Dead
            Can only do a HillUp during the Emergence phase (Sprouting to BeginCane).
            </summary>
            <param name="CaneFr">Fraction of Structural Stem and Stem Sucrose that is buried</param>
            <param name="TopsFr">Fraction of Leaves and Cabbage that is buried</param>
        </member>
        <member name="M:Models.SugarCane.ToFloatArray(System.Double[])">
            <summary>
            To the float array.
            </summary>
            <param name="D">The d.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SugarCane.sugar_set_other_variables(System.Double[],System.Double[],System.Double[])">
            <summary>
            Sugar_set_other_variableses the specified i_dlt_no3gsm.
            </summary>
            <param name="i_dlt_no3gsm">The i_dlt_no3gsm.</param>
            <param name="i_dlt_nh4gsm">The i_dlt_nh4gsm.</param>
            <param name="i_dlt_sw_dep">The i_dlt_sw_dep.</param>
        </member>
        <member name="M:Models.SugarCane.sugar_update_other_variables(System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Double)">
            <summary>
            Sugar_update_other_variableses the specified i_dlt_dm_detached.
            </summary>
            <param name="i_dlt_dm_detached">The i_dlt_dm_detached.</param>
            <param name="i_dlt_dm_dead_detached">The i_dlt_dm_dead_detached.</param>
            <param name="i_dlt_n_detached">The i_dlt_n_detached.</param>
            <param name="i_dlt_n_dead_detached">The i_dlt_n_dead_detached.</param>
            <param name="i_root_length">The i_root_length.</param>
            <param name="i_root_depth">The i_root_depth.</param>
        </member>
        <member name="M:Models.SugarCane.sugar_Send_Crop_Chopped_Event(System.String,System.String[],System.Double[],System.Double[],System.Double[])">
            <summary>
            Sugar_s the send_ crop_ chopped_ event.
            </summary>
            <param name="i_crop_type">The i_crop_type.</param>
            <param name="i_dm_type">The i_dm_type.</param>
            <param name="i_dlt_crop_dm">The i_dlt_crop_dm.</param>
            <param name="i_dlt_dm_n">The i_dlt_dm_n.</param>
            <param name="i_fraction_to_Residue">The i_fraction_to_ residue.</param>
        </member>
        <member name="M:Models.SugarCane.crop_root_incorp(System.Double,System.Double,System.Double[],System.Double[],System.Double,System.String,System.Int32)">
            <summary>
            Crop_root_incorps the specified i_dlt_dm_root.
            </summary>
            <param name="i_dlt_dm_root">The i_dlt_dm_root.</param>
            <param name="i_dlt_n_root">The i_dlt_n_root.</param>
            <param name="i_dlayer">The i_dlayer.</param>
            <param name="i_root_length">The i_root_length.</param>
            <param name="i_root_depth">The i_root_depth.</param>
            <param name="c_crop_type">The c_crop_type.</param>
            <param name="i_max_layer">The i_max_layer.</param>
            <exception cref="T:Models.Core.ApsimXException">Too many layers for crop routines</exception>
        </member>
        <member name="M:Models.SugarCane.sugar_hill_up(System.Double,System.Double)">
            <summary>
            Sugar_hill_ups the specified canefr.
            </summary>
            <param name="canefr">The canefr.</param>
            <param name="topsfr">The topsfr.</param>
            <exception cref="T:Models.Core.ApsimXException">Can only hill up during emergence phase</exception>
        </member>
        <member name="P:Models.SugarCane.CanopyType">
            <summary>
            Canopy type
            </summary>
        </member>
        <member name="P:Models.SugarCane.LAI">
            <summary>
            Gets the LAI (m^2/m^2)
            </summary>
        </member>
        <member name="P:Models.SugarCane.LAITotal">
            <summary>
            Gets the maximum LAI (m^2/m^2)
            </summary>
        </member>
        <member name="P:Models.SugarCane.CoverGreen">
            <summary>
            Gets the cover green (0-1)
            </summary>
        </member>
        <member name="P:Models.SugarCane.CoverTotal">
            <summary>
            Gets the cover total (0-1)
            </summary>
        </member>
        <member name="P:Models.SugarCane.Height">
            <summary>
            Gets the canopy height (mm)
            </summary>
        </member>
        <member name="P:Models.SugarCane.Depth">
            <summary>
            Gets the canopy depth (mm)
            </summary>
        </member>
        <member name="P:Models.SugarCane.FRGR">
            <summary>
            Gets  FRGR.
            </summary>
        </member>
        <member name="P:Models.SugarCane.PotentialEP">
            <summary>
            Sets the potential evapotranspiration.
            </summary>
        </member>
        <member name="P:Models.SugarCane.LightProfile">
            <summary>
            MicroClimate calculates a layered canopy energy balance and sets
            this property in the crop.
            </summary>
        </member>
        <member name="P:Models.SugarCane.crop_type">
            <summary>
            Gets or sets the crop_type.
            </summary>
            <value>
            The crop_type.
            </value>
        </member>
        <member name="P:Models.SugarCane.tt_emerg_to_begcane_ub">
            <summary>
            Gets or sets the tt_emerg_to_begcane_ub.
            </summary>
            <value>
            The tt_emerg_to_begcane_ub.
            </value>
        </member>
        <member name="P:Models.SugarCane.tt_begcane_to_flowering_ub">
            <summary>
            Gets or sets the tt_begcane_to_flowering_ub.
            </summary>
            <value>
            The tt_begcane_to_flowering_ub.
            </value>
        </member>
        <member name="P:Models.SugarCane.tt_flowering_to_crop_end_ub">
            <summary>
            Gets or sets the tt_flowering_to_crop_end_ub.
            </summary>
            <value>
            The tt_flowering_to_crop_end_ub.
            </value>
        </member>
        <member name="P:Models.SugarCane.n_uptake_option">
            <summary>
            Gets or sets the n_uptake_option.
            </summary>
            <value>
            The n_uptake_option.
            </value>
        </member>
        <member name="P:Models.SugarCane.NO3_diffn_const">
            <summary>
            Gets or sets the n o3_diffn_const.
            </summary>
            <value>
            The n o3_diffn_const.
            </value>
        </member>
        <member name="P:Models.SugarCane.n_supply_preference">
            <summary>
            Gets or sets the n_supply_preference.
            </summary>
            <value>
            The n_supply_preference.
            </value>
        </member>
        <member name="P:Models.SugarCane.kno3">
            <summary>
            Gets or sets the kno3.
            </summary>
            <value>
            The kno3.
            </value>
        </member>
        <member name="P:Models.SugarCane.no3ppm_min">
            <summary>
            Gets or sets the no3ppm_min.
            </summary>
            <value>
            The no3ppm_min.
            </value>
        </member>
        <member name="P:Models.SugarCane.knh4">
            <summary>
            Gets or sets the KNH4.
            </summary>
            <value>
            The KNH4.
            </value>
        </member>
        <member name="P:Models.SugarCane.nh4ppm_min">
            <summary>
            Gets or sets the nh4ppm_min.
            </summary>
            <value>
            The nh4ppm_min.
            </value>
        </member>
        <member name="P:Models.SugarCane.total_n_uptake_max">
            <summary>
            Gets or sets the total_n_uptake_max.
            </summary>
            <value>
            The total_n_uptake_max.
            </value>
        </member>
        <member name="P:Models.SugarCane.ll_ub">
            <summary>
            Gets or sets the ll_ub.
            </summary>
            <value>
            The ll_ub.
            </value>
        </member>
        <member name="P:Models.SugarCane.kl_ub">
            <summary>
            Gets or sets the kl_ub.
            </summary>
            <value>
            The kl_ub.
            </value>
        </member>
        <member name="P:Models.SugarCane.minsw">
            <summary>
            Gets or sets the minsw.
            </summary>
            <value>
            The minsw.
            </value>
        </member>
        <member name="P:Models.SugarCane.latitude_ub">
            <summary>
            Gets or sets the latitude_ub.
            </summary>
            <value>
            The latitude_ub.
            </value>
        </member>
        <member name="P:Models.SugarCane.latitude_lb">
            <summary>
            Gets or sets the latitude_lb.
            </summary>
            <value>
            The latitude_lb.
            </value>
        </member>
        <member name="P:Models.SugarCane.maxt_ub">
            <summary>
            Gets or sets the maxt_ub.
            </summary>
            <value>
            The maxt_ub.
            </value>
        </member>
        <member name="P:Models.SugarCane.mint_ub">
            <summary>
            Gets or sets the mint_ub.
            </summary>
            <value>
            The mint_ub.
            </value>
        </member>
        <member name="P:Models.SugarCane.mint_lb">
            <summary>
            Gets or sets the mint_lb.
            </summary>
            <value>
            The mint_lb.
            </value>
        </member>
        <member name="P:Models.SugarCane.radn_ub">
            <summary>
            Gets or sets the radn_ub.
            </summary>
            <value>
            The radn_ub.
            </value>
        </member>
        <member name="P:Models.SugarCane.radn_lb">
            <summary>
            Gets or sets the radn_lb.
            </summary>
            <value>
            The radn_lb.
            </value>
        </member>
        <member name="P:Models.SugarCane.dlayer_ub">
            <summary>
            Gets or sets the dlayer_ub.
            </summary>
            <value>
            The dlayer_ub.
            </value>
        </member>
        <member name="P:Models.SugarCane.dlayer_lb">
            <summary>
            Gets or sets the dlayer_lb.
            </summary>
            <value>
            The dlayer_lb.
            </value>
        </member>
        <member name="P:Models.SugarCane.dul_dep_ub">
            <summary>
            Gets or sets the dul_dep_ub.
            </summary>
            <value>
            The dul_dep_ub.
            </value>
        </member>
        <member name="P:Models.SugarCane.dul_dep_lb">
            <summary>
            Gets or sets the dul_dep_lb.
            </summary>
            <value>
            The dul_dep_lb.
            </value>
        </member>
        <member name="P:Models.SugarCane.sw_dep_ub">
            <summary>
            Gets or sets the sw_dep_ub.
            </summary>
            <value>
            The sw_dep_ub.
            </value>
        </member>
        <member name="P:Models.SugarCane.sw_dep_lb">
            <summary>
            Gets or sets the sw_dep_lb.
            </summary>
            <value>
            The sw_dep_lb.
            </value>
        </member>
        <member name="P:Models.SugarCane.NO3_ub">
            <summary>
            Gets or sets the n o3_ub.
            </summary>
            <value>
            The n o3_ub.
            </value>
        </member>
        <member name="P:Models.SugarCane.NO3_lb">
            <summary>
            Gets or sets the n o3_lb.
            </summary>
            <value>
            The n o3_lb.
            </value>
        </member>
        <member name="P:Models.SugarCane.NO3_min_ub">
            <summary>
            Gets or sets the n o3_min_ub.
            </summary>
            <value>
            The n o3_min_ub.
            </value>
        </member>
        <member name="P:Models.SugarCane.NO3_min_lb">
            <summary>
            Gets or sets the n o3_min_lb.
            </summary>
            <value>
            The n o3_min_lb.
            </value>
        </member>
        <member name="P:Models.SugarCane.NH4_ub">
            <summary>
            Gets or sets the n h4_ub.
            </summary>
            <value>
            The n h4_ub.
            </value>
        </member>
        <member name="P:Models.SugarCane.NH4_lb">
            <summary>
            Gets or sets the n H4_LB.
            </summary>
            <value>
            The n H4_LB.
            </value>
        </member>
        <member name="P:Models.SugarCane.NH4_min_ub">
            <summary>
            Gets or sets the n h4_min_ub.
            </summary>
            <value>
            The n h4_min_ub.
            </value>
        </member>
        <member name="P:Models.SugarCane.NH4_min_lb">
            <summary>
            Gets or sets the n h4_min_lb.
            </summary>
            <value>
            The n h4_min_lb.
            </value>
        </member>
        <member name="P:Models.SugarCane.plant">
            <summary>
            Gets or sets the plant.
            </summary>
            <value>
            The plant.
            </value>
        </member>
        <member name="P:Models.SugarCane.ratoon">
            <summary>
            Gets or sets the ratoon.
            </summary>
            <value>
            The ratoon.
            </value>
        </member>
        <member name="P:Models.SugarCane.cultivars">
            <summary>
            Gets or sets the cultivars.
            </summary>
            <value>
            The cultivars.
            </value>
        </member>
        <member name="P:Models.SugarCane.eo_crop_factor">
            <summary>
            Gets or sets the eo_crop_factor.
            </summary>
            <value>
            The eo_crop_factor.
            </value>
        </member>
        <member name="P:Models.SugarCane.uptake_source">
            <summary>
            Gets or sets the uptake_source.
            </summary>
            <value>
            The uptake_source.
            </value>
        </member>
        <member name="P:Models.SugarCane.rlv_init">
            <summary>
            Gets or sets the rlv_init.
            </summary>
            <value>
            The rlv_init.
            </value>
        </member>
        <member name="P:Models.SugarCane.num_layers">
            <summary>
            Gets the num_layers.
            </summary>
            <value>
            The num_layers.
            </value>
        </member>
        <member name="P:Models.SugarCane.plants">
            <summary>
            Gets or sets the plants.
            </summary>
            <value>
            The plants.
            </value>
        </member>
        <member name="P:Models.SugarCane.lodge_redn_photo">
            <summary>
            Gets or sets the lodge_redn_photo.
            </summary>
            <value>
            The lodge_redn_photo.
            </value>
        </member>
        <member name="P:Models.SugarCane.lodge_redn_sucrose">
            <summary>
            Gets or sets the lodge_redn_sucrose.
            </summary>
            <value>
            The lodge_redn_sucrose.
            </value>
        </member>
        <member name="P:Models.SugarCane.lodge_redn_green_leaf">
            <summary>
            Gets or sets the lodge_redn_green_leaf.
            </summary>
            <value>
            The lodge_redn_green_leaf.
            </value>
        </member>
        <member name="P:Models.SugarCane.DaysAfterSowing">
            <summary>
            Gets the days after sowing.
            </summary>
            <value>
            The days after sowing.
            </value>
        </member>
        <member name="P:Models.SugarCane.crop_status">
            <summary>
            Gets the crop_status.
            </summary>
            <value>
            The crop_status.
            </value>
        </member>
        <member name="P:Models.SugarCane.stage">
            <summary>
            Gets the stage.
            </summary>
            <value>
            The stage.
            </value>
        </member>
        <member name="P:Models.SugarCane.stage_code">
            <summary>
            Gets the stage_code.
            </summary>
            <value>
            The stage_code.
            </value>
        </member>
        <member name="P:Models.SugarCane.stagename">
            <summary>
            Gets the stagename.
            </summary>
            <value>
            The stagename.
            </value>
        </member>
        <member name="P:Models.SugarCane.ratoon_no">
            <summary>
            Gets the ratoon_no.
            </summary>
            <value>
            The ratoon_no.
            </value>
        </member>
        <member name="P:Models.SugarCane.phase_tt">
            <summary>
            Gets the phase_tt.
            </summary>
            <value>
            The phase_tt.
            </value>
        </member>
        <member name="P:Models.SugarCane.tt_tot">
            <summary>
            Gets the tt_tot.
            </summary>
            <value>
            The tt_tot.
            </value>
        </member>
        <member name="P:Models.SugarCane.leaf_no">
            <summary>
            Gets the leaf_no.
            </summary>
            <value>
            The leaf_no.
            </value>
        </member>
        <member name="P:Models.SugarCane.node_no_dead">
            <summary>
            Gets the node_no_dead.
            </summary>
            <value>
            The node_no_dead.
            </value>
        </member>
        <member name="P:Models.SugarCane.node_no_detached">
            <summary>
            Gets the node_no_detached.
            </summary>
            <value>
            The node_no_detached.
            </value>
        </member>
        <member name="P:Models.SugarCane.leaves">
            <summary>
            Gets the leaves.
            </summary>
            <value>
            The leaves.
            </value>
        </member>
        <member name="P:Models.SugarCane.green_leaves">
            <summary>
            Gets the green_leaves.
            </summary>
            <value>
            The green_leaves.
            </value>
        </member>
        <member name="P:Models.SugarCane.dead_leaves">
            <summary>
            Gets the dead_leaves.
            </summary>
            <value>
            The dead_leaves.
            </value>
        </member>
        <member name="P:Models.SugarCane.leaf_area">
            <summary>
            Gets the leaf_area.
            </summary>
            <value>
            The leaf_area.
            </value>
        </member>
        <member name="P:Models.SugarCane.leaf_dm">
            <summary>
            Gets the leaf_dm.
            </summary>
            <value>
            The leaf_dm.
            </value>
        </member>
        <member name="P:Models.SugarCane.height">
            <summary>
            Gets the height.
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="P:Models.SugarCane.root_depth">
            <summary>
            Gets the root_depth.
            </summary>
            <value>
            The root_depth.
            </value>
        </member>
        <member name="P:Models.SugarCane.cover_green">
            <summary>
            Gets the cover_green.
            </summary>
            <value>
            The cover_green.
            </value>
        </member>
        <member name="P:Models.SugarCane.radn_int">
            <summary>
            Gets the radn_int.
            </summary>
            <value>
            The radn_int.
            </value>
        </member>
        <member name="P:Models.SugarCane.cover_tot">
            <summary>
            Gets the cover_tot.
            </summary>
            <value>
            The cover_tot.
            </value>
        </member>
        <member name="P:Models.SugarCane.lai_sum">
            <summary>
            Gets the lai_sum.
            </summary>
            <value>
            The lai_sum.
            </value>
        </member>
        <member name="P:Models.SugarCane.tlai">
            <summary>
            Gets the tlai.
            </summary>
            <value>
            The tlai.
            </value>
        </member>
        <member name="P:Models.SugarCane.tla">
            <summary>
            Gets the tla.
            </summary>
            <value>
            The tla.
            </value>
        </member>
        <member name="P:Models.SugarCane.slai">
            <summary>
            Gets the slai.
            </summary>
            <value>
            The slai.
            </value>
        </member>
        <member name="P:Models.SugarCane.lai">
            <summary>
            Gets the lai.
            </summary>
            <value>
            The lai.
            </value>
        </member>
        <member name="P:Models.SugarCane.rlv">
            <summary>
            Gets the RLV.
            </summary>
            <value>
            The RLV.
            </value>
        </member>
        <member name="P:Models.SugarCane.rlv_tot">
            <summary>
            Gets the rlv_tot.
            </summary>
            <value>
            The rlv_tot.
            </value>
        </member>
        <member name="P:Models.SugarCane.ll_dep">
            <summary>
            Gets the ll_dep.
            </summary>
            <value>
            The ll_dep.
            </value>
        </member>
        <member name="P:Models.SugarCane.lai2">
            <summary>
            Gets the lai2.
            </summary>
            <value>
            The lai2.
            </value>
        </member>
        <member name="P:Models.SugarCane.leaf_wt2">
            <summary>
            Gets the leaf_wt2.
            </summary>
            <value>
            The leaf_wt2.
            </value>
        </member>
        <member name="P:Models.SugarCane.rootgreenwt">
            <summary>
            Gets the rootgreenwt.
            </summary>
            <value>
            The rootgreenwt.
            </value>
        </member>
        <member name="P:Models.SugarCane.leafgreenwt">
            <summary>
            Gets the leafgreenwt.
            </summary>
            <value>
            The leafgreenwt.
            </value>
        </member>
        <member name="P:Models.SugarCane.sstem_wt">
            <summary>
            Gets the sstem_wt.
            </summary>
            <value>
            The sstem_wt.
            </value>
        </member>
        <member name="P:Models.SugarCane.cane_dmf">
            <summary>
            Gets the cane_dmf.
            </summary>
            <value>
            The cane_dmf.
            </value>
        </member>
        <member name="P:Models.SugarCane.canefw">
            <summary>
            Gets the canefw.
            </summary>
            <value>
            The canefw.
            </value>
        </member>
        <member name="P:Models.SugarCane.ccs">
            <summary>
            Gets the CCS.
            </summary>
            <value>
            The CCS.
            </value>
        </member>
        <member name="P:Models.SugarCane.scmstf">
            <summary>
            Gets the SCMSTF.
            </summary>
            <value>
            The SCMSTF.
            </value>
        </member>
        <member name="P:Models.SugarCane.scmst">
            <summary>
            Gets the SCMST.
            </summary>
            <value>
            The SCMST.
            </value>
        </member>
        <member name="P:Models.SugarCane.sucrose_wt">
            <summary>
            Gets the sucrose_wt.
            </summary>
            <value>
            The sucrose_wt.
            </value>
        </member>
        <member name="P:Models.SugarCane.cabbage_wt">
            <summary>
            Gets the cabbage_wt.
            </summary>
            <value>
            The cabbage_wt.
            </value>
        </member>
        <member name="P:Models.SugarCane.cane_wt">
            <summary>
            Gets the cane_wt.
            </summary>
            <value>
            The cane_wt.
            </value>
        </member>
        <member name="P:Models.SugarCane.biomass">
            <summary>
            Gets the biomass.
            </summary>
            <value>
            The biomass.
            </value>
        </member>
        <member name="P:Models.SugarCane.green_biomass">
            <summary>
            Gets the green_biomass.
            </summary>
            <value>
            The green_biomass.
            </value>
        </member>
        <member name="P:Models.SugarCane.greenwt">
            <summary>
            Gets the greenwt.
            </summary>
            <value>
            The greenwt.
            </value>
        </member>
        <member name="P:Models.SugarCane.senescedwt">
            <summary>
            Gets the senescedwt.
            </summary>
            <value>
            The senescedwt.
            </value>
        </member>
        <member name="P:Models.SugarCane.dm_dead">
            <summary>
            Gets the dm_dead.
            </summary>
            <value>
            The dm_dead.
            </value>
        </member>
        <member name="P:Models.SugarCane.dlt_dm">
            <summary>
            Gets the DLT_DM.
            </summary>
            <value>
            The DLT_DM.
            </value>
        </member>
        <member name="P:Models.SugarCane.partition_xs">
            <summary>
            Gets the partition_xs.
            </summary>
            <value>
            The partition_xs.
            </value>
        </member>
        <member name="P:Models.SugarCane.dlt_dm_green">
            <summary>
            Gets the dlt_dm_green.
            </summary>
            <value>
            The dlt_dm_green.
            </value>
        </member>
        <member name="P:Models.SugarCane.dlt_dm_detached">
            <summary>
            Gets the dlt_dm_detached.
            </summary>
            <value>
            The dlt_dm_detached.
            </value>
        </member>
        <member name="P:Models.SugarCane.n_critical">
            <summary>
            Gets the n_critical.
            </summary>
            <value>
            The n_critical.
            </value>
        </member>
        <member name="P:Models.SugarCane.n_minimum">
            <summary>
            Gets the n_minimum.
            </summary>
            <value>
            The n_minimum.
            </value>
        </member>
        <member name="P:Models.SugarCane.n_conc_leaf">
            <summary>
            Gets the n_conc_leaf.
            </summary>
            <value>
            The n_conc_leaf.
            </value>
        </member>
        <member name="P:Models.SugarCane.n_conc_cab">
            <summary>
            Gets the n_conc_cab.
            </summary>
            <value>
            The n_conc_cab.
            </value>
        </member>
        <member name="P:Models.SugarCane.n_conc_cane">
            <summary>
            Gets the n_conc_cane.
            </summary>
            <value>
            The n_conc_cane.
            </value>
        </member>
        <member name="P:Models.SugarCane.n_leaf_crit">
            <summary>
            Gets the n_leaf_crit.
            </summary>
            <value>
            The n_leaf_crit.
            </value>
        </member>
        <member name="P:Models.SugarCane.n_leaf_min">
            <summary>
            Gets the n_leaf_min.
            </summary>
            <value>
            The n_leaf_min.
            </value>
        </member>
        <member name="P:Models.SugarCane.biomass_n">
            <summary>
            Gets the biomass_n.
            </summary>
            <value>
            The biomass_n.
            </value>
        </member>
        <member name="P:Models.SugarCane.plant_n_tot">
            <summary>
            Gets the plant_n_tot.
            </summary>
            <value>
            The plant_n_tot.
            </value>
        </member>
        <member name="P:Models.SugarCane.green_biomass_n">
            <summary>
            Gets the green_biomass_n.
            </summary>
            <value>
            The green_biomass_n.
            </value>
        </member>
        <member name="P:Models.SugarCane.n_green">
            <summary>
            Gets the n_green.
            </summary>
            <value>
            The n_green.
            </value>
        </member>
        <member name="P:Models.SugarCane.greenn">
            <summary>
            Gets the greenn.
            </summary>
            <value>
            The greenn.
            </value>
        </member>
        <member name="P:Models.SugarCane.senescedn">
            <summary>
            Gets the senescedn.
            </summary>
            <value>
            The senescedn.
            </value>
        </member>
        <member name="P:Models.SugarCane.dlt_n_green">
            <summary>
            Gets the dlt_n_green.
            </summary>
            <value>
            The dlt_n_green.
            </value>
        </member>
        <member name="P:Models.SugarCane.swdef_pheno">
            <summary>
            Gets the swdef_pheno.
            </summary>
            <value>
            The swdef_pheno.
            </value>
        </member>
        <member name="P:Models.SugarCane.swdef_photo">
            <summary>
            Gets the swdef_photo.
            </summary>
            <value>
            The swdef_photo.
            </value>
        </member>
        <member name="P:Models.SugarCane.swdef_expan">
            <summary>
            Gets the swdef_expan.
            </summary>
            <value>
            The swdef_expan.
            </value>
        </member>
        <member name="P:Models.SugarCane.swdef_stalk">
            <summary>
            Gets the swdef_stalk.
            </summary>
            <value>
            The swdef_stalk.
            </value>
        </member>
        <member name="P:Models.SugarCane.nfact_photo">
            <summary>
            Gets the nfact_photo.
            </summary>
            <value>
            The nfact_photo.
            </value>
        </member>
        <member name="P:Models.SugarCane.nfact_expan">
            <summary>
            Gets the nfact_expan.
            </summary>
            <value>
            The nfact_expan.
            </value>
        </member>
        <member name="P:Models.SugarCane.oxdef_photo">
            <summary>
            Gets the oxdef_photo.
            </summary>
            <value>
            The oxdef_photo.
            </value>
        </member>
        <member name="P:Models.SugarCane.ep">
            <summary>
            Gets the ep.
            </summary>
            <value>
            The ep.
            </value>
        </member>
        <member name="P:Models.SugarCane.cep">
            <summary>
            Gets the cep.
            </summary>
            <value>
            The cep.
            </value>
        </member>
        <member name="P:Models.SugarCane.sw_uptake">
            <summary>
            Gets the sw_uptake.
            </summary>
            <value>
            The sw_uptake.
            </value>
        </member>
        <member name="P:Models.SugarCane.sw_demand">
            <summary>
            Gets the sw_demand.
            </summary>
            <value>
            The sw_demand.
            </value>
        </member>
        <member name="P:Models.SugarCane.sw_demand_te">
            <summary>
            Gets the sw_demand_te.
            </summary>
            <value>
            The sw_demand_te.
            </value>
        </member>
        <member name="P:Models.SugarCane.fasw">
            <summary>
            Gets the fasw.
            </summary>
            <value>
            The fasw.
            </value>
        </member>
        <member name="P:Models.SugarCane.esw_layr">
            <summary>
            Gets the esw_layr.
            </summary>
            <value>
            The esw_layr.
            </value>
        </member>
        <member name="P:Models.SugarCane.no3_tot">
            <summary>
            Gets the no3_tot.
            </summary>
            <value>
            The no3_tot.
            </value>
        </member>
        <member name="P:Models.SugarCane.n_demand">
            <summary>
            Gets the n_demand.
            </summary>
            <value>
            The n_demand.
            </value>
        </member>
        <member name="P:Models.SugarCane.no3_demand">
            <summary>
            Gets the no3_demand.
            </summary>
            <value>
            The no3_demand.
            </value>
        </member>
        <member name="P:Models.SugarCane.n_supply">
            <summary>
            Gets the n_supply.
            </summary>
            <value>
            The n_supply.
            </value>
        </member>
        <member name="P:Models.SugarCane.no3_uptake">
            <summary>
            Gets the no3_uptake.
            </summary>
            <value>
            The no3_uptake.
            </value>
        </member>
        <member name="P:Models.SugarCane.nh4_uptake">
            <summary>
            Gets the nh4_uptake.
            </summary>
            <value>
            The nh4_uptake.
            </value>
        </member>
        <member name="P:Models.SugarCane.no3_uptake_pot">
            <summary>
            Gets the no3_uptake_pot.
            </summary>
            <value>
            The no3_uptake_pot.
            </value>
        </member>
        <member name="P:Models.SugarCane.nh4_uptake_pot">
            <summary>
            Gets the nh4_uptake_pot.
            </summary>
            <value>
            The nh4_uptake_pot.
            </value>
        </member>
        <member name="P:Models.SugarCane.CanopyData">
            <summary>
            Provides canopy data to SoilWater.
            </summary>
            <value>
            The canopy data.
            </value>
        </member>
        <member name="P:Models.SugarCane.CropType">
            <summary>
            MicroClimate will get 'CropType' and use it to look up
            canopy properties for this crop.
            </summary>
            <value>
            The type of the crop.
            </value>
        </member>
        <member name="P:Models.SugarCane.IsAlive">
            <summary>
            Is the plant alive?
            </summary>
        </member>
        <member name="P:Models.SugarCane.CultivarNames">
            <summary>
            Gets a list of cultivar names
            </summary>
        </member>
        <member name="E:Models.SugarCane.NitrogenChanged">
            <summary>
            Occurs when [nitrogen changed].
            </summary>
        </member>
        <member name="E:Models.SugarCane.WaterChanged">
            <summary>
            Occurs when [water changed].
            </summary>
        </member>
        <member name="E:Models.SugarCane.BiomassRemoved">
            <summary>
            Occurs when [biomass removed].
            </summary>
        </member>
        <member name="E:Models.SugarCane.IncorpFOM">
            <summary>
            Occurs when [incorp fom].
            </summary>
        </member>
        <member name="T:Models.Interfaces.ISurfaceOrganicMatter">
            <summary>Surface organic matter interface.</summary>
        </member>
        <member name="M:Models.Interfaces.ISurfaceOrganicMatter.Add(System.Double,System.Double,System.Double,System.String,System.String)">
            <summary>Adds material to the surface organic matter pool.</summary>
            <param name="biomass">The amount of biomass added (kg/ha).</param>
            <param name="N">The amount of N added (ppm).</param>
            <param name="P">The amount of P added (ppm).</param>
            <param name="type">Type of the biomass.</param>
            <param name="name">Name of the biomass written to summary file</param>
        </member>
        <member name="T:Models.Report.Report">
            <summary>
            A report class for writing output to the data store.
            </summary>
        </member>
        <member name="F:Models.Report.Report.columns">
            <summary>
            The columns to write to the data store.
            </summary>
        </member>
        <member name="F:Models.Report.Report.simulation">
            <summary>
            A reference to the simulation
            </summary>
        </member>
        <member name="M:Models.Report.Report.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>
            An event handler to allow us to initialize ourselves.
            </summary>
            <param name="sender">Event sender</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Models.Report.Report.FindVariableMembers">
            <summary>
            Fill the Members list with VariableMember objects for each variable.
            </summary>
        </member>
        <member name="M:Models.Report.Report.OnSimulationCompleted(System.Object,System.EventArgs)">
            <summary>
            Simulation has completed - write the report table.
            </summary>
            <param name="sender">Event sender</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="P:Models.Report.Report.VariableNames">
            <summary>
            Gets or sets variable names for outputting
            </summary>
        </member>
        <member name="P:Models.Report.Report.EventNames">
            <summary>
            Gets or sets event names for outputting
            </summary>
        </member>
        <member name="T:Models.Soils.SwimSoluteParameters">
            <summary>
            A model for capturing swim solute parameters
            </summary>
        </member>
        <member name="P:Models.Soils.SwimSoluteParameters.Dis">
            <summary>Gets or sets the dis.</summary>
            <value>The dis.</value>
        </member>
        <member name="P:Models.Soils.SwimSoluteParameters.Disp">
            <summary>Gets or sets the disp.</summary>
            <value>The disp.</value>
        </member>
        <member name="P:Models.Soils.SwimSoluteParameters.A">
            <summary>Gets or sets a.</summary>
            <value>a.</value>
        </member>
        <member name="P:Models.Soils.SwimSoluteParameters.DTHC">
            <summary>Gets or sets the DTHC.</summary>
            <value>The DTHC.</value>
        </member>
        <member name="P:Models.Soils.SwimSoluteParameters.DTHP">
            <summary>Gets or sets the DTHP.</summary>
            <value>The DTHP.</value>
        </member>
        <member name="P:Models.Soils.SwimSoluteParameters.WaterTableCl">
            <summary>Gets or sets the water table cl.</summary>
            <value>The water table cl.</value>
        </member>
        <member name="P:Models.Soils.SwimSoluteParameters.WaterTableNO3">
            <summary>Gets or sets the water table n o3.</summary>
            <value>The water table n o3.</value>
        </member>
        <member name="P:Models.Soils.SwimSoluteParameters.WaterTableNH4">
            <summary>Gets or sets the water table n h4.</summary>
            <value>The water table n h4.</value>
        </member>
        <member name="P:Models.Soils.SwimSoluteParameters.WaterTableUrea">
            <summary>Gets or sets the water table urea.</summary>
            <value>The water table urea.</value>
        </member>
        <member name="P:Models.Soils.SwimSoluteParameters.WaterTableTracer">
            <summary>Gets or sets the water table tracer.</summary>
            <value>The water table tracer.</value>
        </member>
        <member name="P:Models.Soils.SwimSoluteParameters.WaterTableMineralisationInhibitor">
            <summary>Gets or sets the water table mineralisation inhibitor.</summary>
            <value>The water table mineralisation inhibitor.</value>
        </member>
        <member name="P:Models.Soils.SwimSoluteParameters.WaterTableUreaseInhibitor">
            <summary>Gets or sets the water table urease inhibitor.</summary>
            <value>The water table urease inhibitor.</value>
        </member>
        <member name="P:Models.Soils.SwimSoluteParameters.WaterTableNitrificationInhibitor">
            <summary>Gets or sets the water table nitrification inhibitor.</summary>
            <value>The water table nitrification inhibitor.</value>
        </member>
        <member name="P:Models.Soils.SwimSoluteParameters.WaterTableDenitrificationInhibitor">
            <summary>Gets or sets the water table denitrification inhibitor.</summary>
            <value>The water table denitrification inhibitor.</value>
        </member>
        <member name="P:Models.Soils.SwimSoluteParameters.Thickness">
            <summary>Gets or sets the thickness.</summary>
            <value>The thickness.</value>
        </member>
        <member name="P:Models.Soils.SwimSoluteParameters.NO3Exco">
            <summary>Gets or sets the n o3 exco.</summary>
            <value>The n o3 exco.</value>
        </member>
        <member name="P:Models.Soils.SwimSoluteParameters.NO3FIP">
            <summary>Gets or sets the n o3 fip.</summary>
            <value>The n o3 fip.</value>
        </member>
        <member name="P:Models.Soils.SwimSoluteParameters.NH4Exco">
            <summary>Gets or sets the n h4 exco.</summary>
            <value>The n h4 exco.</value>
        </member>
        <member name="P:Models.Soils.SwimSoluteParameters.NH4FIP">
            <summary>Gets or sets the n h4 fip.</summary>
            <value>The n h4 fip.</value>
        </member>
        <member name="P:Models.Soils.SwimSoluteParameters.UreaExco">
            <summary>Gets or sets the urea exco.</summary>
            <value>The urea exco.</value>
        </member>
        <member name="P:Models.Soils.SwimSoluteParameters.UreaFIP">
            <summary>Gets or sets the urea fip.</summary>
            <value>The urea fip.</value>
        </member>
        <member name="P:Models.Soils.SwimSoluteParameters.ClExco">
            <summary>Gets or sets the cl exco.</summary>
            <value>The cl exco.</value>
        </member>
        <member name="P:Models.Soils.SwimSoluteParameters.ClFIP">
            <summary>Gets or sets the cl fip.</summary>
            <value>The cl fip.</value>
        </member>
        <member name="P:Models.Soils.SwimSoluteParameters.TracerExco">
            <summary>Gets or sets the tracer exco.</summary>
            <value>The tracer exco.</value>
        </member>
        <member name="P:Models.Soils.SwimSoluteParameters.TracerFIP">
            <summary>Gets or sets the tracer fip.</summary>
            <value>The tracer fip.</value>
        </member>
        <member name="P:Models.Soils.SwimSoluteParameters.MineralisationInhibitorExco">
            <summary>Gets or sets the mineralisation inhibitor exco.</summary>
            <value>The mineralisation inhibitor exco.</value>
        </member>
        <member name="P:Models.Soils.SwimSoluteParameters.MineralisationInhibitorFIP">
            <summary>Gets or sets the mineralisation inhibitor fip.</summary>
            <value>The mineralisation inhibitor fip.</value>
        </member>
        <member name="P:Models.Soils.SwimSoluteParameters.UreaseInhibitorExco">
            <summary>Gets or sets the urease inhibitor exco.</summary>
            <value>The urease inhibitor exco.</value>
        </member>
        <member name="P:Models.Soils.SwimSoluteParameters.UreaseInhibitorFIP">
            <summary>Gets or sets the urease inhibitor fip.</summary>
            <value>The urease inhibitor fip.</value>
        </member>
        <member name="P:Models.Soils.SwimSoluteParameters.NitrificationInhibitorExco">
            <summary>Gets or sets the nitrification inhibitor exco.</summary>
            <value>The nitrification inhibitor exco.</value>
        </member>
        <member name="P:Models.Soils.SwimSoluteParameters.NitrificationInhibitorFIP">
            <summary>Gets or sets the nitrification inhibitor fip.</summary>
            <value>The nitrification inhibitor fip.</value>
        </member>
        <member name="P:Models.Soils.SwimSoluteParameters.DenitrificationInhibitorExco">
            <summary>Gets or sets the denitrification inhibitor exco.</summary>
            <value>The denitrification inhibitor exco.</value>
        </member>
        <member name="P:Models.Soils.SwimSoluteParameters.DenitrificationInhibitorFIP">
            <summary>Gets or sets the denitrification inhibitor fip.</summary>
            <value>The denitrification inhibitor fip.</value>
        </member>
        <member name="T:Models.Soils.SoilTemperature">
            <summary>
            A model for capturing soil temperature parameters
            </summary>
        </member>
        <member name="P:Models.Soils.SoilTemperature.BoundaryLayerConductance">
            <summary>Gets or sets the boundary layer conductance.</summary>
            <value>The boundary layer conductance.</value>
        </member>
        <member name="P:Models.Soils.SoilTemperature.Thickness">
            <summary>Gets or sets the thickness.</summary>
            <value>The thickness.</value>
        </member>
        <member name="P:Models.Soils.SoilTemperature.InitialSoilTemperature">
            <summary>Gets or sets the initial soil temperature.</summary>
            <value>The initial soil temperature.</value>
        </member>
        <member name="T:Models.PMF.Interfaces.BelowGround">
            <summary>A below ground interface</summary>
        </member>
        <member name="T:Models.PMF.Interfaces.Transpiring">
            <summary>Indicates the organ transpires</summary>
        </member>
        <member name="T:Models.PMF.Functions.PhaseBasedSwitch">
            <summary>
            Returns a value of 1 if phenology is between start and end phases and otherwise a value of 0.
            </summary>
        </member>
        <member name="F:Models.PMF.Functions.PhaseBasedSwitch.Phenology">
            <summary>The phenology</summary>
        </member>
        <member name="P:Models.PMF.Functions.PhaseBasedSwitch.Start">
            <summary>The start</summary>
        </member>
        <member name="P:Models.PMF.Functions.PhaseBasedSwitch.End">
            <summary>The end</summary>
        </member>
        <member name="P:Models.PMF.Functions.PhaseBasedSwitch.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
            <exception cref="T:System.Exception">
            Phase start name not set: + Name
            or
            Phase end name not set: + Name
            </exception>
        </member>
        <member name="T:Models.PMF.Functions.ExpressionFunction">
            <summary>
            Evaluate a mathematical expression using the EvaluateExpression dll. Obs: Expression can contain variable names from Plant2"
            </summary>
        </member>
        <member name="F:Models.PMF.Functions.ExpressionFunction.Expression">
            <summary>The expression</summary>
        </member>
        <member name="F:Models.PMF.Functions.ExpressionFunction.fn">
            <summary>The function</summary>
        </member>
        <member name="F:Models.PMF.Functions.ExpressionFunction.parsed">
            <summary>The parsed</summary>
        </member>
        <member name="M:Models.PMF.Functions.ExpressionFunction.Parse(APSIM.Shared.Utilities.ExpressionEvaluator,System.String)">
            <summary>Parses the specified function.</summary>
            <param name="fn">The function.</param>
            <param name="ExpressionProperty">The expression property.</param>
        </member>
        <member name="M:Models.PMF.Functions.ExpressionFunction.FillVariableNames(APSIM.Shared.Utilities.ExpressionEvaluator,Models.Core.Model)">
            <summary>Fills the variable names.</summary>
            <param name="fn">The function.</param>
            <param name="RelativeTo">The relative to.</param>
            <exception cref="T:System.Exception">Cannot find variable:  + sym.m_name +  in function:  + RelativeTo.Name</exception>
        </member>
        <member name="M:Models.PMF.Functions.ExpressionFunction.Evaluate(APSIM.Shared.Utilities.ExpressionEvaluator)">
            <summary>Evaluates the specified function.</summary>
            <param name="fn">The function.</param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Models.PMF.Functions.ExpressionFunction.Evaluate(System.String,Models.Core.Model)">
            <summary>
            Return the value of the specified property as an object. The PropertyName
            is relative to the RelativeTo argument (usually Plant).
            Format:
            [function(]VariableName[)]
            Where:
            function is optional and can be one of Sum, subtract, multiply, divide, max, min
            VariableName is the name of a Plant variable. It can also include an array. Array can
            have a filter inside of square brackets. Filter can be an array index (0 based)
            or be the name of a class or base class.
            e.g. Leaf.MinT
            sum(Leaf.Leaves[].Live.Wt)              - sums all live weights of all objects in leaves array.
            subtract(Leaf.Leaves[].Live.Wt)         - subtracts all live weights of all objects in leaves array.
            Leaf.Leaves[1].Live.Wt                  - returns the live weight of the 2nd element of the leaves array.
            sum(Leaf.Leaves[AboveGround].Live.Wt)   - returns the live weight of the 2nd element of the leaves array.
            </summary>
            <param name="Expression">The expression.</param>
            <param name="RelativeTo">The relative to.</param>
            <returns></returns>
        </member>
        <member name="P:Models.PMF.Functions.ExpressionFunction.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
        </member>
        <member name="T:Models.PMF.Functions.DemandFunctions.PartitionFractionDemandFunction">
            <summary>
            Partition fraction demand function
            </summary>
        </member>
        <member name="F:Models.PMF.Functions.DemandFunctions.PartitionFractionDemandFunction.PartitionFraction">
            <summary>The partition fraction</summary>
        </member>
        <member name="F:Models.PMF.Functions.DemandFunctions.PartitionFractionDemandFunction.Arbitrator">
            <summary>The arbitrator</summary>
        </member>
        <member name="P:Models.PMF.Functions.DemandFunctions.PartitionFractionDemandFunction.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
        </member>
        <member name="T:Models.PMF.Functions.BellCurveFunction">
            <summary>
            Calculates the maximum leaf size (mm2/leaf) given its node position (Elings, 2000 - Agronomy Journal 92, 436-444)
            </summary>
        </member>
        <member name="F:Models.PMF.Functions.BellCurveFunction.LargestLeafPosition">
            <summary>The largest leaf position</summary>
        </member>
        <member name="F:Models.PMF.Functions.BellCurveFunction.AreaMax">
            <summary>The area maximum</summary>
        </member>
        <member name="F:Models.PMF.Functions.BellCurveFunction.Breadth">
            <summary>The breadth</summary>
        </member>
        <member name="F:Models.PMF.Functions.BellCurveFunction.Skewness">
            <summary>The skewness</summary>
        </member>
        <member name="F:Models.PMF.Functions.BellCurveFunction.Structure">
            <summary>The structure</summary>
        </member>
        <member name="P:Models.PMF.Functions.BellCurveFunction.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
        </member>
        <member name="T:Models.PMF.Functions.AgeCalculatorFunction">
            <summary>
            An age calculator function
            </summary>
        </member>
        <member name="F:Models.PMF.Functions.AgeCalculatorFunction._Age">
            <summary>The _ age</summary>
        </member>
        <member name="M:Models.PMF.Functions.AgeCalculatorFunction.OnDoDailyInitialisation(System.Object,System.EventArgs)">
            <summary>Called when [do daily initialisation].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Models.PMF.Functions.AgeCalculatorFunction.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
        </member>
        <member name="P:Models.PMF.Functions.AgeCalculatorFunction.Age">
            <summary>Gets the age.</summary>
            <value>The age.</value>
        </member>
        <member name="T:Models.PMF.Functions.AddFunction">
            <summary>
            A function that adds values from child functions
            </summary>
        </member>
        <member name="F:Models.PMF.Functions.AddFunction.ChildFunctions">
            <summary>The child functions</summary>
        </member>
        <member name="M:Models.PMF.Functions.AddFunction.Document(System.Collections.Generic.List{Models.Core.AutoDocumentation.ITag},System.Int32,System.Int32)">
            <summary>Writes documentation for this function by adding to the list of documentation tags.</summary>
            <param name="tags">The list of tags to add to.</param>
            <param name="headingLevel">The level (e.g. H2) of the headings.</param>
            <param name="indent">The level of indentation 1, 2, 3 etc.</param>
        </member>
        <member name="P:Models.PMF.Functions.AddFunction.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
        </member>
        <member name="T:Models.Soils.SoilWaterBackend.SoluteInLayer">
            <summary>
            This is an individual solute in an individual layer of the Soil
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.SoluteInLayer.name">
            <summary>
            The name
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.SoluteInLayer.ownerName">
            <summary>
            The owner name
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.SoluteInLayer.mobility">
            <summary>
            The mobility
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.SoluteInLayer.amount">
            <summary>
            The amount
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.SoluteInLayer.delta">
            <summary>
            The delta
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.SoluteInLayer.up">
            <summary>
            Up
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.SoluteInLayer.leach">
            <summary>
            The leach
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoluteInLayer.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Models.Soils.SoilWaterBackend.SoluteInLayer"/> class.
            </summary>
            <param name="Name">The name.</param>
            <param name="OwnerName">Name of the owner.</param>
            <param name="Mobility">if set to <c>true</c> [mobility].</param>
        </member>
        <member name="T:Models.Soils.SoilWaterBackend.Layer">
            <summary>
            This is an individual Layer of the Soil
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.Layer.CompareTo(System.Object)">
            <summary>
            Compares to.
            </summary>
            <param name="ObjectToCompareThisTo">The object to compare this to.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.Layer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Models.Soils.SoilWaterBackend.Layer"/> class.
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Layer.number">
            <summary>
            The number
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Layer.dlayer">
            <summary>
            The dlayer
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Layer.bd">
            <summary>
            The bd
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.Layer.Frac2MM(System.Double)">
            <summary>
            Frac2s the mm.
            </summary>
            <param name="Fraction">The fraction.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.Layer.MM2Frac(System.Double)">
            <summary>
            ms the m2 frac.
            </summary>
            <param name="MM">The mm.</param>
            <returns></returns>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Layer.sat_dep">
            <summary>
            The sat_dep
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Layer.dul_dep">
            <summary>
            The dul_dep
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Layer.ll15_dep">
            <summary>
            The ll15_dep
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Layer.air_dry_dep">
            <summary>
            The air_dry_dep
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Layer.sw_dep">
            <summary>
            The sw_dep
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Layer.ks">
            <summary>
            The ks
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Layer.SWCON">
            <summary>
            The swcon
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Layer.KLAT">
            <summary>
            The klat
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Layer.flow">
            <summary>
            The flow
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Layer.flux">
            <summary>
            The flux
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Layer.outflow_lat">
            <summary>
            The outflow_lat
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Layer.new_sw_dep">
            <summary>
            The new_sw_dep
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Layer.solutes">
            <summary>
            The solutes
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.Layer.AddSolute(Models.Soils.SoilWaterBackend.SoluteInLayer)">
            <summary>
            Adds the solute.
            </summary>
            <param name="NewSolute">The new solute.</param>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.Layer.RemoveSolute(System.String)">
            <summary>
            Removes the solute.
            </summary>
            <param name="SoluteName">Name of the solute.</param>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.Layer.GetASolute(System.String)">
            <summary>
            Gets a solute.
            </summary>
            <param name="SoluteName">Name of the solute.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.Layer.GetAllSolutes">
            <summary>
            Gets all solutes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.Layer.GetAllMobileSolutes">
            <summary>
            Gets all mobile solutes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.Layer.GetMobileSoluteNames">
            <summary>
            Gets the mobile solute names.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.Layer.ZeroMobileSolutesDeltas">
            <summary>
            Zeroes the mobile solutes deltas.
            </summary>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.Layer.sat">
            <summary>
            Gets or sets the sat.
            </summary>
            <value>
            The sat.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.Layer.dul">
            <summary>
            Gets or sets the dul.
            </summary>
            <value>
            The dul.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.Layer.ll15">
            <summary>
            Gets or sets the LL15.
            </summary>
            <value>
            The LL15.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.Layer.air_dry">
            <summary>
            Gets or sets the air_dry.
            </summary>
            <value>
            The air_dry.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.Layer.sw">
            <summary>
            Gets or sets the sw.
            </summary>
            <value>
            The sw.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.Layer.esw">
            <summary>
            Gets the esw.
            </summary>
            <value>
            The esw.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.Layer.amnt_to_sat">
            <summary>
            Gets the amnt_to_sat.
            </summary>
            <value>
            The amnt_to_sat.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.Layer.amnt_to_dul">
            <summary>
            Gets the amnt_to_dul.
            </summary>
            <value>
            The amnt_to_dul.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.Layer.isDrainable">
            <summary>
            Gets a value indicating whether this instance is drainable.
            </summary>
            <value>
            <c>true</c> if this instance is drainable; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.Layer.drainable_capacity">
            <summary>
            Gets the drainable_capacity.
            </summary>
            <value>
            The drainable_capacity.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.Layer.drainable">
            <summary>
            Gets the drainable.
            </summary>
            <value>
            The drainable.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.Layer.saturated_fraction">
            <summary>
            Gets the saturated_fraction.
            </summary>
            <value>
            The saturated_fraction.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.Layer.layer_is_fully_saturated">
            <summary>
            Gets a value indicating whether this <see cref="T:Models.Soils.SoilWaterBackend.Layer"/> is layer_is_fully_saturated.
            </summary>
            <value>
            <c>true</c> if layer_is_fully_saturated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.Layer.layer_is_saturated">
            <summary>
            Gets a value indicating whether this <see cref="T:Models.Soils.SoilWaterBackend.Layer"/> is layer_is_saturated.
            </summary>
            <value>
              <c>true</c> if layer_is_saturated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.Layer.flow_water">
            <summary>
            Gets the flow_water.
            </summary>
            <value>
            The flow_water.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.Layer.num_solutes">
            <summary>
            Gets the num_solutes.
            </summary>
            <value>
            The num_solutes.
            </value>
        </member>
        <member name="T:Models.Soils.SoilWaterBackend.SoilWaterSoil">
            <summary>
            The Soil.
            (Also contains methods for modifying the soil
            as well as the natural movement of water/solutes within the soil)
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.SoilWaterSoil.Constants">
            <summary>
            The constants
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.SoilWaterSoil.using_ks">
            <summary>
            The using_ks
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.SoilWaterSoil.SummerDate">
            <summary>
            The summer date
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.SoilWaterSoil.SummerU">
            <summary>
            The summer u
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.SoilWaterSoil.SummerCona">
            <summary>
            The summer cona
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.SoilWaterSoil.WinterDate">
            <summary>
            The winter date
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.SoilWaterSoil.WinterU">
            <summary>
            The winter u
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.SoilWaterSoil.WinterCona">
            <summary>
            The winter cona
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.SoilWaterSoil.DiffusConst">
            <summary>
            The diffus constant
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.SoilWaterSoil.DiffusSlope">
            <summary>
            The diffus slope
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.SoilWaterSoil.Salb">
            <summary>
            The salb
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.SoilWaterSoil.cn2_bare">
            <summary>
            The cn2_bare
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.SoilWaterSoil.cn_red">
            <summary>
            The cn_red
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.SoilWaterSoil.cn_cov">
            <summary>
            The cn_cov
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.SoilWaterSoil.slope">
            <summary>
            The slope
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.SoilWaterSoil.discharge_width">
            <summary>
            The discharge_width
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.SoilWaterSoil.catchment_area">
            <summary>
            The catchment_area
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.SoilWaterSoil.max_pond">
            <summary>
            The max_pond
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.SoilWaterSoil.DepthToWaterTable">
            <summary>
            The depth to water table
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.SoilWaterSoil.Drainage">
            <summary>
            The drainage
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.GetFlowArrayForASolute(System.String)">
            <summary>
            Gets the flow array for a solute.
            </summary>
            <param name="SoluteName">Name of the solute.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.GetDeltaArrayForASolute(System.String)">
            <summary>
            Gets the delta array for a solute.
            </summary>
            <param name="SoluteName">Name of the solute.</param>
            <returns></returns>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.SoilWaterSoil.layers">
            <summary>
            The layers
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.GetEnumerator">
            <summary>
            Default Iterator from top layer to bottom layer.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.BottomToTop">
            <summary>
            Iterator from bottom layer to top layer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.TopToX(System.Int32)">
            <summary>
            Iterator from top layer to X layer.
            Including layer X.
            </summary>
            <param name="X">X is 1 based</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.XToTop(System.Int32)">
            <summary>
            Iterator from X layer to top layer.
            Including layer X.
            </summary>
            <param name="X">X is 1 based</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.XToBottom(System.Int32)">
            <summary>
            Iterator from X layer to bottom layer.
            Including layer X.
            </summary>
            <param name="X">X is 1 based</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.BottomToX(System.Int32)">
            <summary>
            Iterator from bottom layer to layer X.
            Including layer X.
            </summary>
            <param name="X">X is 1 based</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.GetTopLayer">
            <summary>
            Gets the top layer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.GetLayer(System.Int32)">
            <summary>
            Returns the specified layer
            </summary>
            <param name="LayerNumber">LayerNumber is 1 based</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.GetBottomLayer">
            <summary>
            Gets the bottom layer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.DepthDownToBottomOfLayer(System.Int32)">
            <summary>
            Depthes down to bottom of layer.
            </summary>
            <param name="LayerNumber">The layer number.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.FindLayerNo(System.Double)">
            <summary>
            Find the layer number of the specified depth.
            </summary>
            <param name="Depth">The depth.</param>
            <returns>
            1 based Layer Number
            </returns>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.GetMobileSoluteNames">
            <summary>
            Gets the mobile solute names.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.GetAllSolutesInALayer">
            <summary>
            Gets all solutes in a layer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.UpdateSoluteAmounts(System.String,System.Double[])">
            <summary>
            Updates the solute amounts.
            </summary>
            <param name="SoluteName">Name of the solute.</param>
            <param name="Amounts">The amounts.</param>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.AddSubSurfaceIrrigToSoil(Models.Soils.SoilWaterBackend.IrrigData)">
            <summary>
            Adds the sub surface irrig to soil.
            </summary>
            <param name="Irrig">The irrig.</param>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.SetWater_mm(System.Double[])">
            <summary>
            Sets the water_mm.
            </summary>
            <param name="New_SW_dep">The new_ s w_dep.</param>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.SetWater_mm(System.Int32,System.Double)">
            <summary>
            Sets the water_mm.
            </summary>
            <param name="Layer">Zero Based Layer Number</param>
            <param name="SW_dep">New Value</param>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.SetWater_frac(System.Double[])">
            <summary>
            Sets the water_frac.
            </summary>
            <param name="New_SW">The new_ sw.</param>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.DeltaWater_mm(System.Double[])">
            <summary>
            Deltas the water_mm.
            </summary>
            <param name="Delta_mm">The delta_mm.</param>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.DeltaWater_frac(System.Double[])">
            <summary>
            Deltas the water_frac.
            </summary>
            <param name="Delta_frac">The delta_frac.</param>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.CheckSoilForErrors">
            <summary>
            Checks the soil for errors.
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.CheckLayerForErrors(System.Int32)">
            <summary>
            Checks the specified layer for any Errors
            </summary>
            <param name="LayerNumber">LayerNumber is One Based</param>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.#ctor(Models.Soils.SoilWaterBackend.Constants,Models.Soils.Soil)">
            <summary>
            Initializes a new instance of the <see cref="T:Models.Soils.SoilWaterBackend.SoilWaterSoil"/> class.
            </summary>
            <param name="Consts">The consts.</param>
            <param name="Soil">The soil.</param>
            <exception cref="T:System.Exception">Constructor for SoilWaterSoil failed because there are no layers</exception>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.ResetSoil(Models.Soils.SoilWaterBackend.Constants,Models.Soils.Soil)">
            <summary>
            Resets the soil.
            </summary>
            <param name="Consts">The consts.</param>
            <param name="Soil">The soil.</param>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.UseStartingValuesToInitialise(Models.Soils.Soil)">
            <summary>
            Uses the starting values to initialise.
            </summary>
            <param name="Soil">The soil.</param>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.ZeroOutputs">
            <summary>
            Zeroes the outputs.
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.ZeroSoilOutputs">
            <summary>
            Zeroes the soil outputs.
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.ZeroLayerDeltas">
            <summary>
            Zeroes the layer deltas.
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.ZeroLayerTemporaryVars">
            <summary>
            Zeroes the layer temporary vars.
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.Calc_Saturated_Flow">
            <summary>
            Calc_s the saturated_ flow.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.Do_Saturated_Flow">
            <summary>
            Do_s the saturated_ flow.
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.Calc_Unsaturated_Flow">
            <summary>
            Calc_s the unsaturated_ flow.
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.Do_Unsaturated_Flow">
            <summary>
            Do_s the unsaturated_ flow.
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.AddSolutesDueToIrrigation(Models.Soils.SoilWaterBackend.IrrigData)">
            <summary>
            Adds the solutes due to irrigation.
            </summary>
            <param name="Irrig">The irrig.</param>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.Calc_Solute_Leach_SatFlow(System.String)">
            <summary>
            Calc_s the solute_ leach_ sat flow.
            </summary>
            <param name="SoluteName">Name of the solute.</param>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.Calc_Solute_Up_UnsatFlow(System.String)">
            <summary>
            Calc_s the solute_ up_ unsat flow.
            </summary>
            <param name="SoluteName">Name of the solute.</param>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.MoveDownSolute(System.String)">
            <summary>
            Moves down solute.
            </summary>
            <param name="SoluteName">Name of the solute.</param>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.MoveUpSolute(System.String)">
            <summary>
            Moves up solute.
            </summary>
            <param name="SoluteName">Name of the solute.</param>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.Do_Solutes_SatFlow">
            <summary>
            Do_s the solutes_ sat flow.
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.Do_Solutes_UnsatFlow">
            <summary>
            Do_s the solutes_ unsat flow.
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.Calc_DepthToWaterTable">
            <summary>
            Calc_s the depth to water table.
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.SetWaterTable(System.Double)">
            <summary>
            Sets the water table.
            </summary>
            <param name="InitialDepth">The initial depth.</param>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SoilWaterSoil.Do_Lateral_Flow(System.Double[])">
            <summary>
            Do_s the lateral_ flow.
            </summary>
            <param name="Inflow_lat">The inflow_lat.</param>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.SoilWaterSoil.LeachNO3">
            <summary>
            Leaching from bottom layer (kg/ha)
            </summary>
            <value>
            The leach n o3.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.SoilWaterSoil.LeachNH4">
            <summary>
            Leaching from bottom layer (kg/ha)
            </summary>
            <value>
            The leach n h4.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.SoilWaterSoil.LeachUrea">
            <summary>
            Leaching from bottom layer (kg/ha)
            </summary>
            <value>
            The leach urea.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.SoilWaterSoil.esw">
            <summary>
            Gets the esw.
            </summary>
            <value>
            The esw.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.SoilWaterSoil.dlayer">
            <summary>
            Gets the dlayer.
            </summary>
            <value>
            The dlayer.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.SoilWaterSoil.sat_dep">
            <summary>
            Gets the sat_dep.
            </summary>
            <value>
            The sat_dep.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.SoilWaterSoil.dul_dep">
            <summary>
            Gets the dul_dep.
            </summary>
            <value>
            The dul_dep.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.SoilWaterSoil.sw_dep">
            <summary>
            Gets the sw_dep.
            </summary>
            <value>
            The sw_dep.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.SoilWaterSoil.ll15_dep">
            <summary>
            Gets the ll15_dep.
            </summary>
            <value>
            The ll15_dep.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.SoilWaterSoil.air_dry_dep">
            <summary>
            Gets the air_dry_dep.
            </summary>
            <value>
            The air_dry_dep.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.SoilWaterSoil.sat">
            <summary>
            Gets the sat.
            </summary>
            <value>
            The sat.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.SoilWaterSoil.dul">
            <summary>
            Gets the dul.
            </summary>
            <value>
            The dul.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.SoilWaterSoil.sw">
            <summary>
            Gets the sw.
            </summary>
            <value>
            The sw.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.SoilWaterSoil.ll15">
            <summary>
            Gets the LL15.
            </summary>
            <value>
            The LL15.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.SoilWaterSoil.air_dry">
            <summary>
            Gets the air_dry.
            </summary>
            <value>
            The air_dry.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.SoilWaterSoil.flow">
            <summary>
            Gets the flow.
            </summary>
            <value>
            The flow.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.SoilWaterSoil.flux">
            <summary>
            Gets the flux.
            </summary>
            <value>
            The flux.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.SoilWaterSoil.outflow_lat">
            <summary>
            Gets the outflow_lat.
            </summary>
            <value>
            The outflow_lat.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.SoilWaterSoil.top">
            <summary>
            Gets the top.
            </summary>
            <value>
            The top.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.SoilWaterSoil.bottom">
            <summary>
            Gets the bottom.
            </summary>
            <value>
            The bottom.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.SoilWaterSoil.num_layers">
            <summary>
            Gets the num_layers.
            </summary>
            <value>
            The num_layers.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.SoilWaterSoil.DepthTotal">
            <summary>
            Gets the depth total.
            </summary>
            <value>
            The depth total.
            </value>
        </member>
        <member name="T:Models.Core.ApsimXException">
            <summary>
            Apsim's exception object
            </summary>
        </member>
        <member name="M:Models.Core.ApsimXException.#ctor(Models.Core.IModel,System.String)">
            <summary>Initializes a new instance of the <see cref="T:Models.Core.ApsimXException"/> class.</summary>
            <param name="model">The model.</param>
            <param name="message">The message.</param>
        </member>
        <member name="P:Models.Core.ApsimXException.model">
            <summary>Gets or sets the model.</summary>
            <value>The model.</value>
        </member>
        <member name="T:Models.PMF.Functions.Zadok">
            <summary>
            Zadok model
            </summary>
        </member>
        <member name="F:Models.PMF.Functions.Zadok.Phenology">
            <summary>The phenology</summary>
        </member>
        <member name="F:Models.PMF.Functions.Zadok.Leaf">
            <summary>The leaf</summary>
        </member>
        <member name="P:Models.PMF.Functions.Zadok.Stage">
            <summary>Gets the stage.</summary>
            <value>The stage.</value>
        </member>
        <member name="T:Models.PMF.Functions.WeightedTemperatureFunction">
            <summary>
            This Function calculates a mean daily temperature from Max and Min weighted toward Max according to the specified MaximumTemperatureWeighting factor.  This is then passed into the XY matrix as the x property and the function returns the y value
            </summary>
        </member>
        <member name="F:Models.PMF.Functions.WeightedTemperatureFunction.XYPairs">
            <summary>Gets the xy pairs.</summary>
            <value>The xy pairs.</value>
        </member>
        <member name="F:Models.PMF.Functions.WeightedTemperatureFunction.MetData">
            <summary>The met data</summary>
        </member>
        <member name="M:Models.PMF.Functions.WeightedTemperatureFunction.Document(System.Collections.Generic.List{Models.Core.AutoDocumentation.ITag},System.Int32,System.Int32)">
            <summary>Writes documentation for this function by adding to the list of documentation tags.</summary>
            <param name="tags">The list of tags to add to.</param>
            <param name="headingLevel">The level (e.g. H2) of the headings.</param>
            <param name="indent">The level of indentation 1, 2, 3 etc.</param>
        </member>
        <member name="P:Models.PMF.Functions.WeightedTemperatureFunction.MaximumTemperatureWeighting">
            <summary>The maximum temperature weighting</summary>
        </member>
        <member name="P:Models.PMF.Functions.WeightedTemperatureFunction.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
        </member>
        <member name="T:Models.PMF.Functions.StructureFunctions.MainStemFinalNodeNumberFunction">
            <summary>
            Main stem final node number function
            </summary>
        </member>
        <member name="F:Models.PMF.Functions.StructureFunctions.MainStemFinalNodeNumberFunction.Structure">
            <summary>The structure</summary>
        </member>
        <member name="F:Models.PMF.Functions.StructureFunctions.MainStemFinalNodeNumberFunction.FinalLeafNumber">
            <summary>The final leaf number</summary>
        </member>
        <member name="F:Models.PMF.Functions.StructureFunctions.MainStemFinalNodeNumberFunction.MaximumMainStemNodeNumber">
            <summary>The maximum main stem node number</summary>
        </member>
        <member name="P:Models.PMF.Functions.StructureFunctions.MainStemFinalNodeNumberFunction.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
        </member>
        <member name="T:Models.PMF.Functions.MultiplyFunction">
            <summary>Multiplies the values of the children of this node</summary>
            \pre All children have to contain a public function "Value"
            \retval Product of value of all children of this node. Return 1 if no child.
        </member>
        <member name="F:Models.PMF.Functions.MultiplyFunction.ChildFunctions">
            <summary>The child functions</summary>
        </member>
        <member name="M:Models.PMF.Functions.MultiplyFunction.Document(System.Collections.Generic.List{Models.Core.AutoDocumentation.ITag},System.Int32,System.Int32)">
            <summary>Writes documentation for this function by adding to the list of documentation tags.</summary>
            <param name="tags">The list of tags to add to.</param>
            <param name="headingLevel">The level (e.g. H2) of the headings.</param>
            <param name="indent">The level of indentation 1, 2, 3 etc.</param>
        </member>
        <member name="P:Models.PMF.Functions.MultiplyFunction.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
        </member>
        <member name="T:Models.PMF.Functions.ExternalVariable">
            <summary>
            Returns the value of a nominated external APSIM numerical variable.
            Note: This should be merged with the variable function when naming convention
            to refer to internal and external variable is standardized. FIXME
            </summary>
        </member>
        <member name="P:Models.PMF.Functions.ExternalVariable.VariableName">
            <summary>The variable name</summary>
        </member>
        <member name="P:Models.PMF.Functions.ExternalVariable.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="T:Models.PMF.Functions.DivideFunction">
            <summary>
            Starting with the first child function, recursively divide by the values of the subsequent child functions
            </summary>
            \pre All children have to contain a public function "Value"
            \retval Starting with the first child function, recursively divide by the values of the subsequent child functions. Return 0 if no child. The value of first child if only one child.
        </member>
        <member name="F:Models.PMF.Functions.DivideFunction.ChildFunctions">
            <summary>The child functions</summary>
        </member>
        <member name="M:Models.PMF.Functions.DivideFunction.Document(System.Collections.Generic.List{Models.Core.AutoDocumentation.ITag},System.Int32,System.Int32)">
            <summary>Writes documentation for this function by adding to the list of documentation tags.</summary>
            <param name="tags">The list of tags to add to.</param>
            <param name="headingLevel">The level (e.g. H2) of the headings.</param>
            <param name="indent">The level of indentation 1, 2, 3 etc.</param>
        </member>
        <member name="P:Models.PMF.Functions.DivideFunction.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
        </member>
        <member name="T:Models.PMF.Functions.DemandFunctions.PotentialSizeDemandFunction">
            <summary>
            Potential size demand function
            </summary>
        </member>
        <member name="F:Models.PMF.Functions.DemandFunctions.PotentialSizeDemandFunction.StartStageName">
            <summary>The start stage name</summary>
        </member>
        <member name="F:Models.PMF.Functions.DemandFunctions.PotentialSizeDemandFunction.EndStageName">
            <summary>The end stage name</summary>
        </member>
        <member name="F:Models.PMF.Functions.DemandFunctions.PotentialSizeDemandFunction.PotentialGrowthIncrement">
            <summary>The potential growth increment</summary>
        </member>
        <member name="F:Models.PMF.Functions.DemandFunctions.PotentialSizeDemandFunction.OrganNumber">
            <summary>The organ number</summary>
        </member>
        <member name="F:Models.PMF.Functions.DemandFunctions.PotentialSizeDemandFunction.Phenology">
            <summary>The phenology</summary>
        </member>
        <member name="F:Models.PMF.Functions.DemandFunctions.PotentialSizeDemandFunction.ThermalTime">
            <summary>The thermal time</summary>
        </member>
        <member name="F:Models.PMF.Functions.DemandFunctions.PotentialSizeDemandFunction.AccumThermalTime">
            <summary>The accum thermal time</summary>
        </member>
        <member name="P:Models.PMF.Functions.DemandFunctions.PotentialSizeDemandFunction.AccumulatedThermalTime">
            <summary>Gets the accumulated thermal time.</summary>
            <value>The accumulated thermal time.</value>
        </member>
        <member name="P:Models.PMF.Functions.DemandFunctions.PotentialSizeDemandFunction.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
        </member>
        <member name="T:Models.PMF.Functions.DemandFunctions.InternodeDemandFunction">
            <summary>
            Calculate internode demand
            </summary>
        </member>
        <member name="F:Models.PMF.Functions.DemandFunctions.InternodeDemandFunction.InterNodeWt">
            <summary>The inter node wt</summary>
        </member>
        <member name="F:Models.PMF.Functions.DemandFunctions.InternodeDemandFunction.Structure">
            <summary>The structure</summary>
        </member>
        <member name="P:Models.PMF.Functions.DemandFunctions.InternodeDemandFunction.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
        </member>
        <member name="T:Models.Operation">
            <summary>
            Operations model
            </summary>
        </member>
        <member name="M:Models.Operation.GetActionModel">
            <summary>Gets the action model.</summary>
            <returns></returns>
        </member>
        <member name="P:Models.Operation.Date">
            <summary>Gets or sets the date.</summary>
            <value>The date.</value>
        </member>
        <member name="P:Models.Operation.Action">
            <summary>Gets or sets the action.</summary>
            <value>The action.</value>
        </member>
        <member name="T:Models.Operations">
            <summary>This class encapsulates an operations schedule.</summary>
        </member>
        <member name="F:Models.Operations.Clock">
            <summary>The clock</summary>
        </member>
        <member name="M:Models.Operations.OnDoManagement(System.Object,System.EventArgs)">
            <summary>Simulation is commencing.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
            <exception cref="T:Models.Core.ApsimXException">
            Bad operations action found:  + operation.Action
            or
            Cannot find model:  + modelName
            or
            Cannot find method:  + methodName +  in model:  + modelName
            or
            Cannot find argument:  + argumentName +  in operation call:  + operation.Action
            </exception>
        </member>
        <member name="P:Models.Operations.Schedule">
            <summary>Gets or sets the schedule.</summary>
            <value>The schedule.</value>
        </member>
        <member name="T:Models.Soils.SoilWaterBackend.Constants">
            <summary>
            Soil water constants
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Constants.precision_sw_dep">
            <summary>
            The precision_sw_dep
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Constants.ritchie_method">
            <summary>
            The ritchie_method
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Constants.mm2m">
            <summary>
            The MM2M
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Constants.sm2smm">
            <summary>
            The SM2SMM
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Constants.error_margin">
            <summary>
            The error_margin
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Constants.Summary">
            <summary>
            The summary
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Constants.thismodel">
            <summary>
            The thismodel
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.Constants.IssueWarning(System.String)">
            <summary>
            Issues the warning.
            </summary>
            <param name="warningText">The warning text.</param>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.Constants.bound(System.Double,System.Double,System.Double)">
            <summary>
            Bounds the specified a.
            </summary>
            <param name="A">a.</param>
            <param name="Lower">The lower.</param>
            <param name="Upper">The upper.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.Constants.bound_check_real_var(System.Double,System.Double,System.Double,System.String)">
            <summary>
            Bound_check_real_vars the specified variable.
            </summary>
            <param name="Variable">The variable.</param>
            <param name="LowerBound">The lower bound.</param>
            <param name="UpperBound">The upper bound.</param>
            <param name="VariableName">Name of the variable.</param>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.Constants.bound_check_real_array(System.Double[],System.Double,System.Double,System.String,System.Int32)">
            <summary>
            Bound_check_real_arrays the specified a.
            </summary>
            <param name="A">a.</param>
            <param name="LowerBound">The lower bound.</param>
            <param name="UpperBound">The upper bound.</param>
            <param name="ArrayName">Name of the array.</param>
            <param name="ElementToStopChecking">The element to stop checking.</param>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Constants.min_crit_temp">
            <summary>
            The min_crit_temp
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Constants.max_crit_temp">
            <summary>
            The max_crit_temp
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Constants.max_albedo">
            <summary>
            The max_albedo
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Constants.A_to_evap_fact">
            <summary>
            The a_to_evap_fact
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Constants.canopy_eos_coef">
            <summary>
            The canopy_eos_coef
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Constants.sw_top_crit">
            <summary>
            The sw_top_crit
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Constants.sumes1_max">
            <summary>
            The sumes1_max
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Constants.sumes2_max">
            <summary>
            The sumes2_max
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Constants.solute_flow_eff">
            <summary>
            The solute_flow_eff
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Constants.solute_flux_eff">
            <summary>
            The solute_flux_eff
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Constants.gravity_gradient">
            <summary>
            The gravity_gradient
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Constants.specific_bd">
            <summary>
            The specific_bd
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Constants.hydrol_effective_depth">
            <summary>
            The hydrol_effective_depth
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Constants.mobile_solutes">
            <summary>
            The mobile_solutes
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Constants.immobile_solutes">
            <summary>
            The immobile_solutes
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Constants.canopy_fact">
            <summary>
            The canopy_fact
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Constants.canopy_fact_height">
            <summary>
            The canopy_fact_height
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Constants.canopy_fact_default">
            <summary>
            The canopy_fact_default
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.Constants.act_evap_method">
            <summary>
            The act_evap_method
            </summary>
        </member>
        <member name="T:Models.Soils.SoilWaterBackend.CanopyData">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.CanopyData.cover_tot">
            <summary>
            The cover_tot
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.CanopyData.cover_green">
            <summary>
            The cover_green
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.CanopyData.canopy_height">
            <summary>
            The canopy_height
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.CanopyData.NumberOfCrops">
            <summary>
            The number of crops
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.CanopyData.interception">
            <summary>
            The interception
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.CanopyData.ZeroCanopyData">
            <summary>
            Zeroes the canopy data.
            </summary>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.CanopyData.cover_green_sum">
            <summary>
            Gets or sets the cover_green_sum.
            </summary>
            <value>
            The cover_green_sum.
            </value>
        </member>
        <member name="P:Models.Soils.SoilWaterBackend.CanopyData.cover_tot_sum">
            <summary>
            Gets or sets the cover_tot_sum.
            </summary>
            <value>
            The cover_tot_sum.
            </value>
        </member>
        <member name="T:Models.Soils.SoilWaterBackend.SurfaceCoverData">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.SurfaceCoverData.surfaceom_cover">
            <summary>
            The surfaceom_cover
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.SurfaceCoverData.residueinterception">
            <summary>
            The residueinterception
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.SurfaceCoverData.ZeroSurfaceCover">
            <summary>
            Zeroes the surface cover.
            </summary>
        </member>
        <member name="T:Models.Soils.SoilWaterBackend.IrrigData">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.IrrigData.amount">
            <summary>
            The amount
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.IrrigData.isSubSurface">
            <summary>
            The is sub surface
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.IrrigData.layer">
            <summary>
            The layer
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.IrrigData.willRunoff">
            <summary>
            The will runoff
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.IrrigData.NO3">
            <summary>
            The n o3
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.IrrigData.NH4">
            <summary>
            The n h4
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.IrrigData.CL">
            <summary>
            The cl
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.IrrigData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Models.Soils.SoilWaterBackend.IrrigData"/> class.
            </summary>
        </member>
        <member name="M:Models.Soils.SoilWaterBackend.IrrigData.ZeroIrrigation">
            <summary>
            Zeroes the irrigation.
            </summary>
        </member>
        <member name="T:Models.Soils.SoilWaterBackend.MetData">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.MetData.rain">
            <summary>
            The rain
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.MetData.radn">
            <summary>
            The radn
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.MetData.mint">
            <summary>
            The mint
            </summary>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.MetData.maxt">
            <summary>
            The maxt
            </summary>
        </member>
        <member name="T:Models.Soils.SoilCropOilPalm">
            <summary>
            A soil crop interface
            </summary>
        </member>
        <member name="P:Models.Soils.SoilCropOilPalm.Soil">
            <summary>
            Gets the parent soil
            </summary>
        </member>
        <member name="P:Models.Soils.SoilCropOilPalm.Depth">
            <summary>
            Gets the associated depths
            </summary>
        </member>
        <member name="P:Models.Soils.SoilCropOilPalm.KL">
            <summary>
            Gets or sets the KL value.
            </summary>
        </member>
        <member name="P:Models.Soils.SoilCropOilPalm.XF">
            <summary>
            Gets or sets the exploration factor
            </summary>
        </member>
        <member name="P:Models.Soils.SoilCropOilPalm.KLMetadata">
            <summary>
            Gets or sets the metadata for KL
            </summary>
        </member>
        <member name="P:Models.Soils.SoilCropOilPalm.XFMetadata">
            <summary>
            Gets or sets the meta data for the exploration factor
            </summary>
        </member>
        <member name="T:Models.PMF.RootProperties">
            <summary>
            Holds the collection of root properties that each crop must supply to the rest of the world
            </summary>
        </member>
        <member name="P:Models.PMF.RootProperties.RootDepth">
            <summary>
            Rooting depth (mm) - used in the aribtration of water and nutrient uptake.
            </summary>
        </member>
        <member name="P:Models.PMF.RootProperties.KL">
            <summary>
            The bastardised Passioura/Monteith K*L (/day)
            At some point this will be replaced by one soil property and the root length density.
            </summary>
        </member>
        <member name="P:Models.PMF.RootProperties.LowerLimitDep">
            <summary>
            The lower limit of water storage that the crops can extract water to from the soil if the soil is fully ramified by roots (mm).
            At some point in the future this will be replaced by the minimum leaf water potential.
            </summary>
        </member>
        <member name="P:Models.PMF.RootProperties.RootLengthDensityByVolume">
            <summary>
            The length of root contained within a unit volume of soil (mm/mm3).  Note that 1 cm/cm3 = 0.01 mm/mm3.  
            Crops need to calculate this from their root mass.  A typical specific root length for wheat is 105000 mm/g.
            If only relative root distribution is known then assume 0.05 mm/mm3 as a fully ramified root lenght desnity for the surface soil 
            and then calculate the density for the lower soil layers according to best judement.  This is the responsibility of the crop model.
            </summary>
        </member>
        <member name="P:Models.PMF.RootProperties.RootExplorationByLayer">
            <summary>
            Indicates if the roots have fully explored the soil layer.  Has value of 1.0 if the roots are fully through
            the layer, 0.0 if not yet reached the layer, or the fractional depth of exploration.
            </summary>
        </member>
        <member name="P:Models.PMF.RootProperties.UptakePreferenceByLayer">
            <summary>
            Relative uptake preference (0-1) as additional mulitplicative factor that can be used to account for longitudinal root resistances or 
            for uptake from zones distance from the main stem.  If not needed then set equal to 1.0
            </summary>
        </member>
        <member name="P:Models.PMF.RootProperties.KNO3">
            <summary>
            Nitrate uptake coefficient - mysterious units
            </summary>
        </member>
        <member name="P:Models.PMF.RootProperties.KNH4">
            <summary>
            Nitrate uptake coefficient - mysterious units
            </summary>
        </member>
        <member name="P:Models.PMF.RootProperties.MinNO3ConcForUptake">
            <summary>
            Nitrate-N concentration in the soil (ug N/g soil) below which uptake cannot occurr
            </summary>
        </member>
        <member name="P:Models.PMF.RootProperties.MinNH4ConcForUptake">
            <summary>
            Ammonium-N concentration in the soil (ug N/g soil) below which uptake cannot occurr
            </summary>
        </member>
        <member name="P:Models.PMF.RootProperties.MaximumDailyNUptake">
            <summary>
            Hamish's additional coefficient for N uptake
            </summary>
        </member>
        <member name="T:Models.Core.DescriptionAttribute">
            <summary>
            Specifies that the related class should use the user interface view
            that has the specified name.
            </summary>
        </member>
        <member name="F:Models.Core.DescriptionAttribute.description">
            <summary>
            The name of the view class
            </summary>
        </member>
        <member name="M:Models.Core.DescriptionAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Models.Core.DescriptionAttribute"/> class.
            </summary>
            <param name="description">Description text</param>
        </member>
        <member name="M:Models.Core.DescriptionAttribute.ToString">
            <summary>
            Gets the description
            </summary>
            <returns>The description</returns>
        </member>
        <member name="T:Models.Core.Apsim">
            <summary>
            The API for models to discover other models, get and set variables in
            other models and send events and subscribe to events in other models.
            </summary>
        </member>
        <member name="M:Models.Core.Apsim.Get(Models.Core.IModel,System.String,System.Boolean)">
            <summary>
            Gets the value of a variable or model.
            </summary>
            <param name="model">The reference model</param>
            <param name="namePath">The name of the object to return</param>
            <param name="ignoreCase">If true, ignore case when searching for the object or property</param>
            <returns>The found object or null if not found</returns>
        </member>
        <member name="M:Models.Core.Apsim.GetVariableObject(Models.Core.IModel,System.String)">
            <summary>
            Get the underlying variable object for the given path.
            </summary>
            <param name="model">The reference model</param>
            <param name="namePath">The name of the variable to return</param>
            <returns>The found object or null if not found</returns>
        </member>
        <member name="M:Models.Core.Apsim.Set(Models.Core.IModel,System.String,System.Object)">
            <summary>
            Sets the value of a variable. Will throw if variable doesn't exist.
            </summary>
            <param name="model">The reference model</param>
            <param name="namePath">The name of the object to set</param>
            <param name="value">The value to set the property to</param>
        </member>
        <member name="M:Models.Core.Apsim.FullPath(Models.Core.IModel)">
            <summary>
            Returns the full path of the specified model.
            </summary>
            <param name="model">The model to return the full path for</param>
            <returns>The path</returns>
        </member>
        <member name="M:Models.Core.Apsim.Parent(Models.Core.IModel,System.Type)">
            <summary>
            Return a parent node of the specified type 'typeFilter'. Will throw if not found.
            </summary>
            <param name="model">The model to get the parent for</param>
            <param name="typeFilter">The name of the parent model to return</param>
            <returns>The parent of the specified type.</returns>
        </member>
        <member name="M:Models.Core.Apsim.Find(Models.Core.IModel,System.String)">
            <summary>
            Locates and returns a model with the specified name that is in scope.
            </summary>
            <param name="model">The reference model</param>
            <param name="namePath">The name of the model to return</param>
            <returns>The found model or null if not found</returns>
        </member>
        <member name="M:Models.Core.Apsim.Find(Models.Core.IModel,System.Type)">
            <summary>
            Locates and returns a model with the specified type that is in scope.
            </summary>
            <param name="model">The reference model</param>
            <param name="type">The type of the model to return</param>
            <returns>The found model or null if not found</returns>
        </member>
        <member name="M:Models.Core.Apsim.FindAll(Models.Core.IModel)">
            <summary>
            Locates and returns all models in scope.
            </summary>
            <param name="model">The reference model</param>
            <returns>The found models or an empty array if not found.</returns>
        </member>
        <member name="M:Models.Core.Apsim.FindAll(Models.Core.IModel,System.Type)">
            <summary>
            Locates and returns all models in scope of the specified type.
            </summary>
            <param name="model">The reference model</param>
            <param name="typeFilter">The type of the models to return</param>
            <returns>The found models or an empty array if not found.</returns>
        </member>
        <member name="M:Models.Core.Apsim.Clone(Models.Core.IModel)">
            <summary>
            Perform a deep Copy of the this model.
            </summary>
            <param name="model">The model to clone</param>
            <returns>The clone of the model</returns>
        </member>
        <member name="M:Models.Core.Apsim.Add(Models.Core.IModel,System.Xml.XmlNode)">
            <summary>Adds a new model (as specified by the xml node) to the specified parent.</summary>
            <param name="parent">The parent to add the model to</param>
            <param name="node">The XML representing the new model</param>
            <returns>The newly created model.</returns>
        </member>
        <member name="M:Models.Core.Apsim.Delete(Models.Core.IModel)">
            <summary>Deletes the specified model.</summary>
            <param name="model">The model.</param>
        </member>
        <member name="M:Models.Core.Apsim.ClearCache(Models.Core.IModel)">
            <summary>Clears the cache</summary>
        </member>
        <member name="M:Models.Core.Apsim.Serialise(Models.Core.IModel)">
            <summary>
            Serialize the model to a string and return the string.
            </summary>
            <param name="model">The model to serialize</param>
            <returns>The string version of the model</returns>
        </member>
        <member name="M:Models.Core.Apsim.Child(Models.Core.IModel,System.Type)">
            <summary>
            Return a child model that matches the specified 'modelType'. Returns 
            an empty list if not found.
            </summary>
            <param name="model">The parent model</param>
            <param name="typeFilter">The type of children to return</param>
            <returns>A list of all children</returns>
        </member>
        <member name="M:Models.Core.Apsim.Child(Models.Core.IModel,System.String)">
            <summary>
            Return a child model that matches the specified 'name'. Returns 
            null if not found.
            </summary>
            <param name="model">The parent model</param>
            <param name="name">The name of the child to return</param>
            <returns>A list of all children</returns>
        </member>
        <member name="M:Models.Core.Apsim.Children(Models.Core.IModel,System.Type)">
            <summary>
            Return children that match the specified 'typeFilter'. Never returns 
            null. Can return empty List.
            </summary>
            <param name="model">The parent model</param>
            <param name="typeFilter">The type of children to return</param>
            <returns>A list of all children</returns>
        </member>
        <member name="M:Models.Core.Apsim.ChildrenRecursively(Models.Core.IModel)">
            <summary>
            Return a list of all child models recursively. Never returns
            null. Can return an empty list.
            </summary>
            <param name="model">The parent model</param>
            <returns>A list of all children</returns>
        </member>
        <member name="M:Models.Core.Apsim.ChildrenRecursively(Models.Core.IModel,System.Type)">
            <summary>
            Return a list of all child models recursively. Only models of 
            the specified 'typeFilter' will be returned. Never returns
            null. Can return an empty list.
            </summary>
            <param name="model">The parent model</param>
            <param name="typeFilter">The type of children to return</param>
            <returns>A list of all children</returns>
        </member>
        <member name="M:Models.Core.Apsim.ChildrenRecursivelyVisible(Models.Core.IModel)">
            <summary>
            Return a list of all child models recursively. Never returns
            null. Can return an empty list.
            </summary>
            <param name="model">The parent model</param>
            <returns>A list of all children</returns>
        </member>
        <member name="M:Models.Core.Apsim.EnsureNameIsUnique(Models.Core.IModel)">
            <summary>
            Give the specified model a unique name
            </summary>
            <param name="modelToCheck">The model to check the name of</param>
        </member>
        <member name="M:Models.Core.Apsim.Siblings(Models.Core.IModel)">
            <summary>
            Return all siblings of the specified model.
            </summary>
            <param name="model">The parent model</param>
            <returns>The found siblings or an empty array if not found.</returns>
        </member>
        <member name="M:Models.Core.Apsim.ParentAllChildren(Models.Core.IModel)">
            <summary>
            Parent all children of 'model'.
            </summary>
            <param name="model">The model to parent</param>
        </member>
        <member name="M:Models.Core.Apsim.ResolveLinks(Models.Core.IModel,System.Type)">
            <summary>
            Resolve all Link fields in the specified model.
            </summary>
            <param name="model">The model to look through for links</param>
            <param name="linkTypeToMatch">If specified, only look for these types of links</param>
        </member>
        <member name="M:Models.Core.Apsim.UnresolveLinks(Models.Core.IModel)">
            <summary>
            Set to null all link fields in the specified model.
            </summary>
            <param name="model">The model to look through for links</param>
        </member>
        <member name="M:Models.Core.Apsim.CallEventHandler(Models.Core.IModel,System.String,System.Object[])">
            <summary>
            Call the specified event on the specified model.
            </summary>
            <param name="model">The model to call the event on</param>
            <param name="eventName">The name of the event</param>
            <param name="args">The event arguments. Can be null</param>
        </member>
        <member name="M:Models.Core.Apsim.Subscribe(Models.Core.IModel,System.String,System.EventHandler)">
            <summary>
            Subscribe to an event. Will throw if namePath doesn't point to a event publisher.
            </summary>
            <param name="model">The model containing the handler</param>
            <param name="eventNameAndPath">The name of the event to subscribe to</param>
            <param name="handler">The event handler</param>
        </member>
        <member name="M:Models.Core.Apsim.Unsubscribe(Models.Core.IModel,System.String,System.EventHandler)">
            <summary>
            Unsubscribe an event. Throws if not found.
            </summary>
            <param name="model">The model containing the handler</param>
            <param name="eventNameAndPath">The name of the event to subscribe to</param>
            <param name="handler">The event handler</param>
        </member>
        <member name="M:Models.Core.Apsim.ConnectEvents(Models.Core.IModel)">
            <summary>
            Connect all events. Usually only called by the APSIMX infrastructure.
            </summary>
            <param name="model">The model to connect events in</param>
        </member>
        <member name="M:Models.Core.Apsim.DisconnectEvents(Models.Core.IModel)">
            <summary>
            Disconnect all events. Usually only called by the APSIMX infrastructure.
            </summary>
            <param name="model">The model to disconnect events in</param>
        </member>
        <member name="M:Models.Core.Apsim.FieldsAndProperties(System.Object,System.Reflection.BindingFlags)">
            <summary>
            Return a list of all parameters (that are not references to child models). Never returns null. Can
            return an empty array. A parameter is a class property that is public and read/write
            </summary>
            <param name="model">The model to search</param>
            <param name="flags">The reflection tags to use in the search</param>
            <returns>The array of variables.</returns>
        </member>
        <member name="M:Models.Core.Apsim.Locator(Models.Core.IModel)">
            <summary>
            Gets the locater model for the specified model.
            </summary>
            <param name="model">The model to find the locator for</param>
            <returns>The an instance of a locater class for the specified model. Never returns null.</returns>
        </member>
        <member name="M:Models.Core.Apsim.ConnectEventPublishers(Models.Core.IModel)">
            <summary>
            Connect all event publishers for this model.
            </summary>
            <param name="model">The model to scan for event declarations</param>
        </member>
        <member name="M:Models.Core.Apsim.ConnectEventSubscribers(Models.Core.IModel)">
            <summary>
            Connect all event subscribers for this model.
            </summary>
            <param name="model">The model to scan for event handlers</param>
        </member>
        <member name="M:Models.Core.Apsim.DisconnectEventPublishers(Models.Core.IModel)">
            <summary>
            Disconnect all published events in the specified 'model'
            </summary>
            <param name="model">The model to scan looking for event publishers</param>
        </member>
        <member name="M:Models.Core.Apsim.DisconnectEventSubscribers(Models.Core.IModel)">
            <summary>
            Disconnect all subscribed events in the specified 'model'
            </summary>
            <param name="model">The model to scan looking for event handlers to disconnect</param>
        </member>
        <member name="M:Models.Core.Apsim.FindEventField(Models.Core.Apsim.EventPublisher)">
            <summary>
            Locate and return the event backing field for the specified event. Returns
            null if not found.
            </summary>
            <param name="publisher">The event publisher to find an event declaration for</param>
            <returns>The event field declaration</returns>
        </member>
        <member name="M:Models.Core.Apsim.FindEventSubscribers(Models.Core.Apsim.EventPublisher)">
            <summary>
            Look through and return all models in scope for event subscribers with the specified event name.
            If eventName is null then all will be returned.
            </summary>
            <param name="publisher">The event publisher to find all event subscriptions for</param>
            <returns>The list of event subscriptions</returns>
        </member>
        <member name="M:Models.Core.Apsim.GetModelsVisibleToEvents(Models.Core.Model)">
            <summary>
            Return a list of models that are visible for event connecting purposes.
            </summary>
            <param name="relativeTo">The model to use as a base for looking for all other models in scope</param>
            <returns>The list of visible models for event connection</returns>
        </member>
        <member name="M:Models.Core.Apsim.FindEventSubscribers(System.String,Models.Core.IModel)">
            <summary>
            Look through the specified model and return all event subscribers that match the event name. If
            eventName is null then all will be returned.
            </summary>
            <param name="eventName">The name of the event to look for</param>
            <param name="relativeTo">The model to search for event subscribers</param>
            <returns>The list of event subscribers found.</returns>
        </member>
        <member name="M:Models.Core.Apsim.FindEventPublishers(Models.Core.Apsim.EventSubscriber)">
            <summary>
            Look through and return all models in scope for event publishers with the specified event name.
            If eventName is null then all will be returned.
            </summary>
            <param name="subscriber">The event subscriber to find publishers for</param>
            <returns>The list of matching event publishers</returns>
        </member>
        <member name="M:Models.Core.Apsim.FindEventPublishers(System.String,Models.Core.IModel)">
            <summary>
            Look through the specified model and return all event publishers that match the event name. If
            eventName is null then all will be returned.
            </summary>
            <param name="eventName">The event name to look for</param>
            <param name="model">The model to scan for event publishers</param>
            <returns>The list of matching event publishers</returns>
        </member>
        <member name="T:Models.Core.Apsim.EventSubscriber">
            <summary>
            A wrapper around an event subscriber MethodInfo.
            </summary>
        </member>
        <member name="M:Models.Core.Apsim.EventSubscriber.GetDelegate(Models.Core.Apsim.EventPublisher)">
            <summary>
            Creates and returns a delegate for the event handler.
            </summary>
            <param name="publisher">The corresponding event publisher</param>
            <returns>The delegate. Never returns null.</returns>
        </member>
        <member name="P:Models.Core.Apsim.EventSubscriber.Model">
            <summary>
            Gets or sets the model instance containing the event hander.
            </summary>
        </member>
        <member name="P:Models.Core.Apsim.EventSubscriber.MethodInfo">
            <summary>
            Gets or sets the reflection method info for the event handler.
            </summary>
        </member>
        <member name="P:Models.Core.Apsim.EventSubscriber.Name">
            <summary>
            Gets or sets the name of the event.
            </summary>
        </member>
        <member name="T:Models.Core.Apsim.EventPublisher">
            <summary>
            A wrapper around an event publisher EventInfo.
            </summary>
        </member>
        <member name="M:Models.Core.Apsim.EventPublisher.AddEventHandler(Models.Core.Model,System.Delegate)">
            <summary>
            Adds an event subscriber to this event.
            </summary>
            <param name="model">The model instance of the subscriber</param>
            <param name="eventDelegate">The delegate of the event subscriber</param>
        </member>
        <member name="P:Models.Core.Apsim.EventPublisher.Model">
            <summary>
            Gets or sets the model instance containing the event hander.
            </summary>
        </member>
        <member name="P:Models.Core.Apsim.EventPublisher.EventInfo">
            <summary>
            Gets or sets the reflection event info instance.
            </summary>
        </member>
        <member name="P:Models.Core.Apsim.EventPublisher.Name">
            <summary>
            Gets the name of the event.
            </summary>
        </member>
        <member name="P:Models.Core.Apsim.EventPublisher.EventHandlerType">
            <summary>
            Gets the event handler type
            </summary>
        </member>
        <member name="T:Models.PostSimulationTools.Probability">
            <summary>
            A post processing model that creates a probability table.
            </summary>
        </member>
        <member name="M:Models.PostSimulationTools.Probability.Run(Models.DataStore)">
            <summary>
            The main run method called to fill tables in the specified DataStore.
            </summary>
            <param name="dataStore">The DataStore to work with</param>
        </member>
        <member name="P:Models.PostSimulationTools.Probability.TableName">
            <summary>
            Gets or sets the name of the predicted/observed table name.
            </summary>
        </member>
        <member name="P:Models.PostSimulationTools.Probability.Exceedence">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Models.PostSimulationTools.Probability"/> is exceedence.
            </summary>
        </member>
        <member name="T:Models.PMF.Functions.HoldFunction">
            <summary>
            Returns the ValueToHold which is updated daily until the WhenToHold stage is reached, beyond which it is held constant
            </summary>
        </member>
        <member name="F:Models.PMF.Functions.HoldFunction._Value">
            <summary>The _ value</summary>
        </member>
        <member name="F:Models.PMF.Functions.HoldFunction.ValueToHold">
            <summary>The value to hold after event</summary>
        </member>
        <member name="F:Models.PMF.Functions.HoldFunction.Phenology">
            <summary>The phenology</summary>
        </member>
        <member name="M:Models.PMF.Functions.HoldFunction.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>Called when [simulation commencing].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Functions.HoldFunction.OnDoUpdate(System.Object,System.EventArgs)">
            <summary>Called by Plant.cs when phenology routines are complete.</summary>
            <param name="sender">Plant.cs</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="P:Models.PMF.Functions.HoldFunction.WhenToHold">
            <summary>The set event</summary>
        </member>
        <member name="P:Models.PMF.Functions.HoldFunction.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
        </member>
        <member name="T:Models.Summary">
            <summary>
            This model collects the simulation initial conditions and stores into the DataStore.
            It also provides an API for writing messages to the DataStore.
            </summary>
        </member>
        <member name="F:Models.Summary.messagesTable">
            <summary>
            The messages data table.
            </summary>
        </member>
        <member name="F:Models.Summary.clock">
            <summary>
            A link to the clock in the simulation.
            </summary>
        </member>
        <member name="M:Models.Summary.WriteReport(Models.DataStore,System.String,System.IO.TextWriter,System.String,System.Boolean)">
            <summary>
            Write the summary report to the specified writer.
            </summary>
            <param name="dataStore">The data store to write a summary report from</param>
            <param name="simulationName">The simulation name to produce a summary report for</param>
            <param name="writer">Text writer to write to</param>
            <param name="apsimSummaryImageFileName">The file name for the logo. Can be null</param>
            <param name="html">Indicates whether to produce html format</param>
        </member>
        <member name="M:Models.Summary.OnSimulationCompleted(System.Object,System.EventArgs)">
            <summary>
            All simulations have been completed. 
            </summary>
        </member>
        <member name="M:Models.Summary.WriteMessage(Models.Core.IModel,System.String)">
            <summary>
            Write a message to the summary
            </summary>
            <param name="model">The model writing the message</param>
            <param name="message">The message to write</param>
        </member>
        <member name="M:Models.Summary.WriteWarning(Models.Core.IModel,System.String)">
            <summary>
            Write a warning message to the summary
            </summary>
            <param name="model">The model writing the message</param>
            <param name="message">The warning message to write</param>
        </member>
        <member name="M:Models.Summary.GetMessageTable(Models.DataStore,System.String)">
            <summary>
            Create a message table ready for writing.
            </summary>
            <param name="dataStore">The data store to read the message table from</param>
            <param name="simulationName">The simulation name to get messages for</param>
            <returns>The filled message table</returns>
        </member>
        <member name="M:Models.Summary.WriteHeading(System.IO.TextWriter,System.String,System.Boolean)">
            <summary>
            Write the specified heading to the TextWriter.
            </summary>
            <param name="writer">Text writer to write to</param>
            <param name="heading">The heading to write</param>
            <param name="html">Indicates whether to produce html format</param>
        </member>
        <member name="M:Models.Summary.WriteScript(System.IO.TextWriter,System.Data.DataRow,System.Boolean)">
            <summary>
            Write out manager script
            </summary>
            <param name="writer">Text writer to write to</param>
            <param name="row">The data table row containing the script</param>
            <param name="html">Indicates whether to produce html format</param>
        </member>
        <member name="M:Models.Summary.WriteTable(System.IO.TextWriter,System.Data.DataTable,System.Boolean,System.Boolean,System.String)">
            <summary>
            Write the specified table to the TextWriter.
            </summary>
            <param name="writer">The writer to write to</param>
            <param name="table">The table to write</param>
            <param name="html">Indicates whether html format should be produced</param>
            <param name="includeHeadings">Include headings in the html table produced?</param>
            <param name="className">The class name of the generated html table</param>
        </member>
        <member name="M:Models.Summary.WriteMessageTable(System.IO.TextWriter,System.Data.DataTable,System.Boolean,System.Boolean,System.String)">
            <summary>
            Write the specified table to the TextWriter.
            </summary>
            <param name="writer">The writer to write to</param>
            <param name="table">The table to write</param>
            <param name="html">Indicates whether html format should be produced</param>
            <param name="includeHeadings">Include headings in the html table produced?</param>
            <param name="className">The class name of the generated html table</param>
        </member>
        <member name="M:Models.Summary.CreateInitialConditionsTable(Models.Core.Simulation)">
            <summary>
            Create an initial conditions table in the DataStore.
            </summary>
            <param name="simulation">The simulation to create an table for</param>
        </member>
        <member name="M:Models.Summary.FindAllProperties(Models.Core.Model,System.Collections.Generic.List{Models.Core.VariableProperty})">
            <summary>
            Find all properties from the model and fill this.properties.
            </summary>
            <param name="model">The model to search for properties</param>
            <param name="properties">The list of properties to fill</param>
        </member>
        <member name="M:Models.Summary.ConvertInitialConditionsToTables(System.Data.DataTable,System.Collections.Generic.List{System.Data.DataTable})">
            <summary>
            Converts a flat 'InitialConditions' table (from the data store) to a series of data tables.
            </summary>
            <param name="initialConditionsTable">The table to read the rows from</param>
            <param name="tables">The list of tables to create</param>
        </member>
        <member name="M:Models.Summary.AddArrayToTable(System.String,System.String,System.String,System.Boolean,System.Object,System.Data.DataTable)">
            <summary>
            Add a column to the specified table based on values in the 'value'
            </summary>
            <param name="heading">The new column heading</param>
            <param name="dataTypeName">The data type of the value</param>
            <param name="displayFormat">The display format to use when writing the column</param>
            <param name="showTotal">A value indicating whether a total should be added.</param>
            <param name="value">The values containing the array</param>
            <param name="table">The table where a column should be added to</param>
        </member>
        <member name="M:Models.Summary.FormatPropertyValue(System.String,System.Object,System.String)">
            <summary>
            Format the specified value into a string and return the string.
            </summary>
            <param name="dataTypeName">The name of the data type</param>
            <param name="value">The value to format</param>
            <param name="format">The format to use for the value</param>
            <returns>The formatted value as a string</returns>
        </member>
        <member name="M:Models.Summary.OnDoInitialSummary(System.Object,System.EventArgs)">
            <summary>
            Simulation is commencing.
            </summary>
            <param name="sender">Sender of the event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="P:Models.Summary.Simulation">
            <summary>
            Gets a link to the simulation.
            </summary>
        </member>
        <member name="T:Models.PMF.Plant">
            <summary>
             The generic plant model
             </summary>
             \pre Summary A Summary model has to exist to write summary message.
             \pre Phenology A \ref Models.PMF.Phen.Phenology Phenology model is 
             optional to check whether plant has emerged.
             \pre OrganArbitrator A OrganArbitrator model is optional (not used currently).
             \pre Structure A Structure model is optional (not used currently).
             \pre Leaf A \ref Models.PMF.Organs.Leaf Leaf model is optional 
             to calculate water supply and demand ratio.
             \pre Root A Models.PMF.Organs.Root Root model is optional 
             to calculate water supply and demand ratio.
             \param CropType Used by several organs to determine the type of crop.
             \retval Population Number of plants per square meter. 
             \retval IsAlive Return true if plant is alive and in the ground.
             \retval IsEmerged Return true if plant has emerged.
             
             On commencing simulation
             ------------------------
             OnSimulationCommencing is called on commencing simulation. Organs contain 
             all children which derive from model IOrgan. The model variables 
             are reset.
             
             On sowing 
             -------------------------
             Plant is sown by a manager script in a APSIM model. For example,    
             \code
             2012-10-23 [Maize].Sow(population:11, cultivar:"Pioneer_3153", depth:50, rowSpacing:710);
             \endcode
             
             Sowing parameters should be specified, i.e. cultivar, population, depth, rowSpacing,
             maxCover (optional), and budNumber (optional).
             
             Two events "Sowing" and "PlantSowing" are invoked to notify other models 
             to execute sowing events.
             <remarks>
             </remarks>
        </member>
        <member name="F:Models.PMF.Plant.Summary">
            <summary>The summary</summary>
        </member>
        <member name="F:Models.PMF.Plant.Phenology">
            <summary>The phenology</summary>
        </member>
        <member name="F:Models.PMF.Plant.Arbitrator">
            <summary>The arbitrator</summary>
        </member>
        <member name="F:Models.PMF.Plant.Structure">
            <summary>The structure</summary>
        </member>
        <member name="F:Models.PMF.Plant.Leaf">
            <summary>The leaf</summary>
        </member>
        <member name="F:Models.PMF.Plant.Root">
            <summary>The root</summary>
        </member>
        <member name="F:Models.PMF.Plant.cultivarDefinition">
            <summary>The current cultivar definition.</summary>
        </member>
        <member name="M:Models.PMF.Plant.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>Things the plant model does when the simulation starts</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Plant.Sow(System.String,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Sow the crop with the specified parameters.</summary>
            <param name="cultivar">The cultivar.</param>
            <param name="population">The population.</param>
            <param name="depth">The depth.</param>
            <param name="rowSpacing">The row spacing.</param>
            <param name="maxCover">The maximum cover.</param>
            <param name="budNumber">The bud number.</param>
        </member>
        <member name="M:Models.PMF.Plant.Harvest">
            <summary>Harvest the crop.</summary>
        </member>
        <member name="M:Models.PMF.Plant.EndCrop">
            <summary>End the crop.</summary>
        </member>
        <member name="M:Models.PMF.Plant.Cut">
            <summary>Cut the crop.</summary>
        </member>
        <member name="M:Models.PMF.Plant.Clear">
            <summary>Clears this instance.</summary>
        </member>
        <member name="M:Models.PMF.Plant.Document(System.Collections.Generic.List{Models.Core.AutoDocumentation.ITag},System.Int32,System.Int32)">
            <summary>Writes documentation for this function by adding to the list of documentation tags.</summary>
            <param name="tags">The list of tags to add to.</param>
            <param name="headingLevel">The level (e.g. H2) of the headings.</param>
            <param name="indent">The level of indentation 1, 2, 3 etc.</param>
        </member>
        <member name="P:Models.PMF.Plant.CropType">
            <summary>Used by several organs to determine the type of crop.</summary>
        </member>
        <member name="P:Models.PMF.Plant.SowingData">
            <summary>The sowing data</summary>
        </member>
        <member name="P:Models.PMF.Plant.Organs">
            <summary>Gets the organs.</summary>
        </member>
        <member name="P:Models.PMF.Plant.CultivarNames">
            <summary>Gets a list of cultivar names</summary>
        </member>
        <member name="P:Models.PMF.Plant.Cultivars">
            <summary>A property to return all cultivar definitions.</summary>
        </member>
        <member name="P:Models.PMF.Plant.WaterSupplyDemandRatio">
            <summary>Gets the water supply demand ratio.</summary>
        </member>
        <member name="P:Models.PMF.Plant.Population">
            <summary>Gets or sets the population.</summary>
        </member>
        <member name="P:Models.PMF.Plant.IsAlive">
            <summary>Return true if plant is alive and in the ground.</summary>
        </member>
        <member name="P:Models.PMF.Plant.IsEmerged">
            <summary>Return true if plant has emerged</summary>
        </member>
        <member name="E:Models.PMF.Plant.Sowing">
            <summary>Occurs when a plant is about to be sown.</summary>
        </member>
        <member name="E:Models.PMF.Plant.PlantSowing">
            <summary>Occurs when a plant is sown.</summary>
        </member>
        <member name="E:Models.PMF.Plant.Harvesting">
            <summary>Occurs when a plant is about to be harvested.</summary>
        </member>
        <member name="E:Models.PMF.Plant.Cutting">
            <summary>Occurs when a plant is about to be cut.</summary>
        </member>
        <member name="E:Models.PMF.Plant.PlantEnding">
            <summary>Occurs when a plant is ended via EndCrop.</summary>
        </member>
        <member name="T:Models.PMF.Organs.SimpleRoot">
            <summary>
            A simple root organ
            </summary>
        </member>
        <member name="F:Models.PMF.Organs.SimpleRoot.Plant">
            <summary>The plant</summary>
        </member>
        <member name="F:Models.PMF.Organs.SimpleRoot.DMDemandFunction">
            <summary>The dm demand function</summary>
        </member>
        <member name="F:Models.PMF.Organs.SimpleRoot.Uptake">
            <summary>The uptake</summary>
        </member>
        <member name="M:Models.PMF.Organs.SimpleRoot.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>Called when [simulation commencing].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Organs.SimpleRoot.OnPlantSowing(System.Object,Models.PMF.SowPlant2Type)">
            <summary>Called when crop is ending</summary>
            <param name="sender">The sender.</param>
            <param name="data">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Organs.SimpleRoot.OnPlantEnding(System.Object,System.EventArgs)">
            <summary>Called when crop is ending</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Organs.SimpleRoot.WaterSupply(System.Collections.Generic.List{Models.Soils.Arbitrator.ZoneWaterAndN})">
            <summary>Gets or sets the water supply.</summary>
            <value>The water supply.</value>
        </member>
        <member name="M:Models.PMF.Organs.SimpleRoot.DoWaterUptake(System.Double[])">
            <summary>Does the water uptake.</summary>
            <param name="Amount">The amount.</param>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="P:Models.PMF.Organs.SimpleRoot.DMDemand">
            <summary>Gets or sets the dm demand.</summary>
            <value>The dm demand.</value>
        </member>
        <member name="P:Models.PMF.Organs.SimpleRoot.DMSupply">
            <summary>Gets or sets the dm supply.</summary>
            <value>The dm supply.</value>
        </member>
        <member name="P:Models.PMF.Organs.SimpleRoot.DMAllocation">
            <summary>Sets the dm allocation.</summary>
            <value>The dm allocation.</value>
        </member>
        <member name="P:Models.PMF.Organs.SimpleRoot.NDemand">
            <summary>Gets or sets the n demand.</summary>
            <value>The n demand.</value>
        </member>
        <member name="P:Models.PMF.Organs.SimpleRoot.NSupply">
            <summary>Gets or sets the n supply.</summary>
            <value>The n supply.</value>
        </member>
        <member name="P:Models.PMF.Organs.SimpleRoot.WaterDemand">
            <summary>Gets or sets the water demand.</summary>
            <value>The water demand.</value>
        </member>
        <member name="P:Models.PMF.Organs.SimpleRoot.WaterUptake">
            <summary>Gets or sets the water uptake.</summary>
            <value>The water uptake.</value>
        </member>
        <member name="P:Models.PMF.Organs.SimpleRoot.WaterAllocation">
            <summary>Gets or sets the water allocation.</summary>
            <value>The water allocation.</value>
            <exception cref="T:System.Exception">Cannot set water allocation for roots</exception>
        </member>
        <member name="P:Models.PMF.Organs.SimpleRoot.RootModelExists">
            <summary>
            Gets a value indicating whether [root model exists].
            </summary>
            <value><c>true</c> if [root model exists]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Models.PMF.Organs.ReproductiveOrgan">
            <summary>
            The reproductive organ
            </summary>
        </member>
        <member name="F:Models.PMF.Organs.ReproductiveOrgan.Summary">
            <summary>The summary</summary>
        </member>
        <member name="F:Models.PMF.Organs.ReproductiveOrgan.Plant">
            <summary>The plant</summary>
        </member>
        <member name="F:Models.PMF.Organs.ReproductiveOrgan.Phenology">
            <summary>The phenology</summary>
        </member>
        <member name="F:Models.PMF.Organs.ReproductiveOrgan.WaterContent">
            <summary>The water content</summary>
        </member>
        <member name="F:Models.PMF.Organs.ReproductiveOrgan.MaximumPotentialGrainSize">
            <summary>The Maximum potential size of individual grains</summary>
        </member>
        <member name="F:Models.PMF.Organs.ReproductiveOrgan.NumberFunction">
            <summary>The number function</summary>
        </member>
        <member name="F:Models.PMF.Organs.ReproductiveOrgan.NFillingRate">
            <summary>The n filling rate</summary>
        </member>
        <member name="F:Models.PMF.Organs.ReproductiveOrgan.MaximumNConc">
            <summary>The maximum n conc</summary>
        </member>
        <member name="F:Models.PMF.Organs.ReproductiveOrgan.MinimumNConc">
            <summary>The minimum n conc</summary>
        </member>
        <member name="F:Models.PMF.Organs.ReproductiveOrgan.DMDemandFunction">
            <summary>The dm demand function</summary>
        </member>
        <member name="F:Models.PMF.Organs.ReproductiveOrgan.RipeStage">
            <summary>The ripe stage</summary>
        </member>
        <member name="F:Models.PMF.Organs.ReproductiveOrgan._ReadyForHarvest">
            <summary>The _ ready for harvest</summary>
        </member>
        <member name="F:Models.PMF.Organs.ReproductiveOrgan.PotentialDMAllocation">
            <summary>The potential dm allocation</summary>
        </member>
        <member name="F:Models.PMF.Organs.ReproductiveOrgan.Number">
            <summary>The number</summary>
        </member>
        <member name="F:Models.PMF.Organs.ReproductiveOrgan.MaximumSize">
            <summary>The Maximum potential size of grains</summary>
        </member>
        <member name="M:Models.PMF.Organs.ReproductiveOrgan.OnDoPotentialPlantGrowth(System.Object,System.EventArgs)">
            <summary>Event from sequencer telling us to do our potential growth.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Organs.ReproductiveOrgan.OnPlantSowing(System.Object,Models.PMF.SowPlant2Type)">
            <summary>Called when crop is ending</summary>
            <param name="sender">The sender.</param>
            <param name="data">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Organs.ReproductiveOrgan.DoHarvest">
            <summary>
            Execute harvest logic for reproductive organ
            </summary>
        </member>
        <member name="M:Models.PMF.Organs.ReproductiveOrgan.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>Called when [simulation commencing].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Organs.ReproductiveOrgan.OnPlantEnding(System.Object,System.EventArgs)">
            <summary>Called when crop is ending</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Organs.ReproductiveOrgan.OnCutting(System.Object,System.EventArgs)">
            <summary>Called when crop is being cut.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Organs.ReproductiveOrgan.OnDoActualPlantGrowth(System.Object,System.EventArgs)">
            <summary>Does the nutrient allocations.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Models.PMF.Organs.ReproductiveOrgan.LiveFWt">
            <summary>Gets the live f wt.</summary>
            <value>The live f wt.</value>
        </member>
        <member name="P:Models.PMF.Organs.ReproductiveOrgan.Size">
            <summary>Gets the size.</summary>
            <value>The size.</value>
        </member>
        <member name="P:Models.PMF.Organs.ReproductiveOrgan.FSize">
            <summary>Gets the size of the f.</summary>
            <value>The size of the f.</value>
        </member>
        <member name="P:Models.PMF.Organs.ReproductiveOrgan.ReadyForHarvest">
            <summary>Gets the ready for harvest.</summary>
            <value>The ready for harvest.</value>
        </member>
        <member name="P:Models.PMF.Organs.ReproductiveOrgan.DMDemand">
            <summary>Gets or sets the dm demand.</summary>
            <value>The dm demand.</value>
        </member>
        <member name="P:Models.PMF.Organs.ReproductiveOrgan.DMPotentialAllocation">
            <summary>Sets the dm potential allocation.</summary>
            <value>The dm potential allocation.</value>
            <exception cref="T:System.Exception">Invalid allocation of potential DM in + Name</exception>
        </member>
        <member name="P:Models.PMF.Organs.ReproductiveOrgan.DMAllocation">
            <summary>Sets the dm allocation.</summary>
            <value>The dm allocation.</value>
        </member>
        <member name="P:Models.PMF.Organs.ReproductiveOrgan.NDemand">
            <summary>Gets or sets the n demand.</summary>
            <value>The n demand.</value>
        </member>
        <member name="P:Models.PMF.Organs.ReproductiveOrgan.NAllocation">
            <summary>Sets the n allocation.</summary>
            <value>The n allocation.</value>
        </member>
        <member name="P:Models.PMF.Organs.ReproductiveOrgan.MaxNconc">
            <summary>Gets or sets the maximum nconc.</summary>
            <value>The maximum nconc.</value>
        </member>
        <member name="P:Models.PMF.Organs.ReproductiveOrgan.MinNconc">
            <summary>Gets or sets the minimum nconc.</summary>
            <value>The minimum nconc.</value>
        </member>
        <member name="T:Models.PMF.OldPlant.Root1">
            <summary>
            A root model for plant15
            </summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1.Summary">
            <summary>The summary</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1.Plant">
            <summary>The plant</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1.RootAdvanceFactorTemp">
            <summary>The root advance factor temporary</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1.RootAdvanceFactorWaterStress">
            <summary>The root advance factor water stress</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1.SWFactorRootDepth">
            <summary>The sw factor root depth</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1.SWFactorRootLength">
            <summary>The sw factor root length</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1.RootDepthRate">
            <summary>The root depth rate</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1.Population">
            <summary>The population</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1.RelativeRootRate">
            <summary>The relative root rate</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1.DMSenescenceFraction">
            <summary>The dm senescence fraction</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1.GrowthStructuralFractionStage">
            <summary>The growth structural fraction stage</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1.NUptakeFunction">
            <summary>The n uptake function</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1.Soil">
            <summary>The soil</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1.swim3">
            <summary>The swim3</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1.SwimIsPresent">
            <summary>The swim is present</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1.dlt_sw_dep">
            <summary>The dlt_sw_dep</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1.sw_avail">
            <summary>The sw_avail</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1.sw_avail_pot">
            <summary>The sw_avail_pot</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1.sw_supply">
            <summary>The sw_supply</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1.dlt_no3gsm">
            <summary>The dlt_no3gsm</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1.dlt_nh4gsm">
            <summary>The DLT_NH4GSM</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1.no3gsm_uptake_pot">
            <summary>The no3gsm_uptake_pot</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1.nh4gsm_uptake_pot">
            <summary>The nh4gsm_uptake_pot</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1.dltRootDepth">
            <summary>The DLT root depth</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1.dltRootLength">
            <summary>The DLT root length</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1.dltRootLengthSenesced">
            <summary>The DLT root length senesced</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1.dltRootLengthDead">
            <summary>The DLT root length dead</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1.ll_dep">
            <summary>The ll_dep</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1.RootLength">
            <summary>The root length</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1.no3gsm_min">
            <summary>The no3gsm_min</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1.nh4gsm_min">
            <summary>The nh4gsm_min</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1.HaveModifiedKLValues">
            <summary>The have modified kl values</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1.RootLengthSenesced">
            <summary>The root length senesced</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1.dlt_n_senesced_retrans">
            <summary>The dlt_n_senesced_retrans</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1.dlt_n_senesced_trans">
            <summary>The dlt_n_senesced_trans</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1.DULmm">
            <summary>The drained upper limit (mm)</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1._DMGreenDemand">
            <summary>The _ dm green demand</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1._NDemand">
            <summary>The _ n demand</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1._SoilNDemand">
            <summary>The _ soil n demand</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1.NMax">
            <summary>The n maximum</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1.sw_demand">
            <summary>The sw_demand</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1.n_conc_crit">
            <summary>The n_conc_crit</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1.n_conc_max">
            <summary>The n_conc_max</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Root1.n_conc_min">
            <summary>The n_conc_min</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.DoSWDemand(System.Double)">
            <summary>Does the sw demand.</summary>
            <param name="Supply">The supply.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.DoSWUptake(System.Double)">
            <summary>Does the sw uptake.</summary>
            <param name="SWDemand">The sw demand.</param>
            <exception cref="T:System.Exception">negative root growth??</exception>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.CalculateWaterUptake(System.Double,System.Double[])">
            <summary>Calculate SW uptake for a given demand and soil water content</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.CalculateNUptake(System.Double[],System.Double[],System.Double[]@,System.Double[]@)">
            <summary>Calculate SW uptake for a given demand and soil water content</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.DoRootDepth">
            <summary>Calculate change in rooting depth.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.DoDMDemand(System.Double)">
            <summary>Does the dm demand.</summary>
            <param name="DMSupply">The dm supply.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.DoDmRetranslocate(System.Double,System.Double)">
            <summary>Does the dm retranslocate.</summary>
            <param name="dlt_dm_retrans_to_fruit">The dlt_dm_retrans_to_fruit.</param>
            <param name="demand_differential_begin">The demand_differential_begin.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.GiveDmGreen(System.Double)">
            <summary>Gives the dm green.</summary>
            <param name="Delta">The delta.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.DoSenescence">
            <summary>Does the senescence.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.DoDetachment">
            <summary>Does the detachment.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.RemoveBiomass">
            <summary>Removes the biomass.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.DoNDemand(System.Boolean)">
            <summary>Does the n demand.</summary>
            <param name="IncludeRetransloation">if set to <c>true</c> [include retransloation].</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.DoNDemand1Pot(System.Double)">
            <summary>Does the n demand1 pot.</summary>
            <param name="dltDmPotRue">The DLT dm pot rue.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.DoSoilNDemand">
            <summary>Does the soil n demand.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.DoNSupply">
            <summary>Does the n supply.</summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.DoNRetranslocate(System.Double,System.Double)">
            <summary>Does the n retranslocate.</summary>
            <param name="NSupply">The n supply.</param>
            <param name="GrainNDemand">The grain n demand.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.DoNSenescence">
            <summary>Does the n senescence.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.DoNSenescedRetranslocation(System.Double,System.Double)">
            <summary>Does the n senesced retranslocation.</summary>
            <param name="navail">The navail.</param>
            <param name="n_demand_tot">The n_demand_tot.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.DoNPartition(System.Double)">
            <summary>Does the n partition.</summary>
            <param name="GrowthN">The growth n.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.DoNFixRetranslocate(System.Double,System.Double)">
            <summary>Does the n fix retranslocate.</summary>
            <param name="NFixUptake">The n fix uptake.</param>
            <param name="nFixDemandTotal">The n fix demand total.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.DoNConccentrationLimits">
            <summary>Does the n conccentration limits.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.ZeroDltNSenescedTrans">
            <summary>Zeroes the DLT n senesced trans.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.DoNUptake(System.Double)">
            <summary>Does the n uptake.</summary>
            <param name="PotNFix">The pot n fix.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.DoNUptakeCalculation(System.Double)">
            <summary>Does the n uptake.</summary>
            <param name="PotNFix">The pot n fix.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.DoPotentialRUE">
            <summary>Does the potential rue.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.interceptRadiation(System.Double)">
            <summary>Intercepts the radiation.</summary>
            <param name="incomingSolarRadiation">The incoming solar radiation.</param>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.DoCover">
            <summary>Does the cover.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.Update">
            <summary>Updates this instance.</summary>
            <exception cref="T:System.Exception">Invalid root depth:  + RootDepth.ToString()</exception>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.FindLayerNo(System.Double)">
            <summary>Return the index of the layer corresponding to the given depth</summary>
            <param name="depth">The depth.</param>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.RootLengthGrowth">
            <summary>
            Calculate the increase in root length density in each rooted
            layer based upon soil hospitality, moisture and fraction of
            layer explored by roots.
            </summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.DoSenescenceLength">
            <summary>
            Calculate root length senescence based upon changes in senesced root
            biomass and the specific root length.
            </summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.WriteSummary(System.IO.TextWriter)">
            <summary>Write a summary to the summary file.</summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.RemoveBiomassFraction(System.Double)">
            <summary>Remove biomass from the root system due to senescence or plant death</summary>
            <param name="Fraction">The fraction.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>Called when [simulation commencing].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.OnPrepare(System.Object,System.EventArgs)">
            <summary>Called when [prepare].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.OnHarvest(Models.PMF.OldPlant.HarvestType,Models.PMF.BiomassRemovedType)">
            <summary>Called when [harvest].</summary>
            <param name="Harvest">The harvest.</param>
            <param name="BiomassRemoved">The biomass removed.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.OnEndCrop(Models.PMF.BiomassRemovedType)">
            <summary>Called when [end crop].</summary>
            <param name="BiomassRemoved">The biomass removed.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.OnPhaseChanged(Models.PMF.Phen.PhaseChangedType)">
            <summary>Called when [phase changed].</summary>
            <param name="PhenologyChange">The phenology change.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.DisposeDetachedMaterial(Models.PMF.Biomass,System.Double[])">
            <summary>Disposes the detached material.</summary>
            <param name="BiomassToDisposeOf">The biomass to dispose of.</param>
            <param name="RootLength">Length of the root.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.getModifiedKL(System.Int32)">
            <summary>
            Calculate a modified KL value as per:
            Hochman et. al. (2007) Simulating the effects of saline and sodic subsoils on wheat
            crops growing on Vertosols. Australian Journal of Agricultural Research, 58, 802–810
            Will use one of CL, ESP and EC in that order to modified KL.
            </summary>
            <param name="i">The i.</param>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.DoPotentialExtractableSW">
            <summary>Return potential available soil water from each layer in the root zone.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.DoSWAvailable(System.Double[])">
            <summary>
            Return actual water available for extraction from each layer in the
            soil profile by the crop (mm water)
            </summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.DoSWSupply(System.Double[])">
            <summary>
            Return potential water uptake from each layer of the soil profile
            by the crop (mm water). This represents the maximum amount in each
            layer regardless of lateral root distribution but takes account of
            root depth in bottom layer.
            </summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.DoWaterUptakeInternal(System.Double)">
            <summary>Calculate todays daily water uptake by this root system</summary>
            <param name="sw_demand">The sw_demand.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.RootProportion(System.Int32,System.Double)">
            <summary>
            Returns the proportion of layer that has roots in it (0-1).
            Each element of "dlayr" holds the height of  the
            corresponding soil layer.  The height of the top layer is
            held in "dlayr"(1), and the rest follow in sequence down
            into the soil profile.  Given a root depth of "root_depth",
            this function will return the proportion of "dlayr"("layer")
            which has roots in it  (a value in the range 0..1).
            </summary>
            <param name="layer">The layer.</param>
            <param name="RootDepth">The root depth.</param>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.RootDist(System.Double,System.Double[])">
            <summary>
            Distribute root material over profile based upon root
            length distribution.
            </summary>
            <param name="root_sum">The root_sum.</param>
            <param name="RootLength">Length of the root.</param>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.WFPS(System.Int32)">
            <summary>WFPSs the specified layer.</summary>
            <param name="layer">The layer.</param>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.OldPlant.Root1.UpdateWaterAndNBalance">
            <summary>Update the water and N balance.</summary>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.NConcentrationCritical">
            <summary>Gets or sets the n concentration critical.</summary>
            <value>The n concentration critical.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.NConcentrationMinimum">
            <summary>Gets or sets the n concentration minimum.</summary>
            <value>The n concentration minimum.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.NConcentrationMaximum">
            <summary>Gets or sets the n concentration maximum.</summary>
            <value>The n concentration maximum.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.InitialRootDepth">
            <summary>Gets or sets the initial root depth.</summary>
            <value>The initial root depth.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.DieBackFraction">
            <summary>Gets or sets the die back fraction.</summary>
            <value>The die back fraction.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.cl">
            <summary>Gets or sets the cl.</summary>
            <value>The cl.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.ll">
            <summary>Gets or sets the ll.</summary>
            <value>The ll.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.kl">
            <summary>Gets or sets the kl.</summary>
            <value>The kl.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.xf">
            <summary>Gets or sets the xf.</summary>
            <value>The xf.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.ModifyKL">
            <summary>
            Gets or sets a value indicating whether [modify kl].
            </summary>
            <value><c>true</c> if [modify kl]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.ClA">
            <summary>Gets or sets the cl a.</summary>
            <value>The cl a.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.ClB">
            <summary>Gets or sets the cl b.</summary>
            <value>The cl b.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.ESPA">
            <summary>Gets or sets the espa.</summary>
            <value>The espa.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.ESPB">
            <summary>Gets or sets the espb.</summary>
            <value>The espb.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.ECA">
            <summary>Gets or sets the eca.</summary>
            <value>The eca.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.ECB">
            <summary>Gets or sets the ecb.</summary>
            <value>The ecb.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.NDeficitUptakeFraction">
            <summary>Gets or sets the n deficit uptake fraction.</summary>
            <value>The n deficit uptake fraction.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.NSenescenceConcentration">
            <summary>Gets or sets the n senescence concentration.</summary>
            <value>The n senescence concentration.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.NSupplyPreference">
            <summary>Gets or sets the n supply preference.</summary>
            <value>The n supply preference.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.SenescenceDetachmentFraction">
            <summary>Gets or sets the senescence detachment fraction.</summary>
            <value>The senescence detachment fraction.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.InitialWt">
            <summary>Gets or sets the initial wt.</summary>
            <value>The initial wt.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.InitialNConcentration">
            <summary>Gets or sets the initial n concentration.</summary>
            <value>The initial n concentration.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.SpecificRootLength">
            <summary>Gets or sets the length of the specific root.</summary>
            <value>The length of the specific root.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.ArbitratorSWUptake">
            <summary>Gets or sets the soil water uptake from the arbitrator.</summary>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.ArbitratorNO3Uptake">
            <summary>Gets or sets the no3 uptake from the arbitrator.</summary>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.ArbitratorNH4Uptake">
            <summary>Gets or sets the nh4 uptake from the arbitrator.</summary>
        </member>
        <member name="E:Models.PMF.OldPlant.Root1.IncorpFOM">
            <summary>Occurs when [incorp fom].</summary>
        </member>
        <member name="E:Models.PMF.OldPlant.Root1.WaterChanged">
            <summary>Occurs when [water changed].</summary>
        </member>
        <member name="E:Models.PMF.OldPlant.Root1.NitrogenChanged">
            <summary>Occurs when [nitrogen changed].</summary>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.Senescing">
            <summary>Gets or sets the senescing.</summary>
            <value>The senescing.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.Retranslocation">
            <summary>Gets or sets the retranslocation.</summary>
            <value>The retranslocation.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.Growth">
            <summary>Gets or sets the growth.</summary>
            <value>The growth.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.Detaching">
            <summary>Gets or sets the detaching.</summary>
            <value>The detaching.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.GreenRemoved">
            <summary>Gets or sets the green removed.</summary>
            <value>The green removed.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.SenescedRemoved">
            <summary>Gets or sets the senesced removed.</summary>
            <value>The senesced removed.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.SWSupply">
            <summary>Gets the sw supply.</summary>
            <value>The sw supply.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.SWDemand">
            <summary>Gets the sw demand.</summary>
            <value>The sw demand.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.SWUptake">
            <summary>Gets the sw uptake.</summary>
            <value>The sw uptake.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.DMSupply">
            <summary>Gets the dm supply.</summary>
            <value>The dm supply.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.DMRetransSupply">
            <summary>Gets the dm retrans supply.</summary>
            <value>The dm retrans supply.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.dltDmPotRue">
            <summary>Gets the DLT dm pot rue.</summary>
            <value>The DLT dm pot rue.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.DMGreenDemand">
            <summary>Gets the dm green demand.</summary>
            <value>The dm green demand.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.DMDemandDifferential">
            <summary>Gets the dm demand differential.</summary>
            <value>The dm demand differential.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.NDemand">
            <summary>Gets the n demand.</summary>
            <value>The n demand.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.NSupply">
            <summary>Gets the n supply.</summary>
            <value>The n supply.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.NUptake">
            <summary>Gets the n uptake.</summary>
            <value>The n uptake.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.SoilNDemand">
            <summary>Gets the soil n demand.</summary>
            <value>The soil n demand.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.NCapacity">
            <summary>Gets the n capacity.</summary>
            <value>The n capacity.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.NDemandDifferential">
            <summary>Gets the n demand differential.</summary>
            <value>The n demand differential.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.AvailableRetranslocateN">
            <summary>Gets the available retranslocate n.</summary>
            <value>The available retranslocate n.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.DltNSenescedRetrans">
            <summary>Gets the DLT n senesced retrans.</summary>
            <value>The DLT n senesced retrans.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.CoverGreen">
            <summary>Gets or sets the cover green.</summary>
            <value>The cover green.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.CoverSen">
            <summary>Gets or sets the cover sen.</summary>
            <value>The cover sen.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.RootDepth">
            <summary>Gets or sets the root depth.</summary>
            <value>The root depth.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.RootSWUptake">
            <summary>Gets the root sw uptake.</summary>
            <value>The root sw uptake.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.SWAvailRatio">
            <summary>Gets the sw avail ratio.</summary>
            <value>The sw avail ratio.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.WetRootFraction">
            <summary>Gets the wet root fraction.</summary>
            <value>The wet root fraction.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.FASWLayered">
            <summary>Gets the fasw layered.</summary>
            <value>The fasw layered.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.FASW">
            <summary>Gets the fasw.</summary>
            <value>The fasw.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.RootLengthDensity">
            <summary>Root length density - needed by SWIM</summary>
            <value>The root length density.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.ESWInRootZone">
            <summary>Calculate the extractable soil water in the root zone (mm).</summary>
            <value>The esw in root zone.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.AvailableToAnimal">
            <summary>Gets the available to animal.</summary>
            <value>The available to animal.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Root1.RemovedByAnimal">
            <summary>Sets the removed by animal.</summary>
            <value>The removed by animal.</value>
        </member>
        <member name="T:Models.PMF.Functions.SupplyFunctions.RUEModel">
            <summary>
            An RUE model
            </summary>
        </member>
        <member name="F:Models.PMF.Functions.SupplyFunctions.RUEModel.RUE">
            <summary>The rue</summary>
        </member>
        <member name="F:Models.PMF.Functions.SupplyFunctions.RUEModel.FCO2">
            <summary>The fc o2</summary>
        </member>
        <member name="F:Models.PMF.Functions.SupplyFunctions.RUEModel.FN">
            <summary>The function</summary>
        </member>
        <member name="F:Models.PMF.Functions.SupplyFunctions.RUEModel.FT">
            <summary>The ft</summary>
        </member>
        <member name="F:Models.PMF.Functions.SupplyFunctions.RUEModel.FW">
            <summary>The fw</summary>
        </member>
        <member name="F:Models.PMF.Functions.SupplyFunctions.RUEModel.FVPD">
            <summary>The FVPD</summary>
        </member>
        <member name="F:Models.PMF.Functions.SupplyFunctions.RUEModel.MetData">
            <summary>The met data</summary>
        </member>
        <member name="M:Models.PMF.Functions.SupplyFunctions.RUEModel.Growth(System.Double)">
            <summary>Daily growth increment of total plant biomass</summary>
            <param name="RadnInt">intercepted radiation</param>
            <returns>g dry matter/m2 soil/day</returns>
        </member>
        <member name="P:Models.PMF.Functions.SupplyFunctions.RUEModel.VPD">
            <summary>Gets the VPD.</summary>
            <value>The VPD.</value>
        </member>
        <member name="P:Models.PMF.Functions.SupplyFunctions.RUEModel.RueAct">
            <summary>
            Total plant "actual" radiation use efficiency (for the day) corrected by reducing factors (g biomass/MJ global solar radiation) CHCK-EIT
            </summary>
            <value>The rue act.</value>
        </member>
        <member name="P:Models.PMF.Functions.SupplyFunctions.RUEModel.FRGR">
            <summary>Gets the FRGR.</summary>
            <value>The FRGR.</value>
        </member>
        <member name="T:Models.PMF.Functions.SoilTemperatureWeightedFunction">
            <summary>
            Returns the temperature of the surface soil layer with the weighting: " +
            0.25*DayBeforeYesterday + 0.5*Yesterday + 0.25*Today
            </summary>
        </member>
        <member name="M:Models.PMF.Functions.SoilTemperatureWeightedFunction.#ctor">
            <summary>constructor</summary>
        </member>
        <member name="F:Models.PMF.Functions.SoilTemperatureWeightedFunction.DayBeforeYesterday">
            <summary>The day before yesterday</summary>
        </member>
        <member name="F:Models.PMF.Functions.SoilTemperatureWeightedFunction.Yesterday">
            <summary>The yesterday</summary>
        </member>
        <member name="F:Models.PMF.Functions.SoilTemperatureWeightedFunction.Today">
            <summary>The today</summary>
        </member>
        <member name="F:Models.PMF.Functions.SoilTemperatureWeightedFunction.XYPairs">
            <summary>Gets or sets the xy pairs.</summary>
            <value>The xy pairs.</value>
        </member>
        <member name="M:Models.PMF.Functions.SoilTemperatureWeightedFunction.OnDoDailyInitialisation(System.Object,System.EventArgs)">
            <summary>EventHandler for OnPrepare.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Models.PMF.Functions.SoilTemperatureWeightedFunction.maxt_soil_surface">
            <summary>The maxt_soil_surface</summary>
        </member>
        <member name="P:Models.PMF.Functions.SoilTemperatureWeightedFunction.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
        </member>
        <member name="T:Models.Graph.GraphValues">
            <summary>
            GraphValues encapsulates all ways that data (a series of values) can be supplied to 
            a graph view. Currently there are two ways. The first is from a DataTable coming
            from a DataStore. The second uses reflection to pull values from a property in an object.
            If TableName == null then it is assumed that FieldName points to a property of an object.
            </summary>
        </member>
        <member name="M:Models.Graph.GraphValues.ValidFieldNames(Models.Graph.Graph)">
            <summary>
            Return a list of valid fieldnames.
            </summary>
            <param name="graph">The parent graph</param>
            <returns>The array of field names</returns>
        </member>
        <member name="M:Models.Graph.GraphValues.GetData(Models.Graph.Graph)">
            <summary>
            Return data using reflection
            </summary>
            <param name="graph">The parent graph</param>
            <returns>The return data or null if not found</returns>
        </member>
        <member name="P:Models.Graph.GraphValues.TableName">
            <summary>
            Gets or sets the table name containing the data
            </summary>
        </member>
        <member name="P:Models.Graph.GraphValues.FieldName">
            <summary>
            Gets or sets the field name
            </summary>
        </member>
        <member name="T:Models.FertiliserType">
            <summary>
            A class for holding fertiliser types
            </summary>
        </member>
        <member name="P:Models.FertiliserType.Name">
            <summary>Gets or sets the name.</summary>
            <value>The name.</value>
        </member>
        <member name="P:Models.FertiliserType.Description">
            <summary>Gets or sets the description.</summary>
            <value>The description.</value>
        </member>
        <member name="P:Models.FertiliserType.FractionNO3">
            <summary>Gets or sets the fraction n o3.</summary>
            <value>The fraction n o3.</value>
        </member>
        <member name="P:Models.FertiliserType.FractionNH4">
            <summary>Gets or sets the fraction n h4.</summary>
            <value>The fraction n h4.</value>
        </member>
        <member name="P:Models.FertiliserType.FractionUrea">
            <summary>Gets or sets the fraction urea.</summary>
            <value>The fraction urea.</value>
        </member>
        <member name="P:Models.FertiliserType.FractionRockP">
            <summary>Gets or sets the fraction rock p.</summary>
            <value>The fraction rock p.</value>
        </member>
        <member name="P:Models.FertiliserType.FractionBandedP">
            <summary>Gets or sets the fraction banded p.</summary>
            <value>The fraction banded p.</value>
        </member>
        <member name="P:Models.FertiliserType.FractionLabileP">
            <summary>Gets or sets the fraction labile p.</summary>
            <value>The fraction labile p.</value>
        </member>
        <member name="P:Models.FertiliserType.FractionCa">
            <summary>Gets or sets the fraction ca.</summary>
            <value>The fraction ca.</value>
        </member>
        <member name="T:Models.Fertiliser">
            <summary>
            The fertiliser model
            </summary>
        </member>
        <member name="F:Models.Fertiliser.Soil">
            <summary>The soil</summary>
        </member>
        <member name="F:Models.Fertiliser.Summary">
            <summary>The summary</summary>
        </member>
        <member name="M:Models.Fertiliser.AddDefinitions">
            <summary>Adds the definitions.</summary>
        </member>
        <member name="M:Models.Fertiliser.Apply(System.Double,Models.Fertiliser.Types,System.Double)">
            <summary>Apply fertiliser.</summary>
            <param name="Amount">The amount.</param>
            <param name="Type">The type.</param>
            <param name="Depth">The depth.</param>
            <exception cref="T:Models.Core.ApsimXException">Cannot find fertiliser type ' + Type + '</exception>
        </member>
        <member name="M:Models.Fertiliser.OnDoDailyInitialisation(System.Object,System.EventArgs)">
            <summary>prepare event handler from Clock.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.Fertiliser.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>Called when [simulation commencing].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.Fertiliser.GetLayerDepth(System.Double,System.Double[])">
            <summary>
            Utility function for determining the layer where 'depth' is located in the 'Thickness' array.
            </summary>
            <param name="depth">The depth.</param>
            <param name="thickness">The thickness.</param>
            <returns></returns>
        </member>
        <member name="P:Models.Fertiliser.Definitions">
            <summary>Gets or sets the definitions.</summary>
            <value>The definitions.</value>
        </member>
        <member name="E:Models.Fertiliser.NitrogenChanged">
            <summary>Occurs when [nitrogen changed].</summary>
        </member>
        <member name="P:Models.Fertiliser.NitrogenApplied">
            <summary>Gets the nitrogen applied.</summary>
            <value>The nitrogen applied.</value>
        </member>
        <member name="T:Models.Fertiliser.Types">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.Fertiliser.Types.CalciteCA">
            <summary>The calcite ca</summary>
        </member>
        <member name="F:Models.Fertiliser.Types.CalciteFine">
            <summary>The calcite fine</summary>
        </member>
        <member name="F:Models.Fertiliser.Types.Dolomite">
            <summary>The dolomite</summary>
        </member>
        <member name="F:Models.Fertiliser.Types.NO3N">
            <summary>The n o3 n</summary>
        </member>
        <member name="F:Models.Fertiliser.Types.NH4N">
            <summary>The n h4 n</summary>
        </member>
        <member name="F:Models.Fertiliser.Types.NH4NO3N">
            <summary>The n h4 n o3 n</summary>
        </member>
        <member name="F:Models.Fertiliser.Types.DAP">
            <summary>The dap</summary>
        </member>
        <member name="F:Models.Fertiliser.Types.MAP">
            <summary>The map</summary>
        </member>
        <member name="F:Models.Fertiliser.Types.UreaN">
            <summary>The urea n</summary>
        </member>
        <member name="F:Models.Fertiliser.Types.UreaNO3">
            <summary>The urea n o3</summary>
        </member>
        <member name="F:Models.Fertiliser.Types.Urea">
            <summary>The urea</summary>
        </member>
        <member name="F:Models.Fertiliser.Types.NH4SO4N">
            <summary>The n h4 s o4 n</summary>
        </member>
        <member name="F:Models.Fertiliser.Types.RockP">
            <summary>The rock p</summary>
        </member>
        <member name="F:Models.Fertiliser.Types.BandedP">
            <summary>The banded p</summary>
        </member>
        <member name="F:Models.Fertiliser.Types.BroadcastP">
            <summary>The broadcast p</summary>
        </member>
        <member name="T:Models.Agroforestry.LocalMicroClimate">
            <summary>
            Class to calculate and communicate local microclimate in agroforestry systems
            </summary>
        </member>
        <member name="P:Models.Agroforestry.LocalMicroClimate.StartDate">
            <summary>Gets the start date of the weather file</summary>
        </member>
        <member name="P:Models.Agroforestry.LocalMicroClimate.EndDate">
            <summary>Gets the end date of the weather file</summary>
        </member>
        <member name="P:Models.Agroforestry.LocalMicroClimate.MaxT">
            <summary>Gets or sets the maximum temperature (oc)</summary>
        </member>
        <member name="P:Models.Agroforestry.LocalMicroClimate.MinT">
            <summary>Gets or sets the minimum temperature (oc)</summary>
        </member>
        <member name="P:Models.Agroforestry.LocalMicroClimate.Rain">
            <summary>Gets or sets the rainfall (mm)</summary>
        </member>
        <member name="P:Models.Agroforestry.LocalMicroClimate.Radn">
            <summary>Gets or sets the solar radiation. MJ/m2/day</summary>
        </member>
        <member name="P:Models.Agroforestry.LocalMicroClimate.VP">
            <summary>Gets or sets the vapor pressure</summary>
        </member>
        <member name="P:Models.Agroforestry.LocalMicroClimate.Wind">
            <summary>
            Gets or sets the wind value found in weather file or zero if not specified.
            </summary>
        </member>
        <member name="P:Models.Agroforestry.LocalMicroClimate.CO2">
            <summary>
            Gets or sets the CO2 level. If not specified in the weather file the default is 350.
            </summary>
        </member>
        <member name="P:Models.Agroforestry.LocalMicroClimate.Latitude">
            <summary>Gets the latitude</summary>
        </member>
        <member name="P:Models.Agroforestry.LocalMicroClimate.Tav">
            <summary>Gets the average temperature</summary>
        </member>
        <member name="P:Models.Agroforestry.LocalMicroClimate.Amp">
            <summary>Gets the temperature amplitude.</summary>
        </member>
        <member name="P:Models.Agroforestry.LocalMicroClimate.DayLength">
            <summary>Gets the duration of the day in hours.</summary>
        </member>
        <member name="T:Models.Soils.Phosphorus">
            <summary>
            Model for holding information about the phosphorus model
            </summary>
        </member>
        <member name="P:Models.Soils.Phosphorus.RootCP">
            <summary>Gets or sets the root cp.</summary>
            <value>The root cp.</value>
        </member>
        <member name="P:Models.Soils.Phosphorus.RateDissolRock">
            <summary>Gets or sets the rate dissol rock.</summary>
            <value>The rate dissol rock.</value>
        </member>
        <member name="P:Models.Soils.Phosphorus.RateLossAvail">
            <summary>Gets or sets the rate loss avail.</summary>
            <value>The rate loss avail.</value>
        </member>
        <member name="P:Models.Soils.Phosphorus.SorptionCoeff">
            <summary>Gets or sets the sorption coeff.</summary>
            <value>The sorption coeff.</value>
        </member>
        <member name="P:Models.Soils.Phosphorus.Thickness">
            <summary>Gets or sets the thickness.</summary>
            <value>The thickness.</value>
        </member>
        <member name="P:Models.Soils.Phosphorus.LabileP">
            <summary>Gets or sets the labile p.</summary>
            <value>The labile p.</value>
        </member>
        <member name="P:Models.Soils.Phosphorus.Sorption">
            <summary>Gets or sets the sorption.</summary>
            <value>The sorption.</value>
        </member>
        <member name="P:Models.Soils.Phosphorus.BandedP">
            <summary>Gets or sets the banded p.</summary>
            <value>The banded p.</value>
        </member>
        <member name="P:Models.Soils.Phosphorus.RockP">
            <summary>Gets or sets the rock p.</summary>
            <value>The rock p.</value>
        </member>
        <member name="T:Models.Soils.LayerStructure">
            <summary>
            A model for holding layer structure information
            </summary>
        </member>
        <member name="P:Models.Soils.LayerStructure.Thickness">
            <summary>Gets or sets the thickness.</summary>
            <value>The thickness.</value>
        </member>
        <member name="T:Models.PMF.Phen.GotoPhase">
            <summary>
            A special phase that jumps to another phase.
            </summary>
        </member>
        <member name="M:Models.PMF.Phen.GotoPhase.DoTimeStep(System.Double)">
            <summary>
            This function increments thermal time accumulated in each phase
            and returns a non-zero value if the phase target is met today so
            the phenology class knows to progress to the next phase and how
            much tt to pass it on the first day.
            </summary>
            <param name="PropOfDayToUse">The property of day to use.</param>
            <returns></returns>
            <exception cref="T:System.Exception">Cannot call rewind class</exception>
        </member>
        <member name="P:Models.PMF.Phen.GotoPhase.FractionComplete">
            <summary>Gets the fraction complete.</summary>
            <value>The fraction complete.</value>
            <exception cref="T:System.Exception">Cannot call rewind class</exception>
        </member>
        <member name="P:Models.PMF.Phen.GotoPhase.PhaseNameToGoto">
            <summary>The phase name to goto</summary>
        </member>
        <member name="T:Models.PMF.Functions.XYPairs">
            <summary>
            Returns a y value from the specified xy matrix corresponding to the current value of the Xproperty
            </summary>
        </member>
        <member name="M:Models.PMF.Functions.XYPairs.ValueIndexed(System.Double)">
            <summary>Values the indexed.</summary>
            <param name="dX">The d x.</param>
            <returns></returns>
        </member>
        <member name="P:Models.PMF.Functions.XYPairs.X">
            <summary>Gets or sets the x.</summary>
            <value>The x.</value>
        </member>
        <member name="P:Models.PMF.Functions.XYPairs.Y">
            <summary>Gets or sets the y.</summary>
            <value>The y.</value>
        </member>
        <member name="P:Models.PMF.Functions.XYPairs.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
            <exception cref="T:System.Exception">Cannot call Value on XYPairs function. Must be indexed.</exception>
        </member>
        <member name="T:Models.PMF.Functions.PowerFunction">
            <summary>
            Raises the value of the child to the power of the exponent specified
            </summary>
        </member>
        <member name="M:Models.PMF.Functions.PowerFunction.#ctor">
            <summary>constructor</summary>
        </member>
        <member name="F:Models.PMF.Functions.PowerFunction.ChildFunctions">
            <summary>The child functions</summary>
        </member>
        <member name="P:Models.PMF.Functions.PowerFunction.Exponent">
            <summary>The exponent</summary>
        </member>
        <member name="P:Models.PMF.Functions.PowerFunction.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
            <exception cref="T:System.Exception">Power function must have only one argument</exception>
        </member>
        <member name="T:Models.Log">
            <summary>
            A low level log component that writes state / parameter variables to a text file.
            </summary>
        </member>
        <member name="M:Models.Log.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>
            Initialise the model.
            </summary>
        </member>
        <member name="M:Models.Log.OnSimulationCompleted(System.Object,System.EventArgs)">
            <summary>
            Simulation has completed.
            </summary>
        </member>
        <member name="T:Models.Factorial.Experiment">
            <summary>
            Encapsulates a factorial experiment.f
            </summary>
        </member>
        <member name="M:Models.Factorial.Experiment.Create">
            <summary>
            Create all simulations.
            </summary>
        </member>
        <member name="M:Models.Factorial.Experiment.CreateSpecificSimulation(System.String)">
            <summary>
            Create a specific simulation.
            </summary>
        </member>
        <member name="M:Models.Factorial.Experiment.Names">
            <summary>
            Return a list of simulation names.
            </summary>
        </member>
        <member name="M:Models.Factorial.Experiment.AllCombinations">
            <summary>
            Return a list of list of factorvalue objects for all permutations.
            </summary>
        </member>
        <member name="M:Models.Factorial.Experiment.AllCombinationsOf``1(System.Collections.Generic.List{``0}[])">
            <summary>
            From: http://stackoverflow.com/questions/545703/combination-of-listlistint
            </summary>
        </member>
        <member name="P:Models.Factorial.Experiment.BaseSimulation">
            <summary>
            Gets the base simulation
            </summary>
        </member>
        <member name="T:Models.PostSimulationTools.TimeSeriesStats">
            <summary>
            A post processing model that produces time series stats.
            </summary>
        </member>
        <member name="M:Models.PostSimulationTools.TimeSeriesStats.Run(Models.DataStore)">
            <summary>
            The main run method called to fill tables in the specified DataStore.
            </summary>
            <param name="dataStore">The DataStore to work with</param>
        </member>
        <member name="M:Models.PostSimulationTools.TimeSeriesStats.CalcStatsRow(System.Data.DataView,System.String,System.String,System.String,System.Data.DataTable)">
            <summary>
            Calculate stats on the 'view' passed in and add a DataRow to 'statsData'
            </summary>
            <param name="view">The data view to calculate stats on</param>
            <param name="observedColumnName">The observed column name to use</param>
            <param name="predictedColumnName">The predicted column name to use</param>
            <param name="seriesName">The name of the series</param>
            <param name="statsData">The stats data table to add rows to</param>
        </member>
        <member name="P:Models.PostSimulationTools.TimeSeriesStats.TableName">
            <summary>
            Gets or sets the name of the predicted/observed table name.
            </summary>
        </member>
        <member name="T:Models.PMF.Functions.IFunctionArray">
            <summary>
            Interface for all array functions i.e. functions that return
            multiple values.
            </summary>
        </member>
        <member name="P:Models.PMF.Functions.IFunctionArray.Values">
            <summary>Gets the values.</summary>
            <value>The values.</value>
        </member>
        <member name="T:Models.PMF.Functions.DeltaFunction">
            <summary>
            This function returns the daily delta for its child function
            </summary>
        </member>
        <member name="F:Models.PMF.Functions.DeltaFunction.YesterdaysValue">
            <summary>The accumulated value</summary>
        </member>
        <member name="F:Models.PMF.Functions.DeltaFunction.Integral">
            <summary>The child function to return a delta for</summary>
        </member>
        <member name="F:Models.PMF.Functions.DeltaFunction.Phenology">
            <summary>The phenology</summary>
        </member>
        <member name="M:Models.PMF.Functions.DeltaFunction.OnPlantEnding(System.Object,System.EventArgs)">
            <summary>Called when [EndCrop].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Models.PMF.Functions.DeltaFunction.StartStageName">
            <summary>The start stage name</summary>
        </member>
        <member name="P:Models.PMF.Functions.DeltaFunction.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
        </member>
        <member name="T:Models.Clock">
            <summary>
            The clock model
            </summary>
        </member>
        <member name="F:Models.Clock.args">
            <summary>The arguments</summary>
        </member>
        <member name="F:Models.Clock.Summary">
            <summary>The summary</summary>
        </member>
        <member name="M:Models.Clock.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>An event handler to allow us to initialise ourselves.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.Clock.OnDoCommence(System.Object,System.EventArgs)">
            <summary>An event handler to signal start of a simulation.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Models.Clock.StartDate">
            <summary>Gets or sets the start date.</summary>
            <value>The start date.</value>
        </member>
        <member name="P:Models.Clock.EndDate">
            <summary>Gets or sets the end date.</summary>
            <value>The end date.</value>
        </member>
        <member name="E:Models.Clock.StartOfSimulation">
            <summary>Occurs when [start of simulation].</summary>
        </member>
        <member name="E:Models.Clock.StartOfDay">
            <summary>Occurs when [start of day].</summary>
        </member>
        <member name="E:Models.Clock.StartOfMonth">
            <summary>Occurs when [start of month].</summary>
        </member>
        <member name="E:Models.Clock.StartOfYear">
            <summary>Occurs when [start of year].</summary>
        </member>
        <member name="E:Models.Clock.EndOfDay">
            <summary>Occurs when [end of day].</summary>
        </member>
        <member name="E:Models.Clock.EndOfMonth">
            <summary>Occurs when [end of month].</summary>
        </member>
        <member name="E:Models.Clock.EndOfYear">
            <summary>Occurs when [end of year].</summary>
        </member>
        <member name="E:Models.Clock.EndOfSimulation">
            <summary>Occurs when [end of simulation].</summary>
        </member>
        <member name="E:Models.Clock.DoWeather">
            <summary>Occurs when [do weather].</summary>
        </member>
        <member name="E:Models.Clock.DoDailyInitialisation">
            <summary>Occurs when [do daily initialisation].</summary>
        </member>
        <member name="E:Models.Clock.DoInitialSummary">
            <summary>Occurs when [do initial summary].</summary>
        </member>
        <member name="E:Models.Clock.DoManagement">
            <summary>Occurs when [do management].</summary>
        </member>
        <member name="E:Models.Clock.DoEnergyArbitration">
            <summary>Occurs when [do energy arbitration].</summary>
        </member>
        <member name="E:Models.Clock.DoSoilWaterMovement">
            <summary>Occurs when [do soil water movement].</summary>
        </member>
        <member name="E:Models.Clock.DoSoilOrganicMatter">
            <summary>Occurs when [do soil organic matter].</summary>
        </member>
        <member name="E:Models.Clock.DoSurfaceOrganicMatterDecomposition">
            <summary>Occurs when [do surface organic matter decomposition].</summary>
        </member>
        <member name="E:Models.Clock.DoWaterArbitration">
            <summary>Occurs when [do water arbitration].</summary>
        </member>
        <member name="E:Models.Clock.DoPhenology">
            <summary>Occurs when [do phenology].</summary>                             
        </member>
        <member name="E:Models.Clock.DoPotentialPlantGrowth">
            <summary>Occurs when [do potential plant growth].</summary>
        </member>
        <member name="E:Models.Clock.DoPotentialPlantPartioning">
            <summary>Occurs when [do potential plant partioning].</summary>
        </member>
        <member name="E:Models.Clock.DoNutrientArbitration">
            <summary>Occurs when [do nutrient arbitration].</summary>
        </member>
        <member name="E:Models.Clock.DoActualPlantPartioning">
            <summary>Occurs when [do potential plant partioning].</summary>
        </member>
        <member name="E:Models.Clock.DoActualPlantGrowth">
            <summary>Occurs when [do actual plant growth].</summary>
        </member>
        <member name="E:Models.Clock.DoPlantGrowth">
            <summary>Occurs when [do plant growth].</summary>
        </member>
        <member name="E:Models.Clock.DoUpdate">
            <summary>Occurs when [do update].</summary>
        </member>
        <member name="E:Models.Clock.DoManagementCalculations">
            <summary>Occurs when [do management calculations].</summary>
        </member>
        <member name="E:Models.Clock.DoReportCalculations">
            <summary>Occurs when [do report calculations].</summary>
        </member>
        <member name="E:Models.Clock.DoReport">
            <summary>Occurs when [do report].</summary>
        </member>
        <member name="P:Models.Clock.Today">
            <summary>Gets the today.</summary>
            <value>The today.</value>
        </member>
        <member name="T:Models.Soils.RunoffEventType">
            <summary>
            A structure for holding runoff event information
            </summary>
        </member>
        <member name="F:Models.Soils.RunoffEventType.runoff">
            <summary>The runoff</summary>
        </member>
        <member name="T:Models.Soils.RunoffEventDelegate">
            <summary>
            
            </summary>
            <param name="Runoff">The runoff.</param>
        </member>
        <member name="T:Models.PMF.Phen.EndPhase">
            <summary>The end phase in phenology</summary>
        </member>
        <member name="F:Models.PMF.Phen.EndPhase._CumulativeValue">
            <summary>The _ cumulative value</summary>
        </member>
        <member name="M:Models.PMF.Phen.EndPhase.DoTimeStep(System.Double)">
            <summary>Do our timestep development</summary>
            <param name="PropOfDayToUse">The property of day to use.</param>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.Phen.EndPhase.ResetPhase">
            <summary>Resets the phase.</summary>
        </member>
        <member name="P:Models.PMF.Phen.EndPhase.CumulativeValue">
            <summary>Gets the cumulative value.</summary>
            <value>The cumulative value.</value>
        </member>
        <member name="P:Models.PMF.Phen.EndPhase.FractionComplete">
            <summary>Return a fraction of phase complete.</summary>
            <value>The fraction complete.</value>
        </member>
        <member name="T:Models.PMF.Functions.PhotoperiodFunction">
            <summary>Returns the value of todays photoperiod calculated using the specified latitude and twilight sun angle threshold.  If variable called ClimateControl.PhotoPeriod can be found this will be used instead.</summary>
            <remarks>The day length is calculated with \ref MathUtilities.DayLength.</remarks>
            \pre A \ref Models.WeatherFile function has to exist.
            \pre A \ref Models.Clock function has to be existed to retrieve day of year
            \param Twilight The interval between sunrise or sunset and the time when the true centre of the sun is below the horizon as a specified angle.
            \retval The day length of a specified day and location. Variable "photoperiod" will be returned if simulation environment has a variable called ClimateControl.PhotoPeriod.
        </member>
        <member name="F:Models.PMF.Functions.PhotoperiodFunction.MetData">
            <summary>The met data</summary>
        </member>
        <member name="F:Models.PMF.Functions.PhotoperiodFunction.Clock">
            <summary>The clock</summary>
        </member>
        <member name="M:Models.PMF.Functions.PhotoperiodFunction.Document(System.Collections.Generic.List{Models.Core.AutoDocumentation.ITag},System.Int32,System.Int32)">
            <summary>Writes documentation for this function by adding to the list of documentation tags.</summary>
            <param name="tags">The list of tags to add to.</param>
            <param name="headingLevel">The level (e.g. H2) of the headings.</param>
            <param name="indent">The level of indentation 1, 2, 3 etc.</param>
        </member>
        <member name="P:Models.PMF.Functions.PhotoperiodFunction.Twilight">
            <summary>The twilight</summary>
        </member>
        <member name="P:Models.PMF.Functions.PhotoperiodFunction.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
        </member>
        <member name="T:Models.PMF.Functions.LinearInterpolationFunction">
            <summary>
            Linear interpolation function
            </summary>
        </member>
        <member name="F:Models.PMF.Functions.LinearInterpolationFunction.YsAreAllTheSame">
            <summary>The ys are all the same</summary>
        </member>
        <member name="F:Models.PMF.Functions.LinearInterpolationFunction.XYPairs">
            <summary>Gets the xy pairs.</summary>
            <value>The xy pairs.</value>
        </member>
        <member name="M:Models.PMF.Functions.LinearInterpolationFunction.OnLoaded">
            <summary>Called when [loaded].</summary>
        </member>
        <member name="M:Models.PMF.Functions.LinearInterpolationFunction.ValueForX(System.Double)">
            <summary>Values for x.</summary>
            <param name="XValue">The x value.</param>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.Functions.LinearInterpolationFunction.Document(System.Collections.Generic.List{Models.Core.AutoDocumentation.ITag},System.Int32,System.Int32)">
            <summary>Writes documentation for this function by adding to the list of documentation tags.</summary>
            <param name="tags">The list of tags to add to.</param>
            <param name="headingLevel">The level (e.g. H2) of the headings.</param>
            <param name="indent">The level of indentation 1, 2, 3 etc.</param>
        </member>
        <member name="P:Models.PMF.Functions.LinearInterpolationFunction.XProperty">
            <summary>The x property</summary>
        </member>
        <member name="P:Models.PMF.Functions.LinearInterpolationFunction.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
            <exception cref="T:System.Exception">Cannot find value for  + Name +  XProperty:  + XProperty</exception>
        </member>
        <member name="P:Models.PMF.Functions.LinearInterpolationFunction.Values">
            <summary>Gets the values.</summary>
            <value>The values.</value>
            <exception cref="T:System.Exception">Cannot find value for  + Name +  XProperty:  + XProperty</exception>
        </member>
        <member name="T:Models.PMF.Functions.Constant">
            <summary>
            A constant value function
            </summary>
        </member>
        <member name="M:Models.PMF.Functions.Constant.Document(System.Collections.Generic.List{Models.Core.AutoDocumentation.ITag},System.Int32,System.Int32)">
            <summary>Writes documentation for this function by adding to the list of documentation tags.</summary>
            <param name="tags">The list of tags to add to.</param>
            <param name="headingLevel">The level (e.g. H2) of the headings.</param>
            <param name="indent">The level of indentation 1, 2, 3 etc.</param>
        </member>
        <member name="P:Models.PMF.Functions.Constant.Value">
            <summary>Gets the value.</summary>
        </member>
        <member name="T:Models.NewCanopyType">
            <summary>
            A new canopy type
            </summary>
        </member>
        <member name="F:Models.NewCanopyType.sender">
            <summary>The sender</summary>
        </member>
        <member name="F:Models.NewCanopyType.height">
            <summary>The height</summary>
        </member>
        <member name="F:Models.NewCanopyType.depth">
            <summary>The depth</summary>
        </member>
        <member name="F:Models.NewCanopyType.lai">
            <summary>The lai</summary>
        </member>
        <member name="F:Models.NewCanopyType.lai_tot">
            <summary>The lai_tot</summary>
        </member>
        <member name="F:Models.NewCanopyType.cover">
            <summary>The cover</summary>
        </member>
        <member name="F:Models.NewCanopyType.cover_tot">
            <summary>The cover_tot</summary>
        </member>
        <member name="T:Models.KeyValueArraypair_listType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.KeyValueArraypair_listType.key">
            <summary>The key</summary>
        </member>
        <member name="F:Models.KeyValueArraypair_listType.value">
            <summary>The value</summary>
        </member>
        <member name="T:Models.ChangeGSMaxType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.ChangeGSMaxType.component">
            <summary>The component</summary>
        </member>
        <member name="F:Models.ChangeGSMaxType.dlt">
            <summary>The DLT</summary>
        </member>
        <member name="T:Models.KeyValueArrayType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.KeyValueArrayType.pair_list">
            <summary>The pair_list</summary>
        </member>
        <member name="T:Models.KeyValueArraypair_listDelegate">
            <summary>
            
            </summary>
            <param name="Data">The data.</param>
        </member>
        <member name="T:Models.MicroClimate">
            <summary>
            A more-or-less direct port of the Fortran MicroMet model
            Ported by Eric Zurcher Jun 2011, first to C#, then automatically
            to VB via the converter in SharpDevelop.
            Ported back to C# by Dean Holzworth
            </summary>
            <remarks>
            <para>
            I have generally followed the original division of interface code and "science" code
            into different units (formerly MicroMet.for and MicroScience.for)
            </para>
            <para>
            Function routines were changed slightly as part of the conversion process. The "micromet_"
            prefixes were dropped, as the functions are now members of a MicroMet class, and that class
            membership keeps them distinguishable from other functions. A prefix of "Calc" was added to
            some function names (e.g., CalcAverageT) if, after dropping the old "micromet_" prefix, there
            was potential confusion between the function name and a variable name.
            </para>
            <para> The following Fortran routines, originally in MicroScience.for, were NOT converted,
            because they were not actively being used:</para>
            <para>    micromet_PenmanMonteith (the converted routine below was originally micromet_Penman_Monteith from MicroMet.for)</para>
            <para>    micromet_ActualCanopyCond (the routine below was originally micromet_CanopyConductance)</para>
            <para>    micromet_FrictionVelocity</para>
            <para>    micromet_ZeroPlaneDispl</para>
            <para>    micromet_RoughnessLength</para>
            <para>    micromet_Radn2SolRad</para>
            <para>    micromet_FreeEvapRate</para>
            <para>    micromet_AerodynamicConductance (the routine below was originally micromet_AerodynamicConductanceFAO)</para>
            </remarks>
        </member>
        <member name="F:Models.MicroClimate.svp_A">
            <summary>The SVP_ a</summary>
        </member>
        <member name="F:Models.MicroClimate.svp_B">
            <summary>The SVP_ b</summary>
        </member>
        <member name="F:Models.MicroClimate.svp_C">
            <summary>The SVP_ c</summary>
        </member>
        <member name="F:Models.MicroClimate.abs_temp">
            <summary>The abs_temp</summary>
        </member>
        <member name="F:Models.MicroClimate.r_gas">
            <summary>The r_gas</summary>
        </member>
        <member name="F:Models.MicroClimate.mwh2o">
            <summary>The mwh2o</summary>
        </member>
        <member name="F:Models.MicroClimate.mwair">
            <summary>The mwair</summary>
        </member>
        <member name="F:Models.MicroClimate.molef">
            <summary>The molef</summary>
        </member>
        <member name="F:Models.MicroClimate.Cp">
            <summary>The cp</summary>
        </member>
        <member name="F:Models.MicroClimate.stef_boltz">
            <summary>The stef_boltz</summary>
        </member>
        <member name="F:Models.MicroClimate.c_cloud">
            <summary>The c_cloud</summary>
        </member>
        <member name="F:Models.MicroClimate.Deg2Rad">
            <summary>The deg2 RAD</summary>
        </member>
        <member name="F:Models.MicroClimate.RhoW">
            <summary>The rho w</summary>
        </member>
        <member name="F:Models.MicroClimate.svp_fract">
            <summary>The svp_fract</summary>
        </member>
        <member name="F:Models.MicroClimate.SunSetAngle">
            <summary>The sun set angle</summary>
        </member>
        <member name="F:Models.MicroClimate.hr2s">
            <summary>The HR2S</summary>
        </member>
        <member name="F:Models.MicroClimate.zone">
            <summary>The zone</summary>
        </member>
        <member name="F:Models.MicroClimate.Clock">
            <summary>The clock</summary>
        </member>
        <member name="F:Models.MicroClimate.Weather">
            <summary>The weather</summary>
        </member>
        <member name="F:Models.MicroClimate._albedo">
            <summary>The _albedo</summary>
        </member>
        <member name="M:Models.MicroClimate.#ctor">
            <summary>Constructor</summary>
        </member>
        <member name="F:Models.MicroClimate.air_pressure">
            <summary>The air_pressure</summary>
        </member>
        <member name="F:Models.MicroClimate.soil_emissivity">
            <summary>The soil_emissivity</summary>
        </member>
        <member name="F:Models.MicroClimate.sun_angle">
            <summary>The sun_angle</summary>
        </member>
        <member name="F:Models.MicroClimate.soil_heat_flux_fraction">
            <summary>The soil_heat_flux_fraction</summary>
        </member>
        <member name="F:Models.MicroClimate.night_interception_fraction">
            <summary>The night_interception_fraction</summary>
        </member>
        <member name="F:Models.MicroClimate.windspeed_default">
            <summary>The windspeed_default</summary>
        </member>
        <member name="F:Models.MicroClimate.refheight">
            <summary>The refheight</summary>
        </member>
        <member name="F:Models.MicroClimate.albedo">
            <summary>The albedo</summary>
        </member>
        <member name="F:Models.MicroClimate.emissivity">
            <summary>The emissivity</summary>
        </member>
        <member name="F:Models.MicroClimate.gsmax">
            <summary>The gsmax</summary>
        </member>
        <member name="F:Models.MicroClimate.r50">
            <summary>The R50</summary>
        </member>
        <member name="F:Models.MicroClimate.soil_heat">
            <summary>The soil_heat</summary>
        </member>
        <member name="F:Models.MicroClimate.dryleaffraction">
            <summary>The dryleaffraction</summary>
        </member>
        <member name="M:Models.MicroClimate.OnDoDailyInitialisation(System.Object,System.EventArgs)">
            <summary>Called when [do daily initialisation].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.MicroClimate.OnChangeGSMax(Models.ChangeGSMaxType)">
            <summary>Called when [change gs maximum].</summary>
            <param name="ChangeGSMax">The change gs maximum.</param>
            <exception cref="T:System.Exception">Unknown Canopy Component:  + Convert.ToString(ChangeGSMax.component)</exception>
        </member>
        <member name="M:Models.MicroClimate.GetAllCanopies">
            <summary>Gets all canopies in simulation</summary>
        </member>
        <member name="M:Models.MicroClimate.DoEnergyArbitration(System.Object,System.EventArgs)">
            <summary>Called when [do canopy energy balance].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.MicroClimate.Clear(Models.MicroClimate.ComponentDataStruct)">
            <summary>Clears the specified componentdata</summary>
            <param name="c">The c.</param>
        </member>
        <member name="M:Models.MicroClimate.OnLoaded">
            <summary>Called when [loaded].</summary>
        </member>
        <member name="M:Models.MicroClimate.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>Called when [simulation commencing].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.MicroClimate.AddCropTypes">
            <summary>Adds the crop types.</summary>
        </member>
        <member name="M:Models.MicroClimate.SetupCropTypes(System.String,System.String)">
            <summary>Setups the crop types.</summary>
            <param name="Name">The name.</param>
            <param name="Type">The type.</param>
        </member>
        <member name="F:Models.MicroClimate.maxt">
            <summary>The maxt</summary>
        </member>
        <member name="F:Models.MicroClimate.mint">
            <summary>The mint</summary>
        </member>
        <member name="F:Models.MicroClimate.radn">
            <summary>The radn</summary>
        </member>
        <member name="F:Models.MicroClimate.rain">
            <summary>The rain</summary>
        </member>
        <member name="F:Models.MicroClimate.vp">
            <summary>The vp</summary>
        </member>
        <member name="F:Models.MicroClimate.wind">
            <summary>The wind</summary>
        </member>
        <member name="F:Models.MicroClimate.use_external_windspeed">
            <summary>The use_external_windspeed</summary>
        </member>
        <member name="F:Models.MicroClimate.windspeed_checked">
            <summary>The windspeed_checked</summary>
        </member>
        <member name="F:Models.MicroClimate.day">
            <summary>The day</summary>
        </member>
        <member name="F:Models.MicroClimate.year">
            <summary>The year</summary>
        </member>
        <member name="F:Models.MicroClimate.netLongWave">
            <summary>The net long wave</summary>
        </member>
        <member name="F:Models.MicroClimate.sumRs">
            <summary>The sum rs</summary>
        </member>
        <member name="F:Models.MicroClimate.averageT">
            <summary>The average t</summary>
        </member>
        <member name="F:Models.MicroClimate.sunshineHours">
            <summary>The sunshine hours</summary>
        </member>
        <member name="F:Models.MicroClimate.fractionClearSky">
            <summary>The fraction clear sky</summary>
        </member>
        <member name="F:Models.MicroClimate.dayLength">
            <summary>The day length</summary>
        </member>
        <member name="F:Models.MicroClimate.dayLengthLight">
            <summary>The day length light</summary>
        </member>
        <member name="F:Models.MicroClimate.DeltaZ">
            <summary>The delta z</summary>
        </member>
        <member name="F:Models.MicroClimate.layerKtot">
            <summary>The layer ktot</summary>
        </member>
        <member name="F:Models.MicroClimate.layerLAIsum">
            <summary>The layer la isum</summary>
        </member>
        <member name="F:Models.MicroClimate.numLayers">
            <summary>The number layers</summary>
        </member>
        <member name="M:Models.MicroClimate.FetchTableValue(System.String,System.Int32,System.Int32)">
            <summary>Fetches the table value.</summary>
            <param name="field">The field.</param>
            <param name="compNo">The comp no.</param>
            <param name="layerNo">The layer no.</param>
            <returns></returns>
            <exception cref="T:System.Exception">Unknown table element:  + field</exception>
        </member>
        <member name="M:Models.MicroClimate.FindComponentIndex(System.String)">
            <summary>Finds the index of the component.</summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Models.MicroClimate.CanopyCompartments">
            <summary>Canopies the compartments.</summary>
        </member>
        <member name="M:Models.MicroClimate.MetVariables">
            <summary>Mets the variables.</summary>
        </member>
        <member name="M:Models.MicroClimate.DefineLayers">
            <summary>Break the combined Canopy into layers</summary>
        </member>
        <member name="M:Models.MicroClimate.DivideComponents">
            <summary>Break the components into layers</summary>
        </member>
        <member name="M:Models.MicroClimate.LightExtinction">
            <summary>Calculate light extinction parameters</summary>
            <exception cref="T:System.Exception">Unrealistically high cover value in MicroMet i.e. &gt; -.9999</exception>
        </member>
        <member name="M:Models.MicroClimate.BalanceCanopyEnergy">
            <summary>Perform the overall Canopy Energy Balance</summary>
        </member>
        <member name="M:Models.MicroClimate.CalculateGc">
            <summary>Calculate the canopy conductance for system compartments</summary>
        </member>
        <member name="M:Models.MicroClimate.CalculateGa">
            <summary>Calculate the aerodynamic conductance for system compartments</summary>
        </member>
        <member name="M:Models.MicroClimate.CalculateInterception">
            <summary>Calculate the interception loss of water from the canopy</summary>
        </member>
        <member name="M:Models.MicroClimate.CalculatePM">
            <summary>Calculate the Penman-Monteith water demand</summary>
        </member>
        <member name="M:Models.MicroClimate.CalculateOmega">
            <summary>Calculate the aerodynamic decoupling for system compartments</summary>
        </member>
        <member name="M:Models.MicroClimate.SendEnergyBalanceEvent">
            <summary>Send an energy balance event</summary>
        </member>
        <member name="M:Models.MicroClimate.CanopyConductance(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Calculate the crop canopy conductance
            <param name="cropGsMax">crop-specific maximum stomatal conductance (m/s)</param>
            <param name="cropR50">crop-specific SolRad at which stomatal conductance decreases to 50% (W/m2)</param>
            <param name="cropRGfac">crop-specific relative growth stress factor (0-1)</param>
            <param name="cropLAIfac">crop-specific LAI fraction of total LAI in current layer (0-1)</param>
            <param name="layerK">layer-averaged light extinction coeficient (-)</param>
            <param name="layerLAI">LAI within the current layer (m2/m2)</param>
            <param name="layerSolRad">solar radiation arriving at the top of the current layer(W/m2)</param>
            </summary>
        </member>
        <member name="M:Models.MicroClimate.AerodynamicConductanceFAO(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Calculate the aerodynamic conductance using FAO approach
            </summary>
        </member>
        <member name="M:Models.MicroClimate.CalcPenmanMonteith(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Calculate the Penman-Monteith water demand
            </summary>
        </member>
        <member name="M:Models.MicroClimate.CalcPETr(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Calculate the radiation-driven term for the Penman-Monteith water demand
            </summary>
        </member>
        <member name="M:Models.MicroClimate.CalcPETa(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Calculate the aerodynamically-driven term for the Penman-Monteith water demand
            </summary>
        </member>
        <member name="M:Models.MicroClimate.CalcRhoA(System.Double,System.Double)">
            <summary>
            Calculate the density of air (kg/m3) at a given temperature
            </summary>
        </member>
        <member name="M:Models.MicroClimate.CalcOmega(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Calculate the Jarvis and McNaughton decoupling coefficient, omega
            </summary>
        </member>
        <member name="M:Models.MicroClimate.CalcNondQsdT(System.Double,System.Double)">
            <summary>
            Calculate Non_dQs_dT - the dimensionless valu for 
            d(sat spec humidity)/dT ((kg/kg)/K) FROM TETEN FORMULA
            </summary>
        </member>
        <member name="M:Models.MicroClimate.CalcSVP(System.Double)">
            <summary>
            Calculate the saturated vapour pressure for a given temperature
            </summary>
        </member>
        <member name="M:Models.MicroClimate.CalcSpecificVPD(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Calculate the vapour pressure deficit
            <param name="vp">(INPUT) vapour pressure (hPa = mbar)</param>
            <param name="mint">(INPUT) minimum temperature (oC)</param>
            <param name="maxt">(INPUT) maximum temperature (oC)</param>
            <param name="airPressure">(INPUT) Air pressure (hPa)</param>
            </summary>
        </member>
        <member name="M:Models.MicroClimate.CalcSpecificHumidity(System.Double,System.Double)">
            <summary>
            Calculate specific humidity from vapour pressure
            <param name="vp">vapour pressure (hPa = mbar)</param>
            <param name="airPressure">air pressure (hPa)</param>
            </summary>
        </member>
        <member name="M:Models.MicroClimate.CalcVPD(System.Double,System.Double,System.Double)">
            <summary>
            Calculate the vapour pressure deficit
            <param name="vp">(INPUT) vapour pressure (hPa = mbar)</param>
            <param name="mint">(INPUT) minimum temperature (oC)</param>
            <param name="maxt">(INPUT) maximum temperature (oC)</param>
            </summary>
        </member>
        <member name="M:Models.MicroClimate.CalcLambda(System.Double)">
            <summary>
            Calculate the lambda (latent heat of vapourisation for water) (J/kg)
            </summary>
        </member>
        <member name="M:Models.MicroClimate.ShortWaveRadiation">
            <summary>
            Calculates interception of short wave by canopy compartments
            </summary>
        </member>
        <member name="M:Models.MicroClimate.EnergyTerms">
            <summary>
            Calculate the overall system energy terms
            </summary>
        </member>
        <member name="M:Models.MicroClimate.LongWaveRadiation">
            <summary>
            Calculate Net Long Wave Radiation Balance
            </summary>
        </member>
        <member name="M:Models.MicroClimate.LongWave(System.Double,System.Double,System.Double)">
            <summary>
            Calculate the net longwave radiation 'in' (W/m2)
            <param name="temperature">temperature  (oC)</param>
            <param name="fracClearSkyRad">R/Ro, SunshineHrs/DayLength (0-1)</param>
            <param name="emmisCanopy">canopy emmissivity</param>
            <returns>net longwave radiation 'in' (W/m2)</returns>
            </summary>
        </member>
        <member name="M:Models.MicroClimate.SoilHeatRadiation">
            <summary>
            Calculate Radiation loss to soil heating
            </summary>
        </member>
        <member name="M:Models.MicroClimate.SoilHeatFlux(System.Double,System.Double,System.Double)">
            <summary>
            Calculate the daytime soil heat flux
            <param name="radn">(INPUT) Incoming Radiation</param>
            <param name="radnint">(INPUT) Intercepted incoming radiation</param>
            <param name="soilHeatFluxFraction">(INPUT) Fraction of surface radiation absorbed</param>
            </summary>
        </member>
        <member name="M:Models.MicroClimate.RadnGreenFraction(System.Int32)">
            <summary>
            Calculate the proportion of light intercepted by a given component that corresponds to green leaf
            </summary>
        </member>
        <member name="P:Models.MicroClimate.a_interception">
            <summary>Gets or sets the a_interception.</summary>
            <value>The a_interception.</value>
        </member>
        <member name="P:Models.MicroClimate.b_interception">
            <summary>Gets or sets the b_interception.</summary>
            <value>The b_interception.</value>
        </member>
        <member name="P:Models.MicroClimate.c_interception">
            <summary>Gets or sets the c_interception.</summary>
            <value>The c_interception.</value>
        </member>
        <member name="P:Models.MicroClimate.d_interception">
            <summary>Gets or sets the d_interception.</summary>
            <value>The d_interception.</value>
        </member>
        <member name="P:Models.MicroClimate.soil_albedo">
            <summary>Gets or sets the soil_albedo.</summary>
            <value>The soil_albedo.</value>
        </member>
        <member name="P:Models.MicroClimate.interception">
            <summary>Gets the interception.</summary>
            <value>The interception.</value>
        </member>
        <member name="P:Models.MicroClimate.gc">
            <summary>Gets the gc.</summary>
            <value>The gc.</value>
        </member>
        <member name="P:Models.MicroClimate.ga">
            <summary>Gets the ga.</summary>
            <value>The ga.</value>
        </member>
        <member name="P:Models.MicroClimate.petr">
            <summary>Gets the petr.</summary>
            <value>The petr.</value>
        </member>
        <member name="P:Models.MicroClimate.peta">
            <summary>Gets the peta.</summary>
            <value>The peta.</value>
        </member>
        <member name="P:Models.MicroClimate.net_radn">
            <summary>Gets the net_radn.</summary>
            <value>The net_radn.</value>
        </member>
        <member name="P:Models.MicroClimate.net_rs">
            <summary>Gets the net_rs.</summary>
            <value>The net_rs.</value>
        </member>
        <member name="P:Models.MicroClimate.net_rl">
            <summary>Gets the net_rl.</summary>
            <value>The net_rl.</value>
        </member>
        <member name="P:Models.MicroClimate.gsmax_array">
            <summary>Gets the gsmax_array.</summary>
            <value>The gsmax_array.</value>
        </member>
        <member name="P:Models.MicroClimate.ComponentData">
            <summary>Gets or sets the component data.</summary>
            <value>The component data.</value>
        </member>
        <member name="T:Models.MicroClimate.ComponentDataStruct">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.MicroClimate.ComponentDataStruct.Name">
            <summary>The name</summary>
        </member>
        <member name="F:Models.MicroClimate.ComponentDataStruct.Type">
            <summary>The type</summary>
        </member>
        <member name="F:Models.MicroClimate.ComponentDataStruct.Crop">
            <summary>The crop</summary>
        </member>
        <member name="F:Models.MicroClimate.ComponentDataStruct.Crop2">
            <summary>The crop2</summary>
        </member>
        <member name="F:Models.MicroClimate.ComponentDataStruct.Canopy">
            <summary>
            The canopy
            </summary>
        </member>
        <member name="F:Models.MicroClimate.ComponentDataStruct.LAI">
            <summary>The lai</summary>
        </member>
        <member name="F:Models.MicroClimate.ComponentDataStruct.LAItot">
            <summary>The la itot</summary>
        </member>
        <member name="F:Models.MicroClimate.ComponentDataStruct.CoverGreen">
            <summary>The cover green</summary>
        </member>
        <member name="F:Models.MicroClimate.ComponentDataStruct.CoverTot">
            <summary>The cover tot</summary>
        </member>
        <member name="F:Models.MicroClimate.ComponentDataStruct.Ktot">
            <summary>The ktot</summary>
        </member>
        <member name="F:Models.MicroClimate.ComponentDataStruct.K">
            <summary>The k</summary>
        </member>
        <member name="F:Models.MicroClimate.ComponentDataStruct.Height">
            <summary>The height</summary>
        </member>
        <member name="F:Models.MicroClimate.ComponentDataStruct.Depth">
            <summary>The depth</summary>
        </member>
        <member name="F:Models.MicroClimate.ComponentDataStruct.Frgr">
            <summary>The FRGR</summary>
        </member>
        <member name="F:Models.MicroClimate.ComponentDataStruct.layerLAI">
            <summary>The layer lai</summary>
        </member>
        <member name="F:Models.MicroClimate.ComponentDataStruct.layerLAItot">
            <summary>The layer la itot</summary>
        </member>
        <member name="F:Models.MicroClimate.ComponentDataStruct.Ftot">
            <summary>The ftot</summary>
        </member>
        <member name="F:Models.MicroClimate.ComponentDataStruct.Fgreen">
            <summary>The fgreen</summary>
        </member>
        <member name="F:Models.MicroClimate.ComponentDataStruct.Rs">
            <summary>The rs</summary>
        </member>
        <member name="F:Models.MicroClimate.ComponentDataStruct.Rl">
            <summary>The rl</summary>
        </member>
        <member name="F:Models.MicroClimate.ComponentDataStruct.Rsoil">
            <summary>The rsoil</summary>
        </member>
        <member name="F:Models.MicroClimate.ComponentDataStruct.Gc">
            <summary>The gc</summary>
        </member>
        <member name="F:Models.MicroClimate.ComponentDataStruct.Ga">
            <summary>The ga</summary>
        </member>
        <member name="F:Models.MicroClimate.ComponentDataStruct.PET">
            <summary>The pet</summary>
        </member>
        <member name="F:Models.MicroClimate.ComponentDataStruct.PETr">
            <summary>The pe tr</summary>
        </member>
        <member name="F:Models.MicroClimate.ComponentDataStruct.PETa">
            <summary>The pe ta</summary>
        </member>
        <member name="F:Models.MicroClimate.ComponentDataStruct.Omega">
            <summary>The omega</summary>
        </member>
        <member name="F:Models.MicroClimate.ComponentDataStruct.interception">
            <summary>The interception</summary>
        </member>
        <member name="P:Models.MicroClimate.ComponentDataStruct.Albedo">
            <summary>Gets or sets the albedo.</summary>
            <value>The albedo.</value>
        </member>
        <member name="P:Models.MicroClimate.ComponentDataStruct.Emissivity">
            <summary>Gets or sets the emissivity.</summary>
            <value>The emissivity.</value>
        </member>
        <member name="P:Models.MicroClimate.ComponentDataStruct.Gsmax">
            <summary>Gets or sets the gsmax.</summary>
            <value>The gsmax.</value>
        </member>
        <member name="P:Models.MicroClimate.ComponentDataStruct.R50">
            <summary>Gets or sets the R50.</summary>
            <value>The R50.</value>
        </member>
        <member name="T:Models.Soils.Arbitrator.SoilArbitrator">
            <summary>
            The APSIM farming systems model has a long history in use for simulating mixed or intercropped systems.  Doing this requires methods for simulating the competition of above and below ground resources.  Above ground competition for light has been calculated within APSIM assuming a mixed turbid medium using the Beer-Lambert analogue as described by [Keating1993Intercropping].  The MicroClimate [Snow2004Micromet] model now used within APSIM build upon this by also calculating the impact of mutual shading on canopy conductance, and partitions aerodynamic conductance, to individual species in applying the Penman-Monteith model for calculating potential crop water use.  The arbitration of below ground resources of water and nitrogen are calculated by this model.
            
            Traditionally, below ground competition has been arbitrated using two approaches.  Firstly, the early approaches [Adiku1995Intercrop][Carberry1996Ley] used an alternating order of uptake calculation each day to ensure that different crops within a simulation did not benefit from precedence in daily orders of calculations.  Soil water simulations using the SWIM3 model [Huth2012SWIM3] arbitrate individual crop uptakes as part of the simulataneous solutions of various soil water fluxes as part of its solution of the Richards' equation [richards1931capillary].
            
            The soil arbitrator operates via a simple integration of daily fluxes into crop root systems via a Runge-Kutta calculation.
            
            If Y is any soil resource, such as water or N, and U is the uptake of that resource.  Then
            
            Yt+1 = Yt - U
            
            Because U will change through the time period in complex manners depending on the number and nature of demands for that resource, we use Runge-Kutta to integrate through that time period using
            
            Yt+1= Yt + 1/6 x (U1+ 2xU2 + 2xU3 + U4) 
            
            Where U1,U2,U3 and U4 are 4 estimates of the Uptake rates calculated by the crop models given a range of soil resource conditions, as follows:
            
            U1 = f(Yt),
            
            U2 = f(Yt + 0.5xU1),
            
            U3 = f(Yt + 0.5*U2),
            
            U4 = f(Yt + U3).
            
            So U1 is the estimate based on the uptake rates at the beginning of the time interval, similar to a simple Euler method
            U2 and U3 are estimates based on the rates somewhere near midpoint of the time interval
            
            U4 is the estimate based on the rates toward the end of the time interval
            
            The iterative procedure allows crops to influence the uptake of other crops via various feedback mechanisms.  For example,  Crops rapdily extracting water from near the surface will dry the soil in those layers, which will force deeper rooted crops to potentially extract water from lower layers. Uptakes can notionally be of either sign, and so trees providing hydraulic lift of water from water tables could potentially make this water available for uptake by mutplie understory species within the timestep.  Crops are responsible to meeting resource demand by whatever means they prefer.  And so, leguminous crops may start by taking up mineral N at the start of the day but rely on fixation later in a time period if N becomes limiting.  This will reduce competition from others and change the balance dynamically throughout the integration period. 
            
            The design has been chosen to provide the following benefits:
            1) The approach is numerically simple and pure
            2) The approach does not require the use of any particular uptake equation. The uptake equation is embodied within the crop model as designed by the crop model developer and tester.
            3) The approach will allow any number of plant species to interact.
            4) The approach will allow for arbitration between species in any zone, but also competition between species that may demand resources from multiple zones within the simulation.
            5) The approach will automatically arbitrate supply of N between zones, layers, and types (nitrate vs ammonium) with the preferences of all derived by the plant model code.
            </summary>
        </member>
        <member name="M:Models.Soils.Arbitrator.SoilArbitrator.OnDoWaterArbitration(System.Object,System.EventArgs)">
            <summary>Called by clock to do water arbitration</summary>
            <param name="sender">The sender of the event</param>
            <param name="e">Dummy event data.</param>
        </member>
        <member name="M:Models.Soils.Arbitrator.SoilArbitrator.DoNutrientArbitration(System.Object,System.EventArgs)">
            <summary>Called by clock to do nutrient arbitration</summary>
            <param name="sender">The sender of the event</param>
            <param name="e">Dummy event data.</param>
        </member>
        <member name="M:Models.Soils.Arbitrator.SoilArbitrator.DoArbitration(Models.Soils.Arbitrator.Estimate.CalcType)">
            <summary>
            General soil arbitration method (water or nutrients) based upon Runge-Kutta method
            </summary>
            <param name="arbitrationType">Water or Nitrogen</param>
        </member>
        <member name="T:Models.Core.Folder">
            <summary>
            A folder model
            </summary>
        </member>
        <member name="T:Models.Core.VariableComposite">
            <summary>
            This class encapsulates a list of IVariables that are evaluated when
            the Value property is called.
            source code.
            </summary>
        </member>
        <member name="F:Models.Core.VariableComposite.name">
            <summary>
            The name of the composite variable
            </summary>
        </member>
        <member name="F:Models.Core.VariableComposite.variables">
            <summary>
            The list of variables to be evaluated
            </summary>
        </member>
        <member name="M:Models.Core.VariableComposite.#ctor(System.String,System.Collections.Generic.List{Models.Core.IVariable})">
            <summary>
            Initializes a new instance of the <see cref="T:Models.Core.VariableComposite"/> class.
            </summary>
            <param name="name">The name</param>
            <param name="variables">The list of variables to be evaluated</param>
        </member>
        <member name="P:Models.Core.VariableComposite.Name">
            <summary>
            Gets or sets the name of the property.
            </summary>
        </member>
        <member name="P:Models.Core.VariableComposite.Object">
            <summary>
            Gets or sets the object this variable is relative to
            </summary>
        </member>
        <member name="P:Models.Core.VariableComposite.Value">
            <summary>
            Gets or sets the value of the property.
            </summary>
        </member>
        <member name="P:Models.Core.VariableComposite.Description">
            <summary>
            Gets a description of the property or null if not found.
            </summary>
        </member>
        <member name="P:Models.Core.VariableComposite.Units">
            <summary>
            Gets the units of the property (in brackets) or null if not found.
            </summary>
        </member>
        <member name="T:Models.Core.PresenterNameAttribute">
            <summary>
            Specifies that the related class should use the user interface presenter
            that has the specified name.
            </summary>
        </member>
        <member name="F:Models.Core.PresenterNameAttribute.name">
            <summary>
            The name of the presenter class
            </summary>
        </member>
        <member name="M:Models.Core.PresenterNameAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Models.Core.PresenterNameAttribute"/> class.
            </summary>
            <param name="name">Name of the user interface presenter class to use</param>
        </member>
        <member name="M:Models.Core.PresenterNameAttribute.ToString">
            <summary>
            Gets the name of the presenter.
            </summary>
            <returns>The name of the presenter class</returns>
        </member>
        <member name="T:Models.AgPasture">
            <summary>A multi-species pasture model</summary>
        </member>
        <member name="F:Models.AgPasture.SVPfrac">
            <summary>Constant needed for vapour pressure</summary>
        </member>
        <member name="F:Models.AgPasture.clock">
            <summary>The clock</summary>
        </member>
        <member name="F:Models.AgPasture.Soil">
            <summary>The soil</summary>
        </member>
        <member name="F:Models.AgPasture.MetData">
            <summary>The met data</summary>
        </member>
        <member name="F:Models.AgPasture.swardName">
            <summary>The sward name</summary>
        </member>
        <member name="F:Models.AgPasture.numSpecies">
            <summary>The number species</summary>
        </member>
        <member name="F:Models.AgPasture.waterUptakeSource">
            <summary>The water uptake source</summary>
        </member>
        <member name="F:Models.AgPasture.nUptakeSource">
            <summary>The n uptake source</summary>
        </member>
        <member name="F:Models.AgPasture.alt_N_uptake">
            <summary>The alt_ n_uptake</summary>
        </member>
        <member name="F:Models.AgPasture.speciesName">
            <summary>The species name</summary>
        </member>
        <member name="F:Models.AgPasture.speciesNType">
            <summary>The species n type</summary>
        </member>
        <member name="F:Models.AgPasture.speciesCType">
            <summary>The species c type</summary>
        </member>
        <member name="F:Models.AgPasture.iniDMshoot">
            <summary>The ini d mshoot</summary>
        </member>
        <member name="F:Models.AgPasture.iniDMroot">
            <summary>The ini d mroot</summary>
        </member>
        <member name="F:Models.AgPasture.iniRootDepth">
            <summary>The ini root depth</summary>
        </member>
        <member name="F:Models.AgPasture.maxPhotosynthesisRate">
            <summary>The maximum photosynthesis rate</summary>
        </member>
        <member name="F:Models.AgPasture.maintenanceRespirationCoef">
            <summary>The maintenance respiration coef</summary>
        </member>
        <member name="F:Models.AgPasture.growthEfficiency">
            <summary>The growth efficiency</summary>
        </member>
        <member name="F:Models.AgPasture.lightExtentionCoeff">
            <summary>The light extention coeff</summary>
        </member>
        <member name="F:Models.AgPasture.growthTmin">
            <summary>The growth tmin</summary>
        </member>
        <member name="F:Models.AgPasture.growthTmax">
            <summary>The growth tmax</summary>
        </member>
        <member name="F:Models.AgPasture.growthTopt">
            <summary>The growth topt</summary>
        </member>
        <member name="F:Models.AgPasture.growthTq">
            <summary>The growth tq</summary>
        </member>
        <member name="F:Models.AgPasture.heatOnsetT">
            <summary>The heat onset t</summary>
        </member>
        <member name="F:Models.AgPasture.heatFullT">
            <summary>The heat full t</summary>
        </member>
        <member name="F:Models.AgPasture.heatSumT">
            <summary>The heat sum t</summary>
        </member>
        <member name="F:Models.AgPasture.coldOnsetT">
            <summary>The cold onset t</summary>
        </member>
        <member name="F:Models.AgPasture.coldFullT">
            <summary>The cold full t</summary>
        </member>
        <member name="F:Models.AgPasture.coldSumT">
            <summary>The cold sum t</summary>
        </member>
        <member name="F:Models.AgPasture.specificLeafArea">
            <summary>The specific leaf area</summary>
        </member>
        <member name="F:Models.AgPasture.specificRootLength">
            <summary>The specific root length</summary>
        </member>
        <member name="F:Models.AgPasture.maxRootFraction">
            <summary>The maximum root fraction</summary>
        </member>
        <member name="F:Models.AgPasture.allocationSeasonF">
            <summary>The allocation season f</summary>
        </member>
        <member name="F:Models.AgPasture.fracToLeaf">
            <summary>The frac to leaf</summary>
        </member>
        <member name="F:Models.AgPasture.fracToStolon">
            <summary>The frac to stolon</summary>
        </member>
        <member name="F:Models.AgPasture.turnoverRateLive2Dead">
            <summary>The turnover rate live2 dead</summary>
        </member>
        <member name="F:Models.AgPasture.turnoverRateDead2Litter">
            <summary>The turnover rate dead2 litter</summary>
        </member>
        <member name="F:Models.AgPasture.turnoverRateRootSenescence">
            <summary>The turnover rate root senescence</summary>
        </member>
        <member name="F:Models.AgPasture.massFluxTmin">
            <summary>The mass flux tmin</summary>
        </member>
        <member name="F:Models.AgPasture.massFluxTopt">
            <summary>The mass flux topt</summary>
        </member>
        <member name="F:Models.AgPasture.massFluxW0">
            <summary>The mass flux w0</summary>
        </member>
        <member name="F:Models.AgPasture.massFluxWopt">
            <summary>The mass flux wopt</summary>
        </member>
        <member name="F:Models.AgPasture.stockParameter">
            <summary>The stock parameter</summary>
        </member>
        <member name="F:Models.AgPasture.digestibilityLive">
            <summary>The digestibility live</summary>
        </member>
        <member name="F:Models.AgPasture.digestibilityDead">
            <summary>The digestibility dead</summary>
        </member>
        <member name="F:Models.AgPasture.minimumGreenWt">
            <summary>The minimum green wt</summary>
        </member>
        <member name="F:Models.AgPasture.minimumDeadWt">
            <summary>The minimum dead wt</summary>
        </member>
        <member name="F:Models.AgPasture.preferenceForGreenDM">
            <summary>The preference for green dm</summary>
        </member>
        <member name="F:Models.AgPasture.preferenceForDeadDM">
            <summary>The preference for dead dm</summary>
        </member>
        <member name="F:Models.AgPasture.leafNopt">
            <summary>The leaf nopt</summary>
        </member>
        <member name="F:Models.AgPasture.leafNmax">
            <summary>The leaf nmax</summary>
        </member>
        <member name="F:Models.AgPasture.leafNmin">
            <summary>The leaf nmin</summary>
        </member>
        <member name="F:Models.AgPasture.relativeNStems">
            <summary>The relative n stems</summary>
        </member>
        <member name="F:Models.AgPasture.relativeNStolons">
            <summary>The relative n stolons</summary>
        </member>
        <member name="F:Models.AgPasture.relativeNRoots">
            <summary>The relative n roots</summary>
        </member>
        <member name="F:Models.AgPasture.relativeNStage2">
            <summary>The relative n stage2</summary>
        </member>
        <member name="F:Models.AgPasture.relativeNStage3">
            <summary>The relative n stage3</summary>
        </member>
        <member name="F:Models.AgPasture.minimumNFixation">
            <summary>The minimum n fixation</summary>
        </member>
        <member name="F:Models.AgPasture.maximumNFixation">
            <summary>The maximum n fixation</summary>
        </member>
        <member name="F:Models.AgPasture.kappa2Remob">
            <summary>The kappa2 remob</summary>
        </member>
        <member name="F:Models.AgPasture.kappa3Remob">
            <summary>The kappa3 remob</summary>
        </member>
        <member name="F:Models.AgPasture.kappa4Remob">
            <summary>The kappa4 remob</summary>
        </member>
        <member name="F:Models.AgPasture.dillutionCoefN">
            <summary>The dillution coef n</summary>
        </member>
        <member name="F:Models.AgPasture.glfGeneric">
            <summary>The GLF generic</summary>
        </member>
        <member name="F:Models.AgPasture.waterStressFactor">
            <summary>The water stress factor</summary>
        </member>
        <member name="F:Models.AgPasture.waterLoggingFactor">
            <summary>The water logging factor</summary>
        </member>
        <member name="F:Models.AgPasture.referenceCO2">
            <summary>The reference c o2</summary>
        </member>
        <member name="F:Models.AgPasture.offsetCO2EffectOnPhotosynthesis">
            <summary>The offset c o2 effect on photosynthesis</summary>
        </member>
        <member name="F:Models.AgPasture.offsetCO2EffectOnNuptake">
            <summary>The offset c o2 effect on nuptake</summary>
        </member>
        <member name="F:Models.AgPasture.minimumCO2EffectOnNuptake">
            <summary>The minimum c o2 effect on nuptake</summary>
        </member>
        <member name="F:Models.AgPasture.exponentCO2EffectOnNuptake">
            <summary>The exponent c o2 effect on nuptake</summary>
        </member>
        <member name="F:Models.AgPasture.rootDistributionMethod">
            <summary>The root distribution method</summary>
        </member>
        <member name="F:Models.AgPasture.expoLinearDepthParam">
            <summary>The expo linear depth parameter</summary>
        </member>
        <member name="F:Models.AgPasture.expoLinearCurveParam">
            <summary>The expo linear curve parameter</summary>
        </member>
        <member name="F:Models.AgPasture.initialDMFractions_grass">
            <summary>The initial dm fractions_grass</summary>
        </member>
        <member name="F:Models.AgPasture.initialDMFractions_legume">
            <summary>The initial dm fractions_legume</summary>
        </member>
        <member name="F:Models.AgPasture.HeightMassFN">
            <summary>The height mass function</summary>
        </member>
        <member name="F:Models.AgPasture.FVPDFunction">
            <summary>The FVPD function</summary>
        </member>
        <member name="F:Models.AgPasture.RootFraction">
            <summary>The root fraction</summary>
        </member>
        <member name="F:Models.AgPasture.FractionToHarvest">
            <summary>The fraction to harvest</summary>
        </member>
        <member name="F:Models.AgPasture.SP">
            <summary>Species in the simulated sward</summary>
        </member>
        <member name="F:Models.AgPasture.interceptedRadn">
            <summary>The intercepted radn</summary>
        </member>
        <member name="F:Models.AgPasture.myLightProfile">
            <summary>My light profile</summary>
        </member>
        <member name="F:Models.AgPasture.HaveInitialised">
            <summary>The have initialised</summary>
        </member>
        <member name="F:Models.AgPasture.p_dGrowthPot">
            <summary>The P_D growth pot</summary>
        </member>
        <member name="F:Models.AgPasture.p_dGrowthW">
            <summary>The P_D growth w</summary>
        </member>
        <member name="F:Models.AgPasture.p_dGrowth">
            <summary>The P_D growth</summary>
        </member>
        <member name="F:Models.AgPasture.p_dHerbage">
            <summary>The P_D herbage</summary>
        </member>
        <member name="F:Models.AgPasture.p_dLitter">
            <summary>The P_D litter</summary>
        </member>
        <member name="F:Models.AgPasture.p_dRootSen">
            <summary>The P_D root sen</summary>
        </member>
        <member name="F:Models.AgPasture.p_dNLitter">
            <summary>The P_D n litter</summary>
        </member>
        <member name="F:Models.AgPasture.p_dNRootSen">
            <summary>The P_D n root sen</summary>
        </member>
        <member name="F:Models.AgPasture.p_height">
            <summary>The p_height</summary>
        </member>
        <member name="F:Models.AgPasture.p_greenLAI">
            <summary>The p_green lai</summary>
        </member>
        <member name="F:Models.AgPasture.p_deadLAI">
            <summary>The p_dead lai</summary>
        </member>
        <member name="F:Models.AgPasture.p_totalLAI">
            <summary>The p_total lai</summary>
        </member>
        <member name="F:Models.AgPasture.p_lightExtCoeff">
            <summary>The p_light ext coeff</summary>
        </member>
        <member name="F:Models.AgPasture.p_greenDM">
            <summary>The p_green dm</summary>
        </member>
        <member name="F:Models.AgPasture.p_deadDM">
            <summary>The p_dead dm</summary>
        </member>
        <member name="F:Models.AgPasture.p_totalDM">
            <summary>The p_total dm</summary>
        </member>
        <member name="F:Models.AgPasture.p_rootMass">
            <summary>The p_root mass</summary>
        </member>
        <member name="F:Models.AgPasture.p_rootFrontier">
            <summary>The p_root frontier</summary>
        </member>
        <member name="F:Models.AgPasture.p_bottomRootLayer">
            <summary>The p_bottom root layer</summary>
        </member>
        <member name="F:Models.AgPasture.p_soilNdemand">
            <summary>The p_soil ndemand</summary>
        </member>
        <member name="F:Models.AgPasture.p_soilNavailable">
            <summary>The p_soil navailable</summary>
        </member>
        <member name="F:Models.AgPasture.p_soilNuptake">
            <summary>The p_soil nuptake</summary>
        </member>
        <member name="F:Models.AgPasture.SNSupply">
            <summary>The sn supply</summary>
        </member>
        <member name="F:Models.AgPasture.SNUptake">
            <summary>The sn uptake</summary>
        </member>
        <member name="F:Models.AgPasture.p_Nfix">
            <summary>The p_ nfix</summary>
        </member>
        <member name="F:Models.AgPasture.p_gfn">
            <summary>The P_GFN</summary>
        </member>
        <member name="F:Models.AgPasture.p_waterDemand">
            <summary>The p_water demand</summary>
        </member>
        <member name="F:Models.AgPasture.p_waterUptake">
            <summary>The p_water uptake</summary>
        </member>
        <member name="F:Models.AgPasture.p_waterSupply">
            <summary>The p_water supply</summary>
        </member>
        <member name="F:Models.AgPasture.SWSupply">
            <summary>The sw supply</summary>
        </member>
        <member name="F:Models.AgPasture.SWUptake">
            <summary>The sw uptake</summary>
        </member>
        <member name="F:Models.AgPasture.p_gfwater">
            <summary>The p_gfwater</summary>
        </member>
        <member name="F:Models.AgPasture.p_gftemp">
            <summary>The p_gftemp</summary>
        </member>
        <member name="F:Models.AgPasture.p_harvestDM">
            <summary>The p_harvest dm</summary>
        </member>
        <member name="F:Models.AgPasture.p_harvestN">
            <summary>The p_harvest n</summary>
        </member>
        <member name="F:Models.AgPasture.p_harvestDigest">
            <summary>The p_harvest digest</summary>
        </member>
        <member name="F:Models.AgPasture.p_Live">
            <summary>The p_ live</summary>
        </member>
        <member name="F:Models.AgPasture.canopiesNum">
            <summary>The canopies number</summary>
        </member>
        <member name="F:Models.AgPasture.canopiesRadn">
            <summary>The canopies radn</summary>
        </member>
        <member name="M:Models.AgPasture.InitParameters">
            <summary>Initialise parameters</summary>
        </member>
        <member name="M:Models.AgPasture.InitSpeciesValues(System.Int32)">
            <summary>
            Set parameter values that each species need to know
            - from pasture to species
            </summary>
            <param name="s">The s.</param>
        </member>
        <member name="M:Models.AgPasture.SetPastureToSpeciesData">
            <summary>Let species know weather conditions</summary>
            <returns></returns>
        </member>
        <member name="M:Models.AgPasture.SetSpeciesLimitingFactors">
            <summary>
            Set drought stress factor to each species
            Worth more efforts in this area
            </summary>
        </member>
        <member name="M:Models.AgPasture.GrowthAndPartition">
            <summary>plant growth and partitioning and tissue turnover</summary>
        </member>
        <member name="M:Models.AgPasture.Initialise">
            <summary>Eventhandeler - initialisation</summary>
            <exception cref="T:System.Exception">When working with multiple species, 'ValsMode' must ALWAYS be 'none'</exception>
        </member>
        <member name="M:Models.AgPasture.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>Called when [simulation commencing].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.AgPasture.OnDoDailyInitialisation(System.Object,System.EventArgs)">
            <summary>EventHandeler - preparation befor the main process</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.AgPasture.OnDoPlantGrowth(System.Object,System.EventArgs)">
            <summary>Called when [do plant growth].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.AgPasture.Onremove_crop_biomass(Models.RemoveCropBiomassType)">
            <summary>Onremove_crop_biomasses the specified rm.</summary>
            <param name="rm">The rm.</param>
        </member>
        <member name="M:Models.AgPasture.Harvest(System.String,System.Double)">
            <summary>Harvests the specified type.</summary>
            <param name="type">The type.</param>
            <param name="amount">The amount.</param>
        </member>
        <member name="M:Models.AgPasture.Graze(System.String,System.Double)">
            <summary>Grazes the specified type.</summary>
            <param name="type">The type.</param>
            <param name="amount">The amount.</param>
        </member>
        <member name="M:Models.AgPasture.OnGraze(Models.GrazeType)">
            <summary>Called when [graze].</summary>
            <param name="GZ">The gz.</param>
        </member>
        <member name="M:Models.AgPasture.OnWaterUptakesCalculated(Models.PMF.WaterUptakesCalculatedType)">
            <summary>Called when [water uptakes calculated].</summary>
            <param name="SoilWater">The soil water.</param>
        </member>
        <member name="M:Models.AgPasture.Sow(System.String,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Sows the plant</summary>
            <param name="cultivar"></param>
            <param name="population"></param>
            <param name="depth"></param>
            <param name="rowSpacing"></param>
            <param name="maxCover"></param>
            <param name="budNumber"></param>
        </member>
        <member name="M:Models.AgPasture.OnKillCrop(Models.KillCropType)">
            <summary>Called when [kill crop].</summary>
            <param name="PKill">The p kill.</param>
        </member>
        <member name="M:Models.AgPasture.ResetZero">
            <summary>Resets the zero.</summary>
        </member>
        <member name="M:Models.AgPasture.calcPlantAvailableN">
            <summary>Calculates the plant available n.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.AgPasture.calcPlantExtractableN">
            <summary>Calculates the plant extractable n.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.AgPasture.NBudgetAndUptake">
            <summary>ns the budget and uptake.</summary>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Models.AgPasture.GetSWUptakes(Models.Soils.Arbitrator.SoilState)">
            <summary>Placeholder for SoilArbitrator</summary>
            <param name="soilstate">The soil state</param>
            <returns></returns>
        </member>
        <member name="M:Models.AgPasture.GetNUptakes(Models.Soils.Arbitrator.SoilState)">
            <summary>Placeholder for SoilArbitrator</summary>
            <param name="soilstate">The soil state</param>
            <returns></returns>
        </member>
        <member name="M:Models.AgPasture.SetSWUptake(System.Collections.Generic.List{Models.Soils.Arbitrator.ZoneWaterAndN})">
            <summary>
            Set the sw uptake for today
            </summary>
        </member>
        <member name="M:Models.AgPasture.SetNUptake(System.Collections.Generic.List{Models.Soils.Arbitrator.ZoneWaterAndN})">
            <summary>
            Set the  uptanke for today
            </summary>
        </member>
        <member name="M:Models.AgPasture.SWUptakeProcess">
            <summary>
            water uptake processes ...
            Rainss Notes 20010707
            - Should this be done per species? Is using the root frontier an acceptable solution?
            - Plant2 breaks this into two parts: WaterSupply and DoWaterUptake
            </summary>
            <returns></returns>
        </member>
        <member name="M:Models.AgPasture.RootProfileDistribution">
            <summary>Compute the distribution of roots in the soil profile (sum is equal to one)</summary>
            <returns>The proportion of root mass in each soil layer</returns>
            <exception cref="T:System.Exception">
            No valid method for computing root distribution was selected
            or
            Could not calculate root distribution
            </exception>
        </member>
        <member name="M:Models.AgPasture.LayerFractionForRoots(System.Int32,System.Double)">
            <summary>Compute how much of the layer is actually explored by roots</summary>
            <param name="layer">The layer.</param>
            <param name="root_depth">The root_depth.</param>
            <returns>Fraction of layer explored by roots</returns>
        </member>
        <member name="M:Models.AgPasture.SNUptakeProcess">
            <summary>Nitrogen uptake process</summary>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Models.AgPasture.DoSurfaceOMReturn(System.Double,System.Double,System.Double)">
            <summary>return plant litter to surface organic matter poor</summary>
            <param name="amtDM">The amt dm.</param>
            <param name="amtN">The amt n.</param>
            <param name="frac">The frac.</param>
        </member>
        <member name="M:Models.AgPasture.DoIncorpFomEvent(System.Double,System.Double)">
            <summary>return scenescent roots into fresh organic matter pool in soil</summary>
            <param name="rootSen">The root sen.</param>
            <param name="NinRootSen">The nin root sen.</param>
        </member>
        <member name="M:Models.AgPasture.VPD">
            <summary>The following helper functions [VDP and svp] are for calculating Fvdp</summary>
            <returns></returns>
        </member>
        <member name="M:Models.AgPasture.svp(System.Double)">
            <summary>SVPs the specified temporary.</summary>
            <param name="temp">The temporary.</param>
            <returns></returns>
        </member>
        <member name="E:Models.AgPasture.IncorpFOM">
            <summary>Occurs when [incorp fom].</summary>
        </member>
        <member name="E:Models.AgPasture.BiomassRemoved">
            <summary>Occurs when [biomass removed].</summary>
        </member>
        <member name="E:Models.AgPasture.WaterChanged">
            <summary>Occurs when [water changed].</summary>
        </member>
        <member name="E:Models.AgPasture.NitrogenChanged">
            <summary>Occurs when [nitrogen changed].</summary>
        </member>
        <member name="P:Models.AgPasture.SwardName">
            <summary>Gets or sets the name of the sward.</summary>
            <value>The name of the sward.</value>
        </member>
        <member name="P:Models.AgPasture.NumSpecies">
            <summary>Gets or sets the number species.</summary>
            <value>The number species.</value>
        </member>
        <member name="P:Models.AgPasture.WaterUptakeSource">
            <summary>Gets or sets the water uptake source.</summary>
            <value>The water uptake source.</value>
        </member>
        <member name="P:Models.AgPasture.NUptakeSource">
            <summary>Gets or sets the n uptake source.</summary>
            <value>The n uptake source.</value>
        </member>
        <member name="P:Models.AgPasture.UseAlternativeNUptake">
            <summary>Gets or sets the use alternative n uptake.</summary>
            <value>The use alternative n uptake.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesName">
            <summary>Gets or sets the name of the species.</summary>
            <value>The name of the species.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesNType">
            <summary>Gets or sets the type of the species n.</summary>
            <value>The type of the species n.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesCType">
            <summary>Gets or sets the type of the species c.</summary>
            <value>The type of the species c.</value>
        </member>
        <member name="P:Models.AgPasture.InitialDMShoot">
            <summary>Gets or sets the initial dm shoot.</summary>
            <value>The initial dm shoot.</value>
        </member>
        <member name="P:Models.AgPasture.InitialDMRoot">
            <summary>Gets or sets the initial dm root.</summary>
            <value>The initial dm root.</value>
        </member>
        <member name="P:Models.AgPasture.InitialRootDepth">
            <summary>Gets or sets the initial root depth.</summary>
            <value>The initial root depth.</value>
        </member>
        <member name="P:Models.AgPasture.MaxPhotosynthesisRate">
            <summary>Gets or sets the maximum photosynthesis rate.</summary>
            <value>The maximum photosynthesis rate.</value>
        </member>
        <member name="P:Models.AgPasture.MaintenanceRespirationCoef">
            <summary>Gets or sets the maintenance respiration coef.</summary>
            <value>The maintenance respiration coef.</value>
        </member>
        <member name="P:Models.AgPasture.GrowthEfficiency">
            <summary>Gets or sets the growth efficiency.</summary>
            <value>The growth efficiency.</value>
        </member>
        <member name="P:Models.AgPasture.LightExtentionCoeff">
            <summary>Gets or sets the light extention coeff.</summary>
            <value>The light extention coeff.</value>
        </member>
        <member name="P:Models.AgPasture.GrowthTmin">
            <summary>Gets or sets the growth tmin.</summary>
            <value>The growth tmin.</value>
        </member>
        <member name="P:Models.AgPasture.GrowthTmax">
            <summary>Gets or sets the growth tmax.</summary>
            <value>The growth tmax.</value>
        </member>
        <member name="P:Models.AgPasture.GrowthTopt">
            <summary>Gets or sets the growth topt.</summary>
            <value>The growth topt.</value>
        </member>
        <member name="P:Models.AgPasture.GrowthTq">
            <summary>Gets or sets the growth tq.</summary>
            <value>The growth tq.</value>
        </member>
        <member name="P:Models.AgPasture.HeatOnsetT">
            <summary>Gets or sets the heat onset t.</summary>
            <value>The heat onset t.</value>
        </member>
        <member name="P:Models.AgPasture.HeatFullT">
            <summary>Gets or sets the heat full t.</summary>
            <value>The heat full t.</value>
        </member>
        <member name="P:Models.AgPasture.HeatSumT">
            <summary>Gets or sets the heat sum t.</summary>
            <value>The heat sum t.</value>
        </member>
        <member name="P:Models.AgPasture.ColdOnsetT">
            <summary>Gets or sets the cold onset t.</summary>
            <value>The cold onset t.</value>
        </member>
        <member name="P:Models.AgPasture.ColdFullT">
            <summary>Gets or sets the cold full t.</summary>
            <value>The cold full t.</value>
        </member>
        <member name="P:Models.AgPasture.ColdSumT">
            <summary>Gets or sets the cold sum t.</summary>
            <value>The cold sum t.</value>
        </member>
        <member name="P:Models.AgPasture.SpecificLeafArea">
            <summary>Gets or sets the specific leaf area.</summary>
            <value>The specific leaf area.</value>
        </member>
        <member name="P:Models.AgPasture.SpecificRootLength">
            <summary>Gets or sets the length of the specific root.</summary>
            <value>The length of the specific root.</value>
        </member>
        <member name="P:Models.AgPasture.MaxRootFraction">
            <summary>Gets or sets the maximum root fraction.</summary>
            <value>The maximum root fraction.</value>
        </member>
        <member name="P:Models.AgPasture.AllocationSeasonF">
            <summary>Gets or sets the allocation season f.</summary>
            <value>The allocation season f.</value>
        </member>
        <member name="P:Models.AgPasture.FracToLeaf">
            <summary>Gets or sets the frac to leaf.</summary>
            <value>The frac to leaf.</value>
        </member>
        <member name="P:Models.AgPasture.FracToStolon">
            <summary>Gets or sets the frac to stolon.</summary>
            <value>The frac to stolon.</value>
        </member>
        <member name="P:Models.AgPasture.TurnoverRateLive2Dead">
            <summary>Gets or sets the turnover rate live2 dead.</summary>
            <value>The turnover rate live2 dead.</value>
        </member>
        <member name="P:Models.AgPasture.TurnoverRateDead2Litter">
            <summary>Gets or sets the turnover rate dead2 litter.</summary>
            <value>The turnover rate dead2 litter.</value>
        </member>
        <member name="P:Models.AgPasture.TurnoverRateRootSenescence">
            <summary>Gets or sets the turnover rate root senescence.</summary>
            <value>The turnover rate root senescence.</value>
        </member>
        <member name="P:Models.AgPasture.MassFluxTmin">
            <summary>Gets or sets the mass flux tmin.</summary>
            <value>The mass flux tmin.</value>
        </member>
        <member name="P:Models.AgPasture.MassFluxTopt">
            <summary>Gets or sets the mass flux topt.</summary>
            <value>The mass flux topt.</value>
        </member>
        <member name="P:Models.AgPasture.MassFluxW0">
            <summary>Gets or sets the mass flux w0.</summary>
            <value>The mass flux w0.</value>
        </member>
        <member name="P:Models.AgPasture.MassFluxWopt">
            <summary>Gets or sets the mass flux wopt.</summary>
            <value>The mass flux wopt.</value>
        </member>
        <member name="P:Models.AgPasture.StockParameter">
            <summary>Gets or sets the stock parameter.</summary>
            <value>The stock parameter.</value>
        </member>
        <member name="P:Models.AgPasture.DigestibilityLive">
            <summary>Gets or sets the digestibility live.</summary>
            <value>The digestibility live.</value>
        </member>
        <member name="P:Models.AgPasture.DigestibilityDead">
            <summary>Gets or sets the digestibility dead.</summary>
            <value>The digestibility dead.</value>
        </member>
        <member name="P:Models.AgPasture.MinimumGreenWt">
            <summary>Gets or sets the minimum green wt.</summary>
            <value>The minimum green wt.</value>
        </member>
        <member name="P:Models.AgPasture.MinimumDeadWt">
            <summary>Gets or sets the minimum dead wt.</summary>
            <value>The minimum dead wt.</value>
        </member>
        <member name="P:Models.AgPasture.PreferenceForGreenDM">
            <summary>Gets or sets the preference for green dm.</summary>
            <value>The preference for green dm.</value>
        </member>
        <member name="P:Models.AgPasture.PreferenceForDeadDM">
            <summary>Gets or sets the preference for dead dm.</summary>
            <value>The preference for dead dm.</value>
        </member>
        <member name="P:Models.AgPasture.LeafNopt">
            <summary>Gets or sets the leaf nopt.</summary>
            <value>The leaf nopt.</value>
        </member>
        <member name="P:Models.AgPasture.LeafNmax">
            <summary>Gets or sets the leaf nmax.</summary>
            <value>The leaf nmax.</value>
        </member>
        <member name="P:Models.AgPasture.LeafNmin">
            <summary>Gets or sets the leaf nmin.</summary>
            <value>The leaf nmin.</value>
        </member>
        <member name="P:Models.AgPasture.RelativeNStems">
            <summary>Gets or sets the relative n stems.</summary>
            <value>The relative n stems.</value>
        </member>
        <member name="P:Models.AgPasture.RelativeNStolons">
            <summary>Gets or sets the relative n stolons.</summary>
            <value>The relative n stolons.</value>
        </member>
        <member name="P:Models.AgPasture.RelativeNRoots">
            <summary>Gets or sets the relative n roots.</summary>
            <value>The relative n roots.</value>
        </member>
        <member name="P:Models.AgPasture.RelativeNStage2">
            <summary>Gets or sets the relative n stage2.</summary>
            <value>The relative n stage2.</value>
        </member>
        <member name="P:Models.AgPasture.RelativeNStage3">
            <summary>Gets or sets the relative n stage3.</summary>
            <value>The relative n stage3.</value>
        </member>
        <member name="P:Models.AgPasture.MinimumNFixation">
            <summary>Gets or sets the minimum n fixation.</summary>
            <value>The minimum n fixation.</value>
        </member>
        <member name="P:Models.AgPasture.MaximumNFixation">
            <summary>Gets or sets the maximum n fixation.</summary>
            <value>The maximum n fixation.</value>
        </member>
        <member name="P:Models.AgPasture.Kappa2Remob">
            <summary>Gets or sets the kappa2 remob.</summary>
            <value>The kappa2 remob.</value>
        </member>
        <member name="P:Models.AgPasture.Kappa3Remob">
            <summary>Gets or sets the kappa3 remob.</summary>
            <value>The kappa3 remob.</value>
        </member>
        <member name="P:Models.AgPasture.Kappa4Remob">
            <summary>Gets or sets the kappa4 remob.</summary>
            <value>The kappa4 remob.</value>
        </member>
        <member name="P:Models.AgPasture.DillutionCoefN">
            <summary>Gets or sets the dillution coef n.</summary>
            <value>The dillution coef n.</value>
        </member>
        <member name="P:Models.AgPasture.GlfGeneric">
            <summary>Gets or sets the GLF generic.</summary>
            <value>The GLF generic.</value>
        </member>
        <member name="P:Models.AgPasture.WaterStressFactor">
            <summary>Gets or sets the water stress factor.</summary>
            <value>The water stress factor.</value>
        </member>
        <member name="P:Models.AgPasture.WaterLoggingFactor">
            <summary>Gets or sets the water logging factor.</summary>
            <value>The water logging factor.</value>
        </member>
        <member name="P:Models.AgPasture.ReferenceCO2">
            <summary>Gets or sets the reference c o2.</summary>
            <value>The reference c o2.</value>
        </member>
        <member name="P:Models.AgPasture.OffsetCO2EffectOnPhotosynthesis">
            <summary>Gets or sets the offset c o2 effect on photosynthesis.</summary>
            <value>The offset c o2 effect on photosynthesis.</value>
        </member>
        <member name="P:Models.AgPasture.OffsetCO2EffectOnNuptake">
            <summary>Gets or sets the offset c o2 effect on nuptake.</summary>
            <value>The offset c o2 effect on nuptake.</value>
        </member>
        <member name="P:Models.AgPasture.MinimumCO2EffectOnNuptake">
            <summary>Gets or sets the minimum c o2 effect on nuptake.</summary>
            <value>The minimum c o2 effect on nuptake.</value>
        </member>
        <member name="P:Models.AgPasture.ExponentCO2EffectOnNuptake">
            <summary>Gets or sets the exponent c o2 effect on nuptake.</summary>
            <value>The exponent c o2 effect on nuptake.</value>
        </member>
        <member name="P:Models.AgPasture.RootDistributionMethod">
            <summary>Gets or sets the root distribution method.</summary>
            <value>The root distribution method.</value>
            <exception cref="T:System.Exception">No valid method for computing root distribution was selected</exception>
        </member>
        <member name="P:Models.AgPasture.ExpoLinearDepthParam">
            <summary>Gets or sets the expo linear depth parameter.</summary>
            <value>The expo linear depth parameter.</value>
        </member>
        <member name="P:Models.AgPasture.ExpoLinearCurveParam">
            <summary>Gets or sets the expo linear curve parameter.</summary>
            <value>The expo linear curve parameter.</value>
        </member>
        <member name="P:Models.AgPasture.CultivarNames">
            <summary>Gets a list of cultivar names</summary>
        </member>
        <member name="P:Models.AgPasture.IsAlive">
            <summary>
            Is the plant alive?
            </summary>
        </member>
        <member name="P:Models.AgPasture.PlantStatus">
            <summary>Gets the plant status.</summary>
            <value>The plant status.</value>
        </member>
        <member name="P:Models.AgPasture.Stage">
            <summary>Gets the stage.</summary>
            <value>The stage.</value>
        </member>
        <member name="P:Models.AgPasture.StageName">
            <summary>Gets the name of the stage.</summary>
            <value>The name of the stage.</value>
        </member>
        <member name="P:Models.AgPasture.TotalPlantC">
            <summary>Gets the total plant c.</summary>
            <value>The total plant c.</value>
        </member>
        <member name="P:Models.AgPasture.TotalPlantWt">
            <summary>Gets the total plant wt.</summary>
            <value>The total plant wt.</value>
        </member>
        <member name="P:Models.AgPasture.AboveGroundWt">
            <summary>Gets the above ground wt.</summary>
            <value>The above ground wt.</value>
        </member>
        <member name="P:Models.AgPasture.BelowGroundWt">
            <summary>Gets the below ground wt.</summary>
            <value>The below ground wt.</value>
        </member>
        <member name="P:Models.AgPasture.StandingPlantWt">
            <summary>Gets the standing plant wt.</summary>
            <value>The standing plant wt.</value>
        </member>
        <member name="P:Models.AgPasture.AboveGroundLiveWt">
            <summary>Gets the above ground live wt.</summary>
            <value>The above ground live wt.</value>
        </member>
        <member name="P:Models.AgPasture.AboveGroundDeadWt">
            <summary>Gets the above ground dead wt.</summary>
            <value>The above ground dead wt.</value>
        </member>
        <member name="P:Models.AgPasture.LeafWt">
            <summary>Gets the leaf wt.</summary>
            <value>The leaf wt.</value>
        </member>
        <member name="P:Models.AgPasture.LeafLiveWt">
            <summary>Gets the leaf live wt.</summary>
            <value>The leaf live wt.</value>
        </member>
        <member name="P:Models.AgPasture.LeafDeadWt">
            <summary>Gets the leaf dead wt.</summary>
            <value>The leaf dead wt.</value>
        </member>
        <member name="P:Models.AgPasture.StemWt">
            <summary>Gets the stem wt.</summary>
            <value>The stem wt.</value>
        </member>
        <member name="P:Models.AgPasture.StemLiveWt">
            <summary>Gets the stem live wt.</summary>
            <value>The stem live wt.</value>
        </member>
        <member name="P:Models.AgPasture.StemDeadWt">
            <summary>Gets the stem dead wt.</summary>
            <value>The stem dead wt.</value>
        </member>
        <member name="P:Models.AgPasture.StolonWt">
            <summary>Gets the stolon wt.</summary>
            <value>The stolon wt.</value>
        </member>
        <member name="P:Models.AgPasture.RootWt">
            <summary>Gets the root wt.</summary>
            <value>The root wt.</value>
        </member>
        <member name="P:Models.AgPasture.PlantGrossPotentialGrowthWt">
            <summary>Gets the plant gross potential growth wt.</summary>
            <value>The plant gross potential growth wt.</value>
        </member>
        <member name="P:Models.AgPasture.PlantPotentialGrowthWt">
            <summary>Gets the plant potential growth wt.</summary>
            <value>The plant potential growth wt.</value>
        </member>
        <member name="P:Models.AgPasture.PlantGrowthNoNLimit">
            <summary>Gets the plant growth no n limit.</summary>
            <value>The plant growth no n limit.</value>
        </member>
        <member name="P:Models.AgPasture.PlantGrowthWt">
            <summary>Gets the plant growth wt.</summary>
            <value>The plant growth wt.</value>
        </member>
        <member name="P:Models.AgPasture.PlantEffectiveGrowthWt">
            <summary>Gets the plant effective growth wt.</summary>
            <value>The plant effective growth wt.</value>
        </member>
        <member name="P:Models.AgPasture.HerbageGrowthWt">
            <summary>Gets the herbage growth wt.</summary>
            <value>The herbage growth wt.</value>
        </member>
        <member name="P:Models.AgPasture.LitterDepositionWt">
            <summary>Gets the litter deposition wt.</summary>
            <value>The litter deposition wt.</value>
        </member>
        <member name="P:Models.AgPasture.RootSenescenceWt">
            <summary>Gets the root senescence wt.</summary>
            <value>The root senescence wt.</value>
        </member>
        <member name="P:Models.AgPasture.PlantRemobilisedC">
            <summary>Gets the plant remobilised c.</summary>
            <value>The plant remobilised c.</value>
        </member>
        <member name="P:Models.AgPasture.HarvestableWt">
            <summary>Gets the harvestable wt.</summary>
            <value>The harvestable wt.</value>
        </member>
        <member name="P:Models.AgPasture.HarvestWt">
            <summary>Gets the harvest wt.</summary>
            <value>The harvest wt.</value>
        </member>
        <member name="P:Models.AgPasture.LAI_green">
            <summary>Gets the la i_green.</summary>
            <value>The la i_green.</value>
        </member>
        <member name="P:Models.AgPasture.LAI_dead">
            <summary>Gets the la i_dead.</summary>
            <value>The la i_dead.</value>
        </member>
        <member name="P:Models.AgPasture.LAI_total">
            <summary>Gets the la i_total.</summary>
            <value>The la i_total.</value>
        </member>
        <member name="P:Models.AgPasture.Cover_green">
            <summary>Gets the cover_green.</summary>
            <value>The cover_green.</value>
        </member>
        <member name="P:Models.AgPasture.Cover_dead">
            <summary>Gets the cover_dead.</summary>
            <value>The cover_dead.</value>
        </member>
        <member name="P:Models.AgPasture.Cover_tot">
            <summary>Gets the cover_tot.</summary>
            <value>The cover_tot.</value>
        </member>
        <member name="P:Models.AgPasture.TotalPlantN">
            <summary>Gets the total plant n.</summary>
            <value>The total plant n.</value>
        </member>
        <member name="P:Models.AgPasture.AboveGroundN">
            <summary>Gets the above ground n.</summary>
            <value>The above ground n.</value>
        </member>
        <member name="P:Models.AgPasture.BelowGroundN">
            <summary>Gets the below ground n.</summary>
            <value>The below ground n.</value>
        </member>
        <member name="P:Models.AgPasture.StandingPlantN">
            <summary>Gets the standing plant n.</summary>
            <value>The standing plant n.</value>
        </member>
        <member name="P:Models.AgPasture.StandingPlantNConc">
            <summary>Gets the standing plant n conc.</summary>
            <value>The standing plant n conc.</value>
        </member>
        <member name="P:Models.AgPasture.AboveGroundLiveN">
            <summary>Gets the above ground live n.</summary>
            <value>The above ground live n.</value>
        </member>
        <member name="P:Models.AgPasture.AboveGroundDeadN">
            <summary>Gets the above ground dead n.</summary>
            <value>The above ground dead n.</value>
        </member>
        <member name="P:Models.AgPasture.LeafN">
            <summary>Gets the leaf n.</summary>
            <value>The leaf n.</value>
        </member>
        <member name="P:Models.AgPasture.StemN">
            <summary>Gets the stem n.</summary>
            <value>The stem n.</value>
        </member>
        <member name="P:Models.AgPasture.StolonN">
            <summary>Gets the stolon n.</summary>
            <value>The stolon n.</value>
        </member>
        <member name="P:Models.AgPasture.RootN">
            <summary>Gets the root n.</summary>
            <value>The root n.</value>
        </member>
        <member name="P:Models.AgPasture.LeafNConc">
            <summary>Gets the leaf n conc.</summary>
            <value>The leaf n conc.</value>
        </member>
        <member name="P:Models.AgPasture.StemNConc">
            <summary>Gets the stem n conc.</summary>
            <value>The stem n conc.</value>
        </member>
        <member name="P:Models.AgPasture.StolonNConc">
            <summary>Gets the stolon n conc.</summary>
            <value>The stolon n conc.</value>
        </member>
        <member name="P:Models.AgPasture.RootNConc">
            <summary>Gets the root n conc.</summary>
            <value>The root n conc.</value>
        </member>
        <member name="P:Models.AgPasture.HarvestN">
            <summary>Gets the harvest n.</summary>
            <value>The harvest n.</value>
        </member>
        <member name="P:Models.AgPasture.HerbageDigestibility">
            <summary>Gets the herbage digestibility.</summary>
            <value>The herbage digestibility.</value>
        </member>
        <member name="P:Models.AgPasture.DefoliatedDigestibility">
            <summary>Gets the defoliated digestibility.</summary>
            <value>The defoliated digestibility.</value>
        </member>
        <member name="P:Models.AgPasture.HerbageME">
            <summary>Gets the herbage me.</summary>
            <value>The herbage me.</value>
        </member>
        <member name="P:Models.AgPasture.PlantFixedN">
            <summary>Gets the plant fixed n.</summary>
            <value>The plant fixed n.</value>
        </member>
        <member name="P:Models.AgPasture.PlantRemobilisedN">
            <summary>Gets the plant remobilised n.</summary>
            <value>The plant remobilised n.</value>
        </member>
        <member name="P:Models.AgPasture.PlantLuxuryNRemobilised">
            <summary>Gets the plant luxury n remobilised.</summary>
            <value>The plant luxury n remobilised.</value>
        </member>
        <member name="P:Models.AgPasture.PlantRemobilisableLuxuryN">
            <summary>Gets the plant remobilisable luxury n.</summary>
            <value>The plant remobilisable luxury n.</value>
        </member>
        <member name="P:Models.AgPasture.LitterDepositionN">
            <summary>Gets the litter deposition n.</summary>
            <value>The litter deposition n.</value>
        </member>
        <member name="P:Models.AgPasture.RootSenescenceN">
            <summary>Gets the root senescence n.</summary>
            <value>The root senescence n.</value>
        </member>
        <member name="P:Models.AgPasture.NitrogenRequiredLuxury">
            <summary>Gets the nitrogen required luxury.</summary>
            <value>The nitrogen required luxury.</value>
        </member>
        <member name="P:Models.AgPasture.NitrogenRequiredOptimum">
            <summary>Gets the nitrogen required optimum.</summary>
            <value>The nitrogen required optimum.</value>
        </member>
        <member name="P:Models.AgPasture.PlantGrowthN">
            <summary>Gets the plant growth n.</summary>
            <value>The plant growth n.</value>
        </member>
        <member name="P:Models.AgPasture.PlantGrowthNconc">
            <summary>Gets the plant growth nconc.</summary>
            <value>The plant growth nconc.</value>
        </member>
        <member name="P:Models.AgPasture.NitrogenDemand">
            <summary>Gets the nitrogen demand.</summary>
            <value>The nitrogen demand.</value>
        </member>
        <member name="P:Models.AgPasture.NitrogenSupply">
            <summary>Gets the nitrogen supply.</summary>
            <value>The nitrogen supply.</value>
        </member>
        <member name="P:Models.AgPasture.NitrogenSupplyLayers">
            <summary>Gets the nitrogen supply layers.</summary>
            <value>The nitrogen supply layers.</value>
        </member>
        <member name="P:Models.AgPasture.NitrogenUptake">
            <summary>Gets the nitrogen uptake.</summary>
            <value>The nitrogen uptake.</value>
        </member>
        <member name="P:Models.AgPasture.NitrogenUptakeLayers">
            <summary>Gets the nitrogen uptake layers.</summary>
            <value>The nitrogen uptake layers.</value>
        </member>
        <member name="P:Models.AgPasture.GLFn">
            <summary>Gets the gl function.</summary>
            <value>The gl function.</value>
        </member>
        <member name="P:Models.AgPasture.GLFnConcentration">
            <summary>Gets the gl function concentration.</summary>
            <value>The gl function concentration.</value>
        </member>
        <member name="P:Models.AgPasture.DMToRoots">
            <summary>Gets the dm to roots.</summary>
            <value>The dm to roots.</value>
        </member>
        <member name="P:Models.AgPasture.DMToShoot">
            <summary>Gets the dm to shoot.</summary>
            <value>The dm to shoot.</value>
        </member>
        <member name="P:Models.AgPasture.FractionGrowthToRoot">
            <summary>Gets the fraction growth to root.</summary>
            <value>The fraction growth to root.</value>
        </member>
        <member name="P:Models.AgPasture.Rlv">
            <summary>Gets the RLV.</summary>
            <value>The RLV.</value>
        </member>
        <member name="P:Models.AgPasture.RootWtFraction">
            <summary>Gets the root wt fraction.</summary>
            <value>The root wt fraction.</value>
        </member>
        <member name="P:Models.AgPasture.WaterDemand">
            <summary>Gets the water demand.</summary>
            <value>The water demand.</value>
        </member>
        <member name="P:Models.AgPasture.WaterSupply">
            <summary>Gets the water supply.</summary>
            <value>The water supply.</value>
        </member>
        <member name="P:Models.AgPasture.WaterSupplyLayers">
            <summary>Gets the water supply layers.</summary>
            <value>The water supply layers.</value>
        </member>
        <member name="P:Models.AgPasture.WaterUptake">
            <summary>Gets the water uptake.</summary>
            <value>The water uptake.</value>
        </member>
        <member name="P:Models.AgPasture.WaterUptakeLayers">
            <summary>Gets the water uptake layers.</summary>
            <value>The water uptake layers.</value>
        </member>
        <member name="P:Models.AgPasture.GLFwater">
            <summary>Gets the gl fwater.</summary>
            <value>The gl fwater.</value>
        </member>
        <member name="P:Models.AgPasture.GLFtemp">
            <summary>Gets the gl ftemp.</summary>
            <value>The gl ftemp.</value>
        </member>
        <member name="P:Models.AgPasture.GLFrgr">
            <summary>Gets the gl FRGR.</summary>
            <value>The gl FRGR.</value>
        </member>
        <member name="P:Models.AgPasture.PlantStage1Wt">
            <summary>Gets the plant stage1 wt.</summary>
            <value>The plant stage1 wt.</value>
        </member>
        <member name="P:Models.AgPasture.PlantStage2Wt">
            <summary>Gets the plant stage2 wt.</summary>
            <value>The plant stage2 wt.</value>
        </member>
        <member name="P:Models.AgPasture.PlantStage3Wt">
            <summary>Gets the plant stage3 wt.</summary>
            <value>The plant stage3 wt.</value>
        </member>
        <member name="P:Models.AgPasture.PlantStage4Wt">
            <summary>Gets the plant stage4 wt.</summary>
            <value>The plant stage4 wt.</value>
        </member>
        <member name="P:Models.AgPasture.PlantStage1N">
            <summary>Gets the plant stage1 n.</summary>
            <value>The plant stage1 n.</value>
        </member>
        <member name="P:Models.AgPasture.PlantStage2N">
            <summary>Gets the plant stage2 n.</summary>
            <value>The plant stage2 n.</value>
        </member>
        <member name="P:Models.AgPasture.PlantStage3N">
            <summary>Gets the plant stage3 n.</summary>
            <value>The plant stage3 n.</value>
        </member>
        <member name="P:Models.AgPasture.PlantStage4N">
            <summary>Gets the plant stage4 n.</summary>
            <value>The plant stage4 n.</value>
        </member>
        <member name="P:Models.AgPasture.HeightfromDM">
            <summary>Gets the heightfrom dm.</summary>
            <value>The heightfrom dm.</value>
        </member>
        <member name="P:Models.AgPasture.VPD_out">
            <summary>Gets the vp d_out.</summary>
            <value>The vp d_out.</value>
        </member>
        <member name="P:Models.AgPasture.FVPD">
            <summary>Gets the FVPD.</summary>
            <value>The FVPD.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesGreenLAI">
            <summary>Gets the species green lai.</summary>
            <value>The species green lai.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesDeadLAI">
            <summary>Gets the species dead lai.</summary>
            <value>The species dead lai.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesTotalLAI">
            <summary>Gets the species total lai.</summary>
            <value>The species total lai.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesTotalWt">
            <summary>Gets the species total wt.</summary>
            <value>The species total wt.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesAboveGroundWt">
            <summary>Gets the species above ground wt.</summary>
            <value>The species above ground wt.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesBelowGroundWt">
            <summary>Gets the species below ground wt.</summary>
            <value>The species below ground wt.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesStandingWt">
            <summary>Gets the species standing wt.</summary>
            <value>The species standing wt.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesStandingLiveWt">
            <summary>Gets the species standing live wt.</summary>
            <value>The species standing live wt.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesStandingDeadWt">
            <summary>Gets the species standing dead wt.</summary>
            <value>The species standing dead wt.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesLeafWt">
            <summary>Gets the species leaf wt.</summary>
            <value>The species leaf wt.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesStemWt">
            <summary>Gets the species stem wt.</summary>
            <value>The species stem wt.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesStolonWt">
            <summary>Gets the species stolon wt.</summary>
            <value>The species stolon wt.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesRootWt">
            <summary>Gets the species root wt.</summary>
            <value>The species root wt.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesTotalN">
            <summary>Gets the species total n.</summary>
            <value>The species total n.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesStandingN">
            <summary>Gets the species standing n.</summary>
            <value>The species standing n.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesLeafN">
            <summary>Gets the species leaf n.</summary>
            <value>The species leaf n.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesStemN">
            <summary>Gets the species stem n.</summary>
            <value>The species stem n.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesStolonN">
            <summary>Gets the species stolon n.</summary>
            <value>The species stolon n.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesRootsN">
            <summary>Gets the species roots n.</summary>
            <value>The species roots n.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesLeafNConc">
            <summary>Gets the species leaf n conc.</summary>
            <value>The species leaf n conc.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesStemNConc">
            <summary>Gets the species stem n conc.</summary>
            <value>The species stem n conc.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesStolonNConc">
            <summary>Gets the species stolon n conc.</summary>
            <value>The species stolon n conc.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesRootNConc">
            <summary>Gets the species root n conc.</summary>
            <value>The species root n conc.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesLeafStage1Wt">
            <summary>Gets the species leaf stage1 wt.</summary>
            <value>The species leaf stage1 wt.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesLeafStage2Wt">
            <summary>Gets the species leaf stage2 wt.</summary>
            <value>The species leaf stage2 wt.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesLeafStage3Wt">
            <summary>Gets the species leaf stage3 wt.</summary>
            <value>The species leaf stage3 wt.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesLeafStage4Wt">
            <summary>Gets the species leaf stage4 wt.</summary>
            <value>The species leaf stage4 wt.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesStemStage1Wt">
            <summary>Gets the species stem stage1 wt.</summary>
            <value>The species stem stage1 wt.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesStemStage2Wt">
            <summary>Gets the species stem stage2 wt.</summary>
            <value>The species stem stage2 wt.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesStemStage3Wt">
            <summary>Gets the species stem stage3 wt.</summary>
            <value>The species stem stage3 wt.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesStemStage4Wt">
            <summary>Gets the species stem stage4 wt.</summary>
            <value>The species stem stage4 wt.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesStolonStage1Wt">
            <summary>Gets the species stolon stage1 wt.</summary>
            <value>The species stolon stage1 wt.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesStolonStage2Wt">
            <summary>Gets the species stolon stage2 wt.</summary>
            <value>The species stolon stage2 wt.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesStolonStage3Wt">
            <summary>Gets the species stolon stage3 wt.</summary>
            <value>The species stolon stage3 wt.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesLeafStage1N">
            <summary>Gets the species leaf stage1 n.</summary>
            <value>The species leaf stage1 n.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesLeafStage2N">
            <summary>Gets the species leaf stage2 n.</summary>
            <value>The species leaf stage2 n.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesLeafStage3N">
            <summary>Gets the species leaf stage3 n.</summary>
            <value>The species leaf stage3 n.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesLeafStage4N">
            <summary>Gets the species leaf stage4 n.</summary>
            <value>The species leaf stage4 n.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesStemStage1N">
            <summary>Gets the species stem stage1 n.</summary>
            <value>The species stem stage1 n.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesStemStage2N">
            <summary>Gets the species stem stage2 n.</summary>
            <value>The species stem stage2 n.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesStemStage3N">
            <summary>Gets the species stem stage3 n.</summary>
            <value>The species stem stage3 n.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesStemStage4N">
            <summary>Gets the species stem stage4 n.</summary>
            <value>The species stem stage4 n.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesStolonStage1N">
            <summary>Gets the species stolon stage1 n.</summary>
            <value>The species stolon stage1 n.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesStolonStage2N">
            <summary>Gets the species stolon stage2 n.</summary>
            <value>The species stolon stage2 n.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesStolonStage3N">
            <summary>Gets the species stolon stage3 n.</summary>
            <value>The species stolon stage3 n.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesLeafStage1NConc">
            <summary>Gets the species leaf stage1 n conc.</summary>
            <value>The species leaf stage1 n conc.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesLeafStage2NConc">
            <summary>Gets the species leaf stage2 n conc.</summary>
            <value>The species leaf stage2 n conc.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesLeafStage3NConc">
            <summary>Gets the species leaf stage3 n conc.</summary>
            <value>The species leaf stage3 n conc.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesLeafStage4NConc">
            <summary>Gets the species leaf stage4 n conc.</summary>
            <value>The species leaf stage4 n conc.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesStemStage1NConc">
            <summary>Gets the species stem stage1 n conc.</summary>
            <value>The species stem stage1 n conc.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesStemStage2NConc">
            <summary>Gets the species stem stage2 n conc.</summary>
            <value>The species stem stage2 n conc.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesStemStage3NConc">
            <summary>Gets the species stem stage3 n conc.</summary>
            <value>The species stem stage3 n conc.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesStemStage4NConc">
            <summary>Gets the species stem stage4 n conc.</summary>
            <value>The species stem stage4 n conc.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesStolonStage1NConc">
            <summary>Gets the species stolon stage1 n conc.</summary>
            <value>The species stolon stage1 n conc.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesStolonStage2NConc">
            <summary>Gets the species stolon stage2 n conc.</summary>
            <value>The species stolon stage2 n conc.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesStolonStage3NConc">
            <summary>Gets the species stolon stage3 n conc.</summary>
            <value>The species stolon stage3 n conc.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesGrowthWt">
            <summary>Gets the species growth wt.</summary>
            <value>The species growth wt.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesLitterWt">
            <summary>Gets the species litter wt.</summary>
            <value>The species litter wt.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesRootSenescedWt">
            <summary>Gets the species root senesced wt.</summary>
            <value>The species root senesced wt.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesHarvestableWt">
            <summary>Gets the species harvestable wt.</summary>
            <value>The species harvestable wt.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesHarvestWt">
            <summary>Gets the species harvest wt.</summary>
            <value>The species harvest wt.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesHarvestPct">
            <summary>Gets the species harvest PCT.</summary>
            <value>The species harvest PCT.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesHarvestFraction">
            <summary>Gets the species harvest fraction.</summary>
            <value>The species harvest fraction.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesLiveDMTurnoverRate">
            <summary>Gets the species live dm turnover rate.</summary>
            <value>The species live dm turnover rate.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesDeadDMTurnoverRate">
            <summary>Gets the species dead dm turnover rate.</summary>
            <value>The species dead dm turnover rate.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesStolonDMTurnoverRate">
            <summary>Gets the species stolon dm turnover rate.</summary>
            <value>The species stolon dm turnover rate.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesRootDMTurnoverRate">
            <summary>Gets the species root dm turnover rate.</summary>
            <value>The species root dm turnover rate.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesRemobilisedN">
            <summary>Gets the species remobilised n.</summary>
            <value>The species remobilised n.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesLuxuryNRemobilised">
            <summary>Gets the species luxury n remobilised.</summary>
            <value>The species luxury n remobilised.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesRemobilisableLuxuryN">
            <summary>Gets the species remobilisable luxury n.</summary>
            <value>The species remobilisable luxury n.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesFixedN">
            <summary>Gets the species fixed n.</summary>
            <value>The species fixed n.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesRequiredNLuxury">
            <summary>Gets the species required n luxury.</summary>
            <value>The species required n luxury.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesRequiredNOptimum">
            <summary>Gets the species required n optimum.</summary>
            <value>The species required n optimum.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesDemandN">
            <summary>Gets the species demand n.</summary>
            <value>The species demand n.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesGrowthN">
            <summary>Gets the species growth n.</summary>
            <value>The species growth n.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesGrowthNconc">
            <summary>Gets the species growth nconc.</summary>
            <value>The species growth nconc.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesUptakeN">
            <summary>Gets the species uptake n.</summary>
            <value>The species uptake n.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesLitterN">
            <summary>Gets the species litter n.</summary>
            <value>The species litter n.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesSenescedN">
            <summary>Gets the species senesced n.</summary>
            <value>The species senesced n.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesHarvestN">
            <summary>Gets the species harvest n.</summary>
            <value>The species harvest n.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesGLFN">
            <summary>Gets the species GLFN.</summary>
            <value>The species GLFN.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesGLFT">
            <summary>Gets the species GLFT.</summary>
            <value>The species GLFT.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesGLFW">
            <summary>Gets the species GLFW.</summary>
            <value>The species GLFW.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesIrradianceTopCanopy">
            <summary>Gets the species irradiance top canopy.</summary>
            <value>The species irradiance top canopy.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesPotCarbonAssimilation">
            <summary>Gets the species pot carbon assimilation.</summary>
            <value>The species pot carbon assimilation.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesCarbonLossRespiration">
            <summary>Gets the species carbon loss respiration.</summary>
            <value>The species carbon loss respiration.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesGrossPotGrowth">
            <summary>Gets the species gross pot growth.</summary>
            <value>The species gross pot growth.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesNetPotGrowth">
            <summary>Gets the species net pot growth.</summary>
            <value>The species net pot growth.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesPotGrowthW">
            <summary>Gets the species pot growth w.</summary>
            <value>The species pot growth w.</value>
        </member>
        <member name="P:Models.AgPasture.SpeciesActualGrowth">
            <summary>Gets the species actual growth.</summary>
            <value>The species actual growth.</value>
        </member>
        <member name="P:Models.AgPasture.GPP">
            <summary>Gets the GPP.</summary>
            <value>The GPP.</value>
        </member>
        <member name="P:Models.AgPasture.NPP">
            <summary>Gets the NPP.</summary>
            <value>The NPP.</value>
        </member>
        <member name="P:Models.AgPasture.NAPP">
            <summary>Gets the napp.</summary>
            <value>The napp.</value>
        </member>
        <member name="P:Models.AgPasture.CanopyType">
            <summary>Canopy type</summary>
        </member>
        <member name="P:Models.AgPasture.LAI">
            <summary>Gets the LAI (m^2/m^2)</summary>
        </member>
        <member name="P:Models.AgPasture.LAITotal">
            <summary>Gets the maximum LAI (m^2/m^2)</summary>
        </member>
        <member name="P:Models.AgPasture.CoverGreen">
            <summary>Gets the cover green (0-1)</summary>
        </member>
        <member name="P:Models.AgPasture.CoverTotal">
            <summary>Gets the cover total (0-1)</summary>
        </member>
        <member name="P:Models.AgPasture.Height">
            <summary>Gets the canopy height (mm)</summary>
        </member>
        <member name="P:Models.AgPasture.Depth">
            <summary>Gets the canopy depth (mm)</summary>
        </member>
        <member name="P:Models.AgPasture.FRGR">
            <summary>Gets  FRGR.</summary>
        </member>
        <member name="P:Models.AgPasture.PotentialEP">
            <summary>MicroClimate supplies PotentialEP</summary>
        </member>
        <member name="P:Models.AgPasture.LightProfile">
            <summary>MicroClimate supplies LightProfile</summary>
        </member>
        <member name="T:Models.AgPasture.FOMLayerDelegate">
            <summary>
            
            </summary>
            <param name="Data">The data.</param>
        </member>
        <member name="T:Models.AgPasture.BiomassRemovedDelegate">
            <summary>
            
            </summary>
            <param name="Data">The data.</param>
        </member>
        <member name="T:Models.AgPasture.WaterChangedDelegate">
            <summary>
            
            </summary>
            <param name="Data">The data.</param>
        </member>
        <member name="T:Models.AgPasture.NitrogenChangedDelegate">
            <summary>
            
            </summary>
            <param name="Data">The data.</param>
        </member>
        <member name="T:Models.Species">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.Species.CD2C">
            <summary>The c d2 c</summary>
        </member>
        <member name="F:Models.Species.C2DM">
            <summary>The c2 dm</summary>
        </member>
        <member name="F:Models.Species.DM2C">
            <summary>The d m2 c</summary>
        </member>
        <member name="F:Models.Species.N2Protein">
            <summary>The n2 protein</summary>
        </member>
        <member name="F:Models.Species.C2N_protein">
            <summary>The c2 n_protein</summary>
        </member>
        <member name="F:Models.Species.pS">
            <summary>The p s</summary>
        </member>
        <member name="F:Models.Species.Tmean">
            <summary>The tmean</summary>
        </member>
        <member name="F:Models.Species.Tmax">
            <summary>The tmax</summary>
        </member>
        <member name="F:Models.Species.Tmin">
            <summary>The tmin</summary>
        </member>
        <member name="F:Models.Species.ambientCO2">
            <summary>The ambient c o2</summary>
        </member>
        <member name="F:Models.Species.DayLength">
            <summary>The day length</summary>
        </member>
        <member name="F:Models.Species.localLatitude">
            <summary>The local latitude</summary>
        </member>
        <member name="F:Models.Species.simToday">
            <summary>The sim today</summary>
        </member>
        <member name="F:Models.Species.PlantInterceptedRadn">
            <summary>The plant intercepted radn</summary>
        </member>
        <member name="F:Models.Species.PlantCoverGreen">
            <summary>The plant cover green</summary>
        </member>
        <member name="F:Models.Species.PlantLightExtCoeff">
            <summary>The plant light ext coeff</summary>
        </member>
        <member name="F:Models.Species.PlantShootWt">
            <summary>The plant shoot wt</summary>
        </member>
        <member name="F:Models.Species.intRadnFrac">
            <summary>The int radn frac</summary>
        </member>
        <member name="F:Models.Species.speciesName">
            <summary>The species name</summary>
        </member>
        <member name="F:Models.Species.micrometType">
            <summary>The micromet type</summary>
        </member>
        <member name="F:Models.Species.isAnnual">
            <summary>The is annual</summary>
        </member>
        <member name="F:Models.Species.isLegume">
            <summary>The is legume</summary>
        </member>
        <member name="F:Models.Species.photoPath">
            <summary>The photo path</summary>
        </member>
        <member name="F:Models.Species.iniDMFrac_grass">
            <summary>The ini dm frac_grass</summary>
        </member>
        <member name="F:Models.Species.iniDMFrac_legume">
            <summary>The ini dm frac_legume</summary>
        </member>
        <member name="F:Models.Species.dayEmerg">
            <summary>The day emerg</summary>
        </member>
        <member name="F:Models.Species.monEmerg">
            <summary>The mon emerg</summary>
        </member>
        <member name="F:Models.Species.dayAnth">
            <summary>The day anth</summary>
        </member>
        <member name="F:Models.Species.monAnth">
            <summary>The mon anth</summary>
        </member>
        <member name="F:Models.Species.daysToMature">
            <summary>The days to mature</summary>
        </member>
        <member name="F:Models.Species.daysEmgToAnth">
            <summary>The days emg to anth</summary>
        </member>
        <member name="F:Models.Species.phenoStage">
            <summary>The pheno stage</summary>
        </member>
        <member name="F:Models.Species.phenoFactor">
            <summary>The pheno factor</summary>
        </member>
        <member name="F:Models.Species.daysfromEmergence">
            <summary>The daysfrom emergence</summary>
        </member>
        <member name="F:Models.Species.daysfromAnthesis">
            <summary>The daysfrom anthesis</summary>
        </member>
        <member name="F:Models.Species.bSown">
            <summary>The b sown</summary>
        </member>
        <member name="F:Models.Species.DDSfromSowing">
            <summary>The dd sfrom sowing</summary>
        </member>
        <member name="F:Models.Species.dRootDepth">
            <summary>The d root depth</summary>
        </member>
        <member name="F:Models.Species.maxRootDepth">
            <summary>The maximum root depth</summary>
        </member>
        <member name="F:Models.Species.allocationSeasonF">
            <summary>The allocation season f</summary>
        </member>
        <member name="F:Models.Species.NdilutCoeff">
            <summary>The ndilut coeff</summary>
        </member>
        <member name="F:Models.Species.rootDepth">
            <summary>The root depth</summary>
        </member>
        <member name="F:Models.Species.growthTmin">
            <summary>The growth tmin</summary>
        </member>
        <member name="F:Models.Species.growthTmax">
            <summary>The growth tmax</summary>
        </member>
        <member name="F:Models.Species.growthTopt">
            <summary>The growth topt</summary>
        </member>
        <member name="F:Models.Species.growthTq">
            <summary>The growth tq</summary>
        </member>
        <member name="F:Models.Species.heatOnsetT">
            <summary>The heat onset t</summary>
        </member>
        <member name="F:Models.Species.heatFullT">
            <summary>The heat full t</summary>
        </member>
        <member name="F:Models.Species.heatSumT">
            <summary>The heat sum t</summary>
        </member>
        <member name="F:Models.Species.coldOnsetT">
            <summary>The cold onset t</summary>
        </member>
        <member name="F:Models.Species.coldFullT">
            <summary>The cold full t</summary>
        </member>
        <member name="F:Models.Species.coldSumT">
            <summary>The cold sum t</summary>
        </member>
        <member name="F:Models.Species.Pm">
            <summary>The pm</summary>
        </member>
        <member name="F:Models.Species.maintRespiration">
            <summary>The maint respiration</summary>
        </member>
        <member name="F:Models.Species.growthEfficiency">
            <summary>The growth efficiency</summary>
        </member>
        <member name="F:Models.Species.highTempEffect">
            <summary>The high temporary effect</summary>
        </member>
        <member name="F:Models.Species.lowTempEffect">
            <summary>The low temporary effect</summary>
        </member>
        <member name="F:Models.Species.accumT">
            <summary>The accum t</summary>
        </member>
        <member name="F:Models.Species.accumTLow">
            <summary>The accum t low</summary>
        </member>
        <member name="F:Models.Species.massFluxTmin">
            <summary>The mass flux tmin</summary>
        </member>
        <member name="F:Models.Species.massFluxTopt">
            <summary>The mass flux topt</summary>
        </member>
        <member name="F:Models.Species.massFluxW0">
            <summary>The mass flux w0</summary>
        </member>
        <member name="F:Models.Species.massFluxWopt">
            <summary>The mass flux wopt</summary>
        </member>
        <member name="F:Models.Species.SLA">
            <summary>The sla</summary>
        </member>
        <member name="F:Models.Species.SRL">
            <summary>The SRL</summary>
        </member>
        <member name="F:Models.Species.lightExtCoeff">
            <summary>The light ext coeff</summary>
        </member>
        <member name="F:Models.Species.lightExtCoeff_ref">
            <summary>The light ext coeff_ref</summary>
        </member>
        <member name="F:Models.Species.rue">
            <summary>The rue</summary>
        </member>
        <member name="F:Models.Species.maxAssimiRate">
            <summary>The maximum assimi rate</summary>
        </member>
        <member name="F:Models.Species.rateLive2Dead">
            <summary>The rate live2 dead</summary>
        </member>
        <member name="F:Models.Species.rateDead2Litter">
            <summary>The rate dead2 litter</summary>
        </member>
        <member name="F:Models.Species.rateRootSen">
            <summary>The rate root sen</summary>
        </member>
        <member name="F:Models.Species.stockParameter">
            <summary>The stock parameter</summary>
        </member>
        <member name="F:Models.Species.maxSRratio">
            <summary>The maximum s rratio</summary>
        </member>
        <member name="F:Models.Species.leafRate">
            <summary>The leaf rate</summary>
        </member>
        <member name="F:Models.Species.fLeaf">
            <summary>The f leaf</summary>
        </member>
        <member name="F:Models.Species.fStolon">
            <summary>The f stolon</summary>
        </member>
        <member name="F:Models.Species.digestLive">
            <summary>The digest live</summary>
        </member>
        <member name="F:Models.Species.digestDead">
            <summary>The digest dead</summary>
        </member>
        <member name="F:Models.Species.referenceCO2">
            <summary>The reference c o2</summary>
        </member>
        <member name="F:Models.Species.CO2PmaxScale">
            <summary>The c o2 pmax scale</summary>
        </member>
        <member name="F:Models.Species.CO2NScale">
            <summary>The c o2 n scale</summary>
        </member>
        <member name="F:Models.Species.CO2NMin">
            <summary>The c o2 n minimum</summary>
        </member>
        <member name="F:Models.Species.CO2NCurvature">
            <summary>The c o2 n curvature</summary>
        </member>
        <member name="F:Models.Species.waterStressFactor">
            <summary>The water stress factor</summary>
        </member>
        <member name="F:Models.Species.soilSatFactor">
            <summary>The soil sat factor</summary>
        </member>
        <member name="F:Models.Species.NcstemFr">
            <summary>The ncstem fr</summary>
        </member>
        <member name="F:Models.Species.NcstolFr">
            <summary>The ncstol fr</summary>
        </member>
        <member name="F:Models.Species.NcrootFr">
            <summary>The ncroot fr</summary>
        </member>
        <member name="F:Models.Species.NcRel2">
            <summary>The nc rel2</summary>
        </member>
        <member name="F:Models.Species.NcRel3">
            <summary>The nc rel3</summary>
        </member>
        <member name="F:Models.Species.Ncleaf1">
            <summary>The ncleaf1</summary>
        </member>
        <member name="F:Models.Species.Ncleaf2">
            <summary>The ncleaf2</summary>
        </member>
        <member name="F:Models.Species.Ncleaf3">
            <summary>The ncleaf3</summary>
        </member>
        <member name="F:Models.Species.Ncleaf4">
            <summary>The ncleaf4</summary>
        </member>
        <member name="F:Models.Species.Ncstem1">
            <summary>The ncstem1</summary>
        </member>
        <member name="F:Models.Species.Ncstem2">
            <summary>The ncstem2</summary>
        </member>
        <member name="F:Models.Species.Ncstem3">
            <summary>The ncstem3</summary>
        </member>
        <member name="F:Models.Species.Ncstem4">
            <summary>The ncstem4</summary>
        </member>
        <member name="F:Models.Species.Ncstol1">
            <summary>The ncstol1</summary>
        </member>
        <member name="F:Models.Species.Ncstol2">
            <summary>The ncstol2</summary>
        </member>
        <member name="F:Models.Species.Ncstol3">
            <summary>The ncstol3</summary>
        </member>
        <member name="F:Models.Species.Ncroot">
            <summary>The ncroot</summary>
        </member>
        <member name="F:Models.Species.Nclitter">
            <summary>The nclitter</summary>
        </member>
        <member name="F:Models.Species.NcleafOpt">
            <summary>The ncleaf opt</summary>
        </member>
        <member name="F:Models.Species.NcstemOpt">
            <summary>The ncstem opt</summary>
        </member>
        <member name="F:Models.Species.NcstolOpt">
            <summary>The ncstol opt</summary>
        </member>
        <member name="F:Models.Species.NcrootOpt">
            <summary>The ncroot opt</summary>
        </member>
        <member name="F:Models.Species.NcleafMax">
            <summary>The ncleaf maximum</summary>
        </member>
        <member name="F:Models.Species.NcstemMax">
            <summary>The ncstem maximum</summary>
        </member>
        <member name="F:Models.Species.NcstolMax">
            <summary>The ncstol maximum</summary>
        </member>
        <member name="F:Models.Species.NcrootMax">
            <summary>The ncroot maximum</summary>
        </member>
        <member name="F:Models.Species.NcleafMin">
            <summary>The ncleaf minimum</summary>
        </member>
        <member name="F:Models.Species.NcstemMin">
            <summary>The ncstem minimum</summary>
        </member>
        <member name="F:Models.Species.NcstolMin">
            <summary>The ncstol minimum</summary>
        </member>
        <member name="F:Models.Species.NcrootMin">
            <summary>The ncroot minimum</summary>
        </member>
        <member name="F:Models.Species.MaxFix">
            <summary>The maximum fix</summary>
        </member>
        <member name="F:Models.Species.MinFix">
            <summary>The minimum fix</summary>
        </member>
        <member name="F:Models.Species.Nleaf1">
            <summary>The nleaf1</summary>
        </member>
        <member name="F:Models.Species.Nleaf2">
            <summary>The nleaf2</summary>
        </member>
        <member name="F:Models.Species.Nleaf3">
            <summary>The nleaf3</summary>
        </member>
        <member name="F:Models.Species.Nleaf4">
            <summary>The nleaf4</summary>
        </member>
        <member name="F:Models.Species.Nstem1">
            <summary>The nstem1</summary>
        </member>
        <member name="F:Models.Species.Nstem2">
            <summary>The nstem2</summary>
        </member>
        <member name="F:Models.Species.Nstem3">
            <summary>The nstem3</summary>
        </member>
        <member name="F:Models.Species.Nstem4">
            <summary>The nstem4</summary>
        </member>
        <member name="F:Models.Species.Nstol1">
            <summary>The nstol1</summary>
        </member>
        <member name="F:Models.Species.Nstol2">
            <summary>The nstol2</summary>
        </member>
        <member name="F:Models.Species.Nstol3">
            <summary>The nstol3</summary>
        </member>
        <member name="F:Models.Species.Nroot">
            <summary>The nroot</summary>
        </member>
        <member name="F:Models.Species.Nlitter">
            <summary>The nlitter</summary>
        </member>
        <member name="F:Models.Species.dmtotal">
            <summary>The dmtotal</summary>
        </member>
        <member name="F:Models.Species.dmgreen">
            <summary>The dmgreen</summary>
        </member>
        <member name="F:Models.Species.dmgreenmin">
            <summary>The dmgreenmin</summary>
        </member>
        <member name="F:Models.Species.dmdead">
            <summary>The dmdead</summary>
        </member>
        <member name="F:Models.Species.dmdeadmin">
            <summary>The dmdeadmin</summary>
        </member>
        <member name="F:Models.Species.dmshoot">
            <summary>The dmshoot</summary>
        </member>
        <member name="F:Models.Species.dmleaf">
            <summary>The dmleaf</summary>
        </member>
        <member name="F:Models.Species.dmstem">
            <summary>The dmstem</summary>
        </member>
        <member name="F:Models.Species.dmleaf_green">
            <summary>The dmleaf_green</summary>
        </member>
        <member name="F:Models.Species.dmstem_green">
            <summary>The dmstem_green</summary>
        </member>
        <member name="F:Models.Species.dmstol_green">
            <summary>The dmstol_green</summary>
        </member>
        <member name="F:Models.Species.dmstol">
            <summary>The dmstol</summary>
        </member>
        <member name="F:Models.Species.dmroot">
            <summary>The dmroot</summary>
        </member>
        <member name="F:Models.Species.dmleaf1">
            <summary>The dmleaf1</summary>
        </member>
        <member name="F:Models.Species.dmleaf2">
            <summary>The dmleaf2</summary>
        </member>
        <member name="F:Models.Species.dmleaf3">
            <summary>The dmleaf3</summary>
        </member>
        <member name="F:Models.Species.dmleaf4">
            <summary>The dmleaf4</summary>
        </member>
        <member name="F:Models.Species.dmstem1">
            <summary>The dmstem1</summary>
        </member>
        <member name="F:Models.Species.dmstem2">
            <summary>The dmstem2</summary>
        </member>
        <member name="F:Models.Species.dmstem3">
            <summary>The dmstem3</summary>
        </member>
        <member name="F:Models.Species.dmstem4">
            <summary>The dmstem4</summary>
        </member>
        <member name="F:Models.Species.dmstol1">
            <summary>The dmstol1</summary>
        </member>
        <member name="F:Models.Species.dmstol2">
            <summary>The dmstol2</summary>
        </member>
        <member name="F:Models.Species.dmstol3">
            <summary>The dmstol3</summary>
        </member>
        <member name="F:Models.Species.dmlitter">
            <summary>The dmlitter</summary>
        </member>
        <member name="F:Models.Species.dmdefoliated">
            <summary>The dmdefoliated</summary>
        </member>
        <member name="F:Models.Species.Ndefoliated">
            <summary>The ndefoliated</summary>
        </member>
        <member name="F:Models.Species.digestHerbage">
            <summary>The digest herbage</summary>
        </member>
        <member name="F:Models.Species.digestDefoliated">
            <summary>The digest defoliated</summary>
        </member>
        <member name="F:Models.Species.greenLAI">
            <summary>The green lai</summary>
        </member>
        <member name="F:Models.Species.deadLAI">
            <summary>The dead lai</summary>
        </member>
        <member name="F:Models.Species.totalLAI">
            <summary>The total lai</summary>
        </member>
        <member name="F:Models.Species.Nshoot">
            <summary>The nshoot</summary>
        </member>
        <member name="F:Models.Species.Nleaf">
            <summary>The nleaf</summary>
        </member>
        <member name="F:Models.Species.Nstem">
            <summary>The nstem</summary>
        </member>
        <member name="F:Models.Species.Ngreen">
            <summary>The ngreen</summary>
        </member>
        <member name="F:Models.Species.Ndead">
            <summary>The ndead</summary>
        </member>
        <member name="F:Models.Species.Nstolon">
            <summary>The nstolon</summary>
        </member>
        <member name="F:Models.Species.Nremob">
            <summary>The nremob</summary>
        </member>
        <member name="F:Models.Species.Cremob">
            <summary>The cremob</summary>
        </member>
        <member name="F:Models.Species.Nleaf3Remob">
            <summary>The nleaf3 remob</summary>
        </member>
        <member name="F:Models.Species.Nstem3Remob">
            <summary>The nstem3 remob</summary>
        </member>
        <member name="F:Models.Species.Nstol3Remob">
            <summary>The nstol3 remob</summary>
        </member>
        <member name="F:Models.Species.NrootRemob">
            <summary>The nroot remob</summary>
        </member>
        <member name="F:Models.Species.remob2NewGrowth">
            <summary>The remob2 new growth</summary>
        </member>
        <member name="F:Models.Species.newGrowthN">
            <summary>The new growth n</summary>
        </member>
        <member name="F:Models.Species.NdemandLux">
            <summary>The ndemand lux</summary>
        </member>
        <member name="F:Models.Species.NdemandOpt">
            <summary>The ndemand opt</summary>
        </member>
        <member name="F:Models.Species.Nfix">
            <summary>The nfix</summary>
        </member>
        <member name="F:Models.Species.Kappa2">
            <summary>The kappa2</summary>
        </member>
        <member name="F:Models.Species.Kappa3">
            <summary>The kappa3</summary>
        </member>
        <member name="F:Models.Species.Kappa4">
            <summary>The kappa4</summary>
        </member>
        <member name="F:Models.Species.NLuxury2">
            <summary>The n luxury2</summary>
        </member>
        <member name="F:Models.Species.NLuxury3">
            <summary>The n luxury3</summary>
        </member>
        <member name="F:Models.Species.NFastRemob2">
            <summary>The n fast remob2</summary>
        </member>
        <member name="F:Models.Species.NFastRemob3">
            <summary>The n fast remob3</summary>
        </member>
        <member name="F:Models.Species.soilNdemand">
            <summary>The soil ndemand</summary>
        </member>
        <member name="F:Models.Species.soilNuptake">
            <summary>The soil nuptake</summary>
        </member>
        <member name="F:Models.Species.gfwater">
            <summary>The gfwater</summary>
        </member>
        <member name="F:Models.Species.gftemp">
            <summary>The gftemp</summary>
        </member>
        <member name="F:Models.Species.gfn">
            <summary>The GFN</summary>
        </member>
        <member name="F:Models.Species.gfGen">
            <summary>The gf gen</summary>
        </member>
        <member name="F:Models.Species.Ncfactor">
            <summary>The ncfactor</summary>
        </member>
        <member name="F:Models.Species.dGrowthPot">
            <summary>The d growth pot</summary>
        </member>
        <member name="F:Models.Species.dGrowthW">
            <summary>The d growth w</summary>
        </member>
        <member name="F:Models.Species.dGrowth">
            <summary>The d growth</summary>
        </member>
        <member name="F:Models.Species.dGrowthRoot">
            <summary>The d growth root</summary>
        </member>
        <member name="F:Models.Species.dGrowthHerbage">
            <summary>The d growth herbage</summary>
        </member>
        <member name="F:Models.Species.dLitter">
            <summary>The d litter</summary>
        </member>
        <member name="F:Models.Species.dNLitter">
            <summary>The d n litter</summary>
        </member>
        <member name="F:Models.Species.dRootSen">
            <summary>The d root sen</summary>
        </member>
        <member name="F:Models.Species.dNrootSen">
            <summary>The d nroot sen</summary>
        </member>
        <member name="F:Models.Species.fShoot">
            <summary>The f shoot</summary>
        </member>
        <member name="F:Models.Species.gama">
            <summary>The gama</summary>
        </member>
        <member name="F:Models.Species.gamas">
            <summary>The gamas</summary>
        </member>
        <member name="F:Models.Species.gamad">
            <summary>The gamad</summary>
        </member>
        <member name="F:Models.Species.gamar">
            <summary>The gamar</summary>
        </member>
        <member name="F:Models.Species.leafPref">
            <summary>The leaf preference</summary>
        </member>
        <member name="F:Models.Species.IL1">
            <summary>The i l1</summary>
        </member>
        <member name="F:Models.Species.Pgross">
            <summary>The pgross</summary>
        </member>
        <member name="F:Models.Species.Resp_m">
            <summary>The resp_m</summary>
        </member>
        <member name="M:Models.Species.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:Models.Species"/> class.</summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Models.Species.InitValues">
            <summary>Initializes the values.</summary>
        </member>
        <member name="M:Models.Species.DailyRefresh">
            <summary>Dailies the refresh.</summary>
        </member>
        <member name="M:Models.Species.RemoveDM(System.Double,System.Double,System.Double)">
            <summary>Removes the dm.</summary>
            <param name="AmountToRemove">The amount to remove.</param>
            <param name="PrefGreen">The preference green.</param>
            <param name="PrefDead">The preference dead.</param>
            <returns></returns>
            <exception cref="T:System.Exception">  AgPasture - removal of DM resulted in loss of mass balance</exception>
        </member>
        <member name="M:Models.Species.Remove_original(System.Double)">
            <summary>Remove_originals the specified amt.</summary>
            <param name="amt">The amt.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Species.calcDigestability">
            <summary>Calculates the digestability.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.Species.updateAggregated">
            <summary>Updates the aggregated.</summary>
            <returns></returns>
            <exception cref="T:System.Exception">Loss of mass balance of shoot plant dry matter</exception>
        </member>
        <member name="M:Models.Species.rootGrowth">
            <summary>Roots the growth.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.Species.CalcDaysEmgToAnth">
            <summary>Calculates the days emg to anth.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.Species.Phenology">
            <summary>Phenologies this instance.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.Species.SetEmergentState">
            <summary>Sets the state of the emergent.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.Species.GetPotSWUptake(Models.Soils.Arbitrator.ZoneWaterAndN)">
            <summary>Placeholder for SoilArbitrator</summary>
            <param name="info">The information.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Species.DailyEMGrowthPot">
            <summary>Dailies the em growth pot.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.Species.annualPhenology">
            <summary>Annuals the phenology.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.Species.annualSpeciesReduction">
            <summary>Annuals the species reduction.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.Species.PCO2Effects">
            <summary>Pcs the o2 effects.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.Species.NCO2Effects">
            <summary>Ncs the o2 effects.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.Species.ConductanceCO2Effects">
            <summary>Conductances the c o2 effects.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.Species.CalcNdemand">
            <summary>Calculates the ndemand.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.Species.UpdatefLeaf">
            <summary>Updatefs the leaf.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.Species.DailyGrowthW">
            <summary>Dailies the growth w.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.Species.DailyGrowthAct">
            <summary>Dailies the growth act.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.Species.PmxNeffect">
            <summary>PMXs the neffect.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.Species.NFixCost">
            <summary>ns the fix cost.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.Species.PartitionTurnover">
            <summary>Partitions the turnover.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.Species.NewGrowthToShoot">
            <summary>News the growth to shoot.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.Species.GFTemperature">
            <summary>Gfs the temperature.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.Species.GFTemperature(System.Double)">
            <summary>Gfs the temperature.</summary>
            <param name="T">The t.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Species.GFTempC3">
            <summary>Gfs the temporary c3.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.Species.GFTempC3(System.Double)">
            <summary>Gfs the temporary c3.</summary>
            <param name="T">The t.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Species.GFTempC4">
            <summary>Gfs the temporary c4.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.Species.GFTempC4(System.Double)">
            <summary>Gfs the temporary c4.</summary>
            <param name="T">The t.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Species.HeatEffect">
            <summary>Heats the effect.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.Species.ColdEffect">
            <summary>Colds the effect.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.Species.GFWaterTissue">
            <summary>Gfs the water tissue.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.Species.GFTempTissue">
            <summary>Gfs the temporary tissue.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.Species.ResetZero">
            <summary>Resets the zero.</summary>
        </member>
        <member name="M:Models.Species.SetInGermination">
            <summary>Sets the in germination.</summary>
        </member>
        <member name="M:Models.Species.SetPrevPools">
            <summary>Sets the previous pools.</summary>
            <returns></returns>
        </member>
        <member name="P:Models.Species.coverGreen">
            <summary>Gets the cover green.</summary>
            <value>The cover green.</value>
        </member>
        <member name="P:Models.Species.coverDead">
            <summary>Gets the cover dead.</summary>
            <value>The cover dead.</value>
        </member>
        <member name="P:Models.Species.coverTot">
            <summary>Gets the cover tot.</summary>
            <value>The cover tot.</value>
        </member>
        <member name="T:Models.RemoveCropBiomassdmType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.RemoveCropBiomassdmType.pool">
            <summary>The pool</summary>
        </member>
        <member name="F:Models.RemoveCropBiomassdmType.part">
            <summary>The part</summary>
        </member>
        <member name="F:Models.RemoveCropBiomassdmType.dlt">
            <summary>The DLT</summary>
        </member>
        <member name="T:Models.RemoveCropBiomassType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.RemoveCropBiomassType.dm">
            <summary>The dm</summary>
        </member>
        <member name="T:Models.SowType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.SowType.Cultivar">
            <summary>The cultivar</summary>
        </member>
        <member name="F:Models.SowType.plants">
            <summary>The plants</summary>
        </member>
        <member name="F:Models.SowType.sowing_depth">
            <summary>The sowing_depth</summary>
        </member>
        <member name="F:Models.SowType.row_spacing">
            <summary>The row_spacing</summary>
        </member>
        <member name="F:Models.SowType.SkipRow">
            <summary>The skip row</summary>
        </member>
        <member name="F:Models.SowType.SkipPlant">
            <summary>The skip plant</summary>
        </member>
        <member name="F:Models.SowType.Establishment">
            <summary>The establishment</summary>
        </member>
        <member name="F:Models.SowType.crop_class">
            <summary>The crop_class</summary>
        </member>
        <member name="F:Models.SowType.tiller_no_fertile">
            <summary>The tiller_no_fertile</summary>
        </member>
        <member name="F:Models.SowType.Skip">
            <summary>The skip</summary>
        </member>
        <member name="F:Models.SowType.plants_pm">
            <summary>The plants_pm</summary>
        </member>
        <member name="F:Models.SowType.Ratoon">
            <summary>The ratoon</summary>
        </member>
        <member name="F:Models.SowType.sbdur">
            <summary>The sbdur</summary>
        </member>
        <member name="F:Models.SowType.nplh">
            <summary>The NPLH</summary>
        </member>
        <member name="F:Models.SowType.nh">
            <summary>The nh</summary>
        </member>
        <member name="F:Models.SowType.nplsb">
            <summary>The NPLSB</summary>
        </member>
        <member name="F:Models.SowType.nplds">
            <summary>The NPLDS</summary>
        </member>
        <member name="T:Models.GrazeType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.GrazeType.sender">
            <summary>The sender</summary>
        </member>
        <member name="F:Models.GrazeType.amount">
            <summary>The amount</summary>
        </member>
        <member name="F:Models.GrazeType.type">
            <summary>The type</summary>
        </member>
        <member name="T:Models.KillCropType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.KillCropType.KillFraction">
            <summary>The kill fraction</summary>
        </member>
        <member name="T:Models.DMPools">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.DMPools.dmleaf1">
            <summary>The dmleaf1</summary>
        </member>
        <member name="F:Models.DMPools.dmleaf2">
            <summary>The dmleaf2</summary>
        </member>
        <member name="F:Models.DMPools.dmleaf3">
            <summary>The dmleaf3</summary>
        </member>
        <member name="F:Models.DMPools.dmleaf4">
            <summary>The dmleaf4</summary>
        </member>
        <member name="F:Models.DMPools.dmstem1">
            <summary>The dmstem1</summary>
        </member>
        <member name="F:Models.DMPools.dmstem2">
            <summary>The dmstem2</summary>
        </member>
        <member name="F:Models.DMPools.dmstem3">
            <summary>The dmstem3</summary>
        </member>
        <member name="F:Models.DMPools.dmstem4">
            <summary>The dmstem4</summary>
        </member>
        <member name="F:Models.DMPools.dmstol1">
            <summary>The dmstol1</summary>
        </member>
        <member name="F:Models.DMPools.dmstol2">
            <summary>The dmstol2</summary>
        </member>
        <member name="F:Models.DMPools.dmstol3">
            <summary>The dmstol3</summary>
        </member>
        <member name="F:Models.DMPools.dmlitter">
            <summary>The dmlitter</summary>
        </member>
        <member name="F:Models.DMPools.dmroot">
            <summary>The dmroot</summary>
        </member>
        <member name="F:Models.DMPools.dmleaf">
            <summary>The dmleaf</summary>
        </member>
        <member name="F:Models.DMPools.dmstem">
            <summary>The dmstem</summary>
        </member>
        <member name="F:Models.DMPools.dmleaf_green">
            <summary>The dmleaf_green</summary>
        </member>
        <member name="F:Models.DMPools.dmstem_green">
            <summary>The dmstem_green</summary>
        </member>
        <member name="F:Models.DMPools.dmstol_green">
            <summary>The dmstol_green</summary>
        </member>
        <member name="F:Models.DMPools.dmstol">
            <summary>The dmstol</summary>
        </member>
        <member name="F:Models.DMPools.dmshoot">
            <summary>The dmshoot</summary>
        </member>
        <member name="F:Models.DMPools.dmgreen">
            <summary>The dmgreen</summary>
        </member>
        <member name="F:Models.DMPools.dmdead">
            <summary>The dmdead</summary>
        </member>
        <member name="F:Models.DMPools.dmtotal">
            <summary>The dmtotal</summary>
        </member>
        <member name="F:Models.DMPools.dmdefoliated">
            <summary>The dmdefoliated</summary>
        </member>
        <member name="F:Models.DMPools.Nremob">
            <summary>The nremob</summary>
        </member>
        <member name="M:Models.DMPools.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Models.DMPools"/> class.</summary>
        </member>
        <member name="T:Models.LinearInterpolation">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.LinearInterpolation.X">
            <summary>The x</summary>
        </member>
        <member name="F:Models.LinearInterpolation.Y">
            <summary>The y</summary>
        </member>
        <member name="M:Models.LinearInterpolation.Value(System.Double)">
            <summary>Values the specified d x.</summary>
            <param name="dX">The d x.</param>
            <returns></returns>
        </member>
        <member name="T:Models.Test">
            <summary>
            A test
            </summary>
        </member>
        <member name="P:Models.Test.SimulationName">
            <summary>Gets or sets the name of the simulation.</summary>
            <value>The name of the simulation.</value>
        </member>
        <member name="P:Models.Test.TableName">
            <summary>Gets or sets the name of the table.</summary>
            <value>The name of the table.</value>
        </member>
        <member name="P:Models.Test.Type">
            <summary>Gets or sets the type.</summary>
            <value>The type.</value>
        </member>
        <member name="P:Models.Test.ColumnNames">
            <summary>Gets or sets the column names.</summary>
            <value>The column names.</value>
        </member>
        <member name="P:Models.Test.Parameters">
            <summary>Gets or sets the parameters.</summary>
            <value>The parameters.</value>
        </member>
        <member name="T:Models.Test.TestType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.Test.TestType.AllPos">
            <summary>All position</summary>
        </member>
        <member name="F:Models.Test.TestType.GreaterThan">
            <summary>The greater than</summary>
        </member>
        <member name="F:Models.Test.TestType.LessThan">
            <summary>The less than</summary>
        </member>
        <member name="F:Models.Test.TestType.Between">
            <summary>The between</summary>
        </member>
        <member name="F:Models.Test.TestType.Mean">
            <summary>The mean</summary>
        </member>
        <member name="F:Models.Test.TestType.Tolerance">
            <summary>The tolerance</summary>
        </member>
        <member name="F:Models.Test.TestType.EqualTo">
            <summary>The equal to</summary>
        </member>
        <member name="F:Models.Test.TestType.CompareToInput">
            <summary>The compare to input</summary>
        </member>
        <member name="T:Models.Tests">
            <summary>
            
            </summary>
        </member>
        <member name="P:Models.Tests.AllTests">
            <summary>Gets or sets all tests.</summary>
            <value>All tests.</value>
        </member>
        <member name="T:Models.Soils.InitialWater">
            <summary>
            Represents the simulation initial water status. There are multiple ways
            of specifying the starting water; 1) by a fraction of a full profile, 2) by depth of
            wet soil or 3) a single value of plant available water.
            </summary>
        </member>
        <member name="F:Models.Soils.InitialWater.fractionFull">
            <summary>
            The fraction of a full profile.
            </summary>
        </member>
        <member name="F:Models.Soils.InitialWater.depthOfWetSoil">
            <summary>
            The depth of wet soil.
            </summary>
        </member>
        <member name="M:Models.Soils.InitialWater.PAWCCrop(System.String)">
            <summary>
            Return the plant available water CAPACITY. Units: mm/mm
            </summary>
        </member>
        <member name="M:Models.Soils.InitialWater.SW(System.Double[],System.Double[],System.Double[],System.Double[])">
            <summary>
            Calculate a layered soil water. Units: mm/mm
            </summary>
            <param name="thickness">Thickness of each layer</param>
            <param name="ll">Lower limit</param>
            <param name="dul">Drained upper limit</param>
            <param name="xf">Exploratory factor</param>
            <returns>A double array of volumetric soil water values (mm/mm)</returns>
        </member>
        <member name="M:Models.Soils.InitialWater.SWFilledFromTop(System.Double[],System.Double[],System.Double[],System.Double[])">
            <summary>
            Calculate a layered soil water using a FractionFull and filled from the top
            </summary>
            <param name="thickness">Thickness of each layer</param>
            <param name="ll">Lower limit</param>
            <param name="dul">Drained upper limit</param>
            <param name="xf">Exploratory factor</param>
            <returns>A double array of volumetric soil water values (mm/mm)</returns>
        </member>
        <member name="M:Models.Soils.InitialWater.SWEvenlyDistributed(System.Double[],System.Double[])">
            <summary>
            Calculate a layered soil water using a FractionFull and evenly distributed. Units: mm/mm
            </summary>
            <param name="ll">Lower limit</param>
            <param name="dul">Drained upper limit</param>
            <returns>A double array of volumetric soil water values (mm/mm)</returns>
        </member>
        <member name="M:Models.Soils.InitialWater.SWDepthWetSoil(System.Double[],System.Double[],System.Double[])">
            <summary>
            Calculate a layered soil water using a depth of wet soil. Units: mm/mm
            </summary>
            <param name="thickness">Thickness of each layer</param>
            <param name="ll">Lower limit</param>
            <param name="dul">Drained upper limit</param>
            <returns>A double array of volumetric soil water values (mm/mm)</returns>
        </member>
        <member name="P:Models.Soils.InitialWater.Soil">
            <summary>
            Gets the parent soil model.
            </summary>
        </member>
        <member name="P:Models.Soils.InitialWater.PercentMethod">
            <summary>
            Gets or sets the distribution method for the percent full method.
            </summary>
        </member>
        <member name="P:Models.Soils.InitialWater.FractionFull">
            <summary>
            Gets or sets the fraction of a full profile. If NaN is returned then
            the depth of wet soil is the specified method.
            </summary>
        </member>
        <member name="P:Models.Soils.InitialWater.DepthWetSoil">
            <summary>
            Gets or sets the depth of wet soil (mm). If NaN is returned then
            fraction full is the specified method.
            </summary>
        </member>
        <member name="P:Models.Soils.InitialWater.PAW">
            <summary>
            Gets or sets the plant available water content
            </summary>
        </member>
        <member name="P:Models.Soils.InitialWater.RelativeTo">
            <summary>
            Gets or sets the crop that starting plant available water is relative to.
            </summary>
        </member>
        <member name="P:Models.Soils.InitialWater.RelativeToCrops">
            <summary>
            Gets the crop names that are permissible in the 'RelativeTo' property.
            </summary>
        </member>
        <member name="T:Models.Soils.InitialWater.PercentMethodEnum">
            <summary>
            An enumeration for soil water distribution used by the percent full
            method.
            </summary>
        </member>
        <member name="F:Models.Soils.InitialWater.PercentMethodEnum.FilledFromTop">
            <summary>
            Represents filled from the top of the profile
            </summary>
        </member>
        <member name="F:Models.Soils.InitialWater.PercentMethodEnum.EvenlyDistributed">
            <summary>
            Represents evenly distribution down the profile.
            </summary>
        </member>
        <member name="T:Models.Soils.Analysis">
            <summary>
            This class captures data from a soil analysis
            </summary>
        </member>
        <member name="M:Models.Soils.Analysis.PHUnitsToString(Models.Soils.Analysis.PHUnitsEnum)">
            <summary>Phes the units to string.</summary>
            <param name="Units">The units.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Analysis.PHUnitsSet(Models.Soils.Analysis.PHUnitsEnum)">
            <summary>Phes the units set.</summary>
            <param name="ToUnits">To units.</param>
        </member>
        <member name="M:Models.Soils.Analysis.BoronUnitsToString(Models.Soils.Analysis.BoronUnitsEnum)">
            <summary>Borons the units to string.</summary>
            <param name="Units">The units.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Analysis.BoronUnitsSet(Models.Soils.Analysis.BoronUnitsEnum)">
            <summary>Borons the units set.</summary>
            <param name="ToUnits">To units.</param>
        </member>
        <member name="P:Models.Soils.Analysis.Thickness">
            <summary>Gets or sets the thickness.</summary>
            <value>The thickness.</value>
        </member>
        <member name="P:Models.Soils.Analysis.Depth">
            <summary>Gets or sets the depth.</summary>
            <value>The depth.</value>
        </member>
        <member name="P:Models.Soils.Analysis.Rocks">
            <summary>Gets or sets the rocks.</summary>
            <value>The rocks.</value>
        </member>
        <member name="P:Models.Soils.Analysis.RocksMetadata">
            <summary>Gets or sets the rocks metadata.</summary>
            <value>The rocks metadata.</value>
        </member>
        <member name="P:Models.Soils.Analysis.Texture">
            <summary>Gets or sets the texture.</summary>
            <value>The texture.</value>
        </member>
        <member name="P:Models.Soils.Analysis.TextureMetadata">
            <summary>Gets or sets the texture metadata.</summary>
            <value>The texture metadata.</value>
        </member>
        <member name="P:Models.Soils.Analysis.MunsellColour">
            <summary>Gets or sets the munsell colour.</summary>
            <value>The munsell colour.</value>
        </member>
        <member name="P:Models.Soils.Analysis.MunsellMetadata">
            <summary>Gets or sets the munsell metadata.</summary>
            <value>The munsell metadata.</value>
        </member>
        <member name="P:Models.Soils.Analysis.EC">
            <summary>Gets or sets the ec.</summary>
            <value>The ec.</value>
        </member>
        <member name="P:Models.Soils.Analysis.ECMetadata">
            <summary>Gets or sets the ec metadata.</summary>
            <value>The ec metadata.</value>
        </member>
        <member name="P:Models.Soils.Analysis.PH">
            <summary>Gets or sets the ph.</summary>
            <value>The ph.</value>
        </member>
        <member name="P:Models.Soils.Analysis.PHMetadata">
            <summary>Gets or sets the ph metadata.</summary>
            <value>The ph metadata.</value>
        </member>
        <member name="P:Models.Soils.Analysis.CL">
            <summary>Gets or sets the cl.</summary>
            <value>The cl.</value>
        </member>
        <member name="P:Models.Soils.Analysis.CLMetadata">
            <summary>Gets or sets the cl metadata.</summary>
            <value>The cl metadata.</value>
        </member>
        <member name="P:Models.Soils.Analysis.Boron">
            <summary>Gets or sets the boron.</summary>
            <value>The boron.</value>
        </member>
        <member name="P:Models.Soils.Analysis.BoronMetadata">
            <summary>Gets or sets the boron metadata.</summary>
            <value>The boron metadata.</value>
        </member>
        <member name="P:Models.Soils.Analysis.CEC">
            <summary>Gets or sets the cec.</summary>
            <value>The cec.</value>
        </member>
        <member name="P:Models.Soils.Analysis.CECMetadata">
            <summary>Gets or sets the cec metadata.</summary>
            <value>The cec metadata.</value>
        </member>
        <member name="P:Models.Soils.Analysis.Ca">
            <summary>Gets or sets the ca.</summary>
            <value>The ca.</value>
        </member>
        <member name="P:Models.Soils.Analysis.CaMetadata">
            <summary>Gets or sets the ca metadata.</summary>
            <value>The ca metadata.</value>
        </member>
        <member name="P:Models.Soils.Analysis.Mg">
            <summary>Gets or sets the mg.</summary>
            <value>The mg.</value>
        </member>
        <member name="P:Models.Soils.Analysis.MgMetadata">
            <summary>Gets or sets the mg metadata.</summary>
            <value>The mg metadata.</value>
        </member>
        <member name="P:Models.Soils.Analysis.Na">
            <summary>Gets or sets the na.</summary>
            <value>The na.</value>
        </member>
        <member name="P:Models.Soils.Analysis.NaMetadata">
            <summary>Gets or sets the na metadata.</summary>
            <value>The na metadata.</value>
        </member>
        <member name="P:Models.Soils.Analysis.K">
            <summary>Gets or sets the k.</summary>
            <value>The k.</value>
        </member>
        <member name="P:Models.Soils.Analysis.KMetadata">
            <summary>Gets or sets the k metadata.</summary>
            <value>The k metadata.</value>
        </member>
        <member name="P:Models.Soils.Analysis.ESP">
            <summary>Gets or sets the esp.</summary>
            <value>The esp.</value>
        </member>
        <member name="P:Models.Soils.Analysis.ESPMetadata">
            <summary>Gets or sets the esp metadata.</summary>
            <value>The esp metadata.</value>
        </member>
        <member name="P:Models.Soils.Analysis.Mn">
            <summary>Gets or sets the mn.</summary>
            <value>The mn.</value>
        </member>
        <member name="P:Models.Soils.Analysis.MnMetadata">
            <summary>Gets or sets the mn metadata.</summary>
            <value>The mn metadata.</value>
        </member>
        <member name="P:Models.Soils.Analysis.Al">
            <summary>Gets or sets the al.</summary>
            <value>The al.</value>
        </member>
        <member name="P:Models.Soils.Analysis.AlMetadata">
            <summary>Gets or sets the al metadata.</summary>
            <value>The al metadata.</value>
        </member>
        <member name="P:Models.Soils.Analysis.ParticleSizeSand">
            <summary>Gets or sets the particle size sand.</summary>
            <value>The particle size sand.</value>
        </member>
        <member name="P:Models.Soils.Analysis.ParticleSizeSandMetadata">
            <summary>Gets or sets the particle size sand metadata.</summary>
            <value>The particle size sand metadata.</value>
        </member>
        <member name="P:Models.Soils.Analysis.ParticleSizeSilt">
            <summary>Gets or sets the particle size silt.</summary>
            <value>The particle size silt.</value>
        </member>
        <member name="P:Models.Soils.Analysis.ParticleSizeSiltMetadata">
            <summary>Gets or sets the particle size silt metadata.</summary>
            <value>The particle size silt metadata.</value>
        </member>
        <member name="P:Models.Soils.Analysis.ParticleSizeClay">
            <summary>Gets or sets the particle size clay.</summary>
            <value>The particle size clay.</value>
        </member>
        <member name="P:Models.Soils.Analysis.ParticleSizeClayMetadata">
            <summary>Gets or sets the particle size clay metadata.</summary>
            <value>The particle size clay metadata.</value>
        </member>
        <member name="P:Models.Soils.Analysis.PHUnits">
            <summary>Gets or sets the ph units.</summary>
            <value>The ph units.</value>
        </member>
        <member name="P:Models.Soils.Analysis.BoronUnits">
            <summary>Gets or sets the boron units.</summary>
            <value>The boron units.</value>
        </member>
        <member name="P:Models.Soils.Analysis.PHWater">
            <summary>PH. Units: (1:5 water)</summary>
            <value>The ph water.</value>
        </member>
        <member name="T:Models.Soils.Analysis.PHUnitsEnum">
            <summary>
            An enumerated type for ph units
            </summary>
        </member>
        <member name="F:Models.Soils.Analysis.PHUnitsEnum.Water">
            <summary>water</summary>
        </member>
        <member name="F:Models.Soils.Analysis.PHUnitsEnum.CaCl2">
            <summary>CaCl2</summary>
        </member>
        <member name="T:Models.Soils.Analysis.BoronUnitsEnum">
            <summary>
            Boron units
            </summary>
        </member>
        <member name="F:Models.Soils.Analysis.BoronUnitsEnum.HotWater">
            <summary>hot water</summary>
        </member>
        <member name="F:Models.Soils.Analysis.BoronUnitsEnum.HotCaCl2">
            <summary>hot ca CL2</summary>
        </member>
        <member name="T:Models.PMF.Phen.Vernalisation">
            <summary>
            Vernalisation model
            </summary>
        </member>
        <member name="F:Models.PMF.Phen.Vernalisation.Phenology">
            <summary>The phenology</summary>
        </member>
        <member name="F:Models.PMF.Phen.Vernalisation.VDModel">
            <summary>The vd model</summary>
        </member>
        <member name="F:Models.PMF.Phen.Vernalisation.Weather">
            <summary>The weather</summary>
        </member>
        <member name="F:Models.PMF.Phen.Vernalisation.CumulativeVD">
            <summary>The cumulative vd</summary>
        </member>
        <member name="M:Models.PMF.Phen.Vernalisation.OnDoDailyInitialisation(System.Object,System.EventArgs)">
            <summary>Trap the DoDailyInitialisation event.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Phen.Vernalisation.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>Initialise everything</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Phen.Vernalisation.DoVernalisation(System.Double,System.Double)">
            <summary>Do our vernalisation</summary>
            <param name="Maxt">The maxt.</param>
            <param name="Mint">The mint.</param>
        </member>
        <member name="P:Models.PMF.Phen.Vernalisation.StartStage">
            <summary>The start stage</summary>
        </member>
        <member name="P:Models.PMF.Phen.Vernalisation.EndStage">
            <summary>The end stage</summary>
        </member>
        <member name="T:Models.PMF.Organs.BelowGroundOrgan">
            <summary>
            A below ground organ
            </summary>
        </member>
        <member name="F:Models.PMF.Organs.BelowGroundOrgan.Summary">
            <summary>The summary</summary>
        </member>
        <member name="M:Models.PMF.Organs.BelowGroundOrgan.DoHarvest">
            <summary>
            Execute Harvesting logic for below ground organ
            </summary>
        </member>
        <member name="T:Models.PMF.OldPlant.RadiationPartitioning">
            <summary>
            Radiation partitioning
            </summary>
        </member>
        <member name="F:Models.PMF.OldPlant.RadiationPartitioning.MetData">
            <summary>The met data</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.RadiationPartitioning.DoRadiationPartition">
            <summary>Does the radiation partition.</summary>
        </member>
        <member name="P:Models.PMF.OldPlant.RadiationPartitioning.FractIncidentRadn">
            <summary>Gets or sets the fract incident radn.</summary>
            <value>The fract incident radn.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.RadiationPartitioning.RadiationPartitioningOrder">
            <summary>Gets or sets the radiation partitioning order.</summary>
            <value>The radiation partitioning order.</value>
        </member>
        <member name="T:Models.PMF.OldPlant.Population1">
            <summary>
            Population model for old plant
            </summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Population1.Plant">
            <summary>The plant</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Population1.Summary">
            <summary>The summary</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Population1._Plants">
            <summary>The _ plants</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Population1.OnSow(Models.PMF.SowPlant2Type)">
            <summary>Called when [sow].</summary>
            <param name="Sow">The sow.</param>
        </member>
        <member name="F:Models.PMF.OldPlant.Population1.Phenology">
            <summary>The phenology</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Population1.SWStress">
            <summary>The sw stress</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Population1.Leaf">
            <summary>The leaf</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Population1.CropFailureStressPeriod">
            <summary>The crop failure stress period</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Population1.DeathHighTemperatureDuringEmergence">
            <summary>The death high temperature during emergence</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Population1.das">
            <summary>The das</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Population1.dlt_plants_failure_germ">
            <summary>The dlt_plants_failure_germ</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Population1.dlt_plants_failure_emergence">
            <summary>The dlt_plants_failure_emergence</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Population1.dlt_plants_death_seedling">
            <summary>The dlt_plants_death_seedling</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Population1.dlt_plants_failure_leaf_sen">
            <summary>The dlt_plants_failure_leaf_sen</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Population1.dlt_plants_failure_phen_delay">
            <summary>The dlt_plants_failure_phen_delay</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Population1.dlt_plants_death_drought">
            <summary>The dlt_plants_death_drought</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Population1.dlt_plants">
            <summary>The dlt_plants</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Population1.CumSWStressPheno">
            <summary>The cum sw stress pheno</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Population1.CumSWStressPhoto">
            <summary>The cum sw stress photo</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Population1.dlt_plants_death_external">
            <summary>The dlt_plants_death_external</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Population1.PlantDeath">
            <summary>This is only called from a Plant1 process method - not used in Plant2.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.OldPlant.Population1.Update">
            <summary>Updates this instance.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Population1.CropFailureGermination">
            <summary>Crop failure from lack of germination within a specific maximum number of days.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.OldPlant.Population1.CropFailureEmergence">
            <summary>
            Crop failure from lack of emergence within a specific maximum
            thermal time sum from germination.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.OldPlant.Population1.CropFailurePhenDelay">
            <summary>Determine plant death from prolonged phenology delay.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.OldPlant.Population1.CropFailureLeafSen">
            <summary>Determine plant population death from leaf area senescing</summary>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.OldPlant.Population1.DeathSeedling">
            <summary>Determine seedling death rate due to high soil temperatures during emergence.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.OldPlant.Population1.DeathDrought">
            <summary>Determine plant death rate due to drought</summary>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.OldPlant.Population1.DeathActual">
            <summary>Determine plant death rate due to a range of given processes</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Population1.KillCrop(System.Double)">
            <summary>Kills the crop.</summary>
            <param name="KillFraction">The kill fraction.</param>
        </member>
        <member name="P:Models.PMF.OldPlant.Population1.Density">
            <summary>Gets or sets the density.</summary>
            <value>The density.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Population1.LeafNumberCritical">
            <summary>Gets or sets the leaf number critical.</summary>
            <value>The leaf number critical.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Population1.TTEmergenceLimit">
            <summary>Gets or sets the tt emergence limit.</summary>
            <value>The tt emergence limit.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Population1.DaysToGerminationLimit">
            <summary>Gets or sets the days to germination limit.</summary>
            <value>The days to germination limit.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Population1.SWStressPhenoLimit">
            <summary>Gets or sets the sw stress pheno limit.</summary>
            <value>The sw stress pheno limit.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Population1.SWStressPhotoLimit">
            <summary>Gets or sets the sw stress photo limit.</summary>
            <value>The sw stress photo limit.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Population1.SWStressPhotoRate">
            <summary>Gets or sets the sw stress photo rate.</summary>
            <value>The sw stress photo rate.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Population1.DyingFractionPlants">
            <summary>Gets the dying fraction plants.</summary>
            <value>The dying fraction plants.</value>
        </member>
        <member name="T:Models.PMF.Functions.StageBasedInterpolation">
            <summary>
            A value is linearly interpolated between phenological growth stages
            </summary>
        </member>
        <member name="F:Models.PMF.Functions.StageBasedInterpolation._Proportional">
            <summary>The _ proportional</summary>
        </member>
        <member name="F:Models.PMF.Functions.StageBasedInterpolation.Phenology">
            <summary>The phenology</summary>
        </member>
        <member name="F:Models.PMF.Functions.StageBasedInterpolation.StageCodes">
            <summary>The stage codes</summary>
        </member>
        <member name="M:Models.PMF.Functions.StageBasedInterpolation.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>Initialise ourselves.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Models.PMF.Functions.StageBasedInterpolation.Stages">
            <summary>Gets or sets the stages.</summary>
            <value>The stages.</value>
        </member>
        <member name="P:Models.PMF.Functions.StageBasedInterpolation.Codes">
            <summary>Gets or sets the codes.</summary>
            <value>The codes.</value>
        </member>
        <member name="P:Models.PMF.Functions.StageBasedInterpolation.Proportional">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Models.PMF.Functions.StageBasedInterpolation"/> is proportional.
            </summary>
            <value><c>true</c> if proportional; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Models.PMF.Functions.StageBasedInterpolation.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
            <exception cref="T:System.Exception">Something is a miss here.  Specifically, the number of values in your StageCode function don't match the number of stage names.  Sort it out numb nuts!!</exception>
        </member>
        <member name="T:Models.PMF.Functions.SoilTemperatureFunction">
            <summary>
            Returns the temperature of the surface soil layer
            </summary>
        </member>
        <member name="F:Models.PMF.Functions.SoilTemperatureFunction.XYPairs">
            <summary>The xy pairs</summary>
        </member>
        <member name="M:Models.PMF.Functions.SoilTemperatureFunction.#ctor">
            <summary>constructor</summary>
        </member>
        <member name="M:Models.PMF.Functions.SoilTemperatureFunction.Document(System.Collections.Generic.List{Models.Core.AutoDocumentation.ITag},System.Int32,System.Int32)">
            <summary>Writes documentation for this function by adding to the list of documentation tags.</summary>
            <param name="tags">The list of tags to add to.</param>
            <param name="headingLevel">The level (e.g. H2) of the headings.</param>
            <param name="indent">The level of indentation 1, 2, 3 etc.</param>
        </member>
        <member name="P:Models.PMF.Functions.SoilTemperatureFunction.maxt_soil_surface">
            <summary>The maxt_soil_surface</summary>
        </member>
        <member name="P:Models.PMF.Functions.SoilTemperatureFunction.mint_soil_surface">
            <summary>The mint_soil_surface</summary>
        </member>
        <member name="P:Models.PMF.Functions.SoilTemperatureFunction.Value">
            <summary>Gets the value.</summary>
        </member>
        <member name="T:Models.PMF.Functions.SigmoidFunction2">
            <summary>
            Takes the value of the child as the x value and returns the y value from a sigmoid of the form y = Xmax * 1/1+exp(-(x-Xo)/b)
            </summary>
        </member>
        <member name="F:Models.PMF.Functions.SigmoidFunction2.Ymax">
            <summary>The ymax</summary>
        </member>
        <member name="F:Models.PMF.Functions.SigmoidFunction2.XValue">
            <summary>The x value</summary>
        </member>
        <member name="F:Models.PMF.Functions.SigmoidFunction2.Xo">
            <summary>The Xo</summary>
        </member>
        <member name="F:Models.PMF.Functions.SigmoidFunction2.b">
            <summary>The b</summary>
        </member>
        <member name="P:Models.PMF.Functions.SigmoidFunction2.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
            <exception cref="T:System.Exception">Error with values to Sigmoid function</exception>
        </member>
        <member name="T:Models.PMF.Functions.ExponentialFunction">
            <summary>
            An exponential function
            </summary>
        </member>
        <member name="M:Models.PMF.Functions.ExponentialFunction.#ctor">
            <summary>ExponentialFunction Constructor</summary>
        </member>
        <member name="F:Models.PMF.Functions.ExponentialFunction.ChildFunctions">
            <summary>The child functions</summary>
        </member>
        <member name="P:Models.PMF.Functions.ExponentialFunction.A">
            <summary>a</summary>
        </member>
        <member name="P:Models.PMF.Functions.ExponentialFunction.B">
            <summary>The b</summary>
        </member>
        <member name="P:Models.PMF.Functions.ExponentialFunction.C">
            <summary>The c</summary>
        </member>
        <member name="P:Models.PMF.Functions.ExponentialFunction.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
            <exception cref="T:System.Exception">Sigmoid function must have only one argument</exception>
        </member>
        <member name="T:Models.PMF.Functions.DemandFunctions.RelativeGrowthRateDemandFunction">
            <summary>
            Relative growth rate demand function
            </summary>
        </member>
        <member name="F:Models.PMF.Functions.DemandFunctions.RelativeGrowthRateDemandFunction.InitialWt">
            <summary>The initial wt</summary>
        </member>
        <member name="F:Models.PMF.Functions.DemandFunctions.RelativeGrowthRateDemandFunction.InitialStageName">
            <summary>The initial stage name</summary>
        </member>
        <member name="F:Models.PMF.Functions.DemandFunctions.RelativeGrowthRateDemandFunction.RelativeGrowthRate">
            <summary>The relative growth rate</summary>
        </member>
        <member name="F:Models.PMF.Functions.DemandFunctions.RelativeGrowthRateDemandFunction.OrganNumber">
            <summary>The organ number</summary>
        </member>
        <member name="F:Models.PMF.Functions.DemandFunctions.RelativeGrowthRateDemandFunction.Phenology">
            <summary>The phenology</summary>
        </member>
        <member name="F:Models.PMF.Functions.DemandFunctions.RelativeGrowthRateDemandFunction.Live">
            <summary>The live</summary>
        </member>
        <member name="F:Models.PMF.Functions.DemandFunctions.RelativeGrowthRateDemandFunction.StartWt">
            <summary>The start wt</summary>
        </member>
        <member name="P:Models.PMF.Functions.DemandFunctions.RelativeGrowthRateDemandFunction.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
        </member>
        <member name="T:Models.Soils.Arbitrator.ZoneWaterAndN">
            <summary>
            Represents a zone (point, field etc) that has water and N values.
            </summary>
        </member>
        <member name="F:Models.Soils.Arbitrator.ZoneWaterAndN.Name">
            <summary>The zone</summary>
        </member>
        <member name="F:Models.Soils.Arbitrator.ZoneWaterAndN.Water">
            <summary>Amount of water (mm)</summary>
        </member>
        <member name="F:Models.Soils.Arbitrator.ZoneWaterAndN.NO3N">
            <summary>Amount of N (kg/ha)</summary>
        </member>
        <member name="F:Models.Soils.Arbitrator.ZoneWaterAndN.NH4N">
            <summary>Amount of NH4 (kg/ha)</summary>
        </member>
        <member name="M:Models.Soils.Arbitrator.ZoneWaterAndN.op_Multiply(Models.Soils.Arbitrator.ZoneWaterAndN,System.Double)">
            <summary>Implements the operator *.</summary>
            <param name="zone">The zone</param>
            <param name="value">The value.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Models.Soils.Arbitrator.ZoneWaterAndN.op_Addition(Models.Soils.Arbitrator.ZoneWaterAndN,Models.Soils.Arbitrator.ZoneWaterAndN)">
            <summary>Implements the operator +.</summary>
            <param name="zone1">Zone 1</param>
            <param name="zone2">Zone 2</param>
            <returns>The result of the operator.</returns>
            <exception cref="T:System.Exception">Cannot add zones with different names</exception>
        </member>
        <member name="M:Models.Soils.Arbitrator.ZoneWaterAndN.op_Subtraction(Models.Soils.Arbitrator.ZoneWaterAndN,Models.Soils.Arbitrator.ZoneWaterAndN)">
            <summary>Implements the operator -.</summary>
            <param name="zone1">Zone 1</param>
            <param name="zone2">Zone 2</param>
            <returns>The result of the operator.</returns>
            <exception cref="T:System.Exception">Cannot subtract zones with different names</exception>
        </member>
        <member name="P:Models.Soils.Arbitrator.ZoneWaterAndN.TotalWater">
            <summary>Gets the sum of 'Water' (mm)</summary>
        </member>
        <member name="T:Models.PMF.Slurp.Slurp">
            <summary>
            Slurp is a 'dummy' static crop model.  The user sets very basic input information such as ....  These states will
            not change during the simulation (no growth or death) unless the states are reset by the user.
            Need to check canopy height and depth units.  Micromet documentation says m but looks like is in mm in the module
            </summary>
        </member>
        <member name="T:Models.Core.ICrop2">
            <summary>
            The ICrop interface specifies the properties and methods that all
            crops must have. In effect this interface describes the interactions
            between a crop and the other models in APSIM.
            </summary>
        </member>
        <member name="P:Models.Core.ICrop2.CanopyProperties">
            <summary>
            Provides canopy data to Arbitrator.
            </summary>
        </member>
        <member name="P:Models.Core.ICrop2.RootProperties">
            <summary>
            Provides root data to Arbitrator.
            </summary>
        </member>
        <member name="P:Models.Core.ICrop2.demandWater">
            <summary>
            Potential evapotranspiration. Arbitrator calculates this and sets this property in the crop.
            </summary>
        </member>
        <member name="P:Models.Core.ICrop2.uptakeWater">
            <summary>
            Actual transpiration by the crop. Calculated by Arbitrator based on PotentialEP across all crops, soil and root properties
            </summary>
        </member>
        <member name="P:Models.Core.ICrop2.LightProfile">
            <summary>
            MicroClimate calculates a layered canopy energy balance and sets
            this property in the crop.
            </summary>
        </member>
        <member name="P:Models.Core.ICrop2.demandNitrogen">
            <summary>
            Crop calculates demandNitrogen after getting its water allocation
            </summary>
        </member>
        <member name="P:Models.Core.ICrop2.uptakeNitrogen">
            <summary>
            Arbitrator supplies actualNitrogenSupply based on soil supply and other crop demand
            </summary>
        </member>
        <member name="P:Models.Core.ICrop2.uptakeNitrogenPropNO3">
            <summary>
            The proportion of supplyNitrogen that is supplied as NO3, the remainder is NH4
            </summary>
        </member>
        <member name="P:Models.Core.ICrop2.CropType">
            <summary>
            MicroClimate will get 'CropType' and use it to look up
            canopy properties for this crop.
            </summary>
        </member>
        <member name="P:Models.Core.ICrop2.CultivarNames">
            <summary>
            Gets a list of cultivar names
            </summary>
        </member>
        <member name="P:Models.Core.ICrop2.PlantInGround">
            <summary>
            test is plant is sown
            </summary>
        </member>
        <member name="P:Models.Core.ICrop2.PlantEmerged">
            <summary>
            test is plant has emerged
            </summary>
        </member>
        <member name="F:Models.PMF.Slurp.Slurp.Soil">
            <summary>Link to the soil module</summary>
        </member>
        <member name="F:Models.PMF.Slurp.Slurp.LocalCanopyData">
            <summary>The local canopy data</summary>
        </member>
        <member name="F:Models.PMF.Slurp.Slurp.LocalRootData">
            <summary>The local root data</summary>
        </member>
        <member name="F:Models.PMF.Slurp.Slurp.tempDepthUpper">
            <summary>The temporary depth upper</summary>
        </member>
        <member name="F:Models.PMF.Slurp.Slurp.tempDepthMiddle">
            <summary>The temporary depth middle</summary>
        </member>
        <member name="F:Models.PMF.Slurp.Slurp.tempDepthLower">
            <summary>The temporary depth lower</summary>
        </member>
        <member name="M:Models.PMF.Slurp.Slurp.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>Called when [simulation commencing].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Slurp.Slurp.OnDoPlantPotentialGrowth(System.Object,System.EventArgs)">
            <summary>Called when [do plant potential growth].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Slurp.Slurp.OnDoPlantActualGrowth(System.Object,System.EventArgs)">
            <summary>Called when [do plant actual growth].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Models.PMF.Slurp.Slurp.CropType">
            <summary>
            MicroClimate will get 'CropType' and use it to look up
            canopy properties for this crop.
            </summary>
        </member>
        <member name="P:Models.PMF.Slurp.Slurp.CultivarNames">
            <summary>Gets a list of cultivar names</summary>
        </member>
        <member name="P:Models.PMF.Slurp.Slurp.CanopyProperties">
            <summary>
            Holds the set of crop canopy properties that is used by Arbitrator for light and engergy calculations
            </summary>
        </member>
        <member name="P:Models.PMF.Slurp.Slurp.PlantInGround">
            <summary>Is the plant in the ground?</summary>
        </member>
        <member name="P:Models.PMF.Slurp.Slurp.PlantEmerged">
            <summary>Test if the plant has emerged</summary>
        </member>
        <member name="P:Models.PMF.Slurp.Slurp.localLAIGreen">
            <summary>The initial value of leaf area index (m2/m2)</summary>
            <value>The local lai green.</value>
        </member>
        <member name="P:Models.PMF.Slurp.Slurp.localLAItot">
            <summary>The initial value of total (green and dead) leaf area index (m2/m2)</summary>
            <value>The local la itot.</value>
        </member>
        <member name="P:Models.PMF.Slurp.Slurp.localLightExtinction">
            <summary>
            The initial value of the light extinction coefficient (-)
            THe simple Beer's law is used to calculate CoverGreen and CoverTot from the LAI values
            </summary>
            <value>The local light extinction.</value>
        </member>
        <member name="P:Models.PMF.Slurp.Slurp.localCanopyHeight">
            <summary>The initial value of canopy height (mm)</summary>
            <value>The height of the local canopy.</value>
        </member>
        <member name="P:Models.PMF.Slurp.Slurp.localCanopyDepth">
            <summary>The intial value of canopy depth (mm)</summary>
            <value>The local canopy depth.</value>
        </member>
        <member name="P:Models.PMF.Slurp.Slurp.localMaximumStomatalConductance">
            <summary>The initial value of maximum stomatal conductance (m/s)</summary>
            <value>The local maximum stomatal conductance.</value>
        </member>
        <member name="P:Models.PMF.Slurp.Slurp.localFrgr">
            <summary>The initial value of the relative growth rate factor (-)</summary>
            <value>The local FRGR.</value>
        </member>
        <member name="P:Models.PMF.Slurp.Slurp.localDemandWater">
            <summary>
            The initial value of water demand (mm/day) - will eventually be replaced by a calculation by MicroClimate
            </summary>
            <value>The local demand water.</value>
        </member>
        <member name="P:Models.PMF.Slurp.Slurp.localDemandNitrogen">
            <summary>The initial value of nitrogen demand (kgN/ha/day)</summary>
            <value>The local demand nitrogen.</value>
        </member>
        <member name="P:Models.PMF.Slurp.Slurp.localKNO3">
            <summary>The initial value for nitrate uptake coefficient</summary>
            <value>The local kn o3.</value>
        </member>
        <member name="P:Models.PMF.Slurp.Slurp.localKNH4">
            <summary>The initial value for ammonium uptake coefficient</summary>
            <value>The local kn h4.</value>
        </member>
        <member name="P:Models.PMF.Slurp.Slurp.localCoverGreen">
            <summary>The initial value of green cover (-)</summary>
            <value>The local cover green.</value>
        </member>
        <member name="P:Models.PMF.Slurp.Slurp.localCoverTot">
            <summary>The initial value of total cover (-)</summary>
            <value>The local cover tot.</value>
        </member>
        <member name="P:Models.PMF.Slurp.Slurp.RootProperties">
            <summary>
            Holds the set of crop root properties that is used by Arbitrator for water and nutrient calculations
            </summary>
        </member>
        <member name="P:Models.PMF.Slurp.Slurp.localRootDepth">
            <summary>
            The initial value of rooting depth (mm)
            This is used to calculate RootExplorationByLayer and RootLengthDensityByVolume
            </summary>
            <value>The local root depth.</value>
        </member>
        <member name="P:Models.PMF.Slurp.Slurp.localSurfaceRootLengthDensity">
            <summary>
            The initial value of the root length density at the soil surface (mm/mm3)
            This is used to calculate RootExplorationByLayer and RootLengthDensityByVolume
            </summary>
            <value>The local surface root length density.</value>
        </member>
        <member name="P:Models.PMF.Slurp.Slurp.localRootExplorationByLayer">
            <summary>
            The initial value of the extent to which the roots have penetrated the soil layer (0-1)
            </summary>
            <value>The local root exploration by layer.</value>
        </member>
        <member name="P:Models.PMF.Slurp.Slurp.localRootLengthDensityByVolume">
            <summary>The initial value of the root length densities for each soil layer (mm/mm3)</summary>
            <value>The local root length density by volume.</value>
        </member>
        <member name="P:Models.PMF.Slurp.Slurp.demandWater">
            <summary>
            Water demand (mm/day) - at the moment is set from the UI but eventually will be supplied by the Arbitrator (or MicroClimate)
            </summary>
        </member>
        <member name="P:Models.PMF.Slurp.Slurp.uptakeWater">
            <summary>
            The is the actual supply of water to the plant as an array (mm) of values for each soil layer - calculated  by the Arbitrator
            Note that Arbitrator does the uptake so the plant does not do the removal from the soil
            </summary>
        </member>
        <member name="P:Models.PMF.Slurp.Slurp.demandNitrogen">
            <summary>Nitrogen demand (kg N /ha /day) - directly set from the UI</summary>
        </member>
        <member name="P:Models.PMF.Slurp.Slurp.uptakeNitrogen">
            <summary>
            The is the actual supply of nitrogen (nitrate plus ammonium) to the plant as an array (kgN/ha/day) of values for each soil layer - calculated  by the Arbitrator
            Note that Arbitrator does the uptake so the plant does not do the removal from the soil
            </summary>
        </member>
        <member name="P:Models.PMF.Slurp.Slurp.uptakeNitrogenPropNO3">
            <summary>This is the proportion of the nitrogen uptake from any layer that is nitrate (-)</summary>
        </member>
        <member name="P:Models.PMF.Slurp.Slurp.LightProfile">
            <summary>MicroClimate supplies LightProfile</summary>
        </member>
        <member name="T:Models.PMF.SimpleTree">
            <summary>
            A model of a simple tree
            </summary>
        </member>
        <member name="F:Models.PMF.SimpleTree.Soil">
            <summary>The soil</summary>
        </member>
        <member name="F:Models.PMF.SimpleTree.plant_status">
            <summary>The plant_status</summary>
        </member>
        <member name="F:Models.PMF.SimpleTree.SWUptake">
            <summary>The sw uptake</summary>
        </member>
        <member name="F:Models.PMF.SimpleTree.NO3Uptake">
            <summary>The no3 uptake</summary>
        </member>
        <member name="F:Models.PMF.SimpleTree.NH4Uptake">
            <summary>The nh4 uptake</summary>
        </member>
        <member name="F:Models.PMF.SimpleTree.Uptakes">
            <summary>A list of uptakes generated for the soil arbitrator</summary>
        </member>
        <member name="M:Models.PMF.SimpleTree.#ctor">
            <summary>Constructor</summary>
        </member>
        <member name="M:Models.PMF.SimpleTree.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>Simulation start</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.SimpleTree.OnDoDailyInitialisation(System.Object,System.EventArgs)">
            <summary>Run at start of day</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.SimpleTree.GetSWUptakes(Models.Soils.Arbitrator.SoilState)">
            <summary>Calculate the potential sw uptake for today</summary>
            <param name="soilstate"></param>
            <returns>list of uptakes</returns>
            <exception cref="T:Models.Core.ApsimXException">Could not find root zone in Zone  + this.Parent.Name +  for SimpleTree</exception>
        </member>
        <member name="M:Models.PMF.SimpleTree.GetNUptakes(Models.Soils.Arbitrator.SoilState)">
            <summary>Placeholder for SoilArbitrator</summary>
            <param name="soilstate">soil state</param>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.SimpleTree.SetSWUptake(System.Collections.Generic.List{Models.Soils.Arbitrator.ZoneWaterAndN})">
            <summary>
            Set the sw uptake for today
            </summary>
        </member>
        <member name="M:Models.PMF.SimpleTree.SetNUptake(System.Collections.Generic.List{Models.Soils.Arbitrator.ZoneWaterAndN})">
            <summary>
            Set the n uptake for today
            </summary>
        </member>
        <member name="M:Models.PMF.SimpleTree.Sow(System.String,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Sows the plant</summary>
            <param name="cultivar">The cultivar.</param>
            <param name="population">The population.</param>
            <param name="depth">The depth.</param>
            <param name="rowSpacing">The row spacing.</param>
            <param name="maxCover">The maximum cover.</param>
            <param name="budNumber">The bud number.</param>
        </member>
        <member name="M:Models.PMF.SimpleTree.RootProportion(System.Int32,System.Double)">
            <summary>Roots the proportion.</summary>
            <param name="layer">The layer.</param>
            <param name="root_depth">The root_depth.</param>
            <returns></returns>
        </member>
        <member name="P:Models.PMF.SimpleTree.CanopyType">
            <summary>Gets the canopy. Should return null if no canopy present.</summary>
        </member>
        <member name="P:Models.PMF.SimpleTree.LAI">
            <summary>Gets the LAI</summary>
        </member>
        <member name="P:Models.PMF.SimpleTree.LAITotal">
            <summary>Gets the LAI live + dead (m^2/m^2)</summary>
        </member>
        <member name="P:Models.PMF.SimpleTree.CoverGreen">
            <summary>Gets the cover green.</summary>
        </member>
        <member name="P:Models.PMF.SimpleTree.CoverTotal">
            <summary>Gets the cover total.</summary>
        </member>
        <member name="P:Models.PMF.SimpleTree.Height">
            <summary>Gets the height.</summary>
        </member>
        <member name="P:Models.PMF.SimpleTree.Depth">
            <summary>Gets the depth.</summary>
        </member>
        <member name="P:Models.PMF.SimpleTree.FRGR">
            <summary>Gets  FRGR.</summary>
        </member>
        <member name="P:Models.PMF.SimpleTree.PotentialEP">
            <summary>Sets the potential evapotranspiration. Set by MICROCLIMATE.</summary>
        </member>
        <member name="P:Models.PMF.SimpleTree.LightProfile">
            <summary>Sets the light profile. Set by MICROCLIMATE.</summary>
        </member>
        <member name="P:Models.PMF.SimpleTree.CropType">
            <summary>
            Gets or sets the type of the crop.
            </summary>
        </member>
        <member name="E:Models.PMF.SimpleTree.NitrogenChanged">
            <summary>Occurs when [nitrogen changed].</summary>
        </member>
        <member name="P:Models.PMF.SimpleTree.IsAlive">
            <summary>
            Is the plant alive?
            </summary>
        </member>
        <member name="P:Models.PMF.SimpleTree.RootDepth">
            <summary>Rooting Depth</summary>
            <value>The rooting depth.</value>
        </member>
        <member name="P:Models.PMF.SimpleTree.NDemand">
            <summary>The daily N demand</summary>
            <value>The daily N demand.</value>
        </member>
        <member name="P:Models.PMF.SimpleTree.Uptake">
            <summary>The actual uptake of the plant</summary>
            <value>The uptake.</value>
        </member>
        <member name="P:Models.PMF.SimpleTree.CultivarNames">
            <summary>Gets a list of cultivar names</summary>
        </member>
        <member name="P:Models.PMF.SimpleTree.EP">
            <summary>MicroClimate supplies PotentialEP</summary>
        </member>
        <member name="T:Models.NullSummary">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:Models.NullSummary.WriteMessage(Models.Core.IModel,System.String)">
            <summary>
            Write a message to the summary
            </summary>
            <param name="model">The model writing the message</param>
            <param name="message">The message to write</param>
        </member>
        <member name="M:Models.NullSummary.WriteWarning(Models.Core.IModel,System.String)">
            <summary>
            Write a message to the summary
            </summary>
            <param name="model">The model writing the message</param>
            <param name="message">The message to write</param>
        </member>
        <member name="T:Models.Core.ValidParentAttribute">
            <summary>
            Specifies the models that this class can sit under in the user interface.
            </summary>
        </member>
        <member name="M:Models.Core.ValidParentAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Models.Core.ValidParentAttribute"/> class.
            </summary>
        </member>
        <member name="M:Models.Core.ValidParentAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Models.Core.ValidParentAttribute"/> class.
            </summary>
            <param name="model">The model that this class must sit under.</param>
        </member>
        <member name="P:Models.Core.ValidParentAttribute.ParentModels">
            <summary>
            Gets or sets the list of allowable parent models
            </summary>
        </member>
        <member name="T:Models.PMF.Functions.DemandFunctions.FillingRateFunction">
            <summary>
            Filling rate is calculated from grain number, a maximum mass to be filled and the duration of the filling process.
            </summary>
        </member>
        <member name="F:Models.PMF.Functions.DemandFunctions.FillingRateFunction.FillingDuration">
            <summary>The partition fraction</summary>
        </member>
        <member name="F:Models.PMF.Functions.DemandFunctions.FillingRateFunction.NumberFunction">
            <summary>The filling rate</summary>
        </member>
        <member name="F:Models.PMF.Functions.DemandFunctions.FillingRateFunction.ThermalTime">
            <summary>The arbitrator</summary>
        </member>
        <member name="F:Models.PMF.Functions.DemandFunctions.FillingRateFunction.PotentialSizeIncrement">
            <summary>The maximum weight or maximum amount of N incremented for individual grains in a given phase</summary>
        </member>
        <member name="P:Models.PMF.Functions.DemandFunctions.FillingRateFunction.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
        </member>
        <member name="T:Models.Soils.Water">
            <summary>
            A model for capturing water parameters
            </summary>
        </member>
        <member name="F:Models.Soils.Water._Thickness">
            <summary>The _ thickness</summary>
        </member>
        <member name="M:Models.Soils.Water.Crop(System.String)">
            <summary>Return the specified crop to caller. Will return null if not found.</summary>
            <param name="CropName">Name of the crop.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Water.FindCropIndex(System.String)">
            <summary>Return the specified crop to caller. Will return null if not found.</summary>
            <param name="CropName">Name of the crop.</param>
            <returns></returns>
        </member>
        <member name="P:Models.Soils.Water.soil">
            <summary>Gets the soil.</summary>
            <value>The soil.</value>
        </member>
        <member name="P:Models.Soils.Water.Thickness">
            <summary>Gets or sets the thickness.</summary>
            <value>The thickness.</value>
        </member>
        <member name="P:Models.Soils.Water.Depth">
            <summary>Gets or sets the depth.</summary>
            <value>The depth.</value>
        </member>
        <member name="P:Models.Soils.Water.BD">
            <summary>Gets or sets the bd.</summary>
            <value>The bd.</value>
        </member>
        <member name="P:Models.Soils.Water.AirDry">
            <summary>Gets or sets the air dry.</summary>
            <value>The air dry.</value>
        </member>
        <member name="P:Models.Soils.Water.LL15">
            <summary>Gets or sets the l L15.</summary>
            <value>The l L15.</value>
        </member>
        <member name="P:Models.Soils.Water.DUL">
            <summary>Gets or sets the dul.</summary>
            <value>The dul.</value>
        </member>
        <member name="P:Models.Soils.Water.SAT">
            <summary>Gets or sets the sat.</summary>
            <value>The sat.</value>
        </member>
        <member name="P:Models.Soils.Water.KS">
            <summary>Gets or sets the ks.</summary>
            <value>The ks.</value>
        </member>
        <member name="P:Models.Soils.Water.BDMetadata">
            <summary>Gets or sets the bd metadata.</summary>
            <value>The bd metadata.</value>
        </member>
        <member name="P:Models.Soils.Water.AirDryMetadata">
            <summary>Gets or sets the air dry metadata.</summary>
            <value>The air dry metadata.</value>
        </member>
        <member name="P:Models.Soils.Water.LL15Metadata">
            <summary>Gets or sets the l L15 metadata.</summary>
            <value>The l L15 metadata.</value>
        </member>
        <member name="P:Models.Soils.Water.DULMetadata">
            <summary>Gets or sets the dul metadata.</summary>
            <value>The dul metadata.</value>
        </member>
        <member name="P:Models.Soils.Water.SATMetadata">
            <summary>Gets or sets the sat metadata.</summary>
            <value>The sat metadata.</value>
        </member>
        <member name="P:Models.Soils.Water.KSMetadata">
            <summary>Gets or sets the ks metadata.</summary>
            <value>The ks metadata.</value>
        </member>
        <member name="P:Models.Soils.Water.Crops">
            <summary>Gets the crops.</summary>
            <value>The crops.</value>
        </member>
        <member name="P:Models.Soils.Water.CropNames">
            <summary>
            Get or set the names of crops. Note: When setting, the crops will be reorded to match
            the setting list of names. Also new crops will be added / deleted as required.
            </summary>
            <value>The crop names.</value>
        </member>
        <member name="T:Models.Soils.Soil">
            <summary>
            The soil class encapsulates a soil characterisation and 0 or more soil samples.
            the methods in this class that return double[] always return using the
            "Standard layer structure" i.e. the layer structure as defined by the Water child object.
            method. Mapping will occur to achieve this if necessary.
            To obtain the "raw", unmapped, values use the child classes e.g. SoilWater, Analysis and Sample.
            </summary>
        </member>
        <member name="F:Models.Soils.Soil.waterNode">
            <summary>Gets the water.</summary>
        </member>
        <member name="F:Models.Soils.Soil.structure">
            <summary>A reference to the layer structure node or null if not present.</summary>
        </member>
        <member name="M:Models.Soils.Soil.OnLoaded">
            <summary>Called when [loaded].</summary>
        </member>
        <member name="M:Models.Soils.Soil.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>Called when [simulation commencing].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.Soils.Soil.FindChildren">
            <summary>Find our children.</summary>
        </member>
        <member name="M:Models.Soils.Soil.Crop(System.String)">
            <summary>Return a specific crop to caller. Will throw if crop doesn't exist.</summary>
            <param name="CropName">Name of the crop.</param>
            <returns></returns>
            <exception cref="T:System.Exception">Soil could not find crop:  + CropName</exception>
        </member>
        <member name="M:Models.Soils.Soil.PAWCCropAtWaterThickness(System.String)">
            <summary>Return the plant available water CAPACITY at water node thickness. Units: mm/mm</summary>
            <param name="CropName">Name of the crop.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Soil.PAWCropAtWaterThickness(System.String)">
            <summary>
            Plant available water for the specified crop at water node thickness. Will throw if crop not found. Units: mm/mm
            </summary>
            <param name="CropName">Name of the crop.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Soil.PAWmmAtWaterThickness(System.String)">
            <summary>
            Plant available water for the specified crop at water node thickness. Will throw if crop not found. Units: mm
            </summary>
            <param name="CropName">Name of the crop.</param>
            <returns></returns>
        </member>
        <member name="F:Models.Soils.Soil.BlackVertosolCropList">
            <summary>The black vertosol crop list</summary>
        </member>
        <member name="F:Models.Soils.Soil.GreyVertosolCropList">
            <summary>The grey vertosol crop list</summary>
        </member>
        <member name="F:Models.Soils.Soil.PredictedThickness">
            <summary>The predicted thickness</summary>
        </member>
        <member name="F:Models.Soils.Soil.PredictedXF">
            <summary>The predicted xf</summary>
        </member>
        <member name="F:Models.Soils.Soil.WheatKL">
            <summary>The wheat kl</summary>
        </member>
        <member name="F:Models.Soils.Soil.SorghumKL">
            <summary>The sorghum kl</summary>
        </member>
        <member name="F:Models.Soils.Soil.BarleyKL">
            <summary>The barley kl</summary>
        </member>
        <member name="F:Models.Soils.Soil.ChickpeaKL">
            <summary>The chickpea kl</summary>
        </member>
        <member name="F:Models.Soils.Soil.MungbeanKL">
            <summary>The mungbean kl</summary>
        </member>
        <member name="F:Models.Soils.Soil.CottonKL">
            <summary>The cotton kl</summary>
        </member>
        <member name="F:Models.Soils.Soil.CanolaKL">
            <summary>The canola kl</summary>
        </member>
        <member name="F:Models.Soils.Soil.PigeonPeaKL">
            <summary>The pigeon pea kl</summary>
        </member>
        <member name="F:Models.Soils.Soil.MaizeKL">
            <summary>The maize kl</summary>
        </member>
        <member name="F:Models.Soils.Soil.CowpeaKL">
            <summary>The cowpea kl</summary>
        </member>
        <member name="F:Models.Soils.Soil.SunflowerKL">
            <summary>The sunflower kl</summary>
        </member>
        <member name="F:Models.Soils.Soil.FababeanKL">
            <summary>The fababean kl</summary>
        </member>
        <member name="F:Models.Soils.Soil.LucerneKL">
            <summary>The lucerne kl</summary>
        </member>
        <member name="F:Models.Soils.Soil.PerennialKL">
            <summary>The perennial kl</summary>
        </member>
        <member name="M:Models.Soils.Soil.PredictedCrop(System.String)">
            <summary>Return a predicted SoilCrop for the specified crop name or null if not found.</summary>
            <param name="CropName">Name of the crop.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Soil.PredictedLL(System.Double[],System.Double)">
            <summary>Calculate and return a predicted LL from the specified A and B values.</summary>
            <param name="A">a.</param>
            <param name="B">The b.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Soil.FindSample(System.String)">
            <summary>Find the specified sample. Will throw if not found.</summary>
            <param name="SampleName">Name of the sample.</param>
            <returns></returns>
            <exception cref="T:System.Exception">Cannot find soil sample named:  + SampleName</exception>
        </member>
        <member name="M:Models.Soils.Soil.BDMapped(System.Double[])">
            <summary>Bulk density - mapped to the specified layer structure. Units: mm/mm</summary>
            <param name="ToThickness">To thickness.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Soil.AirDryMapped(System.Double[])">
            <summary>AirDry - mapped to the specified layer structure. Units: mm/mm</summary>
            <param name="ToThickness">To thickness.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Soil.LL15Mapped(System.Double[])">
            <summary>Lower limit 15 bar - mapped to the specified layer structure. Units: mm/mm</summary>
            <param name="ToThickness">To thickness.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Soil.DULMapped(System.Double[])">
            <summary>Drained upper limit - mapped to the specified layer structure. Units: mm/mm</summary>
            <param name="ToThickness">To thickness.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Soil.SWMapped(System.Double[],System.Double[],System.Double[])">
            <summary>SW - mapped to the specified layer structure. Units: mm/mm</summary>
            <param name="Values">The values.</param>
            <param name="Thicknesses">The thicknesses.</param>
            <param name="ToThickness">To thickness.</param>
            <returns></returns>
            <exception cref="T:System.Exception">Cannot find crop lower limit or LL15 in soil</exception>
        </member>
        <member name="M:Models.Soils.Soil.LLMapped(System.String,System.Double[])">
            <summary>Crop lower limit mapped. Units: mm/mm</summary>
            <param name="CropName">Name of the crop.</param>
            <param name="ToThickness">To thickness.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Soil.XFMapped(System.String,System.Double[])">
            <summary>Crop XF mapped. Units: 0-1</summary>
            <param name="CropName">Name of the crop.</param>
            <param name="ToThickness">To thickness.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Soil.Map(System.Double[],System.Double[],System.Double[],Models.Soils.Soil.MapType,System.Double)">
            <summary>Map soil variables from one layer structure to another.</summary>
            <param name="FValues">The f values.</param>
            <param name="FThickness">The f thickness.</param>
            <param name="ToThickness">To thickness.</param>
            <param name="MapType">Type of the map.</param>
            <param name="DefaultValueForBelowProfile">The default value for below profile.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Soil.OverlaySampleOnTo(System.Double[],System.Double[],System.Double[]@,System.Double[]@)">
            <summary>Overlay sample values onto soil values.</summary>
            <param name="SampleValues">The sample values.</param>
            <param name="SampleThickness">The sample thickness.</param>
            <param name="SoilValues">The soil values.</param>
            <param name="SoilThickness">The soil thickness.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Soil.InFillValues(System.Double[]@,System.Double[]@,System.Double[],System.Double[])">
            <summary>Takes values from SoilValues and puts them at the bottom of SampleValues.</summary>
            <param name="SampleValues">The sample values.</param>
            <param name="SampleThickness">The sample thickness.</param>
            <param name="SoilValues">The soil values.</param>
            <param name="SoilThickness">The soil thickness.</param>
        </member>
        <member name="M:Models.Soils.Soil.ToDepthStrings(System.Double[])">
            <summary>Convert an array of thickness (mm) to depth strings (cm)</summary>
            <param name="Thickness">The thickness.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Soil.ToThickness(System.String[])">
            <summary>
            Convert an array of depth strings (cm) to thickness (mm) e.g.
            "0-10", "10-30"
            To
            100, 200
            </summary>
            <param name="DepthStrings">The depth strings.</param>
            <returns></returns>
            <exception cref="T:System.Exception">Invalid layer string:  + DepthStrings[i] +
                                              . String must be of the form: 10-30</exception>
        </member>
        <member name="M:Models.Soils.Soil.ToMidPoints(System.Double[])">
            <summary>To the mid points.</summary>
            <param name="Thickness">The thickness.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Soil.ToCumThickness(System.Double[])">
            <summary>To the cum thickness.</summary>
            <param name="Thickness">The thickness.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Soil.CodeToMetaData(System.String[])">
            <summary>Codes to meta data.</summary>
            <param name="Codes">The codes.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Soil.CalcPAWC(System.Double[],System.Double[],System.Double[],System.Double[])">
            <summary>
            Plant available water for the specified crop. Will throw if crop not found. Units: mm/mm
            </summary>
            <param name="Thickness">The thickness.</param>
            <param name="LL">The ll.</param>
            <param name="DUL">The dul.</param>
            <param name="XF">The xf.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Soil.LastValue(System.Double[])">
            <summary>Return the last value that isn't a missing value.</summary>
            <param name="Values">The values.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.Soil.Check(System.Boolean)">
            <summary>
            Checks validity of soil water parameters
            This is a port of the soilwat2_check_profile routine. Returns a blank string if
            no errors were found.
            </summary>
            <param name="IgnoreStartingWaterN">if set to <c>true</c> [ignore starting water n].</param>
            <returns></returns>
            <exception cref="T:System.Exception">Cannot find OC values in soil</exception>
        </member>
        <member name="P:Models.Soils.Soil.RecordNumber">
            <summary>Gets or sets the record number.</summary>
        </member>
        <member name="P:Models.Soils.Soil.ASCOrder">
            <summary>Gets or sets the asc order.</summary>
        </member>
        <member name="P:Models.Soils.Soil.ASCSubOrder">
            <summary>Gets or sets the asc sub order.</summary>
        </member>
        <member name="P:Models.Soils.Soil.SoilType">
            <summary>Gets or sets the type of the soil.</summary>
        </member>
        <member name="P:Models.Soils.Soil.LocalName">
            <summary>Gets or sets the name of the local.</summary>
        </member>
        <member name="P:Models.Soils.Soil.Site">
            <summary>Gets or sets the site.</summary>
        </member>
        <member name="P:Models.Soils.Soil.NearestTown">
            <summary>Gets or sets the nearest town.</summary>
        </member>
        <member name="P:Models.Soils.Soil.Region">
            <summary>Gets or sets the region.</summary>
        </member>
        <member name="P:Models.Soils.Soil.State">
            <summary>Gets or sets the state.</summary>
        </member>
        <member name="P:Models.Soils.Soil.Country">
            <summary>Gets or sets the country.</summary>
        </member>
        <member name="P:Models.Soils.Soil.NaturalVegetation">
            <summary>Gets or sets the natural vegetation.</summary>
        </member>
        <member name="P:Models.Soils.Soil.ApsoilNumber">
            <summary>Gets or sets the apsoil number.</summary>
        </member>
        <member name="P:Models.Soils.Soil.Latitude">
            <summary>Gets or sets the latitude.</summary>
        </member>
        <member name="P:Models.Soils.Soil.Longitude">
            <summary>Gets or sets the longitude.</summary>
        </member>
        <member name="P:Models.Soils.Soil.LocationAccuracy">
            <summary>Gets or sets the location accuracy.</summary>
        </member>
        <member name="P:Models.Soils.Soil.DataSource">
            <summary>Gets or sets the data source.</summary>
        </member>
        <member name="P:Models.Soils.Soil.Comments">
            <summary>Gets or sets the comments.</summary>
        </member>
        <member name="P:Models.Soils.Soil.SoilWater">
            <summary>Gets the soil water.</summary>
        </member>
        <member name="P:Models.Soils.Soil.SoilOrganicMatter">
            <summary>Gets the soil organic matter.</summary>
        </member>
        <member name="P:Models.Soils.Soil.SoilNitrogen">
            <summary>Gets the soil nitrogen.</summary>
        </member>
        <member name="P:Models.Soils.Soil.Thickness">
            <summary>Return the soil layer thicknesses (mm)</summary>
        </member>
        <member name="P:Models.Soils.Soil.DepthMidPoints">
            <summary>Gets the depth mid points (mm).</summary>
        </member>
        <member name="P:Models.Soils.Soil.Depth">
            <summary>Gets the depths (mm) of each layer.</summary>
        </member>
        <member name="P:Models.Soils.Soil.BD">
            <summary>Bulk density at standard thickness. Units: mm/mm</summary>
        </member>
        <member name="P:Models.Soils.Soil.InitialWaterVolumetric">
            <summary>Soil water at standard thickness. Units: mm/mm</summary>
        </member>
        <member name="P:Models.Soils.Soil.Water">
            <summary>Gets or sets the soil water for each layer (mm)</summary>
        </member>
        <member name="P:Models.Soils.Soil.SWAtWaterThickness">
            <summary>Calculate and return SW relative to the Water node thicknesses.</summary>
        </member>
        <member name="P:Models.Soils.Soil.AirDry">
            <summary>Return AirDry at standard thickness. Units: mm/mm</summary>
        </member>
        <member name="P:Models.Soils.Soil.LL15">
            <summary>Return lower limit at standard thickness. Units: mm/mm</summary>
        </member>
        <member name="P:Models.Soils.Soil.DUL">
            <summary>Return drained upper limit at standard thickness. Units: mm/mm</summary>
        </member>
        <member name="P:Models.Soils.Soil.SAT">
            <summary>Return saturation at standard thickness. Units: mm/mm</summary>
        </member>
        <member name="P:Models.Soils.Soil.KS">
            <summary>KS at standard thickness. Units: mm/mm</summary>
        </member>
        <member name="P:Models.Soils.Soil.SWCON">
            <summary>SWCON at standard thickness. Units: 0-1</summary>
        </member>
        <member name="P:Models.Soils.Soil.KLAT">
            <summary>
            KLAT at standard thickness. Units: 0-1
            </summary>
        </member>
        <member name="P:Models.Soils.Soil.PAWC">
            <summary>Return the plant available water CAPACITY at standard thickness. Units: mm/mm</summary>
        </member>
        <member name="P:Models.Soils.Soil.Unavailablemm">
            <summary>Gets unavailable water at standard thickness. Units:mm</summary>
        </member>
        <member name="P:Models.Soils.Soil.PAWTotalmm">
            <summary>Gets available water at standard thickness (SW-LL15). Units:mm</summary>
        </member>
        <member name="P:Models.Soils.Soil.PAWCmm">
            <summary>
            Gets the maximum plant available water CAPACITY at standard thickness (DUL-LL15). Units: mm
            </summary>
        </member>
        <member name="P:Models.Soils.Soil.Drainablemm">
            <summary>Gets the drainable water at standard thickness (SAT-DUL). Units: mm</summary>
        </member>
        <member name="P:Models.Soils.Soil.PAW">
            <summary>Plant available water at standard thickness. Units:mm/mm</summary>
        </member>
        <member name="P:Models.Soils.Soil.PAWCAtWaterThickness">
            <summary>Return the plant available water CAPACITY at water node thickness. Units: mm/mm</summary>
        </member>
        <member name="P:Models.Soils.Soil.PAWCmmAtWaterThickness">
            <summary>Return the plant available water CAPACITY at water node thickenss. Units: mm</summary>
        </member>
        <member name="P:Models.Soils.Soil.PAWAtWaterThickness">
            <summary>Plant available water at standard thickness at water node thickness. Units:mm/mm</summary>
        </member>
        <member name="P:Models.Soils.Soil.CropNames">
            <summary>A list of crop names.</summary>
            <value>The crop names.</value>
        </member>
        <member name="P:Models.Soils.Soil.PredictedCropNames">
            <summary>Return a list of predicted crop names or an empty string[] if none found.</summary>
            <value>The predicted crop names.</value>
        </member>
        <member name="P:Models.Soils.Soil.OC">
            <summary>Organic carbon. Units: %</summary>
            <value>The oc.</value>
        </member>
        <member name="P:Models.Soils.Soil.FBiom">
            <summary>FBiom. Units: 0-1</summary>
            <value>The f biom.</value>
        </member>
        <member name="P:Models.Soils.Soil.FInert">
            <summary>FInert. Units: 0-1</summary>
            <value>The f inert.</value>
        </member>
        <member name="P:Models.Soils.Soil.Rocks">
            <summary>Rocks. Units: %</summary>
            <value>The rocks.</value>
        </member>
        <member name="P:Models.Soils.Soil.ParticleSizeSand">
            <summary>Particle size sand</summary>
            <value>The particle size sand.</value>
        </member>
        <member name="P:Models.Soils.Soil.ParticleSizeSilt">
            <summary>Particle size silt</summary>
            <value>The particle size silt.</value>
        </member>
        <member name="P:Models.Soils.Soil.ParticleSizeClay">
            <summary>Particle size silt</summary>
            <value>The particle size clay.</value>
        </member>
        <member name="P:Models.Soils.Soil.InitialNO3N">
            <summary>Nitrate (ppm).</summary>
        </member>
        <member name="P:Models.Soils.Soil.NO3N">
            <summary>Gets or sets the nitrate N for each layer (kg/ha)</summary>
        </member>
        <member name="P:Models.Soils.Soil.NH4N">
            <summary>Gets the ammonia N for each layer (kg/ha)</summary>
        </member>
        <member name="P:Models.Soils.Soil.Temperature">
            <summary>Gets the temperature of each layer</summary>
        </member>
        <member name="P:Models.Soils.Soil.InitialNH4N">
            <summary>Ammonia (ppm).</summary>
        </member>
        <member name="P:Models.Soils.Soil.Cl">
            <summary>Cloride from either a sample or from Analysis. Units: mg/kg</summary>
        </member>
        <member name="P:Models.Soils.Soil.ESP">
            <summary>ESP from either a sample or from Analysis. Units: %</summary>
        </member>
        <member name="P:Models.Soils.Soil.EC">
            <summary>EC from either a sample or from Analysis. Units: 1:5 dS/m</summary>
        </member>
        <member name="P:Models.Soils.Soil.PH">
            <summary>PH from either a sample or from Analysis. Units: 1:5 Water</summary>
        </member>
        <member name="P:Models.Soils.Soil.LabileP">
            <summary>LabileP at standard thickness</summary>
            <value>The labile p.</value>
        </member>
        <member name="P:Models.Soils.Soil.Sorption">
            <summary>Sorption at standard thickness</summary>
            <value>The sorption.</value>
        </member>
        <member name="P:Models.Soils.Soil.BandedP">
            <summary>BandedP at standard thickness</summary>
            <value>The banded p.</value>
        </member>
        <member name="P:Models.Soils.Soil.RockP">
            <summary>RockP at standard thickness</summary>
            <value>The rock p.</value>
        </member>
        <member name="T:Models.Soils.Soil.BlackVertosol">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.Soils.Soil.BlackVertosol.CottonA">
            <summary>The cotton a</summary>
        </member>
        <member name="F:Models.Soils.Soil.BlackVertosol.SorghumA">
            <summary>The sorghum a</summary>
        </member>
        <member name="F:Models.Soils.Soil.BlackVertosol.WheatA">
            <summary>The wheat a</summary>
        </member>
        <member name="F:Models.Soils.Soil.BlackVertosol.CottonB">
            <summary>The cotton b</summary>
        </member>
        <member name="F:Models.Soils.Soil.BlackVertosol.SorghumB">
            <summary>The sorghum b</summary>
        </member>
        <member name="F:Models.Soils.Soil.BlackVertosol.WheatB">
            <summary>The wheat b</summary>
        </member>
        <member name="T:Models.Soils.Soil.GreyVertosol">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.Soils.Soil.GreyVertosol.CottonA">
            <summary>The cotton a</summary>
        </member>
        <member name="F:Models.Soils.Soil.GreyVertosol.SorghumA">
            <summary>The sorghum a</summary>
        </member>
        <member name="F:Models.Soils.Soil.GreyVertosol.WheatA">
            <summary>The wheat a</summary>
        </member>
        <member name="F:Models.Soils.Soil.GreyVertosol.BarleyA">
            <summary>The barley a</summary>
        </member>
        <member name="F:Models.Soils.Soil.GreyVertosol.ChickpeaA">
            <summary>The chickpea a</summary>
        </member>
        <member name="F:Models.Soils.Soil.GreyVertosol.FababeanA">
            <summary>The fababean a</summary>
        </member>
        <member name="F:Models.Soils.Soil.GreyVertosol.MungbeanA">
            <summary>The mungbean a</summary>
        </member>
        <member name="F:Models.Soils.Soil.GreyVertosol.CottonB">
            <summary>The cotton b</summary>
        </member>
        <member name="F:Models.Soils.Soil.GreyVertosol.SorghumB">
            <summary>The sorghum b</summary>
        </member>
        <member name="F:Models.Soils.Soil.GreyVertosol.WheatB">
            <summary>The wheat b</summary>
        </member>
        <member name="F:Models.Soils.Soil.GreyVertosol.BarleyB">
            <summary>The barley b</summary>
        </member>
        <member name="F:Models.Soils.Soil.GreyVertosol.ChickpeaB">
            <summary>The chickpea b</summary>
        </member>
        <member name="F:Models.Soils.Soil.GreyVertosol.FababeanB">
            <summary>The fababean b</summary>
        </member>
        <member name="F:Models.Soils.Soil.GreyVertosol.MungbeanB">
            <summary>The mungbean b</summary>
        </member>
        <member name="T:Models.Soils.Soil.MapType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Models.PMF.Phen.LeafDeathPhase">
            <summary>
            Leaf death phenological phase
            </summary>
        </member>
        <member name="F:Models.PMF.Phen.LeafDeathPhase.Leaf">
            <summary>The leaf</summary>
        </member>
        <member name="F:Models.PMF.Phen.LeafDeathPhase.Structure">
            <summary>The structure</summary>
        </member>
        <member name="F:Models.PMF.Phen.LeafDeathPhase.DeadNodeNoAtStart">
            <summary>The dead node no at start</summary>
        </member>
        <member name="F:Models.PMF.Phen.LeafDeathPhase.First">
            <summary>The first</summary>
        </member>
        <member name="M:Models.PMF.Phen.LeafDeathPhase.ResetPhase">
            <summary>Resets the phase.</summary>
        </member>
        <member name="M:Models.PMF.Phen.LeafDeathPhase.DoTimeStep(System.Double)">
            <summary>Do our timestep development</summary>
            <param name="PropOfDayToUse">The property of day to use.</param>
            <returns></returns>
        </member>
        <member name="P:Models.PMF.Phen.LeafDeathPhase.FractionComplete">
            <summary>Return a fraction of phase complete.</summary>
            <value>The fraction complete.</value>
        </member>
        <member name="T:Models.PMF.Organs.Root">
            <summary>
             The generic root model
            </summary>
             \param InitialDM <b>(Constant)</b> The initial dry weight of root (\f$g mm^{-2}\f$. CHECK).
             \param SpecificRootLength <b>(Constant)</b> The length of the specific root 
                 (\f$m g^{-1}\f$. CHECK).
             \param KNO3 <b>(Constant)</b> Fraction of extractable soil NO3 (\f$K_{NO3}\f$, unitless).  
             \param KNH4 <b>(Constant)</b> Fraction of extractable soil NH4 (\f$K_{NH4}\f$, unitless).  
             \param NitrogenDemandSwitch <b>(IFunction)</b> Whether to switch on nitrogen demand 
                 when nitrogen deficit is calculated (0 or 1, unitless).
             \param RootFrontVelocity <b>(IFunction)</b> The daily growth speed of root depth 
                 (\f$mm d^{-1}\f$. CHECK).
             \param PartitionFraction <b>(IFunction)</b> The fraction of biomass partitioning 
                 into root (0-1, unitless).
             \param KLModifier <b>(IFunction)</b> The modifier for KL factor which is defined as 
                 the fraction of available water able to be extracted per day, and empirically 
                 derived incorporating both plant and soil factors which limit rate of water 
                 update (0-1, unitless).
             \param TemperatureEffect <b>(IFunction)</b> 
                 The temperature effects on root depth growth (0-1, unitless).
             \param MaximumNConc <b>(IFunction)</b> 
                 Maximum nitrogen concentration (\f$g m^{-2}\f$. CHECK).
             \param MinimumNConc <b>(IFunction)</b> 
                 Minimum nitrogen concentration (\f$g m^{-2}\f$. CHECK).
             \param MaxDailyNUptake <b>(IFunction)</b> 
                 Maximum daily nitrogen update (\f$kg ha^{-1}\f$. CHECK).
             
             \param SenescenceRate <b>(IFunction, Optional)</b> The daily senescence rate of 
                 root length (0-1, unitless).
                 
             \retval Length Total root length (mm).
             \retval Depth Root depth (mm).
             
            <remarks>
             
             Potential root growth 
             ------------------------
              
             Actual root growth
             ------------------------
             
             Nitrogen deficit 
             ------------------------
             
            </remarks>
        </member>
        <member name="F:Models.PMF.Organs.Root.kgha2gsm">
            <summary>The kgha2gsm</summary>
        </member>
        <member name="F:Models.PMF.Organs.Root.Plant">
            <summary>The plant</summary>
        </member>
        <member name="F:Models.PMF.Organs.Root.Arbitrator">
            <summary>The arbitrator</summary>
        </member>
        <member name="F:Models.PMF.Organs.Root.Soil">
            <summary>The soil</summary>
        </member>
        <member name="F:Models.PMF.Organs.Root.NitrogenDemandSwitch">
            <summary>The nitrogen demand switch</summary>
        </member>
        <member name="F:Models.PMF.Organs.Root.SenescenceRate">
            <summary>The senescence rate</summary>
        </member>
        <member name="F:Models.PMF.Organs.Root.TemperatureEffect">
            <summary>The temperature effect</summary>
        </member>
        <member name="F:Models.PMF.Organs.Root.RootFrontVelocity">
            <summary>The root front velocity</summary>
        </member>
        <member name="F:Models.PMF.Organs.Root.PartitionFraction">
            <summary>The partition fraction</summary>
        </member>
        <member name="F:Models.PMF.Organs.Root.MaximumNConc">
            <summary>The maximum n conc</summary>
        </member>
        <member name="F:Models.PMF.Organs.Root.MaxDailyNUptake">
            <summary>The maximum daily n uptake</summary>
        </member>
        <member name="F:Models.PMF.Organs.Root.MinimumNConc">
            <summary>The minimum n conc</summary>
        </member>
        <member name="F:Models.PMF.Organs.Root.KLModifier">
            <summary>The kl modifier</summary>
        </member>
        <member name="F:Models.PMF.Organs.Root.Uptake">
            <summary>The uptake</summary>
        </member>
        <member name="F:Models.PMF.Organs.Root.DeltaNH4">
            <summary>The delta n h4</summary>
        </member>
        <member name="F:Models.PMF.Organs.Root.DeltaNO3">
            <summary>The delta n o3</summary>
        </member>
        <member name="F:Models.PMF.Organs.Root._SenescenceRate">
            <summary>The _ senescence rate</summary>
        </member>
        <member name="F:Models.PMF.Organs.Root.NitUptake">
            <summary>The Nuptake</summary>
        </member>
        <member name="M:Models.PMF.Organs.Root.Clear">
            <summary>Clears this instance.</summary>
        </member>
        <member name="F:Models.PMF.Organs.Root.soilCrop">
            <summary>The soil crop</summary>
        </member>
        <member name="M:Models.PMF.Organs.Root.OnDoPotentialPlantGrowth(System.Object,System.EventArgs)">
            <summary>Event from sequencer telling us to do our potential growth.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Organs.Root.OnDoActualPlantGrowth(System.Object,System.EventArgs)">
            <summary>Does the nutrient allocations.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Organs.Root.DoWaterUptake(System.Double[])">
            <summary>Does the water uptake.</summary>
            <param name="Amount">The amount.</param>
        </member>
        <member name="M:Models.PMF.Organs.Root.DoNitrogenUptake(System.Double[],System.Double[])">
            <summary>Does the Nitrogen uptake.</summary>
            <param name="NO3NAmount">The NO3NAmount.</param>
            <param name="NH4NAmount">The NH4NAmount.</param>
        </member>
        <member name="M:Models.PMF.Organs.Root.LayerIndex(System.Double)">
            <summary>Layers the index.</summary>
            <param name="depth">The depth.</param>
            <returns></returns>
            <exception cref="T:System.Exception">Depth deeper than bottom of soil profile</exception>
        </member>
        <member name="M:Models.PMF.Organs.Root.RootProportion(System.Int32,System.Double)">
            <summary>Roots the proportion.</summary>
            <param name="layer">The layer.</param>
            <param name="root_depth">The root_depth.</param>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.Organs.Root.SoilNSupply(System.Double[],System.Double[])">
            <summary>Soils the n supply.</summary>
            <param name="NO3Supply">The n o3 supply.</param>
            <param name="NH4Supply">The n h4 supply.</param>
        </member>
        <member name="M:Models.PMF.Organs.Root.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>Called when [simulation commencing].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
            <exception cref="T:Models.Core.ApsimXException">Cannot find a soil crop parameterisation for  + Name</exception>
        </member>
        <member name="M:Models.PMF.Organs.Root.OnPlantEnding(System.Object,System.EventArgs)">
            <summary>Called when crop is ending</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Organs.Root.OnPlantSowing(System.Object,Models.PMF.SowPlant2Type)">
            <summary>Called when crop is ending</summary>
            <param name="sender">The sender.</param>
            <param name="data">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Organs.Root.NO3NSupply(System.Collections.Generic.List{Models.Soils.Arbitrator.ZoneWaterAndN})">
            <summary>Gets the nitrogne supply.</summary>
            <value>The water supply.</value>
        </member>
        <member name="M:Models.PMF.Organs.Root.NH4NSupply(System.Collections.Generic.List{Models.Soils.Arbitrator.ZoneWaterAndN})">
            <summary>Gets the nitrogne supply.</summary>
            <value>The water supply.</value>
        </member>
        <member name="M:Models.PMF.Organs.Root.WaterSupply(System.Collections.Generic.List{Models.Soils.Arbitrator.ZoneWaterAndN})">
            <summary>Gets or sets the water supply.</summary>
            <value>The water supply.</value>
        </member>
        <member name="M:Models.PMF.Organs.Root.OnWaterUptakesCalculated(Models.PMF.WaterUptakesCalculatedType)">
            <summary>Called when [water uptakes calculated].</summary>
            <param name="SoilWater">The soil water.</param>
        </member>
        <member name="P:Models.PMF.Organs.Root.InitialDM">
            <summary>Gets or sets the initial dm.</summary>
            <value>The initial dm.</value>
        </member>
        <member name="P:Models.PMF.Organs.Root.SpecificRootLength">
            <summary>Gets or sets the length of the specific root.</summary>
            <value>The length of the specific root.</value>
        </member>
        <member name="P:Models.PMF.Organs.Root.KNO3_yProperty">
            <summary>The KNO3 for each root layer at a given root lenght density (KNO3_xRootLength).  Actual KNO3 us calculated each day for each layer with current root length density of each layer </summary>
        </member>
        <member name="P:Models.PMF.Organs.Root.KNO3_xRootLength">
            <summary>Rootlength density that KNO3 is related to </summary>
        </member>
        <member name="P:Models.PMF.Organs.Root.KNH4_yProperty">
            <summary>The KNH4 for each root layer at a given root lenght density (KNH4_xRootLength).  Actual KNH4 us calculated each day for each layer with current root length density of each layer </summary>
        </member>
        <member name="P:Models.PMF.Organs.Root.KNH4_xRootLength">
            <summary>Rootlength density that KNH4 is related to </summary>
        </member>
        <member name="P:Models.PMF.Organs.Root.DMAllocated">
            <summary>
            Holds actual DM allocations to use in allocating N to structural and Non-Structural pools
            </summary>
        </member>
        <member name="P:Models.PMF.Organs.Root.StructuralNDemand">
            <summary>
            Demand for structural N, set when Ndemand is called and used again in N allocation
            </summary>
        </member>
        <member name="P:Models.PMF.Organs.Root.NonStructuralNDemand">
            <summary>
            Demand for Non-structural N, set when Ndemand is called and used again in N allocation
            </summary>
        </member>
        <member name="P:Models.PMF.Organs.Root.LayerLive">
            <summary>Gets or sets the layer live.</summary>
            <value>The layer live.</value>
        </member>
        <member name="P:Models.PMF.Organs.Root.LayerDead">
            <summary>Gets or sets the layer dead.</summary>
            <value>The layer dead.</value>
        </member>
        <member name="P:Models.PMF.Organs.Root.Length">
            <summary>Gets or sets the length.</summary>
            <value>The length.</value>
        </member>
        <member name="P:Models.PMF.Organs.Root.Depth">
            <summary>Gets or sets the depth.</summary>
            <value>The depth.</value>
        </member>
        <member name="P:Models.PMF.Organs.Root.LayerMidPointDepth">
            <summary>Gets depth or the mid point of the cuttent layer under examination</summary>
            <value>The depth.</value>
        </member>
        <member name="P:Models.PMF.Organs.Root.isGrowing">
            <summary>Gets a value indicating whether this instance is growing.</summary>
            <value>
            <c>true</c> if this instance is growing; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Models.PMF.Organs.Root.LLdep">
            <summary>Gets the l ldep.</summary>
            <value>The l ldep.</value>
        </member>
        <member name="P:Models.PMF.Organs.Root.LengthDensity">
            <summary>Gets the length density.</summary>
            <value>The length density.</value>
        </member>
        <member name="P:Models.PMF.Organs.Root.rlv">
            <summary>Gets the RLV.</summary>
            <value>The RLV.</value>
        </member>
        <member name="P:Models.PMF.Organs.Root.TotalNonStructuralNDemand">
            <Summary>Sum Non-Structural N demand for all layers</Summary>
        </member>
        <member name="P:Models.PMF.Organs.Root.TotalStructuralNDemand">
            <Summary>Sum Structural N demand for all layers</Summary>
        </member>
        <member name="P:Models.PMF.Organs.Root.TotalNDemand">
            <Summary>Sum N demand for all layers</Summary>
        </member>
        <member name="P:Models.PMF.Organs.Root.TotalNAllocated">
            <Summary>Superfloruis docummentation added to get solution compilling</Summary>
        </member>
        <member name="P:Models.PMF.Organs.Root.TotalDMDemand">
            <Summary>Superfloruis docummentation added to get solution compilling</Summary>
        </member>
        <member name="P:Models.PMF.Organs.Root.TotalDMAllocated">
            <Summary>Superfloruis docummentation added to get solution compilling</Summary>
        </member>
        <member name="P:Models.PMF.Organs.Root.NTakenUp">
            <Summary>The amount of N taken up after arbitration</Summary>
        </member>
        <member name="P:Models.PMF.Organs.Root.NuptakeSupply">
            <summary>
            Gets or sets the nuptake supply.
            </summary>
        </member>
        <member name="P:Models.PMF.Organs.Root.DMDemand">
            <summary>Gets or sets the dm demand.</summary>
            <value>The dm demand.</value>
        </member>
        <member name="P:Models.PMF.Organs.Root.DMPotentialAllocation">
            <summary>Sets the dm potential allocation.</summary>
            <value>The dm potential allocation.</value>
            <exception cref="T:System.Exception">
            Invalid allocation of potential DM in + Name
            or
            Error trying to partition potential root biomass
            </exception>
        </member>
        <member name="P:Models.PMF.Organs.Root.DMAllocation">
            <summary>Sets the dm allocation.</summary>
            <value>The dm allocation.</value>
            <exception cref="T:System.Exception">Error trying to partition root biomass</exception>
        </member>
        <member name="P:Models.PMF.Organs.Root.NDemand">
            <summary>Gets or sets the n demand.</summary>
            <value>The n demand.</value>
        </member>
        <member name="P:Models.PMF.Organs.Root.NSupply">
            <summary>Gets or sets the n supply.</summary>
            <value>The n supply.</value>
        </member>
        <member name="P:Models.PMF.Organs.Root.NAllocation">
            <summary>Sets the n allocation.</summary>
            <value>The n allocation.</value>
            <exception cref="T:System.Exception">
            Cannot Allocate N to roots in layers when demand is zero
            or
            Error in N Allocation:  + Name
            or
            Request for N uptake exceeds soil N supply
            </exception>
        </member>
        <member name="P:Models.PMF.Organs.Root.MaxNconc">
            <summary>Gets or sets the maximum nconc.</summary>
            <value>The maximum nconc.</value>
        </member>
        <member name="P:Models.PMF.Organs.Root.MinNconc">
            <summary>Gets or sets the minimum nconc.</summary>
            <value>The minimum nconc.</value>
        </member>
        <member name="P:Models.PMF.Organs.Root.WaterUptake">
            <summary>Gets or sets the water uptake.</summary>
            <value>The water uptake.</value>
        </member>
        <member name="P:Models.PMF.Organs.Root.NUptake">
            <summary>Gets or sets the water uptake.</summary>
            <value>The water uptake.</value>
        </member>
        <member name="E:Models.PMF.Organs.Root.IncorpFOM">
            <summary>Occurs when [incorp fom].</summary>
        </member>
        <member name="E:Models.PMF.Organs.Root.NitrogenChanged">
            <summary>Occurs when [nitrogen changed].</summary>
        </member>
        <member name="E:Models.PMF.Organs.Root.WaterChanged">
            <summary>Occurs when [nitrogen changed].</summary>
        </member>
        <member name="T:Models.PMF.Organs.ReserveOrgan">
            <summary>
            A reserve organ
            </summary>
        </member>
        <member name="T:Models.PMF.OldPlant.GenericArbitratorXY">
            <summary>
            A generic arbitrator
            </summary>
        </member>
        <member name="F:Models.PMF.OldPlant.GenericArbitratorXY.RatioRootShoot">
            <summary>The ratio root shoot</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.GenericArbitratorXY.Leaf">
            <summary>The leaf</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.GenericArbitratorXY.Summary">
            <summary>The summary</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.GenericArbitratorXY.DMSupply">
            <summary>The dm supply</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.GenericArbitratorXY.PartitionDM(System.Collections.Generic.List{Models.PMF.OldPlant.Organ1})">
            <summary>Partitions the dm.</summary>
            <param name="Organs">The organs.</param>
            <exception cref="T:System.Exception">Unknown Partition Rule  + PartitionRules[i]</exception>
        </member>
        <member name="M:Models.PMF.OldPlant.GenericArbitratorXY.RetranslocateDM(System.Collections.Generic.List{Models.PMF.OldPlant.Organ1})">
            <summary>Retranslocates the dm.</summary>
            <param name="Organs">The organs.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.GenericArbitratorXY.FracDMRemainingInPart(System.String)">
            <summary>Fracs the dm remaining in part.</summary>
            <param name="OrganName">Name of the organ.</param>
            <returns></returns>
            <exception cref="T:System.Exception">In arbitrator, cannot find FracDMRemainingIn + OrganName</exception>
        </member>
        <member name="M:Models.PMF.OldPlant.GenericArbitratorXY.FindOrgan(System.String,System.Collections.Generic.List{Models.PMF.OldPlant.Organ1})">
            <summary>Finds the organ.</summary>
            <param name="OrganName">Name of the organ.</param>
            <param name="Organs">The organs.</param>
            <returns></returns>
            <exception cref="T:System.Exception">In arbitrator, cannot find an organ with name:  + OrganName</exception>
        </member>
        <member name="M:Models.PMF.OldPlant.GenericArbitratorXY.DoNRetranslocate(System.Double,System.Collections.Generic.List{Models.PMF.OldPlant.Organ1})">
            <summary>Does the n retranslocate.</summary>
            <param name="GrainNDemand">The grain n demand.</param>
            <param name="Tops">The tops.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.GenericArbitratorXY.DoNPartition(System.Double,System.Collections.Generic.List{Models.PMF.OldPlant.Organ1})">
            <summary>Does the n partition.</summary>
            <param name="n_fix_pot">The n_fix_pot.</param>
            <param name="Organs">The organs.</param>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.OldPlant.GenericArbitratorXY.doNSenescedRetranslocation(System.Collections.Generic.List{Models.PMF.OldPlant.Organ1})">
            <summary>Derives seneseced plant nitrogen (g N/m^2)</summary>
            <param name="Organs">The organs.</param>
        </member>
        <member name="P:Models.PMF.OldPlant.GenericArbitratorXY.PartitionOrgans">
            <summary>Gets or sets the partition organs.</summary>
            <value>The partition organs.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.GenericArbitratorXY.PartitionRules">
            <summary>Gets or sets the partition rules.</summary>
            <value>The partition rules.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.GenericArbitratorXY.dlt_dm">
            <summary>Gets the DLT_DM.</summary>
            <value>The DLT_DM.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.GenericArbitratorXY.RatioRootPlant">
            <summary>Gets the ratio root plant.</summary>
            <value>The ratio root plant.</value>
        </member>
        <member name="T:Models.PMF.Functions.AirTemperatureFunction">
            <summary>
            An air temperature function
            </summary>
        </member>
        <member name="F:Models.PMF.Functions.AirTemperatureFunction.num3hr">
            <summary>Number of 3 hourly temperatures</summary>
        </member>
        <member name="F:Models.PMF.Functions.AirTemperatureFunction.MetData">
            <summary>The met data</summary>
        </member>
        <member name="F:Models.PMF.Functions.AirTemperatureFunction.XYPairs">
            <summary>Gets or sets the xy pairs.</summary>
            <value>The xy pairs.</value>
        </member>
        <member name="F:Models.PMF.Functions.AirTemperatureFunction.t_range_fract">
            <summary>Fraction_of of day's range_of for this 3 hr period</summary>
        </member>
        <member name="M:Models.PMF.Functions.AirTemperatureFunction.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Models.PMF.Functions.AirTemperatureFunction"/> class.</summary>
        </member>
        <member name="M:Models.PMF.Functions.AirTemperatureFunction.Linint3hrlyTemp(System.Double,System.Double,Models.PMF.Functions.XYPairs)">
            <summary>Linint3hrlies the temporary.</summary>
            <param name="tmax">The tmax.</param>
            <param name="tmin">The tmin.</param>
            <param name="ttFn">The tt function.</param>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.Functions.AirTemperatureFunction.temp_3hr(System.Double,System.Double,System.Int32)">
            <summary>Temp_3hrs the specified tmax.</summary>
            <param name="tmax">The tmax.</param>
            <param name="tmin">The tmin.</param>
            <param name="period">The period.</param>
            <returns></returns>
            <exception cref="T:System.Exception">
            3 hr. period number is below 1
            or
            3 hr. period number is above 8
            </exception>
        </member>
        <member name="M:Models.PMF.Functions.AirTemperatureFunction.Document(System.Collections.Generic.List{Models.Core.AutoDocumentation.ITag},System.Int32,System.Int32)">
            <summary>Writes documentation for this function by adding to the list of documentation tags.</summary>
            <param name="tags">The list of tags to add to.</param>
            <param name="headingLevel">The level (e.g. H2) of the headings.</param>
            <param name="indent">The level of indentation 1, 2, 3 etc.</param>
        </member>
        <member name="P:Models.PMF.Functions.AirTemperatureFunction.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
        </member>
        <member name="T:Models.PMF.CompositeBiomass">
            <summary>
            A composite biomass i.e. a biomass made up of 1 or more biomass objects.
            </summary>
        </member>
        <member name="T:Models.PMF.Biomass">
            <summary>
            Biomass of plant organs
            </summary>
        </member>
        <member name="F:Models.PMF.Biomass._StructuralWt">
            <summary>The _ structural wt</summary>
        </member>
        <member name="F:Models.PMF.Biomass._NonStructuralWt">
            <summary>The _ non structural wt</summary>
        </member>
        <member name="F:Models.PMF.Biomass._StructuralN">
            <summary>The _ structural n</summary>
        </member>
        <member name="F:Models.PMF.Biomass._NonStructuralN">
            <summary>The _ non structural n</summary>
        </member>
        <member name="F:Models.PMF.Biomass._PotentialDMAllocation">
            <summary>The _ potential dm allocation</summary>
        </member>
        <member name="F:Models.PMF.Biomass._MetabolicWt">
            <summary>The _ metabolic wt</summary>
        </member>
        <member name="F:Models.PMF.Biomass._MetabolicN">
            <summary>The _ metabolic n</summary>
        </member>
        <member name="M:Models.PMF.Biomass.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Models.PMF.Biomass"/> class.</summary>
        </member>
        <member name="M:Models.PMF.Biomass.#ctor(Models.PMF.Biomass)">
            <summary>Initializes a new instance of the <see cref="T:Models.PMF.Biomass"/> class.</summary>
            <param name="from">From.</param>
        </member>
        <member name="M:Models.PMF.Biomass.Clear">
            <summary>Clears this instance.</summary>
        </member>
        <member name="M:Models.PMF.Biomass.Add(Models.PMF.Biomass)">
            <summary>Adds the specified a.</summary>
            <param name="a">a.</param>
        </member>
        <member name="M:Models.PMF.Biomass.SetTo(Models.PMF.Biomass)">
            <summary>Sets to.</summary>
            <param name="a">a.</param>
        </member>
        <member name="M:Models.PMF.Biomass.op_Addition(Models.PMF.Biomass,Models.PMF.Biomass)">
            <summary>Implements the operator +.</summary>
            <param name="a">a.</param>
            <param name="b">The b.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Models.PMF.Biomass.op_Subtraction(Models.PMF.Biomass,Models.PMF.Biomass)">
            <summary>Implements the operator -.</summary>
            <param name="a">a.</param>
            <param name="b">The b.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Models.PMF.Biomass.op_Multiply(Models.PMF.Biomass,System.Double)">
            <summary>Implements the operator *.</summary>
            <param name="a">a.</param>
            <param name="Fraction">The fraction.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="F:Models.PMF.Biomass._Empty">
            <summary>The _ empty</summary>
        </member>
        <member name="P:Models.PMF.Biomass.NonStructuralN">
            <summary>Gets or sets the non structural n.</summary>
            <value>The non structural n.</value>
        </member>
        <member name="P:Models.PMF.Biomass.StructuralN">
            <summary>Gets or sets the structural n.</summary>
            <value>The structural n.</value>
        </member>
        <member name="P:Models.PMF.Biomass.NonStructuralWt">
            <summary>Gets or sets the non structural wt.</summary>
            <value>The non structural wt.</value>
        </member>
        <member name="P:Models.PMF.Biomass.StructuralWt">
            <summary>Gets or sets the structural wt.</summary>
            <value>The structural wt.</value>
        </member>
        <member name="P:Models.PMF.Biomass.PotentialDMAllocation">
            <summary>Gets or sets the potential dm allocation.</summary>
            <value>The potential dm allocation.</value>
        </member>
        <member name="P:Models.PMF.Biomass.MetabolicWt">
            <summary>Gets or sets the metabolic wt.</summary>
            <value>The metabolic wt.</value>
        </member>
        <member name="P:Models.PMF.Biomass.MetabolicN">
            <summary>Gets or sets the metabolic n.</summary>
            <value>The metabolic n.</value>
        </member>
        <member name="P:Models.PMF.Biomass.Wt">
            <summary>Gets the wt.</summary>
            <value>The wt.</value>
        </member>
        <member name="P:Models.PMF.Biomass.N">
            <summary>Gets the n.</summary>
            <value>The n.</value>
        </member>
        <member name="P:Models.PMF.Biomass.NConc">
            <summary>Gets the n conc.</summary>
            <value>The n conc.</value>
        </member>
        <member name="P:Models.PMF.Biomass.StructuralNConc">
            <summary>Gets the structural n conc.</summary>
            <value>The structural n conc.</value>
        </member>
        <member name="P:Models.PMF.Biomass.NonStructuralNConc">
            <summary>Gets the non structural n conc.</summary>
            <value>The non structural n conc.</value>
        </member>
        <member name="P:Models.PMF.Biomass.MetabolicNConc">
            <summary>Gets the metabolic n conc.</summary>
            <value>The metabolic n conc.</value>
        </member>
        <member name="P:Models.PMF.Biomass.None">
            <summary>Gets the none.</summary>
            <value>The none.</value>
        </member>
        <member name="P:Models.PMF.Biomass.IsEmpty">
            <summary>Gets a value indicating whether this instance is empty.</summary>
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Models.PMF.CompositeBiomass.Propertys">
            <summary>The propertys</summary>
        </member>
        <member name="M:Models.PMF.CompositeBiomass.Update">
            <summary>Update this biomass object.</summary>
            <exception cref="T:System.Exception">
            Cannot find:  + PropertyName +  in composite biomass:  + this.Name
            or
            Elements in the array:  + PropertyName +  are not Biomass objects in composition biomass:  + this.Name
            or
            Property:  + PropertyName +  is not a Biomass object in composition biomass:  + this.Name
            </exception>
        </member>
        <member name="M:Models.PMF.CompositeBiomass.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>Clear ourselves.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Models.PMF.CompositeBiomass.NonStructuralN">
            <summary>Gets or sets the non structural n.</summary>
            <value>The non structural n.</value>
            <exception cref="T:System.Exception">Cannot set NonStructuralN in CompositeBiomass</exception>
        </member>
        <member name="P:Models.PMF.CompositeBiomass.StructuralN">
            <summary>Gets or sets the structural n.</summary>
            <value>The structural n.</value>
            <exception cref="T:System.Exception">Cannot set StructuralN in CompositeBiomass</exception>
        </member>
        <member name="P:Models.PMF.CompositeBiomass.NonStructuralWt">
            <summary>Gets or sets the non structural wt.</summary>
            <value>The non structural wt.</value>
            <exception cref="T:System.Exception">Cannot set NonStructuralWt in CompositeBiomass</exception>
        </member>
        <member name="P:Models.PMF.CompositeBiomass.StructuralWt">
            <summary>Gets or sets the structural wt.</summary>
            <value>The structural wt.</value>
            <exception cref="T:System.Exception">Cannot set StructuralWt in CompositeBiomass</exception>
        </member>
        <member name="P:Models.PMF.CompositeBiomass.MetabolicN">
            <summary>Gets or sets the metabolic n.</summary>
            <value>The metabolic n.</value>
            <exception cref="T:System.Exception">Cannot set MetabolicN in CompositeBiomass</exception>
        </member>
        <member name="P:Models.PMF.CompositeBiomass.MetabolicWt">
            <summary>Gets or sets the metabolic wt.</summary>
            <value>The metabolic wt.</value>
            <exception cref="T:System.Exception">Cannot set MetabolicWt in CompositeBiomass</exception>
        </member>
        <member name="P:Models.PMF.CompositeBiomass.Wt">
            <summary>Gets the wt.</summary>
            <value>The wt.</value>
        </member>
        <member name="P:Models.PMF.CompositeBiomass.N">
            <summary>Gets the n.</summary>
            <value>The n.</value>
        </member>
        <member name="T:mu">
            <summary>
            Temporary class for math utilities.
            </summary>
        </member>
        <member name="M:mu.error_margin(System.Double)">
            <summary>
            Error_margins the specified variable.
            </summary>
            <param name="Variable">The variable.</param>
            <returns></returns>
        </member>
        <member name="M:mu.reals_are_equal(System.Double,System.Double)">
            <summary>
            Reals_are_equals the specified first.
            </summary>
            <param name="First">The first.</param>
            <param name="Second">The second.</param>
            <returns></returns>
        </member>
        <member name="M:mu.reals_are_equal(System.Double,System.Double,System.Double)">
            <summary>
            Reals_are_equals the specified first.
            </summary>
            <param name="First">The first.</param>
            <param name="Second">The second.</param>
            <param name="Tolerance">The tolerance.</param>
            <returns></returns>
        </member>
        <member name="M:mu.dim(System.Double,System.Double)">
            <summary>
            Dims the specified x.
            </summary>
            <param name="X">The x.</param>
            <param name="Y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:mu.RoundArray(System.Double[],System.Int32)">
            <summary>
            Rounds the array.
            </summary>
            <param name="InputArray">The input array.</param>
            <param name="DecimalPlaces">The decimal places.</param>
            <returns></returns>
        </member>
        <member name="T:Models.PMF.Organs.TreeCanopy">
            <summary>
            Tree canopy model
            </summary>
        </member>
        <member name="F:Models.PMF.Organs.TreeCanopy._WaterAllocation">
            <summary>The _ water allocation</summary>
        </member>
        <member name="F:Models.PMF.Organs.TreeCanopy._Height">
            <summary>The _ height</summary>
        </member>
        <member name="F:Models.PMF.Organs.TreeCanopy._LAI">
            <summary>The _ lai</summary>
        </member>
        <member name="F:Models.PMF.Organs.TreeCanopy._LAIDead">
            <summary>The _ lai dead</summary>
        </member>
        <member name="F:Models.PMF.Organs.TreeCanopy._Frgr">
            <summary>The _ FRGR</summary>
        </member>
        <member name="F:Models.PMF.Organs.TreeCanopy.EP">
            <summary>The ep</summary>
        </member>
        <member name="F:Models.PMF.Organs.TreeCanopy.K">
            <summary>The k</summary>
        </member>
        <member name="F:Models.PMF.Organs.TreeCanopy.KDead">
            <summary>The k dead</summary>
        </member>
        <member name="F:Models.PMF.Organs.TreeCanopy.DeltaBiomass">
            <summary>The delta biomass</summary>
        </member>
        <member name="F:Models.PMF.Organs.TreeCanopy.LAIFunction">
            <summary>The lai function</summary>
        </member>
        <member name="F:Models.PMF.Organs.TreeCanopy.Photosynthesis">
            <summary>The photosynthesis</summary>
        </member>
        <member name="M:Models.PMF.Organs.TreeCanopy.OnDoDailyInitialisation(System.Object,System.EventArgs)">
            <summary>Called when [do daily initialisation].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Organs.TreeCanopy.OnDoPotentialPlantGrowth(System.Object,System.EventArgs)">
            <summary>Event from sequencer telling us to do our potential growth.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Organs.TreeCanopy.OnDoActualPlantGrowth(System.Object,System.EventArgs)">
            <summary>Does the nutrient allocations.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Models.PMF.Organs.TreeCanopy.CanopyType">
            <summary>Gets the canopy. Should return null if no canopy present.</summary>
        </member>
        <member name="P:Models.PMF.Organs.TreeCanopy.LAI">
            <summary>Gets or sets the lai.</summary>
        </member>
        <member name="P:Models.PMF.Organs.TreeCanopy.LAITotal">
            <summary>Gets the LAI live + dead (m^2/m^2)</summary>
        </member>
        <member name="P:Models.PMF.Organs.TreeCanopy.CoverGreen">
            <summary>Gets the cover green.</summary>
        </member>
        <member name="P:Models.PMF.Organs.TreeCanopy.CoverTotal">
            <summary>Gets the cover tot.</summary>
        </member>
        <member name="P:Models.PMF.Organs.TreeCanopy.Height">
            <summary>Gets or sets the height.</summary>
        </member>
        <member name="P:Models.PMF.Organs.TreeCanopy.Depth">
            <summary>Gets the depth.</summary>
        </member>
        <member name="P:Models.PMF.Organs.TreeCanopy.FRGR">
            <summary>Gets or sets the FRGR.</summary>
        </member>
        <member name="P:Models.PMF.Organs.TreeCanopy.PotentialEP">
            <summary>Sets the potential evapotranspiration. Set by MICROCLIMATE.</summary>
        </member>
        <member name="P:Models.PMF.Organs.TreeCanopy.LightProfile">
            <summary>Sets the light profile. Set by MICROCLIMATE.</summary>
        </member>
        <member name="P:Models.PMF.Organs.TreeCanopy.RadIntTot">
            <summary>Gets the RAD int tot.</summary>
            <value>The RAD int tot.</value>
        </member>
        <member name="P:Models.PMF.Organs.TreeCanopy.WaterDemand">
            <summary>Gets or sets the water demand.</summary>
            <value>The water demand.</value>
        </member>
        <member name="P:Models.PMF.Organs.TreeCanopy.Transpiration">
            <summary>Gets the transpiration.</summary>
            <value>The transpiration.</value>
        </member>
        <member name="P:Models.PMF.Organs.TreeCanopy.WaterAllocation">
            <summary>Gets or sets the water allocation.</summary>
        </member>
        <member name="P:Models.PMF.Organs.TreeCanopy.Fw">
            <summary>Gets the fw.</summary>
            <value>The fw.</value>
        </member>
        <member name="P:Models.PMF.Organs.TreeCanopy.Fn">
            <summary>Gets the function.</summary>
            <value>The function.</value>
        </member>
        <member name="P:Models.PMF.Organs.TreeCanopy.LAIDead">
            <summary>Gets or sets the lai dead.</summary>
            <value>The lai dead.</value>
        </member>
        <member name="P:Models.PMF.Organs.TreeCanopy.CoverDead">
            <summary>Gets the cover dead.</summary>
            <value>The cover dead.</value>
        </member>
        <member name="P:Models.PMF.Organs.TreeCanopy.DMSupply">
            <summary>Gets or sets the dm supply.</summary>
            <value>The dm supply.</value>
        </member>
        <member name="T:Models.Core.EventSubscribeAttribute">
            <summary>
            Specifies that the related method should be called whenever an event
            is invoked that has the specified name.
            </summary>
        </member>
        <member name="F:Models.Core.EventSubscribeAttribute.name">
            <summary>
            The event name being subscribed to.
            </summary>
        </member>
        <member name="M:Models.Core.EventSubscribeAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Models.Core.EventSubscribeAttribute"/> class.
            </summary>
            <param name="name">Name of the event being subscribed to</param>
        </member>
        <member name="M:Models.Core.EventSubscribeAttribute.ToString">
            <summary>
            Gets the name of the event.
            </summary>
            <returns>The name of the event being subscribed to</returns>
        </member>
        <member name="T:Models.Core.DisplayAttribute">
            <summary>
            Specifies various user interface display properties.
            </summary>
        </member>
        <member name="P:Models.Core.DisplayAttribute.Format">
            <summary>
            Gets or sets the display format (e.g. 'N3') that the user interface should
            use when showing values in the related property.
            </summary>
        </member>
        <member name="P:Models.Core.DisplayAttribute.ShowTotal">
            <summary>
            Gets or sets a value indicating whether the user interface should display
            a total at the top of the column in a ProfileGrid.
            </summary>
        </member>
        <member name="P:Models.Core.DisplayAttribute.DisplayType">
            <summary>
            Gets or sets the display type. 
            </summary>
        </member>
        <member name="T:Models.Core.DisplayAttribute.DisplayTypeEnum">
            <summary>
            An enumeration for display types.
            </summary>
        </member>
        <member name="F:Models.Core.DisplayAttribute.DisplayTypeEnum.None">
            <summary>
            No specific display editor.
            </summary>
        </member>
        <member name="F:Models.Core.DisplayAttribute.DisplayTypeEnum.TableName">
            <summary>
            Use the table name editor.
            </summary>
        </member>
        <member name="F:Models.Core.DisplayAttribute.DisplayTypeEnum.CultivarName">
            <summary>
            A cultivar name editor.
            </summary>
        </member>
        <member name="F:Models.Core.DisplayAttribute.DisplayTypeEnum.FileName">
            <summary>
            A file name editor.
            </summary>
        </member>
        <member name="T:Models.Core.DoNotDocumentAttribute">
            <summary>
            Specifies that the related field/property/link should not be documented.
            </summary>
        </member>
        <member name="T:Models.Graph.Graph">
            <summary>
            Represents a graph
            </summary>
        </member>
        <member name="F:Models.Graph.Graph.dataStore">
            <summary>
            The data store to use when retrieving data
            </summary>
        </member>
        <member name="M:Models.Graph.Graph.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Models.Graph.Graph"/> class./&gt;
            </summary>
        </member>
        <member name="M:Models.Graph.Graph.GetValidFieldNames(Models.Graph.GraphValues)">
            <summary>
            Get a list of valid field names
            </summary>
            <param name="graphValues">The graph values object</param>
            <returns>The list of field names that are valid</returns>
        </member>
        <member name="M:Models.Graph.Graph.Document(System.Collections.Generic.List{Models.Core.AutoDocumentation.ITag},System.Int32,System.Int32)">
            <summary>
            Writes documentation for this function by adding to the list of documentation tags.
            </summary>
            <param name="tags">The list of tags to add to.</param>
            <param name="headingLevel">The level (e.g. H2) of the headings.</param>
            <param name="indent">The level of indentation 1, 2, 3 etc.</param>
        </member>
        <member name="P:Models.Graph.Graph.Title">
            <summary>
            Gets or sets the title of the graph
            </summary>
        </member>
        <member name="P:Models.Graph.Graph.Caption">
            <summary>
            Gets or sets the caption at the bottom of the graph
            </summary>
        </member>
        <member name="P:Models.Graph.Graph.Axes">
            <summary>
            Gets or sets a list of all axes
            </summary>
        </member>
        <member name="P:Models.Graph.Graph.Series">
            <summary>
            Gets or sets a list of all series
            </summary>
        </member>
        <member name="P:Models.Graph.Graph.LegendPosition">
            <summary>
            Gets or sets the location of the legend
            </summary>
        </member>
        <member name="P:Models.Graph.Graph.ShowRegressionLine">
            <summary>
            Gets or sets a value indicating whether an overall regression line and stats for all series?
            </summary>
        </member>
        <member name="P:Models.Graph.Graph.DisabledSeries">
            <summary>
            Gets or sets a list of raw grpah series that should be disabled.
            </summary>
        </member>
        <member name="P:Models.Graph.Graph.IncludeInDocumentation">
            <summary>
            Gets or sets a value indicating whether the graph should be included in the auto-doc documentation.
            </summary>
        </member>
        <member name="P:Models.Graph.Graph.DataStore">
            <summary>
            Gets an instance of the data store. Creates it if it doesn't exist.
            </summary>
        </member>
        <member name="T:Models.Graph.Graph.LegendPositionType">
            <summary>
            An enumeration for the position of the legend
            </summary>
        </member>
        <member name="F:Models.Graph.Graph.LegendPositionType.TopLeft">
            <summary>
            Top left corner of the graph
            </summary>
        </member>
        <member name="F:Models.Graph.Graph.LegendPositionType.TopRight">
            <summary>
            Top right corner of the graph
            </summary>
        </member>
        <member name="F:Models.Graph.Graph.LegendPositionType.BottomLeft">
            <summary>
            Bottom left corner of the graph
            </summary>
        </member>
        <member name="F:Models.Graph.Graph.LegendPositionType.BottomRight">
            <summary>
            Bottom right corner of the graph
            </summary>
        </member>
        <member name="T:Models.SurfaceOM.SurfaceOrganicMatter">
            <summary>
            The surface organic matter model, ported by Ben Jolley from the
            Fortran version.
            Tidied up (somewhat) for ApsimX by Eric Zurcher, August 2014.
            </summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.acceptableErr">
            <summary>The acceptable error</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.ApsimBoundWarningError">
            <summary>The apsim bound warning error</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.soil">
            <summary>
            Link to the soil component.
            Used to retrieve values for eos and soil layer thicknesses.
            </summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.summary">
            <summary>
            Link to the summary component.
            Provides access to WriteWarning and WriteMessage.
            </summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.weather">
            <summary>
            Link to the weather component.
            Provides access to temperature and rainfall values.
            </summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.maxFr">
            <summary>
            Number of pools into which carbon is grouped.
            Currently there are three, indexed as follows:
            0 = carbohydrate
            1 = cellulose
            2 = lignin.
            </summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.SurfOM">
            <summary>The surf om</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.MetData">
            <summary>The met data</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.numSurfom">
            <summary>The number surfom</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.irrig">
            <summary>The irrig</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.eos">
            <summary>The eos</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.cumeos">
            <summary>The cumeos</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.dlayer">
            <summary>The dlayer</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.phosphorusAware">
            <summary>The phosphorus aware</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.oldSOMState">
            <summary>The old som state</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.DailyInitialC">
            <summary>The daily initial c</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.DailyInitialN">
            <summary>The daily initial n</summary>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Models.SurfaceOM.SurfaceOrganicMatter"/> class.</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.cf_contrib">
            <summary>The cf_contrib</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.C_fract">
            <summary>The c_fract</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.frPoolC">
            <summary>The fr pool c</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.frPoolN">
            <summary>The fr pool n</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.frPoolP">
            <summary>The fr pool p</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.nh4ppm">
            <summary>The NH4PPM</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.no3ppm">
            <summary>The no3ppm</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.po4ppm">
            <summary>The po4ppm</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.specific_area">
            <summary>The specific_area</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.PondActive">
            <summary>The pond active</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.labile_p">
            <summary>The labile_p</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter._leaching_fr">
            <summary>The _leaching_fr</summary>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.GetWeightFromPool(System.String)">
            <summary>Get the weight of the given SOM pool</summary>
            <param name="pool">Name of the pool to get the weight from.</param>
            <returns>The weight of the given pool</returns>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.OnDeserialised(System.Boolean)">
            <summary>Called when [deserialised].</summary>
            <param name="xmlSerialisation">if set to <c>true</c> [XML serialisation].</param>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.savedResidues">
            <summary>The saved residues</summary>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.OnSerialising(System.Boolean)">
            <summary>
            We're about to be serialised. Remove residue types from out list
            that were obtained from the XML resource so they are not included
            </summary>
            <param name="xmlSerialisation">if set to <c>true</c> [XML serialisation].</param>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.OnSerialised(System.Boolean)">
            <summary>
            Serialisation has completed. Reinstate the full list of
            residue types
            </summary>
            <param name="xmlSerialisation">if set to <c>true</c> [XML serialisation].</param>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.Bound(System.Int32,System.Int32,System.Int32)">
            <summary>Bounds the specified tobound.</summary>
            <param name="tobound">The tobound.</param>
            <param name="lower">The lower.</param>
            <param name="upper">The upper.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.AddCover(System.Double,System.Double)">
            <summary>
            "cover1" and "cover2" are numbers between 0 and 1 which
            indicate what fraction of sunlight is intercepted by the
            foliage of plants.  This function returns a number between
            0 and 1 indicating the fraction of sunlight intercepted
            when "cover1" is combined with "cover2", i.e. both sets of
            plants are present.
            </summary>
            <param name="cover1">The cover1.</param>
            <param name="cover2">The cover2.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.Bound_check_real_var(System.Double,System.Double,System.Double,System.String)">
            <summary>Bound_check_real_vars the specified value.</summary>
            <param name="value">The value.</param>
            <param name="lower">The lower.</param>
            <param name="upper">The upper.</param>
            <param name="vname">The vname.</param>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.reals_are_equal(System.Double,System.Double)">
            <summary>Reals_are_equals the specified first.</summary>
            <param name="first">The first.</param>
            <param name="second">The second.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.GetCumulativeIndexReal(System.Double,System.Double[])">
            <summary>Gets the cumulative index real.</summary>
            <param name="cum_sum">The cum_sum.</param>
            <param name="array">The array.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.ToArray``1(System.String)">
            <summary>To the array.</summary>
            <typeparam name="T"></typeparam>
            <param name="str">The string.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.Sum2DArray(System.Double[0:,0:])">
            <summary>Sum2s the d array.</summary>
            <param name="_2Darray">The _2 darray.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.SumSurfOMStandingLying(System.Collections.Generic.List{Models.SurfaceOM.SurfaceOrganicMatter.SurfOrganicMatterType},System.Func{Models.SurfaceOM.SurfaceOrganicMatter.OMFractionType,System.Double})">
            <summary>Sums the surf om standing lying.</summary>
            <param name="var">The variable.</param>
            <param name="func">The function.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.SumSurfOMStandingLying(Models.SurfaceOM.SurfaceOrganicMatter.SurfOrganicMatterType,System.Func{Models.SurfaceOM.SurfaceOrganicMatter.OMFractionType,System.Double})">
            <summary>Sums the surf om standing lying.</summary>
            <param name="var">The variable.</param>
            <param name="func">The function.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.SumSurfOM(System.Collections.Generic.List{Models.SurfaceOM.SurfaceOrganicMatter.SurfOrganicMatterType},System.Func{Models.SurfaceOM.SurfaceOrganicMatter.SurfOrganicMatterType,System.Double})">
            <summary>Sums the surf om.</summary>
            <param name="var">The variable.</param>
            <param name="func">The function.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.SumOMFractionType(Models.SurfaceOM.SurfaceOrganicMatter.OMFractionType[],System.Func{Models.SurfaceOM.SurfaceOrganicMatter.OMFractionType,System.Double})">
            <summary>Sums the type of the om fraction.</summary>
            <param name="var">The variable.</param>
            <param name="func">The function.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.ResidueMass(System.String,System.Func{Models.SurfaceOM.SurfaceOrganicMatter.OMFractionType,System.Double})">
            <summary>Residues the mass.</summary>
            <param name="type">The type.</param>
            <param name="func">The function.</param>
            <returns></returns>
            <exception cref="T:Models.Core.ApsimXException">No organic matter called  + type +  present</exception>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.SurfomReset">
            <summary>Initialise residue module</summary>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.SaveState">
            <summary>Saves the state.</summary>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.DeltaState">
            <summary>Deltas the state.</summary>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.PublishExternalMassFlow(Models.Soils.ExternalMassFlowType)">
            <summary>Publishes the external mass flow.</summary>
            <param name="massBalanceChange">The mass balance change.</param>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.PublishSurfaceOrganicMatterDecomp(Models.Soils.SurfaceOrganicMatterDecompType)">
            <summary>Publishes the surface organic matter decomp.</summary>
            <param name="SOMDecomp">The som decomp.</param>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.PublishFOMPool(Models.Soils.FOMPoolType)">
            <summary>Publishes the fom pool.</summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.publish_SurfaceOrganicMatter(Models.SurfaceOM.SurfaceOrganicMatter.SurfaceOrganicMatterType)">
            <summary>Publish_s the surface organic matter.</summary>
            <param name="SOM">The som.</param>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.OnDoDailyInitialisation(System.Object,System.EventArgs)">
            <summary>Called when [do daily initialisation].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.initialised">
            <summary>The initialised</summary>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.OnTillage(Models.Soils.TillageType)">
            <summary>Called when [tillage].</summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.Incorporate(System.Double,System.Double)">
            <summary>Incorporates the specified fraction.</summary>
            <param name="fraction">The fraction.</param>
            <param name="depth">The depth.</param>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>Called when [simulation commencing].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.OnReset">
            <summary>Called when [reset].</summary>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.OnRemove_surfaceOM(Models.SurfaceOM.SurfaceOrganicMatter.SurfaceOrganicMatterType)">
            <summary>Called when [remove_surface om].</summary>
            <param name="SOM">The som.</param>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.OnIrrigated(System.Object,Models.Soils.IrrigationApplicationType)">
            <summary>Get irrigation information from an Irrigated event.</summary>
            <param name="sender">The sender.</param>
            <param name="data">The data.</param>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.OnCrop_chopped(Models.SurfaceOM.SurfaceOrganicMatter.CropChoppedType)">
            <summary>Get information on surfom added from the crops</summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.OnBiomassRemoved(Models.PMF.BiomassRemovedType)">
            <summary>Called when [biomass removed].</summary>
            <param name="BiomassRemoved">The biomass removed.</param>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.PotentialDecomposition">
            <summary>Return the potential residue decomposition for today.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.OnDoSurfaceOrganicMatterDecomposition(System.Object,System.EventArgs)">
            <summary>Do the daily residue decomposition for today.</summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.OnAddFaeces(Models.SurfaceOM.SurfaceOrganicMatter.AddFaecesType)">
            <summary>Called when [add faeces].</summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.SendExternalMassFlow(Models.Soils.ExternalMassFlowType)">
            <summary>Sends the external mass flow.</summary>
            <param name="massBalanceChange">The mass balance change.</param>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.SurfomTotalState">
            <summary>Surfoms the total state.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.ZeroVariables">
            <summary>Set all variables in this module to zero.</summary>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.GetOtherVariables">
            <summary>Get the values of variables from other modules</summary>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.CheckPond">
            <summary>Checks the pond.</summary>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.ReadParam">
            <summary>
            Read in all parameters from parameter file
            <para>
            This now just modifies the inputs and puts them into global structs, reading in is handled by .NET
            </para>
            </summary>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.GetResidueNumber(System.String)">
            <summary>Get the solutes number</summary>
            <param name="surfomname">The surfomname.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.PotDecomp(System.Double[]@,System.Double[]@,System.Double[]@)">
            <summary>
            Performs manure decomposition taking into account environmental;
            and manure factors (independant to soil N but N balance can modify;
            actual decomposition rates if desired by N model - this is possible;
            because pools are not updated until end of time step - see post routine)
            </summary>
            <param name="c_pot_decomp">The c_pot_decomp.</param>
            <param name="n_pot_decomp">The n_pot_decomp.</param>
            <param name="p_pot_decomp">The p_pot_decomp.</param>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.TemperatureFactor">
            <summary>
            Calculate temperature factor for manure decomposition (0-1).
            <para>
            Notes;
            The temperature factor is a simple function of the square of daily
            average temperature.  The user only needs to give an optimum temperature
            and the code will back calculate the necessary coefficient at compile time.
            </para>
            </summary>
            <returns>temperature factor</returns>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.ContactFactor">
            <summary>Calculate manure/soil contact factor for manure decomposition (0-1).</summary>
            <returns></returns>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.CNRatioFactor(System.Int32)">
            <summary>Calculate C:N factor for decomposition (0-1).</summary>
            <param name="residue">residue number</param>
            <returns>C:N factor for decomposition(0-1)</returns>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.MoistureFactor">
            <summary>Calculate moisture factor for manure decomposition (0-1).</summary>
            <returns></returns>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.CoverTotal">
            <summary>Calculate total cover</summary>
            <returns></returns>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.Process">
            <summary>Perform actions for current day.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.SetVars(System.Double@,System.Double@)">
            <summary>
            Calculates variables required for today"s decomposition and;
            leaching factors.
            </summary>
            <param name="cumeos">The cumeos.</param>
            <param name="leachRain">The leach rain.</param>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.Leach(System.Double)">
            <summary>
            Remove mineral N and P from surfom with leaching rainfall and;
            pass to Soil N and Soil P modules.
            </summary>
            <param name="leachRain">The leach rain.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.SendPotDecompEvent">
            <summary>Notify other modules of the potential to decompose.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.respond2get_SurfaceOrganicMatter">
            <summary>send current status.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.RemoveSurfom(Models.SurfaceOM.SurfaceOrganicMatter.SurfaceOrganicMatterType)">
            <summary>Calculates surfom removal as a result of remove_surfom message</summary>
            <param name="SOM">The som.</param>
            <exception cref="T:Models.Core.ApsimXException">Attempting to remove more dm from  + SOM.Pool[som_index].Name +  lying Surface Organic Matter pool  + pool +  than available + Environment.NewLine
                                            + Removing  + SOM.Pool[SOMNo].LyingFraction[pool].amount +  (kg/ha)  + from  + SurfOM[SOMNo].Lying[pool].amount +  (kg/ha) available.</exception>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.DecomposeSurfom(Models.Soils.SurfaceOrganicMatterDecompType)">
            <summary>Decomposes the surfom.</summary>
            <param name="SOMDecomp">The som decomp.</param>
            <exception cref="T:Models.Core.ApsimXException">
            SurfaceOM - C decomposition exceeds potential rate
            or
            SurfaceOM - N decomposition exceeds potential rate
            </exception>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.Decomp(System.Double,System.Double,System.Double,System.Int32)">
            <summary>Performs updating of pools due to surfom decomposition</summary>
            <param name="C_decomp">C to be decomposed</param>
            <param name="N_decomp">N to be decomposed</param>
            <param name="P_decomp">P to be decomposed</param>
            <param name="residue">residue number being dealt with</param>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.Tillage(Models.Soils.TillageType)">
            <summary>Calculates surfom incorporation as a result of tillage operations.</summary>
            <param name="data">The data.</param>
            <exception cref="T:Models.Core.ApsimXException">Cannot find info for tillage:-  + data.Name</exception>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.Incorp(System.String,System.Double,System.Double)">
            <summary>
            Calculate surfom incorporation as a result of tillage and update;
            residue and N pools.
            <para>
            Notes;
            I do not like updating the pools here but we need to be able to handle;
            the case of multiple tillage events per day.</para>
            </summary>
            <param name="actionType">Type of the action.</param>
            <param name="fIncorp">The f incorp.</param>
            <param name="tillageDepth">The tillage depth.</param>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.AddNewSurfOM(System.String,System.String)">
            <summary>Adds the new surf om.</summary>
            <param name="newName">The new name.</param>
            <param name="newType">The new type.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.AddSurfom(Models.SurfaceOM.SurfaceOrganicMatter.Add_surfaceomType)">
            <summary>Adds the surfom.</summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.AddFaeces(Models.SurfaceOM.SurfaceOrganicMatter.AddFaecesType)">
            <summary>
            Adds excreta in response to an AddFaeces event
            This is a still the minimalist version, providing
            an alternative to using add_surfaceom directly
            </summary>
            <param name="data">structure holding description of the added faeces</param>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.ReadTypeSpecificConstants(System.String,System.Int32,System.Double@)">
            <summary>
            Reads type-specific residue constants from ini-file and places them in c. constants;
            </summary>
            <param name="surfom_type">The surfom_type.</param>
            <param name="i">The i.</param>
            <param name="pot_decomp_rate">The pot_decomp_rate.</param>
            <exception cref="T:Models.Core.ApsimXException">
            Cannot find residue type description for ' + surfom_type + '
            or
            Error reading in fr_c/n/p values, inconsistent array lengths
            </exception>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.CoverOfSOM(System.Int32)">
            <summary>
            <para>Purpose;</para>
            <para>
            This function returns the fraction of the soil surface covered by;
            residue according to the relationship from Gregory (1982).
            </para>
            <para>Notes;</para>
            <para>Gregory"s equation is of the form;</para>
            <para>        Fc = 1.0 - exp (- Am * M)   where Fc = Fraction covered;</para>
            <para>                                          Am = Specific Area (ha/kg)</para>
            <para>                                           M = Mulching rate (kg/ha)</para>
            <para>This residue model keeps track of the total residue area and so we can
            substitute this value (area residue/unit area) for the product_of Am * M.</para>
            </summary>
            <param name="SOMindex">The so mindex.</param>
            <returns></returns>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.SetPhosphorusAware">
            <summary>Check that soil phosphorus is in system</summary>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.SurfOMOnBiomassRemoved(Models.PMF.BiomassRemovedType)">
            <summary>Get information on surfom added from the crops</summary>
            <param name="BiomassRemoved">The biomass removed.</param>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.Add(System.Double,System.Double,System.Double,System.String,System.String)">
            <summary>Adds material to the surface organic matter pool.</summary>
            <param name="mass">The amount of biomass added (kg/ha).</param>
            <param name="N">The amount of N added (ppm).</param>
            <param name="P">The amount of P added (ppm).</param>
            <param name="type">Type of the biomass.</param>
            <param name="name">Name of the biomass written to summary file</param>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.SendResAddedEvent(System.String,System.String,System.Double,System.Double,System.Double)">
            <summary>Notify other modules of residue added to residue pool.</summary>
            <param name="residueType">Type of the residue.</param>
            <param name="dmType">Type of the dm.</param>
            <param name="dltResidueWt">The DLT residue wt.</param>
            <param name="dltResidueNWt">The DLT residue n wt.</param>
            <param name="dltResiduePWt">The DLT residue p wt.</param>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.SendResRemovedEvent(System.String,System.Double,System.Double[],System.Int32)">
            <summary>Notify other modules of residue removed from residue pool</summary>
            <param name="residueRemovedAction">The residue removed action.</param>
            <param name="dltResidueFraction">The DLT residue fraction.</param>
            <param name="residueIncorpFraction">The residue incorp fraction.</param>
            <param name="deepestLayer">The deepest layer.</param>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.SendSOMRemovedEvent(System.String,System.String,System.Double,System.Double,System.Double)">
            <summary>Notify other modules of residue added to residue pool</summary>
            <param name="residueType">Type of the residue.</param>
            <param name="dmType">Type of the dm.</param>
            <param name="dltResidueWt">The DLT residue wt.</param>
            <param name="dltResidueNWt">The DLT residue n wt.</param>
            <param name="dltResiduePWt">The DLT residue p wt.</param>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.Resize2DArray``1(``0[0:,0:],System.Int32,System.Int32)">
            <summary>Resize2s the d array.</summary>
            <typeparam name="T"></typeparam>
            <param name="original">The original.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.ReportAdditions">
            <summary>Gets or sets the report additions.</summary>
            <value>The report additions.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.ReportRemovals">
            <summary>Gets or sets the report removals.</summary>
            <value>The report removals.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.ResidueTypes">
            <summary>Gets or sets the residue types.</summary>
            <value>The residue types.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.TillageTypes">
            <summary>Gets or sets the tillage types.</summary>
            <value>The tillage types.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.Pools">
            <summary>Gets or sets the pools.</summary>
            <value>The pools.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.PoolName">
            <summary>Gets or sets the name of the pool.</summary>
            <value>The name of the pool.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.type">
            <summary>Gets or sets the type of surface organic matter.</summary>
            <value>The type.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.mass">
            <summary>Gets or sets the mass of surface organic matter.</summary>
            <value>The mass of surface organic matter.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.standing_fraction">
            <summary>Gets or sets the standing_fraction.</summary>
            <value>The standing_fraction.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.cpr">
            <summary>Gets or sets the Carbon:Phosphorus ratio.</summary>
            <value>The Carbon:Phosphorus ratio.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.cnr">
            <summary>Gets or sets the Carbon:Nitrogen ratio.</summary>
            <value>The Carbon:Nitrogen ratio.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.CriticalResidueWeight">
            <summary>critical residue weight below which Thorburn"s cover factor equals one</summary>
            <value>The critical residue weight.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.OptimumDecompTemp">
            <summary>temperature at which decomp reaches optimum (oC)</summary>
            <value>The optimum decomp temporary.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.MaxCumulativeEOS">
            <summary>cumeos at which decomp rate becomes zero. (mm H2O)</summary>
            <value>The maximum cumulative eos.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.CNRatioDecompCoeff">
            <summary>Coefficient to determine the magnitude of C:N effects on decomposition of residue</summary>
            <value>The cn ratio decomp coeff.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.CNRatioDecompThreshold">
            <summary>C:N above which decomposition rate of residue declines</summary>
            <value>The cn ratio decomp threshold.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.TotalLeachRain">
            <summary>total amount of "leaching" rain to remove all soluble N from surfom</summary>
            <value>The total leach rain.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.MinRainToLeach">
            <summary>threshold rainfall amount for leaching to occur</summary>
            <value>The minimum rain to leach.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.CriticalMinimumOrganicC">
            <summary>
            critical minimum org C below which potential decomposition rate is 100% (to avoid numerical imprecision)
            </summary>
            <value>The critical minimum organic c.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.DefaultCPRatio">
            <summary>Default C:P ratio</summary>
            <value>The default cp ratio.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.DefaultStandingFraction">
            <summary>Default standing fraction for initial residue pools</summary>
            <value>The default standing fraction.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.StandingExtinctCoeff">
            <summary>extinction coefficient for standing residues</summary>
            <value>The standing extinct coeff.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.FractionFaecesAdded">
            <summary>fraction of incoming faeces to add</summary>
            <value>The fraction faeces added.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.Wt">
            <summary>Total mass of all surface organic materials</summary>
            <value>The Surface OM Weight.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.carbonbalance">
            <summary>Gets the carbonbalance.</summary>
            <value>The carbonbalance.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.nitrogenbalance">
            <summary>Gets the nitrogenbalance.</summary>
            <value>The nitrogenbalance.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.C">
            <summary>Total mass of all surface organic carbon</summary>
            <value>The surfaceom_c.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.N">
            <summary>Total mass of all surface organic nitrogen</summary>
            <value>The surfaceom_n.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.P">
            <summary>Total mass of all surface organic phosphor</summary>
            <value>The surfaceom_p.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.AshAlk">
            <summary>Gets the surfaceom_ashalk.</summary>
            <value>The surfaceom_ashalk.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.NO3">
            <summary>Total mass of nitrate</summary>
            <value>The surfaceom_no3.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.NH4">
            <summary>Total mass of ammonium</summary>
            <value>The surfaceom_nh4.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.LabileP">
            <summary>Total mass of labile phosphorus</summary>
            <value>The surfaceom_labile_p.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.Cover">
            <summary>Fraction of ground covered by all surface OMs</summary>
            <value>The surfaceom_cover.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.tf">
            <summary>Temperature factor for decomposition</summary>
            <value>The tf.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.cf">
            <summary>Contact factor for decomposition</summary>
            <value>The cf.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.wf">
            <summary>Gets the wf.</summary>
            <value>The wf.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.leaching_fr">
            <summary>Gets the leaching_fr.</summary>
            <value>The leaching_fr.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.surface_organic_matter">
            <summary>Gets the surface_organic_matter.</summary>
            <value>The surface_organic_matter.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.surfaceom_wt_rice">
            <summary>Mass of organic matter named wheat</summary>
            <value>The surfaceom_wt_rice.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.surfaceom_wt_algae">
            <summary>Mass of organic matter named algae</summary>
            <value>The surfaceom_wt_algae.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.WtAllPools">
            <summary>Mass of organic matter in all pools</summary>
            <value>The surfaceom_wt_all.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.surfaceom_c_all">
            <summary>Mass of organic carbon in all pools</summary>
            <value>The surfaceom_c_all.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.surfaceom_n_all">
            <summary>Mass of organic nitrogen in all pools</summary>
            <value>The surfaceom_n_all.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.surfaceom_p_all">
            <summary>Mass of organic phosphor in all pools</summary>
            <value>The surfaceom_p_all.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.surfaceom_ashalk_all">
            <summary>Gets the surfaceom_ashalk_all.</summary>
            <value>The surfaceom_ashalk_all.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.surfaceom_no3_all">
            <summary>Mass of nitrate in all pools</summary>
            <value>The surfaceom_no3_all.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.surfaceom_nh4_all">
            <summary>Mass of ammonium in all pools</summary>
            <value>The surfaceom_nh4_all.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.surfaceom_labile_p_all">
            <summary>Mass of labile phosphorus in all pools</summary>
            <value>The surfaceom_labile_p_all.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.pot_c_decomp_all">
            <summary>Potential organic C decomposition in all pools</summary>
            <value>The pot_c_decomp_all.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.pot_n_decomp_all">
            <summary>Potential organic N decomposition in all pools</summary>
            <value>The pot_n_decomp_all.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.pot_p_decomp_all">
            <summary>Potential organic P decomposition in all pools</summary>
            <value>The pot_p_decomp_all.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.standing_fr_all">
            <summary>Fraction of all pools which is inert, ie not in contact with the ground</summary>
            <value>The standing_fr_all.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.surfaceom_cover_all">
            <summary>Fraction of ground covered by all pools</summary>
            <value>The surfaceom_cover_all.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.cnrf_all">
            <summary>C:N ratio factor for decomposition for all pools</summary>
            <value>The cnrf_all.</value>
        </member>
        <member name="E:Models.SurfaceOM.SurfaceOrganicMatter.ExternalMassFlow">
            <summary>Occurs when [external mass flow].</summary>
        </member>
        <member name="E:Models.SurfaceOM.SurfaceOrganicMatter.PotentialResidueDecompositionCalculated">
            <summary>Occurs when [potential residue decomposition calculated].</summary>
        </member>
        <member name="E:Models.SurfaceOM.SurfaceOrganicMatter.IncorpFOMPool">
            <summary>Occurs when [incorp fom pool].</summary>
        </member>
        <member name="E:Models.SurfaceOM.SurfaceOrganicMatter.SurfaceOrganicMatterState">
            <summary>Occurs when [surface organic matter state].</summary>
        </member>
        <member name="E:Models.SurfaceOM.SurfaceOrganicMatter.Residue_added">
            <summary>Occurs when [residue_added].</summary>
        </member>
        <member name="E:Models.SurfaceOM.SurfaceOrganicMatter.Residue_removed">
            <summary>Occurs when [residue_removed].</summary>
        </member>
        <member name="E:Models.SurfaceOM.SurfaceOrganicMatter.SurfaceOM_removed">
            <summary>Occurs when [surface o m_removed].</summary>
        </member>
        <member name="E:Models.SurfaceOM.SurfaceOrganicMatter.NitrogenChanged">
            <summary>Occurs when [nitrogen changed].</summary>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.ActualSOMDecomp">
            <summary>Actual surface organic matter decomposition. Calculated by SoilNitrogen.</summary>
            <value>The actual som decomp.</value>
        </member>
        <member name="T:Models.SurfaceOM.SurfaceOrganicMatter.OMFractionType">
            <summary>Type carrying information about the CNP composition of an organic matter fraction</summary>
            ================================================================
            ====================================================================
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.OMFractionType.amount">
            <summary>The amount</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.OMFractionType.C">
            <summary>The c</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.OMFractionType.N">
            <summary>The n</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.OMFractionType.P">
            <summary>The p</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.OMFractionType.AshAlk">
            <summary>The ash alk</summary>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.OMFractionType.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Models.SurfaceOM.SurfaceOrganicMatter.OMFractionType"/> class.</summary>
        </member>
        <member name="T:Models.SurfaceOM.SurfaceOrganicMatter.SurfOrganicMatterType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.SurfOrganicMatterType.name">
            <summary>The name</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.SurfOrganicMatterType.OrganicMatterType">
            <summary>The organic matter type</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.SurfOrganicMatterType.PotDecompRate">
            <summary>The pot decomp rate</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.SurfOrganicMatterType.no3">
            <summary>The no3</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.SurfOrganicMatterType.nh4">
            <summary>The NH4</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.SurfOrganicMatterType.po4">
            <summary>The po4</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.SurfOrganicMatterType.Standing">
            <summary>The standing</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.SurfOrganicMatterType.Lying">
            <summary>The lying</summary>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.SurfOrganicMatterType.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Models.SurfaceOM.SurfaceOrganicMatter.SurfOrganicMatterType"/> class.</summary>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.SurfOrganicMatterType.#ctor(System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:Models.SurfaceOM.SurfaceOrganicMatter.SurfOrganicMatterType"/> class.</summary>
            <param name="name">The name.</param>
            <param name="type">The type.</param>
        </member>
        <member name="T:Models.SurfaceOM.SurfaceOrganicMatter.ResidueType">
            <summary>
            
            </summary>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.ResidueType.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Models.SurfaceOM.SurfaceOrganicMatter.ResidueType"/> class.</summary>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.ResidueType.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:Models.SurfaceOM.SurfaceOrganicMatter.ResidueType"/> class.</summary>
            <param name="fomType">Type of the fom.</param>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.ResidueType.InitialiseWithNulls">
            <summary>Initialises the with nulls.</summary>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.ResidueType.fom_type">
            <summary>Gets or sets the fom_type.</summary>
            <value>The fom_type.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.ResidueType.derived_from">
            <summary>Gets or sets the derived_from.</summary>
            <value>The derived_from.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.ResidueType.fraction_C">
            <summary>Gets or sets the fraction_ c.</summary>
            <value>The fraction_ c.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.ResidueType.po4ppm">
            <summary>Gets or sets the po4ppm.</summary>
            <value>The po4ppm.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.ResidueType.nh4ppm">
            <summary>Gets or sets the NH4PPM.</summary>
            <value>The NH4PPM.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.ResidueType.no3ppm">
            <summary>Gets or sets the no3ppm.</summary>
            <value>The no3ppm.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.ResidueType.specific_area">
            <summary>Gets or sets the specific_area.</summary>
            <value>The specific_area.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.ResidueType.cf_contrib">
            <summary>Gets or sets the cf_contrib.</summary>
            <value>The cf_contrib.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.ResidueType.pot_decomp_rate">
            <summary>Gets or sets the pot_decomp_rate.</summary>
            <value>The pot_decomp_rate.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.ResidueType.fr_c">
            <summary>Gets or sets the FR_C.</summary>
            <value>The FR_C.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.ResidueType.fr_n">
            <summary>Gets or sets the FR_N.</summary>
            <value>The FR_N.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.ResidueType.fr_p">
            <summary>Gets or sets the FR_P.</summary>
            <value>The FR_P.</value>
        </member>
        <member name="T:Models.SurfaceOM.SurfaceOrganicMatter.ResidueTypesList">
            <summary>
            
            </summary>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.ResidueTypesList.FillAllDerived">
            <summary>Fills all derived.</summary>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.ResidueTypesList.FillDerived(System.Int32)">
            <summary>Fills the derived.</summary>
            <param name="i">The i.</param>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.ResidueTypesList.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Models.SurfaceOM.SurfaceOrganicMatter.ResidueTypesList"/> class.</summary>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.ResidueTypesList.getResidue(System.String)">
            <summary>Gets the residue.</summary>
            <param name="name">The name.</param>
            <returns></returns>
            <exception cref="T:Models.Core.ApsimXException">Could not find residue name  + name</exception>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.ResidueTypesList.residues">
            <summary>Gets or sets the residues.</summary>
            <value>The residues.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.ResidueTypesList.LoadFromResource">
            <summary>Gets or sets the load from resource.</summary>
            <value>The load from resource.</value>
        </member>
        <member name="T:Models.SurfaceOM.SurfaceOrganicMatter.TillageTypesList">
            <summary>
            
            </summary>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.TillageTypesList.GetTillageData(System.String)">
            <summary>Gets the tillage data.</summary>
            <param name="Name">The name.</param>
            <returns></returns>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.TillageTypesList.TillageType">
            <summary>Gets or sets the type of the tillage.</summary>
            <value>The type of the tillage.</value>
        </member>
        <member name="T:Models.SurfaceOM.SurfaceOrganicMatter.Pool">
            <summary>
            
            </summary>
        </member>
        <member name="M:Models.SurfaceOM.SurfaceOrganicMatter.Pool.#ctor">
            <summary>Constructor provides initial values</summary>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.Pool.PoolName">
            <summary>Gets or sets the name of the pool.</summary>
            <value>The name of the pool.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.Pool.ResidueType">
            <summary>Gets or sets the type of the residue.</summary>
            <value>The type of the residue.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.Pool.Mass">
            <summary>Gets or sets the mass.</summary>
            <value>The mass.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.Pool.CNRatio">
            <summary>Gets or sets the cn ratio.</summary>
            <value>The cn ratio.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.Pool.CPRatio">
            <summary>Gets or sets the cp ratio.</summary>
            <value>The cp ratio.</value>
        </member>
        <member name="P:Models.SurfaceOM.SurfaceOrganicMatter.Pool.StandingFraction">
            <summary>Gets or sets the standing fraction.</summary>
            <value>The standing fraction.</value>
        </member>
        <member name="T:Models.SurfaceOM.SurfaceOrganicMatter.SurfaceOrganicMatterDecompDelegate">
            <summary>
            
            </summary>
            <param name="Data">The data.</param>
        </member>
        <member name="T:Models.SurfaceOM.SurfaceOrganicMatter.FOMPoolDelegate">
            <summary>
            
            </summary>
            <param name="Data">The data.</param>
        </member>
        <member name="T:Models.SurfaceOM.SurfaceOrganicMatter.SurfaceOrganicMatterPoolType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.SurfaceOrganicMatterPoolType.Name">
            <summary>The name</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.SurfaceOrganicMatterPoolType.OrganicMatterType">
            <summary>The organic matter type</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.SurfaceOrganicMatterPoolType.PotDecompRate">
            <summary>The pot decomp rate</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.SurfaceOrganicMatterPoolType.no3">
            <summary>The no3</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.SurfaceOrganicMatterPoolType.nh4">
            <summary>The NH4</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.SurfaceOrganicMatterPoolType.po4">
            <summary>The po4</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.SurfaceOrganicMatterPoolType.StandingFraction">
            <summary>The standing fraction</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.SurfaceOrganicMatterPoolType.LyingFraction">
            <summary>The lying fraction</summary>
        </member>
        <member name="T:Models.SurfaceOM.SurfaceOrganicMatter.SurfaceOrganicMatterType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.SurfaceOrganicMatterType.Pool">
            <summary>The pool</summary>
        </member>
        <member name="T:Models.SurfaceOM.SurfaceOrganicMatter.SurfaceOrganicMatterDelegate">
            <summary>
            
            </summary>
            <param name="Data">The data.</param>
        </member>
        <member name="T:Models.SurfaceOM.SurfaceOrganicMatter.ResidueRemovedType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.ResidueRemovedType.residue_removed_action">
            <summary>The residue_removed_action</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.ResidueRemovedType.dlt_residue_fraction">
            <summary>The dlt_residue_fraction</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.ResidueRemovedType.residue_incorp_fraction">
            <summary>The residue_incorp_fraction</summary>
        </member>
        <member name="T:Models.SurfaceOM.SurfaceOrganicMatter.ResidueAddedType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.ResidueAddedType.residue_type">
            <summary>The residue_type</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.ResidueAddedType.dm_type">
            <summary>The dm_type</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.ResidueAddedType.dlt_residue_wt">
            <summary>The dlt_residue_wt</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.ResidueAddedType.dlt_dm_n">
            <summary>The DLT_DM_N</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.ResidueAddedType.dlt_dm_p">
            <summary>The DLT_DM_P</summary>
        </member>
        <member name="T:Models.SurfaceOM.SurfaceOrganicMatter.Residue_addedDelegate">
            <summary>
            
            </summary>
            <param name="Data">The data.</param>
        </member>
        <member name="T:Models.SurfaceOM.SurfaceOrganicMatter.Residue_removedDelegate">
            <summary>
            
            </summary>
            <param name="Data">The data.</param>
        </member>
        <member name="T:Models.SurfaceOM.SurfaceOrganicMatter.SurfaceOMRemovedType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.SurfaceOMRemovedType.SurfaceOM_type">
            <summary>The surface o m_type</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.SurfaceOMRemovedType.SurfaceOM_dm_type">
            <summary>The surface o m_dm_type</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.SurfaceOMRemovedType.dlt_SurfaceOM_wt">
            <summary>The DLT_ surface o M_WT</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.SurfaceOMRemovedType.SurfaceOM_dlt_dm_n">
            <summary>The surface o M_DLT_DM_N</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.SurfaceOMRemovedType.SurfaceOM_dlt_dm_p">
            <summary>The surface o M_DLT_DM_P</summary>
        </member>
        <member name="T:Models.SurfaceOM.SurfaceOrganicMatter.SurfaceOM_removedDelegate">
            <summary>
            
            </summary>
            <param name="Data">The data.</param>
        </member>
        <member name="T:Models.SurfaceOM.SurfaceOrganicMatter.Add_surfaceomType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.Add_surfaceomType.name">
            <summary>The name</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.Add_surfaceomType.type">
            <summary>The type</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.Add_surfaceomType.mass">
            <summary>The mass</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.Add_surfaceomType.n">
            <summary>The n</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.Add_surfaceomType.cnr">
            <summary>The CNR</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.Add_surfaceomType.p">
            <summary>The p</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.Add_surfaceomType.cpr">
            <summary>The CPR</summary>
        </member>
        <member name="T:Models.SurfaceOM.SurfaceOrganicMatter.CropChoppedType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.CropChoppedType.crop_type">
            <summary>The crop_type</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.CropChoppedType.dm_type">
            <summary>The dm_type</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.CropChoppedType.dlt_crop_dm">
            <summary>The dlt_crop_dm</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.CropChoppedType.dlt_dm_n">
            <summary>The DLT_DM_N</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.CropChoppedType.dlt_dm_p">
            <summary>The DLT_DM_P</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.CropChoppedType.fraction_to_residue">
            <summary>The fraction_to_residue</summary>
        </member>
        <member name="T:Models.SurfaceOM.SurfaceOrganicMatter.AddFaecesType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.AddFaecesType.Defaecations">
            <summary>The defaecations</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.AddFaecesType.VolumePerDefaecation">
            <summary>The volume per defaecation</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.AddFaecesType.AreaPerDefaecation">
            <summary>The area per defaecation</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.AddFaecesType.Eccentricity">
            <summary>The eccentricity</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.AddFaecesType.OMWeight">
            <summary>The om weight</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.AddFaecesType.OMN">
            <summary>The omn</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.AddFaecesType.OMP">
            <summary>The omp</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.AddFaecesType.OMS">
            <summary>The oms</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.AddFaecesType.OMAshAlk">
            <summary>The om ash alk</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.AddFaecesType.NO3N">
            <summary>The n o3 n</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.AddFaecesType.NH4N">
            <summary>The n h4 n</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.AddFaecesType.POXP">
            <summary>The poxp</summary>
        </member>
        <member name="F:Models.SurfaceOM.SurfaceOrganicMatter.AddFaecesType.SO4S">
            <summary>The s o4 s</summary>
        </member>
        <member name="T:Models.Soils.TillageType">
            <summary>
            Tillage type structure
            </summary>
        </member>
        <member name="P:Models.Soils.TillageType.f_incorp">
            <summary>Gets or sets the f_incorp.</summary>
            <value>The f_incorp.</value>
        </member>
        <member name="P:Models.Soils.TillageType.tillage_depth">
            <summary>Gets or sets the tillage_depth.</summary>
            <value>The tillage_depth.</value>
        </member>
        <member name="P:Models.Soils.TillageType.cn_red">
            <summary>Gets or sets the cn_red.</summary>
            <value>The cn_red.</value>
        </member>
        <member name="P:Models.Soils.TillageType.cn_rain">
            <summary>Gets or sets the cn_rain.</summary>
            <value>The cn_rain.</value>
        </member>
        <member name="T:Models.Soils.SoilOrganicMatter">
            <summary>
            A model for capturing soil organic matter properties
            </summary>
        </member>
        <member name="F:Models.Soils.SoilOrganicMatter.ppm">
            <summary>The PPM</summary>
        </member>
        <member name="M:Models.Soils.SoilOrganicMatter.OCUnitsToString(Models.Soils.SoilOrganicMatter.OCUnitsEnum)">
            <summary>Ocs the units to string.</summary>
            <param name="Units">The units.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Soils.SoilOrganicMatter.OCUnitsSet(Models.Soils.SoilOrganicMatter.OCUnitsEnum)">
            <summary>Ocs the units set.</summary>
            <param name="ToUnits">To units.</param>
        </member>
        <member name="P:Models.Soils.SoilOrganicMatter.RootCN">
            <summary>Gets or sets the root cn.</summary>
            <value>The root cn.</value>
        </member>
        <member name="P:Models.Soils.SoilOrganicMatter.RootWt">
            <summary>Gets or sets the root wt.</summary>
            <value>The root wt.</value>
        </member>
        <member name="P:Models.Soils.SoilOrganicMatter.SoilCN">
            <summary>Gets or sets the soil cn.</summary>
            <value>The soil cn.</value>
        </member>
        <member name="P:Models.Soils.SoilOrganicMatter.EnrACoeff">
            <summary>Gets or sets the enr a coeff.</summary>
            <value>The enr a coeff.</value>
        </member>
        <member name="P:Models.Soils.SoilOrganicMatter.EnrBCoeff">
            <summary>Gets or sets the enr b coeff.</summary>
            <value>The enr b coeff.</value>
        </member>
        <member name="P:Models.Soils.SoilOrganicMatter.Thickness">
            <summary>Gets or sets the thickness.</summary>
            <value>The thickness.</value>
        </member>
        <member name="P:Models.Soils.SoilOrganicMatter.Depth">
            <summary>Gets or sets the depth.</summary>
            <value>The depth.</value>
        </member>
        <member name="P:Models.Soils.SoilOrganicMatter.OC">
            <summary>Gets or sets the oc.</summary>
            <value>The oc.</value>
        </member>
        <member name="P:Models.Soils.SoilOrganicMatter.OCMetadata">
            <summary>Gets or sets the oc metadata.</summary>
            <value>The oc metadata.</value>
        </member>
        <member name="P:Models.Soils.SoilOrganicMatter.FBiom">
            <summary>Gets or sets the f biom.</summary>
            <value>The f biom.</value>
        </member>
        <member name="P:Models.Soils.SoilOrganicMatter.FInert">
            <summary>Gets or sets the f inert.</summary>
            <value>The f inert.</value>
        </member>
        <member name="P:Models.Soils.SoilOrganicMatter.OCUnits">
            <summary>Gets or sets the oc units.</summary>
            <value>The oc units.</value>
        </member>
        <member name="P:Models.Soils.SoilOrganicMatter.OCTotal">
            <summary>Organic carbon. Units: Total %</summary>
            <value>The oc total.</value>
        </member>
        <member name="P:Models.Soils.SoilOrganicMatter.InertC">
            <summary>
            Calculate and return amount of inert carbon on the same layer structure as OC. Units: kg/ha
            </summary>
            <value>The inert c.</value>
        </member>
        <member name="P:Models.Soils.SoilOrganicMatter.BiomC">
            <summary>
            Calculate and return the amount of biom carbon on the same layer structure as OC. Units: kg/ha
            </summary>
            <value>The biom c.</value>
        </member>
        <member name="P:Models.Soils.SoilOrganicMatter.HumC">
            <summary>
            Calculate and return the amount of humic carbon on the same layer structure as OC. Units: kg/ha
            </summary>
            <value>The hum c.</value>
        </member>
        <member name="T:Models.Soils.SoilOrganicMatter.OCUnitsEnum">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.Soils.SoilOrganicMatter.OCUnitsEnum.Total">
            <summary>The total</summary>
        </member>
        <member name="F:Models.Soils.SoilOrganicMatter.OCUnitsEnum.WalkleyBlack">
            <summary>The walkley black</summary>
        </member>
        <member name="T:Models.PMF.Organs.RootSWIM">
            <summary>
            A root model for SWIM
            </summary>
        </member>
        <member name="F:Models.PMF.Organs.RootSWIM.Plant">
            <summary>The plant</summary>
        </member>
        <member name="F:Models.PMF.Organs.RootSWIM.Uptake">
            <summary>The uptake</summary>
        </member>
        <member name="F:Models.PMF.Organs.RootSWIM.rlv">
            <summary>The RLV</summary>
        </member>
        <member name="M:Models.PMF.Organs.RootSWIM.OnWaterUptakesCalculated(Models.PMF.WaterUptakesCalculatedType)">
            <summary>Called when [water uptakes calculated].</summary>
            <param name="Uptakes">The uptakes.</param>
        </member>
        <member name="M:Models.PMF.Organs.RootSWIM.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>Called when [simulation commencing].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Organs.RootSWIM.OnPlantSowing(System.Object,Models.PMF.SowPlant2Type)">
            <summary>Called when crop is ending</summary>
            <param name="sender">The sender.</param>
            <param name="data">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Organs.RootSWIM.OnPlantEnding(System.Object,System.EventArgs)">
            <summary>Called when crop is ending</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Models.PMF.Organs.RootSWIM.WaterUptake">
            <summary>Gets or sets the water uptake.</summary>
            <value>The water uptake.</value>
        </member>
        <member name="T:Models.PMF.OldPlant.PStress">
            <summary>
            Phosphorus stress model
            </summary>
        </member>
        <member name="M:Models.PMF.OldPlant.PStress.DoPlantSWStress">
            <summary>Does the plant sw stress.</summary>
        </member>
        <member name="P:Models.PMF.OldPlant.PStress.Photo">
            <summary>Gets the photo.</summary>
            <value>The photo.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.PStress.Pheno">
            <summary>Gets the pheno.</summary>
            <value>The pheno.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.PStress.Expansion">
            <summary>Gets the expansion.</summary>
            <value>The expansion.</value>
        </member>
        <member name="T:Models.PMF.OldPlant.LeafNumberPotential3">
            <summary>
            Leaf number potential
            </summary>
        </member>
        <member name="M:Models.PMF.OldPlant.LeafNumberPotential3.DoLeafNumberPotential">
            <summary>Does the leaf number potential.</summary>
        </member>
        <member name="T:Models.PMF.Functions.SubtractFunction">
            <summary>
            From the value of the first child function, subtract the values of the subsequent children functions
            </summary>
        </member>
        <member name="F:Models.PMF.Functions.SubtractFunction.ChildFunctions">
            <summary>The child functions</summary>
        </member>
        <member name="M:Models.PMF.Functions.SubtractFunction.Document(System.Collections.Generic.List{Models.Core.AutoDocumentation.ITag},System.Int32,System.Int32)">
            <summary>Writes documentation for this function by adding to the list of documentation tags.</summary>
            <param name="tags">The list of tags to add to.</param>
            <param name="headingLevel">The level (e.g. H2) of the headings.</param>
            <param name="indent">The level of indentation 1, 2, 3 etc.</param>
        </member>
        <member name="P:Models.PMF.Functions.SubtractFunction.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
        </member>
        <member name="T:Models.PMF.Functions.SigmoidFunction">
            <summary>
            Takes the value of the child as the x value and returns the y value from a sigmoid of the form y = Xmax * 1/1+exp(-(x-Xo)/b)
            </summary>
        </member>
        <member name="M:Models.PMF.Functions.SigmoidFunction.#ctor">
            <summary>constructor</summary>
        </member>
        <member name="F:Models.PMF.Functions.SigmoidFunction.ChildFunctions">
            <summary>The child functions</summary>
        </member>
        <member name="P:Models.PMF.Functions.SigmoidFunction.Xmax">
            <summary>The xmax</summary>
        </member>
        <member name="P:Models.PMF.Functions.SigmoidFunction.Xo">
            <summary>The xo</summary>
        </member>
        <member name="P:Models.PMF.Functions.SigmoidFunction.b">
            <summary>The b</summary>
        </member>
        <member name="P:Models.PMF.Functions.SigmoidFunction.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
            <exception cref="T:System.Exception">Sigmoid function must have only one argument</exception>
        </member>
        <member name="T:Models.PMF.Functions.MaximumFunction">
            <summary>Maximize the values of the children of this node</summary>
            \pre All children have to contain a public function "Value"
            \retval Maximum value of all children of this node. Return -999999999 if no child.
        </member>
        <member name="F:Models.PMF.Functions.MaximumFunction.ChildFunctions">
            <summary>The child functions</summary>
        </member>
        <member name="P:Models.PMF.Functions.MaximumFunction.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
        </member>
        <member name="T:Models.PMF.Functions.AccumulateFunction">
            <summary>
            A function that accumulates values from child functions
            </summary>
        </member>
        <member name="F:Models.PMF.Functions.AccumulateFunction.AccumulatedValue">
            <summary>The accumulated value</summary>
        </member>
        <member name="F:Models.PMF.Functions.AccumulateFunction.ChildFunctions">
            <summary>The child functions</summary>
        </member>
        <member name="F:Models.PMF.Functions.AccumulateFunction.Phenology">
            <summary>The phenology</summary>
        </member>
        <member name="F:Models.PMF.Functions.AccumulateFunction.FractionRemovedOnCut">
            <summary>The fraction removed on cut</summary>
        </member>
        <member name="M:Models.PMF.Functions.AccumulateFunction.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>Called when [simulation commencing].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Functions.AccumulateFunction.PostPhenology(System.Object,System.EventArgs)">
            <summary>Called by Plant.cs when phenology routines are complete.</summary>
            <param name="sender">Plant.cs</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Models.PMF.Functions.AccumulateFunction.OnCut(System.Object,System.EventArgs)">
            <summary>Called when [cut].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Functions.AccumulateFunction.OnPlantEnding(System.Object,System.EventArgs)">
            <summary>Called when [EndCrop].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Models.PMF.Functions.AccumulateFunction.StartStageName">
            <summary>The start stage name</summary>
        </member>
        <member name="P:Models.PMF.Functions.AccumulateFunction.EndStageName">
            <summary>The end stage name</summary>
        </member>
        <member name="P:Models.PMF.Functions.AccumulateFunction.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
        </member>
        <member name="T:Models.Soils.Arbitrator.SoilState">
            <summary>
            Encapsulates the state of water and N in multiple zones.
            </summary>
        </member>
        <member name="F:Models.Soils.Arbitrator.SoilState.Parent">
            <summary>The parent model.</summary>
        </member>
        <member name="M:Models.Soils.Arbitrator.SoilState.#ctor(Models.Core.IModel)">
            <summary>Initializes a new instance of the <see cref="T:Models.Soils.Arbitrator.SoilState"/> class.</summary>
            <param name="parent">The parent model.</param>
        </member>
        <member name="M:Models.Soils.Arbitrator.SoilState.Initialise">
            <summary>Initialises this instance.</summary>
        </member>
        <member name="M:Models.Soils.Arbitrator.SoilState.op_Subtraction(Models.Soils.Arbitrator.SoilState,Models.Soils.Arbitrator.Estimate)">
            <summary>Implements the operator -.</summary>
            <param name="state">The soil state.</param>
            <param name="estimate">The estimate to subtract from the soil state.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="P:Models.Soils.Arbitrator.SoilState.Zones">
            <summary>Gets all zones in this soil state.</summary>
        </member>
        <member name="T:Models.Report.ReportColumn">
            <summary>
            A class for looking after a column of output. A column will store a value 
            each time it is told to do so (by calling StoreValue method). This value
            can be a scalar, an array of scalars, a structure, or an array of structures.
            It can handle array sizes changing through a simulation. 
            It "flattens" arrays and structures
            e.g. if the variable is sw_dep and has 3 elements then
                 Names -> sw_dep(1), sw_dep(2), sw_dep(3)
                 Types ->    double,    double,    double
            e.g. if the variable is a struct {double A; double B; double C;}
                 Names -> struct.A, struct.B, struct.C
            </summary>
        </member>
        <member name="F:Models.Report.ReportColumn.fromDate">
            <summary>
            The from field converted to a date.
            </summary>
        </member>
        <member name="F:Models.Report.ReportColumn.fromHasNoYear">
            <summary>
            True when from field has no year specified
            </summary>
        </member>
        <member name="F:Models.Report.ReportColumn.toDate">
            <summary>
            The to field converted as a date
            </summary>
        </member>
        <member name="F:Models.Report.ReportColumn.toHasNoYear">
            <summary>
            The to field has no year specified
            </summary>
        </member>
        <member name="F:Models.Report.ReportColumn.parentModel">
            <summary>
            The parent model. Needed so that we can get values of variables.
            </summary>
        </member>
        <member name="F:Models.Report.ReportColumn.clock">
            <summary>
            Reference to the clock model.
            </summary>
        </member>
        <member name="F:Models.Report.ReportColumn.variableName">
            <summary>
            The full name of the variable we are retrieving from APSIM.
            </summary>
        </member>
        <member name="F:Models.Report.ReportColumn.heading">
            <summary>
            The column heading.
            </summary>
        </member>
        <member name="F:Models.Report.ReportColumn.values">
            <summary>
            The values for each report event (e.g. daily)
            </summary>
        </member>
        <member name="F:Models.Report.ReportColumn.valuesToAggregate">
            <summary>
            The values for each report event (e.g. daily)
            </summary>
        </member>
        <member name="F:Models.Report.ReportColumn.maximumNumberArrayElements">
            <summary>
            For array variables, this will be the number of array elements to write to the data table.
            </summary>
        </member>
        <member name="F:Models.Report.ReportColumn.valueType">
            <summary>
            The data type of this column
            </summary>
        </member>
        <member name="F:Models.Report.ReportColumn.inCaptureWindow">
            <summary>
            True when the simulation is within the capture window for this variable
            </summary>
        </member>
        <member name="F:Models.Report.ReportColumn.aggregationFunction">
            <summary>
            The aggregation function if specified. Null if not specified.
            </summary>
        </member>
        <member name="F:Models.Report.ReportColumn.lastStoreDate">
            <summary>
            The date when an aggregation value was last stored
            </summary>
        </member>
        <member name="F:Models.Report.ReportColumn.reportingFrequencies">
            <summary>
            The report model frequencies
            </summary>
        </member>
        <member name="M:Models.Report.ReportColumn.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],Models.Core.IModel)">
            <summary>
            Constructor for an aggregated column.
            </summary>
            <param name="aggregationFunction">The aggregation function</param>
            <param name="variableName">The name of the APSIM variable to retrieve</param>
            <param name="columnName">The column name to write to the output</param>
            <param name="from">The beginning of the capture window</param>
            <param name="to">The end of the capture window</param>
            <param name="frequenciesFromReport">Reporting frequencies</param>
            <param name="parentModel">The parent model</param>
            <returns>The newly created ReportColumn</returns>
        </member>
        <member name="M:Models.Report.ReportColumn.#ctor(System.String,System.String,System.String[],Models.Core.IModel)">
            <summary>
            Constructor for a plain report variable.
            </summary>
            <param name="variableName">The name of the APSIM variable to retrieve</param>
            <param name="columnName">The column name to write to the output</param>
            <param name="frequenciesFromReport">Reporting frequencies</param>
            <param name="parentModel">The parent model</param>
        </member>
        <member name="M:Models.Report.ReportColumn.Create(System.String,Models.Core.IModel,System.String[])">
            <summary>
            Factory create method. Can throw if invalid descriptor found.
            </summary>
            <remarks>
            A descriptor is passed in that describes what the column represents.
            The syntax of this descriptor is:
            Evaluate TypeOfAggregation of APSIMVariable/Expression [from Event/Date to Event/Date] as OutputLabel [Units]
            -    TypeOfAggregation – Sum, Ave, Min, Max, First, Last, Diff, (others?) (see below)
            -    APSIMVariable/Expression – APSIM output variable or an expression (see below)
            -    Event/Date – optional, an events or dates to begin and end the aggregation 
            -    OutputLabel – the label to use in the output file
            -    Units – optional, the label to use in the output file
            TypeOfAggregation
            -    Sum – arithmetic summation over  the aggregation period
            -    Ave – arithmetic average over  the aggregation period
            -    Min – minimum value during the aggregation period
            -    Max – maximum value during the aggregation period
            -    First – first or earliest value during the aggregation period
            -    Last – last or latest value during the aggregation period
            -    Diff – difference in the value of the variable or expression from the beginning to the end
            -    Others???? Stdev?, sum pos?
            APSIMVariable
            -    Any output variable or single array element (e.g. sw_dep(1)) from any APSIM module
            Expression
            -    Needs lots of explanation so see more below
            Event or Date
            -    Any APSIM event (e.g. ‘sowing’) or date (e.g. ‘31-Dec’, ’15-Jan-2001’)
            -    Events are acted on immediately that they are triggered
            -    A ‘from’ date is assumed to be at the beginning of the day and a ‘to’ date is assumed to be at the end of the day
            -    These are optional.  If omitted then the aggregation is assumed to coincide with the reporting interval
            OutputLabel
            -    The label to use in the output file
            Units
            -    The units (e.g. ‘mm’) to use in the output file
            -    This is optional.  If omitted then the units will appear are ‘()’
            </remarks>
            <param name="descriptor">A column descriptor</param>
            <param name="report">The parent report model</param>
            <param name="frequenciesFromReport">Reporting frequencies</param>
            <returns>The newly created ReportColumn</returns>
        </member>
        <member name="M:Models.Report.ReportColumn.OnSimulationCompleted">
            <summary>
            Simulation is terminating. Perform clean up.
            </summary>
        </member>
        <member name="M:Models.Report.ReportColumn.OnBeginCapture(System.Object,System.EventArgs)">
            <summary>
            The from property is an event name. This is the event handler for the from event.,
            </summary>
            <param name="sender">Event sender</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Models.Report.ReportColumn.OnEndCapture(System.Object,System.EventArgs)">
            <summary>
            The to property is an event name. This is the event handler for the to event.,
            </summary>
            <param name="sender">Event sender</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Models.Report.ReportColumn.OnStartOfDay(System.Object,System.EventArgs)">
            <summary>
            Start of day event handler.
            </summary>
            <param name="sender">Event sender</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Models.Report.ReportColumn.OnEndOfDay(System.Object,System.EventArgs)">
            <summary>
            End of day event handler.
            </summary>
            <param name="sender">Event sender</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Models.Report.ReportColumn.OnReportFrequency(System.Object,System.EventArgs)">
            <summary>
            Event handler for report frequencies
            </summary>
            <param name="sender">Event sender</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Models.Report.ReportColumn.StoreValue">
            <summary>
            Retrieve the current value and store it in our array of values.
            </summary>
        </member>
        <member name="M:Models.Report.ReportColumn.StoreValueForAggregation">
            <summary>
            Retrieve the current value and store it in our aggregation array of values.
            </summary>
        </member>
        <member name="M:Models.Report.ReportColumn.ApplyAggregation">
            <summary>
            Apply the aggregation function if necessary to the list of values we
            have stored.
            </summary>
        </member>
        <member name="M:Models.Report.ReportColumn.AddColumnsToTable(System.Data.DataTable)">
            <summary>
            Add the required columns to the specified data table.
            </summary>
            <param name="table">The data table to add columns to</param>
        </member>
        <member name="M:Models.Report.ReportColumn.AddRowsToTable(System.Data.DataTable)">
            <summary>
            Add the required number of rows to the table.
            </summary>
            <param name="table">The data table to add rows to</param>
        </member>
        <member name="M:Models.Report.ReportColumn.FirstNonBlankValue">
            <summary>
            Go through values and return the first non blank one. 
            </summary>
            <returns>Returns first non blank value or null if all are missing</returns>
        </member>
        <member name="M:Models.Report.ReportColumn.FlattenValue(System.Object,System.String,System.Type)">
            <summary>
            'Flatten' then object passed in, into a list of columns ready to be added
            to a data table.
            </summary>
            <param name="value">The object to be analyzed and flattened</param>
            <param name="name">The name of the object</param>
            <param name="type">Type type of the object</param>
            <returns>The list of values that can be written to a data table</returns>
        </member>
        <member name="M:Models.Report.ReportColumn.GetMaximumNumberArrayElements">
            <summary>
            Calculate the maximum number of array elements.
            </summary>
            <returns>The maximum number of array elements</returns>
        </member>
        <member name="T:Models.Report.ReportColumn.FlattenedValue">
            <summary>
            A structure to hold a name, type and value. Used in the flattening process.
            </summary>
        </member>
        <member name="F:Models.Report.ReportColumn.FlattenedValue.Name">
            <summary>
            The name of a column
            </summary>
        </member>
        <member name="F:Models.Report.ReportColumn.FlattenedValue.Type">
            <summary>
            The type of a column
            </summary>
        </member>
        <member name="F:Models.Report.ReportColumn.FlattenedValue.Value">
            <summary>
            The value of a column
            </summary>
        </member>
        <member name="T:Models.Factorial.FactorValue">
            <summary>
            This class represents a series of paths and the same number of object values.
            Its sole purpose is to apply the object values to the model represented by the paths.
            </summary>
        </member>
        <member name="F:Models.Factorial.FactorValue.paths">
            <summary>
            The paths to the models.
            </summary>
        </member>
        <member name="F:Models.Factorial.FactorValue.values">
            <summary>
            The values for each path.
            </summary>
        </member>
        <member name="M:Models.Factorial.FactorValue.#ctor(System.String,System.String,System.Object)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Models.Factorial.FactorValue.#ctor(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object})">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Models.Factorial.FactorValue.ApplyToSimulation(Models.Core.Simulation)">
            <summary>
            Apply this FactorValue to the specified simulation
            </summary>
        </member>
        <member name="M:Models.Factorial.FactorValue.ApplyStringAsValue(Models.Core.Simulation,System.String,System.String)">
            <summary>
            Use the name of this object as a value to insert into the specified 'newSimulation'
            </summary>
        </member>
        <member name="M:Models.Factorial.FactorValue.ApplyModelReplacement(Models.Core.Simulation,System.String,Models.Core.IModel)">
            <summary>
            Replace the object specified by 'path' in 'newSimulation' with the specified 'value'
            </summary>
        </member>
        <member name="P:Models.Factorial.FactorValue.Name">
            <summary>
            Name of factor value
            </summary>
        </member>
        <member name="T:Models.Core.BoundsAttribute">
            <summary>
            Specifies the lower and upper bounds for the related field or property.
            </summary>
        </member>
        <member name="P:Models.Core.BoundsAttribute.Lower">
            <summary>
            Gets or sets the lower bound
            </summary>
        </member>
        <member name="P:Models.Core.BoundsAttribute.Upper">
            <summary>
            Gets or sets the upper bound
            </summary>
        </member>
        <member name="T:Models.ArbitratorGod.ArbitratorGod">
            <summary>
            Vals u-beaut (VS - please note that DH wrote that) soil arbitrator
            
            TODO - convert to god-level
            TODO - need to figure out how to get multi-zone root systems into this - structure there to do the uptake but note comments in code related to needs
            TODO - alternate uptake methods
            TODO - currently is implicitly 1 ha per zone - need to convert into proper consideration of area
            </summary>
        </member>
        <member name="F:Models.ArbitratorGod.ArbitratorGod.demandWater">
            <summary>
            Soil water demand (mm) from each of the plants being arbitrated
            </summary>
        </member>
        <member name="F:Models.ArbitratorGod.ArbitratorGod.demandNitrogen">
            <summary>
            Nitrogen demand (mm) from each of the plants being arbitrated
            </summary>
        </member>
        <member name="F:Models.ArbitratorGod.ArbitratorGod.zones">
            <summary>
            The number of zones under consideration
            </summary>
        </member>
        <member name="F:Models.ArbitratorGod.ArbitratorGod.bounds">
            <summary>
            The number of lower bounds of uptake under consideration.  
            As the uptake method implemented for nitrogen is the second order method this is currently only caluclated for water and comes from the crop lower limit
            </summary>
        </member>
        <member name="F:Models.ArbitratorGod.ArbitratorGod.forms">
            <summary>
            The number of pools that can saatify the demand.  Not relevant for water.  For nitrogen is nitrate and ammonium.
            </summary>
        </member>
        <member name="F:Models.ArbitratorGod.ArbitratorGod.rootExploration">
            <summary>
            rootExploration is 3D array [plant, layer, zone] and holds the relative presence (0-1) of roots in each of the physical areas (layer, zone) for each plant
            It is populated from RootExplorationByLayer (0-1) which considers a single zone only.
            </summary>
        </member>
        <member name="F:Models.ArbitratorGod.ArbitratorGod.lowerBound">
            <summary>
            lowerBound is a holds the values of the lowest amount of water that can be extracted  from each layer, zone and bound.
            Current it contains a dummy dimension for plant - which can be removed aat any time
            </summary>
        </member>
        <member name="F:Models.ArbitratorGod.ArbitratorGod.uptakePreference">
            <summary>
            uptakePreference [plant, layer, zone] and holds the relative preference (0-1) for uptake from different physical areas (layer, zone) for each plant
            It can be used to create a greater preference for uptake near the soil surface or from zones nearer the main stem if appropriate
            It is populated from UptakePreferenceByLayer (0-1) which currently considers a single zone only.
            </summary>
        </member>
        <member name="F:Models.ArbitratorGod.ArbitratorGod.resource">
            <summary>
            resource (mm or kgN/ha) is the amount of water or nitrogen held in each layer and zone, bound and form for each plant
            the dimensions are [plant, layer, zone, bound, form]
            </summary>
        </member>
        <member name="F:Models.ArbitratorGod.ArbitratorGod.extractable">
            <summary>
            extractable (mm or kgN/ha) is the amount of water or nitrogen in each layer and zone, bound and form for each plant that would be 
            available to the plant if it were the only plant in the simulation.  It is not limited by the plant's demand for the resource.
            the dimensions are [plant, layer, zone, bound, form]
            </summary>
        </member>
        <member name="F:Models.ArbitratorGod.ArbitratorGod.demand">
            <summary>
            demand (mm or kgN/ha) is the amount of water or nitrogen in each layer and zone, bound and form for each plant that would be 
            extracted by the plant if it were the only plant in the simulation.  It is extractable constrained by demandWater or demandNitrogen
            the dimensions are [plant, layer, zone, bound, form]
            </summary>
        </member>
        <member name="F:Models.ArbitratorGod.ArbitratorGod.demandForResource">
            <summary>
            demandForResource (mm or kgN/ha) is the amount of water or nitrogen in each layer and zone, bound and form that is demanded across all plants 
            the dimensions are [not_used, layer, zone, bound, form]
            </summary>
        </member>
        <member name="F:Models.ArbitratorGod.ArbitratorGod.totalForResource">
            <summary>
            totalForResource (mm or kgN/ha) is the sum of resource in each layer and zone, bound and form that is demanded across all plants 
            the dimensions are [not_used, layer, zone, bound, form]
            </summary>
        </member>
        <member name="F:Models.ArbitratorGod.ArbitratorGod.uptake">
            <summary>
            uptake (mm or kgN/ha) is the amount of water or nitrogen taken up in each layer and zone, bound and form for each plant 
            the dimensions are [plant, layer, zone, bound, form]
            </summary>
        </member>
        <member name="F:Models.ArbitratorGod.ArbitratorGod.extractableByPlant">
            <summary>
            extractableByPlant (mm or kgN/ha) is the sum of water or nitrogen taken in extractable for each plant 
            the dimensions are [plant]
            </summary>
        </member>
        <member name="F:Models.ArbitratorGod.ArbitratorGod.z">
            <summary>
            used as a counter for zones
            </summary>
        </member>
        <member name="M:Models.ArbitratorGod.ArbitratorGod.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>
            Runs at the start of the simulation, here only reads the aribtration method to be used
            </summary>
        </member>
        <member name="M:Models.ArbitratorGod.ArbitratorGod.OnDailyInitialisation(System.Object,System.EventArgs)">
            <summary>
            Zero variables at the start of each day
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Models.ArbitratorGod.ArbitratorGod.OnDoWaterArbitration(System.Object,System.EventArgs)">
            <summary>
            Do the arbitration between the plants for water
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Models.ArbitratorGod.ArbitratorGod.OnDoNutrientArbitration(System.Object,System.EventArgs)">
            <summary>
            Do the arbitration between the plants for nutrients
            This is only set up for nitrogen at the moment but is designed to be extended to other nutrients 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Models.ArbitratorGod.ArbitratorGod.OnDoEnergyArbitration(System.Object,System.EventArgs)">
            <summary>
            Calculate the results of the competition between the plants for light and calculate the soil water demadn by the plants and or soil water evaporation
            Not currently implemented
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Models.ArbitratorGod.ArbitratorGod.ZeroDailyVariables">
            <summary>
            Zero the values at the start of each day
            </summary>
        </member>
        <member name="M:Models.ArbitratorGod.ArbitratorGod.ZeroCalculationVariables">
            <summary>
            Zero the values that are needed for each set of arbitration calculations
            </summary>
        </member>
        <member name="M:Models.ArbitratorGod.ArbitratorGod.CalculateLowerBounds(System.String)">
            <summary>
            Calculate the number of lower bounds that exist in each layer-zone combination and assign value to those bounds
            This does not need to be done each day unless LL becomes dynamic
            Leave here for now but could be moved either to OnSimulationCommencing or test for bounds and only do when null
            </summary>
            <param name="resourceToArbitrate"></param>
        </member>
        <member name="M:Models.ArbitratorGod.ArbitratorGod.CalculateResource(System.String)">
            <summary>
            Calculate the amount of the water or nitrogen that is assessible by each of the plants by layer-zone and bound-form
            </summary>
            <param name="resourceToArbitrate"></param>
        </member>
        <member name="M:Models.ArbitratorGod.ArbitratorGod.CalculateExtractable(System.String)">
            <summary>
            Calculate the amount that the plant could potentially exctract if it was the only plant in the simulation and demand > resource
            </summary>
            <param name="resourceToArbitrate"></param>
        </member>
        <member name="M:Models.ArbitratorGod.ArbitratorGod.CalculateDemand(System.String)">
            <summary>
            Distribute the satisfyable (if this was a solo plant) across layers, zones, bounds and forms
            It was useful to seperate Extractable from Demand during development but could be amalgamated easily
            </summary>
            <param name="resourceToArbitrate"></param>
        </member>
        <member name="M:Models.ArbitratorGod.ArbitratorGod.CalculateUptake(System.String)">
            <summary>
            Calculate the uptake for each plant across the layers, zones, bounds, and forms
            </summary>
            <param name="resourceToArbitrate"></param>
        </member>
        <member name="M:Models.ArbitratorGod.ArbitratorGod.SetWaterUptake(System.String)">
            <summary>
            Send the water uptake arrays back to the plants and send the change in water storage back to the soil
            </summary>
            <param name="resourceToArbitrate"></param>
        </member>
        <member name="M:Models.ArbitratorGod.ArbitratorGod.SetNitrogenUptake(System.String)">
            <summary>
            Send the nitrogen uptake arrays back to the plants and send the change in nitrogen back to the soil
            </summary>
            <param name="resourceToArbitrate"></param>
        </member>
        <member name="P:Models.ArbitratorGod.ArbitratorGod.ArbitrationMethod">
            <summary>
            This will hold a range of arbitration methods for testing - will eventually settle on one standard method
            </summary>
        </member>
        <member name="P:Models.ArbitratorGod.ArbitratorGod.NutrientUptakeMethod">
            <summary>Gets or sets the nutrient uptake method.</summary>
            <value>The nutrient uptake method.</value>
        </member>
        <member name="E:Models.ArbitratorGod.ArbitratorGod.NitrogenChanged">
            <summary>
            To publish the nitrogen change event
            </summary>
        </member>
        <member name="T:Models.ArbitratorGod.ArbitratorGod.NitrogenChangedDelegate">
            <summary>
            The NitrogenChangedDelegate is for the Arbitrator to set the change in nitrate and ammonium in SoilNitrogen
            Eventually this should be changes to a set rather than an event
            </summary>
            <param name="Data"></param>
        </member>
        <member name="T:Models.Zones.CircularZone">
            <summary>A circular zone.</summary>
        </member>
        <member name="P:Models.Zones.CircularZone.Radius">
            <summary>Radius of the zone.</summary>
            <value>The radius.</value>
        </member>
        <member name="P:Models.Zones.CircularZone.Width">
            <summary>Width of the zone.</summary>
            <value>The width.</value>
        </member>
        <member name="P:Models.Zones.CircularZone.Distance">
            <summary>
            Returns the distance from edge of system
            </summary>
        </member>
        <member name="P:Models.Zones.CircularZone.Area">
            <summary>
            Return the area of the zone.
            </summary>
        </member>
        <member name="T:Models.Graph.Axis">
            <summary>
            A class representing an axis on a graph.
            </summary>
        </member>
        <member name="M:Models.Graph.Axis.#ctor">
            <summary>
            Constructor for axis class.
            </summary>
        </member>
        <member name="P:Models.Graph.Axis.Type">
            <summary>
            Gets or sets the 'type' of axis - left, top, right or bottom.
            </summary>
        </member>
        <member name="P:Models.Graph.Axis.Title">
            <summary>
            Gets or sets the title of the axis.
            </summary>
        </member>
        <member name="P:Models.Graph.Axis.Inverted">
            <summary>
            Gets or sets a value indicating whether the axis is inverted?
            </summary>
        </member>
        <member name="P:Models.Graph.Axis.Minimum">
            <summary>
            Gets or sets the minimum axis scale
            </summary>
        </member>
        <member name="P:Models.Graph.Axis.Maximum">
            <summary>
            Gets or sets the maximum axis scale
            </summary>
        </member>
        <member name="P:Models.Graph.Axis.Interval">
            <summary>
            Gets or sets the interval axis scale
            </summary>
        </member>
        <member name="T:Models.Graph.Axis.AxisType">
            <summary>
            An enumeration for different axis orientations
            </summary>
        </member>
        <member name="F:Models.Graph.Axis.AxisType.Left">
            <summary>
            Left orientation
            </summary>
        </member>
        <member name="F:Models.Graph.Axis.AxisType.Top">
            <summary>
            Top orientation
            </summary>
        </member>
        <member name="F:Models.Graph.Axis.AxisType.Right">
            <summary>
            Right orientation
            </summary>
        </member>
        <member name="F:Models.Graph.Axis.AxisType.Bottom">
            <summary>
            Bottom orientation
            </summary>
        </member>
        <member name="T:simpleSoilTemp">
            <summary>
            Calculates the average soil temperature at the centre of each layer, based on the soil temperature model of EPIC (Williams et al 1984)
            This code was separated from old SoilN - tidied up but not updated (RCichota, sep/2012)
            </summary>
        </member>
        <member name="M:simpleSoilTemp.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initialise method for computing the temperature for each layer in the soil
            </summary>
            <param name="latitude">latitude of present location</param>
            <param name="tav">annual average of daily temperature</param>
            <param name="amp">annual amplitude of daily temperature</param>
            <param name="mint">Today's minimum temperature</param>
            <param name="maxt">Today's maximum temperature</param>
        </member>
        <member name="M:simpleSoilTemp.clear">
            <summary>Clears this instance.</summary>
        </member>
        <member name="M:simpleSoilTemp.SoilTemperature(System.DateTime,System.Double,System.Double,System.Double,System.Double,System.Double[],System.Double[],System.Double[],System.Double[])">
            <summary>
            Calculate today's temperature for each layer in the soil
            </summary>
            <param name="today">Today's date</param>
            <param name="mint">Today's minimum temperature</param>
            <param name="maxt">Today's maximum temperature</param>
            <param name="radn">Today's solar radiation</param>
            <param name="salb">Today's soil surface albedo</param>
            <param name="dlayer">Soil layers</param>
            <param name="bd">Soil bulk density</param>
            <param name="ll15_dep">Soil water amount at lower limit (mm)</param>
            <param name="sw_dep">Today's soil water amount (mm)</param>
            <returns></returns>
        </member>
        <member name="T:Models.PMF.Phen.VernalisationCW">
            <summary>
             The vernalization and photoperiod effects from CERES wheat.
            </summary>
             \pre A \ref Models.PMF.Phen.Phenology "Phenology" model has to exist.
             \pre A \ref Models.PMF.Functions.PhotoperiodFunction "PhotoperiodFunction" 
                 model has to exist to calculate the day length.
             \pre A \ref Models.WeatherFile "WeatherFile" model has to exist to 
             retrieve the daily minimum and maximum temperature.
             \param VernSens The vernalization sensitivity
             \param PhotopSens The photoperiod sensitivity
             \param StartStageForEffects The start stage to calculate the vernalization and photoperiod effects
             \param EndStageForEffects The end stage to calculate the vernalization and photoperiod effects
             \param StartStageForCumulativeVD The start stage to calculate the cumulative vernalization
             \param EndStageForCumulativeVD The end stage to calculate the cumulative vernalization
             \retval VernEff The vernalization effects (from 0 to 1)
             \retval PhotopEff The photoperiod effects (from 0 to 1)
            <remarks>
             Vernalization
             ------------------------
             In CERES-Wheat \cite jones_dssat_2003, vernalisation is simulated from daily average crown temperature (\f$T_{c}\f$), daily maximum (\f$T_{max}\f$) and 
             minimum (\f$T_{min}\f$) temperatures using the original CERES approach.
             \f[
             \Delta V=\min(1.4-0.0778T_{c},\:0.5+13.44\frac{T_{c}}{(T_{max}-T_{min}+3)^{2}})\quad\text{when, }T_{max}&lt;30\,{}^{\circ}\text{C}\:\text{and}\, T_{min}&lt;15\,{}^{\circ}\text{C}
             \f]
             Devernalisation can occur if daily \f$T_{max}\f$ is above 30 \f$^{\circ}\text{C}\f$ and the total vernalisation (\f$V\f$) is less than 10 .
             \f[
             \Delta V_{d}=\min(0.5(T_{max}-30),\: V)\quad\text{when, }T_{max}&gt;30\,{}^{\circ}\text{C}\;\text{and}\; V&lt;10
             \f]
             The total vernalisation (\f$V\f$) is calculated by summing daily vernalisation and devernalisation from \p StartStageForEffects to \p EndStageForEffects. 
             \f[
             V=\sum(\Delta V-\Delta V_{d})
             \f]
             However, the vernalisation factor (\f$f_{v}\f$) is calculated just from \p StartStageForCumulativeVD to \p EndStageForCumulativeVD.
             \f[
             f_{V}=1-(0.0054545R_{V}+0.0003)\times(50-V)
             \f]
             Photoperiod
             ------------------------
             Photoperiod is calculated from day of year and latitude using standard astronomical equations accounting for civil twilight 
             using the parameter \p twilight in \ref Models.PMF.Functions.PhotoperiodFunction. In APSIM, 
             the photoperiod affects phenology between \p StartStageForEffects and \p EndStageForEffects. During this period, thermal time 
             is affected by a photoperiod factor (\f$f_{D}\f$) that is calculated by
             \f[
             f_{D}=1-0.002R_{p}(20-L_{P})^{2}
             \f]
             where \f$L_{P}\f$ is the day length (h) from \ref Models.PMF.Functions.PhotoperiodFunction.
            </remarks>
        </member>
        <member name="F:Models.PMF.Phen.VernalisationCW.Snow">
            <summary>The snow</summary>
        </member>
        <member name="F:Models.PMF.Phen.VernalisationCW.Phenology">
            <summary>The phenology</summary>
        </member>
        <member name="F:Models.PMF.Phen.VernalisationCW.Photoperiod">
            <summary>The photoperiod</summary>
        </member>
        <member name="F:Models.PMF.Phen.VernalisationCW.Weather">
            <summary>The weather</summary>
        </member>
        <member name="F:Models.PMF.Phen.VernalisationCW.Maxt">
            <summary>The maxt</summary>
        </member>
        <member name="F:Models.PMF.Phen.VernalisationCW.Mint">
            <summary>The mint</summary>
        </member>
        <member name="F:Models.PMF.Phen.VernalisationCW.CumulativeVD">
            <summary>The cumulative vd</summary>
        </member>
        <member name="M:Models.PMF.Phen.VernalisationCW.OnDoDailyInitialisation(System.Object,System.EventArgs)">
            <summary>Trap the DoDailyInitialisation event.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Phen.VernalisationCW.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>Initialise everything</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Phen.VernalisationCW.Vernalisation(System.Double,System.Double)">
            <summary>Do our vernalisation</summary>
            <param name="Maxt">The maxt.</param>
            <param name="Mint">The mint.</param>
        </member>
        <member name="M:Models.PMF.Phen.VernalisationCW.VernalisationDays(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Calculate daily vernalisation and accumulate to g_cumvd</summary>
            <param name="MaxT">The maximum t.</param>
            <param name="MinT">The minimum t.</param>
            <param name="CrownTemperature">The crown temperature.</param>
            <param name="Snow">The snow.</param>
            <param name="CumulativeVD">The cumulative vd.</param>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.Phen.VernalisationCW.VernalisationEffect(System.Double,System.Double,System.Double,System.Double)">
            <summary>Vernalisation factor</summary>
            <param name="vern_sens">The vern_sens.</param>
            <param name="CumulativeVD">The cumulative vd.</param>
            <param name="DeltaCumulativeVD">The delta cumulative vd.</param>
            <param name="MaxVernalisationRequirement">The maximum vernalisation requirement.</param>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.Phen.VernalisationCW.PhotoperiodEffect(System.Double,System.Double)">
            <summary>Photoperiod factor</summary>
            <param name="Photoperiod">The photoperiod.</param>
            <param name="photop_sens">The photop_sens.</param>
            <returns></returns>
        </member>
        <member name="P:Models.PMF.Phen.VernalisationCW.PhotopEff">
            <summary>Gets or sets the photop eff.</summary>
            <value>The photop eff.</value>
        </member>
        <member name="P:Models.PMF.Phen.VernalisationCW.VernEff">
            <summary>Gets or sets the vern eff.</summary>
            <value>The vern eff.</value>
        </member>
        <member name="P:Models.PMF.Phen.VernalisationCW.VernSens">
            <summary>Gets or sets the vern sens.</summary>
            <value>The vern sens.</value>
        </member>
        <member name="P:Models.PMF.Phen.VernalisationCW.PhotopSens">
            <summary>Gets or sets the photop sens.</summary>
            <value>The photop sens.</value>
        </member>
        <member name="P:Models.PMF.Phen.VernalisationCW.StartStageForEffects">
            <summary>The start stage for effects</summary>
        </member>
        <member name="P:Models.PMF.Phen.VernalisationCW.EndStageForEffects">
            <summary>The end stage for effects</summary>
        </member>
        <member name="P:Models.PMF.Phen.VernalisationCW.StartStageForCumulativeVD">
            <summary>The start stage for cumulative vd</summary>
        </member>
        <member name="P:Models.PMF.Phen.VernalisationCW.EndStageForCumulativeVD">
            <summary>The end stage for cumulative vd</summary>
        </member>
        <member name="P:Models.PMF.Phen.VernalisationCW.CrownTemperature">
            <summary>Crown temperature from nwheat</summary>
            <value>The crown temperature.</value>
        </member>
        <member name="T:Models.PMF.Organs.SimpleLeaf">
            <summary>
            A simple leaf organ
            </summary>
            \retval LAI Leaf area index for green leaf (\f$\text{LAI}_{g}\f$, \f$m^2 m^{-2}\f$)
            \retval LAIDead Leaf area index for dead leaf  (\f$\text{LAI}_{d}\f$, \f$m^2 m^{-2}\f$)
            \retval LAITotal Total LAI including live and dead parts (\f$m^2 m^{-2}\f$)
                \f[
            /// LAI = \text{LAI}_{g} + \text{LAI}_{d}
                \f]
            \retval CoverGreen Cover for green leaf (\f$C_g\f$, unitless). The value of CoverFunction is returned 
                if "CoverFunction" exists in the model. \f$C_g\f$ is calculated according to
                extinction coefficient of green leaf (\f$k_{g}\f$) 
                if "ExtinctionCoefficientFunction" exists in the model.
                \f[
            /// C_g = 1-\exp(-k_{g} * \text{LAI}_{g})
                \f]
                where, \f$k\f$ is the extinction coefficient which calculates by "ExtinctionCoefficientFunction"
            \retval CoverDead Cover for dead leaf (\f$C_d\f$, unitless). \f$C_d\f$ is calculated according to 
                extinction coefficient of dead leaf (\f$k_{d}\f$). 
                \f[
            /// C_d = 1-\exp(-k_{d} * \text{LAI}_{d})
                \f]
            <remarks>
            </remarks>
        </member>
        <member name="F:Models.PMF.Organs.SimpleLeaf.Plant">
            <summary>The plant</summary>
        </member>
        <member name="F:Models.PMF.Organs.SimpleLeaf.Summary">
            <summary>The summary</summary>
        </member>
        <member name="F:Models.PMF.Organs.SimpleLeaf.FRGRFunction">
            <summary>The FRGR function</summary>
        </member>
        <member name="F:Models.PMF.Organs.SimpleLeaf.PotentialBiomass">
            <summary>The potential biomass</summary>
        </member>
        <member name="F:Models.PMF.Organs.SimpleLeaf.DMDemandFunction">
            <summary>The dm demand function</summary>
        </member>
        <member name="F:Models.PMF.Organs.SimpleLeaf.CoverFunction">
            <summary>The cover function</summary>
        </member>
        <member name="F:Models.PMF.Organs.SimpleLeaf.NitrogenDemandSwitch">
            <summary>The nitrogen demand switch</summary>
        </member>
        <member name="F:Models.PMF.Organs.SimpleLeaf.NConc">
            <summary>The n conc</summary>
        </member>
        <member name="F:Models.PMF.Organs.SimpleLeaf.LAIFunction">
            <summary>The lai function</summary>
        </member>
        <member name="F:Models.PMF.Organs.SimpleLeaf.ExtinctionCoefficientFunction">
            <summary>The extinction coefficient function</summary>
        </member>
        <member name="F:Models.PMF.Organs.SimpleLeaf.Photosynthesis">
            <summary>The photosynthesis</summary>
        </member>
        <member name="F:Models.PMF.Organs.SimpleLeaf.HeightFunction">
            <summary>The height function</summary>
        </member>
        <member name="F:Models.PMF.Organs.SimpleLeaf.LaiDeadFunction">
            <summary>The lai dead function</summary>
        </member>
        <member name="F:Models.PMF.Organs.SimpleLeaf.StructuralFraction">
            <summary>The structural fraction</summary>
        </member>
        <member name="F:Models.PMF.Organs.SimpleLeaf._WaterAllocation">
            <summary>The _ water allocation</summary>
        </member>
        <member name="F:Models.PMF.Organs.SimpleLeaf.BiomassYesterday">
            <summary>The biomass yesterday</summary>
        </member>
        <member name="F:Models.PMF.Organs.SimpleLeaf._StructuralFraction">
            <summary>The _ structural fraction</summary>
        </member>
        <member name="M:Models.PMF.Organs.SimpleLeaf.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>Called when [simulation commencing].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Organs.SimpleLeaf.OnPlantEnding(System.Object,System.EventArgs)">
            <summary>Called when crop is ending</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Organs.SimpleLeaf.OnDoDailyInitialisation(System.Object,System.EventArgs)">
            <summary>Called when [do daily initialisation].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Organs.SimpleLeaf.OnCutting(System.Object,System.EventArgs)">
            <summary>Called when crop is being cut.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Organs.SimpleLeaf.OnPlantSowing(System.Object,Models.PMF.SowPlant2Type)">
            <summary>Called when crop is ending</summary>
            <param name="sender">The sender.</param>
            <param name="data">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Organs.SimpleLeaf.Clear">
            <summary>Clears this instance.</summary>
        </member>
        <member name="M:Models.PMF.Organs.SimpleLeaf.OnDoPotentialPlantGrowth(System.Object,System.EventArgs)">
            <summary>Event from sequencer telling us to do our potential growth.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Models.PMF.Organs.SimpleLeaf.CanopyType">
            <summary>Gets the canopy. Should return null if no canopy present.</summary>
        </member>
        <member name="P:Models.PMF.Organs.SimpleLeaf.LAI">
            <summary>Gets the LAI</summary>
        </member>
        <member name="P:Models.PMF.Organs.SimpleLeaf.LAITotal">
            <summary>Gets the LAI live + dead (m^2/m^2)</summary>
        </member>
        <member name="P:Models.PMF.Organs.SimpleLeaf.CoverGreen">
            <summary>Gets the cover green.</summary>
        </member>
        <member name="P:Models.PMF.Organs.SimpleLeaf.CoverTotal">
            <summary>Gets the cover total.</summary>
        </member>
        <member name="P:Models.PMF.Organs.SimpleLeaf.Height">
            <summary>Gets or sets the height.</summary>
        </member>
        <member name="P:Models.PMF.Organs.SimpleLeaf.Depth">
            <summary>Gets the depth.</summary>
        </member>
        <member name="P:Models.PMF.Organs.SimpleLeaf.FRGR">
            <summary>Gets or sets the FRGR.</summary>
        </member>
        <member name="P:Models.PMF.Organs.SimpleLeaf.PotentialEP">
            <summary>Sets the potential evapotranspiration. Set by MICROCLIMATE.</summary>
        </member>
        <member name="P:Models.PMF.Organs.SimpleLeaf.LightProfile">
            <summary>Sets the light profile. Set by MICROCLIMATE.</summary>
        </member>
        <member name="P:Models.PMF.Organs.SimpleLeaf.EP">
            <summary>Gets or sets the ep.</summary>
            <value>The ep.</value>
        </member>
        <member name="P:Models.PMF.Organs.SimpleLeaf.K">
            <summary>Gets or sets the k.</summary>
            <value>The k.</value>
        </member>
        <member name="P:Models.PMF.Organs.SimpleLeaf.KDead">
            <summary>Gets or sets the k dead.</summary>
            <value>The k dead.</value>
        </member>
        <member name="P:Models.PMF.Organs.SimpleLeaf.DeltaBiomass">
            <summary>Gets or sets the delta biomass.</summary>
            <value>The delta biomass.</value>
        </member>
        <member name="P:Models.PMF.Organs.SimpleLeaf.WaterDemand">
            <summary>Gets or sets the water demand.</summary>
            <value>The water demand.</value>
        </member>
        <member name="P:Models.PMF.Organs.SimpleLeaf.Transpiration">
            <summary>Gets the transpiration.</summary>
            <value>The transpiration.</value>
        </member>
        <member name="P:Models.PMF.Organs.SimpleLeaf.Fw">
            <summary>Gets the fw.</summary>
            <value>The fw.</value>
        </member>
        <member name="P:Models.PMF.Organs.SimpleLeaf.Fn">
            <summary>Gets the function.</summary>
            <value>The function.</value>
        </member>
        <member name="P:Models.PMF.Organs.SimpleLeaf.LAIDead">
            <summary>Gets or sets the lai dead.</summary>
            <value>The lai dead.</value>
        </member>
        <member name="P:Models.PMF.Organs.SimpleLeaf.CoverDead">
            <summary>Gets the cover dead.</summary>
            <value>The cover dead.</value>
        </member>
        <member name="P:Models.PMF.Organs.SimpleLeaf.RadIntTot">
            <summary>Gets the RAD int tot.</summary>
            <value>The RAD int tot.</value>
        </member>
        <member name="P:Models.PMF.Organs.SimpleLeaf.WaterAllocation">
            <summary>Gets or sets the water allocation.</summary>
            <value>The water allocation.</value>
        </member>
        <member name="P:Models.PMF.Organs.SimpleLeaf.DMDemand">
            <summary>Gets or sets the dm demand.</summary>
            <value>The dm demand.</value>
        </member>
        <member name="P:Models.PMF.Organs.SimpleLeaf.DMSupply">
            <summary>Gets or sets the dm supply.</summary>
            <value>The dm supply.</value>
        </member>
        <member name="P:Models.PMF.Organs.SimpleLeaf.DMAllocation">
            <summary>Sets the dm allocation.</summary>
            <value>The dm allocation.</value>
        </member>
        <member name="P:Models.PMF.Organs.SimpleLeaf.NDemand">
            <summary>Gets or sets the n demand.</summary>
            <value>The n demand.</value>
        </member>
        <member name="P:Models.PMF.Organs.SimpleLeaf.NAllocation">
            <summary>Sets the n allocation.</summary>
            <value>The n allocation.</value>
            <exception cref="T:System.Exception">
            Invalid allocation of N
            or
            N allocated to Leaf left over after allocation
            or
            UnKnown Leaf N allocation problem
            </exception>
        </member>
        <member name="P:Models.PMF.Organs.SimpleLeaf.MinNconc">
            <summary>Gets or sets the minimum nconc.</summary>
            <value>The minimum nconc.</value>
        </member>
        <member name="T:Models.PMF.OldPlant.Pod">
            <summary>
            The pod organ for plant15
            </summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Pod.Environment">
            <summary>The environment</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Pod.Grain">
            <summary>The grain</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Pod.TE">
            <summary>The te</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Pod.FractionGrainInPod">
            <summary>The fraction grain in pod</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Pod.NConcentrationCritical">
            <summary>The n concentration critical</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Pod.NConcentrationMinimum">
            <summary>The n concentration minimum</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Pod.NConcentrationMaximum">
            <summary>The n concentration maximum</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Pod.GrowthStructuralFractionStage">
            <summary>The growth structural fraction stage</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Pod.DMSenescenceFraction">
            <summary>The dm senescence fraction</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Pod.Plant">
            <summary>The plant</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Pod.TotalLive">
            <summary>The total live</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Pod.Population">
            <summary>The population</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Pod.dlt_dm_pot_rue">
            <summary>The dlt_dm_pot_rue</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Pod.dlt_n_senesced_retrans">
            <summary>The dlt_n_senesced_retrans</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Pod.dlt_n_senesced_trans">
            <summary>The dlt_n_senesced_trans</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Pod._DMGreenDemand">
            <summary>The _ dm green demand</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Pod._NDemand">
            <summary>The _ n demand</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Pod._SoilNDemand">
            <summary>The _ soil n demand</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Pod.NMax">
            <summary>The n maximum</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Pod.sw_demand_te">
            <summary>The sw_demand_te</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Pod.sw_demand">
            <summary>The sw_demand</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Pod.n_conc_crit">
            <summary>The n_conc_crit</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Pod.n_conc_max">
            <summary>The n_conc_max</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Pod.n_conc_min">
            <summary>The n_conc_min</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Pod.transpEff">
            <summary>The transp eff</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Pod.DoSWDemand(System.Double)">
            <summary>Does the sw demand.</summary>
            <param name="Supply">The supply.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Pod.DoSWUptake(System.Double)">
            <summary>Does the sw uptake.</summary>
            <param name="SWDemand">The sw demand.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Pod.DoDMDemand(System.Double)">
            <summary>Does the dm demand.</summary>
            <param name="DMSupply">The dm supply.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Pod.DoDmRetranslocate(System.Double,System.Double)">
            <summary>Does the dm retranslocate.</summary>
            <param name="DMAvail">The dm avail.</param>
            <param name="DMDemandDifferentialTotal">The dm demand differential total.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Pod.GiveDmGreen(System.Double)">
            <summary>Gives the dm green.</summary>
            <param name="Delta">The delta.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Pod.DoSenescence">
            <summary>Does the senescence.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Pod.DoDetachment">
            <summary>Does the detachment.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Pod.RemoveBiomass">
            <summary>Removes the biomass.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Pod.DoNDemand(System.Boolean)">
            <summary>Does the n demand.</summary>
            <param name="IncludeRetransloation">if set to <c>true</c> [include retransloation].</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Pod.DoNDemand1Pot(System.Double)">
            <summary>Does the n demand1 pot.</summary>
            <param name="dltDmPotRue">The DLT dm pot rue.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Pod.DoSoilNDemand">
            <summary>Does the soil n demand.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Pod.DoNSupply">
            <summary>Does the n supply.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Pod.DoNRetranslocate(System.Double,System.Double)">
            <summary>Does the n retranslocate.</summary>
            <param name="NSupply">The n supply.</param>
            <param name="GrainNDemand">The grain n demand.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Pod.DoNSenescence">
            <summary>Does the n senescence.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Pod.DoNSenescedRetranslocation(System.Double,System.Double)">
            <summary>Does the n senesced retranslocation.</summary>
            <param name="navail">The navail.</param>
            <param name="n_demand_tot">The n_demand_tot.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Pod.DoNPartition(System.Double)">
            <summary>Does the n partition.</summary>
            <param name="GrowthN">The growth n.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Pod.DoNFixRetranslocate(System.Double,System.Double)">
            <summary>Does the n fix retranslocate.</summary>
            <param name="NFixUptake">The n fix uptake.</param>
            <param name="nFixDemandTotal">The n fix demand total.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Pod.DoNConccentrationLimits">
            <summary>Does the n conccentration limits.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Pod.ZeroDltNSenescedTrans">
            <summary>Zeroes the DLT n senesced trans.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Pod.DoNUptake(System.Double)">
            <summary>Does the n uptake.</summary>
            <param name="PotNFix">The pot n fix.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Pod.DoPotentialRUE">
            <summary>Does the potential rue.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Pod.interceptRadiation(System.Double)">
            <summary>Intercepts the radiation.</summary>
            <param name="incomingSolarRadiation">The incoming solar radiation.</param>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.OldPlant.Pod.DoCover">
            <summary>Does the cover.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Pod.Update">
            <summary>Updates this instance.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Pod.CalcDltPodArea">
            <summary>Calculates the DLT pod area.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Pod.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>Called when [simulation commencing].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Pod.OnPrepare(System.Object,System.EventArgs)">
            <summary>Called when [prepare].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Pod.OnHarvest(Models.PMF.OldPlant.HarvestType,Models.PMF.BiomassRemovedType)">
            <summary>Called when [harvest].</summary>
            <param name="Harvest">The harvest.</param>
            <param name="BiomassRemoved">The biomass removed.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Pod.OnEndCrop(Models.PMF.BiomassRemovedType)">
            <summary>Called when [end crop].</summary>
            <param name="BiomassRemoved">The biomass removed.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Pod.OnPhaseChanged(Models.PMF.Phen.PhaseChangedType)">
            <summary>Called when [phase changed].</summary>
            <param name="PhenologyChange">The phenology change.</param>
        </member>
        <member name="P:Models.PMF.OldPlant.Pod.InitialWt">
            <summary>Gets or sets the initial wt.</summary>
            <value>The initial wt.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Pod.InitialNConcentration">
            <summary>Gets or sets the initial n concentration.</summary>
            <value>The initial n concentration.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Pod.NDeficitUptakeFraction">
            <summary>Gets or sets the n deficit uptake fraction.</summary>
            <value>The n deficit uptake fraction.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Pod.NSenescenceConcentration">
            <summary>Gets or sets the n senescence concentration.</summary>
            <value>The n senescence concentration.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Pod.SenescenceDetachmentFraction">
            <summary>Gets or sets the senescence detachment fraction.</summary>
            <value>The senescence detachment fraction.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Pod.Senescing">
            <summary>Gets or sets the senescing.</summary>
            <value>The senescing.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Pod.Retranslocation">
            <summary>Gets or sets the retranslocation.</summary>
            <value>The retranslocation.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Pod.Growth">
            <summary>Gets or sets the growth.</summary>
            <value>The growth.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Pod.Detaching">
            <summary>Gets or sets the detaching.</summary>
            <value>The detaching.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Pod.GreenRemoved">
            <summary>Gets or sets the green removed.</summary>
            <value>The green removed.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Pod.SenescedRemoved">
            <summary>Gets or sets the senesced removed.</summary>
            <value>The senesced removed.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Pod.SWSupply">
            <summary>Gets the sw supply.</summary>
            <value>The sw supply.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Pod.SWDemand">
            <summary>Gets the sw demand.</summary>
            <value>The sw demand.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Pod.SWUptake">
            <summary>Gets the sw uptake.</summary>
            <value>The sw uptake.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Pod.DMSupply">
            <summary>Gets the dm supply.</summary>
            <value>The dm supply.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Pod.DMRetransSupply">
            <summary>Gets the dm retrans supply.</summary>
            <value>The dm retrans supply.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Pod.dltDmPotRue">
            <summary>Gets the DLT dm pot rue.</summary>
            <value>The DLT dm pot rue.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Pod.DMGreenDemand">
            <summary>Gets the dm green demand.</summary>
            <value>The dm green demand.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Pod.DMDemandDifferential">
            <summary>Gets the dm demand differential.</summary>
            <value>The dm demand differential.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Pod.NDemand">
            <summary>Gets the n demand.</summary>
            <value>The n demand.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Pod.NSupply">
            <summary>Gets the n supply.</summary>
            <value>The n supply.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Pod.NUptake">
            <summary>Gets the n uptake.</summary>
            <value>The n uptake.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Pod.SoilNDemand">
            <summary>Gets the soil n demand.</summary>
            <value>The soil n demand.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Pod.NCapacity">
            <summary>Gets the n capacity.</summary>
            <value>The n capacity.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Pod.NDemandDifferential">
            <summary>Gets the n demand differential.</summary>
            <value>The n demand differential.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Pod.AvailableRetranslocateN">
            <summary>Gets the available retranslocate n.</summary>
            <value>The available retranslocate n.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Pod.DltNSenescedRetrans">
            <summary>Gets the DLT n senesced retrans.</summary>
            <value>The DLT n senesced retrans.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Pod.CoverGreen">
            <summary>Gets or sets the cover green.</summary>
            <value>The cover green.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Pod.CoverSen">
            <summary>Gets or sets the cover sen.</summary>
            <value>The cover sen.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Pod.CoverTotal">
            <summary>Gets the cover total.</summary>
            <value>The cover total.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Pod.AvailableToAnimal">
            <summary>Gets the available to animal.</summary>
            <value>The available to animal.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Pod.RemovedByAnimal">
            <summary>Sets the removed by animal.</summary>
            <value>The removed by animal.</value>
        </member>
        <member name="T:Models.PMF.OldPlant.NUptake3">
            <summary>
            N uptake - version 3
            </summary>
        </member>
        <member name="F:Models.PMF.OldPlant.NUptake3.Root">
            <summary>The root</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.NUptake3.NStressPeriod">
            <summary>The n stress period</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.NUptake3.DoNUptake(System.Double,System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Double[]@,System.Double[]@)">
            <summary>Does the n uptake.</summary>
            <param name="RootDepth">The root depth.</param>
            <param name="no3gsm">The no3gsm.</param>
            <param name="nh4gsm">The NH4GSM.</param>
            <param name="bd">The bd.</param>
            <param name="dlayer">The dlayer.</param>
            <param name="sw_avail">The sw_avail.</param>
            <param name="sw_avail_pot">The sw_avail_pot.</param>
            <param name="no3gsm_min">The no3gsm_min.</param>
            <param name="nh4gsm_min">The nh4gsm_min.</param>
            <param name="no3gsm_uptake_pot">The no3gsm_uptake_pot.</param>
            <param name="nh4gsm_uptake_pot">The nh4gsm_uptake_pot.</param>
        </member>
        <member name="P:Models.PMF.OldPlant.NUptake3.kno3">
            <summary>Gets or sets the kno3.</summary>
            <value>The kno3.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.NUptake3.knh4">
            <summary>Gets or sets the KNH4.</summary>
            <value>The KNH4.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.NUptake3.no3ppm_min">
            <summary>Gets or sets the no3ppm_min.</summary>
            <value>The no3ppm_min.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.NUptake3.nh4ppm_min">
            <summary>Gets or sets the nh4ppm_min.</summary>
            <value>The nh4ppm_min.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.NUptake3.total_n_uptake_max">
            <summary>Gets or sets the total_n_uptake_max.</summary>
            <value>The total_n_uptake_max.</value>
        </member>
        <member name="T:Models.PMF.Functions.StructureFunctions.HeightFunction">
            <summary>
            Calculates the potential height increment and then multiplies it by the smallest of any childern functions (Child functions represent stress).
            </summary>
        </member>
        <member name="F:Models.PMF.Functions.StructureFunctions.HeightFunction.PotentialHeight">
            <summary>The potential height</summary>
        </member>
        <member name="F:Models.PMF.Functions.StructureFunctions.HeightFunction.PotentialHeightYesterday">
            <summary>The potential height yesterday</summary>
        </member>
        <member name="F:Models.PMF.Functions.StructureFunctions.HeightFunction.Height">
            <summary>The height</summary>
        </member>
        <member name="F:Models.PMF.Functions.StructureFunctions.HeightFunction.ChildFunctions">
            <summary>The child functions</summary>
        </member>
        <member name="P:Models.PMF.Functions.StructureFunctions.HeightFunction.DeltaHeight">
            <summary>Gets or sets the height of the delta.</summary>
        </member>
        <member name="P:Models.PMF.Functions.StructureFunctions.HeightFunction.Value">
            <summary>Gets the value.</summary>
        </member>
        <member name="T:Models.PMF.Functions.MinimumFunction">
            <summary>Minimize the values of the children of this node</summary>
            \pre All children have to contain a public function "Value"
            \retval Minimum value of all children of this node. Return 999999999 if no child.
        </member>
        <member name="F:Models.PMF.Functions.MinimumFunction.ChildFunctions">
            <summary>The child functions</summary>
        </member>
        <member name="P:Models.PMF.Functions.MinimumFunction.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
        </member>
        <member name="F:Models.Soils.SoilWaterBackend.NormalRunoff.cover_surface_runoff">
            Effective total cover (0-1)
            residue cover + cover from any crops (tall or short)
        </member>
        <member name="T:Models.Factorial.Factors">
            <summary>
            A model representing an experiment's factors
            </summary>
        </member>
        <member name="P:Models.Factorial.Factors.factors">
            <summary>Gets the factors.</summary>
            <value>The factors.</value>
        </member>
        <member name="T:Models.Core.VariableExpression">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="F:Models.Core.VariableExpression.expression">
            <summary>
            The expression string.
            </summary>
        </member>
        <member name="F:Models.Core.VariableExpression.fn">
            <summary>
            An instance of the expression evaluator once the expression has been parsed.
            </summary>
        </member>
        <member name="M:Models.Core.VariableExpression.#ctor(System.String,Models.Core.Model)">
            <summary>
            Initializes a new instance of the <see cref="T:Models.Core.VariableExpression"/> class.
            </summary>
            <param name="expression">The string expression</param>
            <param name="model">The model</param>
        </member>
        <member name="M:Models.Core.VariableExpression.FillVariableNames">
            <summary>
            Fill the function variables with names.
            </summary>
        </member>
        <member name="P:Models.Core.VariableExpression.Object">
            <summary>
            A reference to the variables class so that getting of variable values is possible.
            </summary>
        </member>
        <member name="P:Models.Core.VariableExpression.Name">
            <summary>
            Gets the name of the property.
            </summary>
        </member>
        <member name="P:Models.Core.VariableExpression.Value">
            <summary>
            Gets or sets the value of the property.
            </summary>
        </member>
        <member name="P:Models.Core.VariableExpression.Description">
            <summary>
            Gets a description of the property or null if not found.
            </summary>
        </member>
        <member name="P:Models.Core.VariableExpression.Units">
            <summary>
            Gets the units of the property (in brackets) or null if not found.
            </summary>
        </member>
        <member name="T:Models.Grazplan.TSupplementModel">
            <summary>
            TSupplementModel contains a list of supplement "stores", each of which
            consists of an amount and a description of a supplementary feed as a
            TSupplement from GrazSupp.cs.
            Key properties and methods of TSupplementModel are:
            * Count         Number of valid supplement stores
            * Store[]       Supplement attributes for each store (zero-offset)
            * StoredKg[]    Amount in each supplement store (zero-offset)
            * AddToStore    Adds an amount of supplement to a store. Used in setting
            up, in "buy" events, and in storing conserved fodder.
            * FeedOut       Transfers feed from a store. Used in the "feed" event.
            Notes:
            1.  All TSupplementModels have a "fodder" store.  This is where material
            passed to the supplement component as a result of fodder conservation
            should go.
            2.  If the composition parameters in the AddToStore method (DMP, DMD, MEDM,
            CP, DG, EE and ADIP2CP) are set to zero, the class will use the default
            value for the supplement name from grazSUPP.  Using this feature with a
            supplement not named in grazSUPP will result in an wheat being used.
            </summary>
        </member>
        <member name="T:Models.Grazplan.TSupplementLibrary">
            <summary>
            TSupplementLibrary is a TSupplementRation descendant that is intended for
            use in manipulating lists of supplements within GUIs.
            For TSupplementLibrary, the "amounts" may be read in relative or absolute
            terms, depending on the application.
            Apart from the usual read/write properties and list-handling methods, the
            class has the following special methods:
            * the Add and Insert methods have variants that allow the user to set up a
            supplement by using its name; other attributes are looked up from the
            DefaultSuppConsts library.
            * PopulateDefaults     sets the library up to contain the complete set of
            default supplement compositions.
            * CopyFrom             adds either the entire contents of another library,
            or else a nominated subset of supplements from the
            other library.
            * ReadFromRegistry     Populates the library from a set of formatted strings
            contained in a file pointed to by SUPP_LIB_KEY
            * WriteToRegistry      Write a formatted set of strings that can be read by
            ReadFromStrings to the file pointed to by
            in a file pointed to by SUPP_LIB_KEY
            </summary>
        </member>
        <member name="T:Models.Grazplan.TSupplementRation">
            <summary>
            TSupplementRation encapsulates zero or more supplements mixed together.
            In essence, it is a list of TSupplementItem.
            This is the class used for specifying the supplement fed to a group of
            animals in AnimGrp.pas
            Apart from the usual read/write properties and list-handling methods, the
            class has the following special methods:
            * AverageSuppt      computes the composition of a supplement mixture in
            proportions given by the fAmount values.
            * AverageCost       computes the cost of a supplement mixture in
            proportions given by the fAmount values.
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplementRation.fSuppts">
            <summary>
            The f suppts
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplementRation.rationChoice">
            <summary>
            The ration choice
            </summary>
        </member>
        <member name="M:Models.Grazplan.TSupplementRation.Assign(Models.Grazplan.TSupplementRation)">
            <summary>
            Assigns the specified source ration.
            </summary>
            <param name="srcRation">The source ration.</param>
        </member>
        <member name="M:Models.Grazplan.TSupplementRation.getFWFract(System.Int32)">
            <summary>
            Gets the fw fract.
            </summary>
            <param name="idx">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Grazplan.TSupplementRation.Add(Models.Grazplan.TSupplement,System.Double,System.Double)">
            <summary>
            Adds the specified supp.
            </summary>
            <param name="supp">The supp.</param>
            <param name="amt">The amt.</param>
            <param name="cost">The cost.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Grazplan.TSupplementRation.Add(Models.Grazplan.TSupplementItem)">
            <summary>
            Adds the specified supp item.
            </summary>
            <param name="suppItem">The supp item.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Grazplan.TSupplementRation.Insert(System.Int32,Models.Grazplan.TSupplement,System.Double,System.Double)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="idx">The index.</param>
            <param name="supp">The supp.</param>
            <param name="amt">The amt.</param>
            <param name="cost">The cost.</param>
        </member>
        <member name="M:Models.Grazplan.TSupplementRation.Delete(System.Int32)">
            <summary>
            Deletes the specified index.
            </summary>
            <param name="idx">The index.</param>
        </member>
        <member name="M:Models.Grazplan.TSupplementRation.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Models.Grazplan.TSupplementRation.IndexOf(System.String,System.Boolean)">
            <summary>
            Indexes the of.
            </summary>
            <param name="sName">Name of the s.</param>
            <param name="checkTrans">if set to <c>true</c> [check trans].</param>
            <returns></returns>
        </member>
        <member name="M:Models.Grazplan.TSupplementRation.AverageSuppt(Models.Grazplan.TSupplement@)">
            <summary>
            Computes a weighted average supplement composition
            </summary>
            <param name="aveSupp">receives the average supplement composition</param>
        </member>
        <member name="M:Models.Grazplan.TSupplementRation.AverageCost">
            <summary>
            Weighted average cost of a supplement
            </summary>
            <returns>
            The weighted average cost in the same units as TSupplementItem.cost
            </returns>
        </member>
        <member name="F:Models.Grazplan.TSupplementRation.PROPN_ATTRS">
            <summary>
            The property n_ attrs
            </summary>
        </member>
        <member name="M:Models.Grazplan.TSupplementRation.RescaleRation(Models.Grazplan.TSupplement,System.Collections.Generic.IList{Models.Grazplan.TSupplement.TSuppAttribute})">
            <summary>
            Scales the attributes of the members of the supplement so that the weighted
            average attributes match those of aveSupp. Ensures that fractional values
            remain within the range 0-1
            * Assumes that all values are non-negative
            </summary>
            <param name="scaleToSupp">The scale to supp.</param>
            <param name="attrs">The attrs.</param>
        </member>
        <member name="P:Models.Grazplan.TSupplementRation.Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:Models.Grazplan.TSupplementRation.TotalAmount">
            <summary>
            Gets or sets the total amount.
            </summary>
            <value>
            The total amount.
            </value>
        </member>
        <member name="P:Models.Grazplan.TSupplementRation.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Models.Grazplan.TSupplementItem"/> with the specified index.
            </summary>
            <value>
            The <see cref="T:Models.Grazplan.TSupplementItem"/>.
            </value>
            <param name="idx">The index.</param>
            <returns></returns>
        </member>
        <member name="T:Models.Grazplan.TSupplementRation.TRationChoice">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplementRation.TRationChoice.rcStandard">
            <summary>
            The rc standard
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplementRation.TRationChoice.rcOnlyStored">
            <summary>
            The rc only stored
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplementRation.TRationChoice.rcIncStored">
            <summary>
            The rc inc stored
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplementLibrary.sATTR_HEADER">
            <summary>
            The s att r_ header
            </summary>
        </member>
        <member name="M:Models.Grazplan.TSupplementLibrary.Add(System.String,System.Double,System.Double)">
            <summary>
            Adds the specified s name.
            </summary>
            <param name="sName">Name of the s.</param>
            <param name="amount">The amount.</param>
            <param name="cost">The cost.</param>
        </member>
        <member name="M:Models.Grazplan.TSupplementLibrary.Insert(System.Int32,System.String,System.Double,System.Double)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="idx">The index.</param>
            <param name="sName">Name of the s.</param>
            <param name="amount">The amount.</param>
            <param name="cost">The cost.</param>
        </member>
        <member name="M:Models.Grazplan.TSupplementLibrary.GetDefaultSupp(System.String,Models.Grazplan.TSupplementItem@)">
            <summary>
            Locates a supplement by name in the DefaultSupptCosts array and returns it
            </summary>
            <param name="sName">Name of the s.</param>
            <param name="suppt">The suppt.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Grazplan.TSupplementLibrary.PopulateDefaults">
            <summary>
            Populates the defaults.
            </summary>
        </member>
        <member name="M:Models.Grazplan.TSupplementLibrary.RevertToDefault(System.Int32)">
            <summary>
            Reverts to default.
            </summary>
            <param name="idx">The index.</param>
        </member>
        <member name="M:Models.Grazplan.TSupplementLibrary.CopyFrom(Models.Grazplan.TSupplementLibrary,System.String[])">
            <summary>
            Copies from.
            </summary>
            <param name="srcLibrary">The source library.</param>
            <param name="copyNames">The copy names.</param>
        </member>
        <member name="M:Models.Grazplan.TSupplementLibrary.ReadFromStrings(System.String,System.String[])">
            <summary>
            Reads from strings.
            </summary>
            <param name="locale">The locale.</param>
            <param name="strings">The strings.</param>
            <exception cref="T:System.Exception">
            Error reading supplement library - must contain a header line
            or
            Error reading supplement library - header line is invalid
            or
            Error reading supplement library - line for  + sNameStr +  is invalid
            </exception>
        </member>
        <member name="M:Models.Grazplan.TSupplementLibrary.SetupDefaultSupplements">
            <summary>
            Setups the default supplements.
            </summary>
        </member>
        <member name="M:Models.Grazplan.TSupplementLibrary.ReadFromRegistryFile(System.String)">
            <summary>
            Reads from registry file.
            </summary>
            <param name="locale">The locale.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Grazplan.TSupplementLibrary.ReadFromResource(System.String)">
            <summary>
            Reads from resource.
            </summary>
            <param name="locale">The locale.</param>
        </member>
        <member name="F:Models.Grazplan.TSupplementLibrary.GDefSupp">
            <summary>
            The g definition supp
            </summary>
        </member>
        <member name="P:Models.Grazplan.TSupplementLibrary.DefaultSuppConsts">
            <summary>
            Gets the default supp consts.
            </summary>
            <value>
            The default supp consts.
            </value>
        </member>
        <member name="F:Models.Grazplan.TSupplementModel.DEFAULT">
            <summary>
            The default
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplementModel.ROUGHAGE">
            <summary>
            The roughage
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplementModel.FODDER">
            <summary>
            The fodder
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplementModel.Paddocks">
            <summary>
            The paddocks
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplementModel.FCurrPaddSupp">
            <summary>
            The f curr padd supp
            </summary>
        </member>
        <member name="M:Models.Grazplan.TSupplementModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Models.Grazplan.TSupplementModel"/> class.
            </summary>
        </member>
        <member name="M:Models.Grazplan.TSupplementModel.AddPaddock(System.Int32,System.String)">
            <summary>
            Adds the paddock.
            </summary>
            <param name="paddId">The padd identifier.</param>
            <param name="paddName">Name of the padd.</param>
        </member>
        <member name="M:Models.Grazplan.TSupplementModel.ClearPaddockList">
            <summary>
            Clears the paddock list.
            </summary>
        </member>
        <member name="M:Models.Grazplan.TSupplementModel.PaddockName(System.Int32)">
            <summary>
            Paddocks the name.
            </summary>
            <param name="idx">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Grazplan.TSupplementModel.FindFedSuppt(System.Int32,System.Double@)">
            <summary>
            Finds the fed suppt.
            </summary>
            <param name="paddIdx">Index of the padd.</param>
            <param name="amount">The amount.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Grazplan.TSupplementModel.GetFedSuppt(System.String,System.Double@)">
            <summary>
            Gets the fed suppt.
            </summary>
            <param name="paddName">Name of the padd.</param>
            <param name="amount">The amount.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Grazplan.TSupplementModel.GetFedSuppt(System.Int32,System.Double@)">
            <summary>
            Gets the fed suppt.
            </summary>
            <param name="paddId">The padd identifier.</param>
            <param name="amount">The amount.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Grazplan.TSupplementModel.PaddockIndexOf(System.String)">
            <summary>
            Paddocks the index of.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Grazplan.TSupplementModel.PaddockIndexOf(System.Int32)">
            <summary>
            Paddocks the index of.
            </summary>
            <param name="ID">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Grazplan.TSupplementModel.AddToStore(System.Double,System.String,System.Int32,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Adds an amount of a supplement to a store.
            * If the store name already exists in the FStores array, the method adds
            the supplement to that store.  Otherwise a new store is created.
            * The DMP, DMD, MEDM, CP, DG, EE and ADIP2CP parameters may be set to zero,
            in which case the default values for the supplement name are used.
            Defaults are taken from the current store if the name is already defined,
            and from grazSUPP.PAS otherwise.  If defaults cannot be found for a name,
            wheat is used as the default composition.
            </summary>
            <param name="suppKg">Amount (kg fresh weight) of the supplement to be included in the store.</param>
            <param name="suppName">Name of the supplement.</param>
            <param name="roughage">The roughage.</param>
            <param name="DMP">Proportion of the fresh weight which is dry matter   kg/kg FW</param>
            <param name="DMD">Dry matter digestibility of the supplement           kg/kg DM</param>
            <param name="MEDM">Metabolisable energy content of dry matter           MJ/kg DM</param>
            <param name="CP">Crude protein content                                kg/kg DM</param>
            <param name="DG">Degradability of the crude protein                   kg/kg CP</param>
            <param name="EE">Ether-extractable content                            kg/kg DM</param>
            <param name="ADIP2CP">Ratio of acid detergent insoluble protein to CP      kg/kg CP</param>
            <param name="phos">Phosphorus content                                   kg/kg DM</param>
            <param name="sulf">Sulphur content                                      kg/kg DM</param>
            <param name="ashAlk">Ash alkalinity                                       mol/kg DM</param>
            <param name="maxPass">Maximum passage rate                                 0-1</param>
            <returns>
            Index of the supplement in the store
            </returns>
        </member>
        <member name="M:Models.Grazplan.TSupplementModel.AddToStore(System.Double,Models.Grazplan.TSupplement)">
            <summary>
            Adds to store.
            </summary>
            <param name="suppKg">The supp kg.</param>
            <param name="suppComp">The supp comp.</param>
            <returns></returns>
            <exception cref="T:System.Exception">Supplement submodel: cannot combine roughage and concentrate, both named  + suppComp.sName</exception>
        </member>
        <member name="M:Models.Grazplan.TSupplementModel.FeedOut(System.String,System.Double,System.String)">
            <summary>
            Feeds the out.
            </summary>
            <param name="suppName">Name of the supp.</param>
            <param name="fedKg">The fed kg.</param>
            <param name="paddName">Name of the padd.</param>
            <exception cref="T:System.Exception">
            Supplement \ + suppName + \ not recognised
            or
            Paddock \ + paddName + \ not recognised
            </exception>
        </member>
        <member name="M:Models.Grazplan.TSupplementModel.AddFodder(System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Adds the fodder.
            </summary>
            <param name="destStore">The dest store.</param>
            <param name="fodderFW">The fodder fw.</param>
            <param name="DMP">The DMP.</param>
            <param name="DMD">The DMD.</param>
            <param name="NConc">The n conc.</param>
            <param name="PConc">The p conc.</param>
            <param name="SConc">The s conc.</param>
            <param name="ashAlk">The ash alk.</param>
        </member>
        <member name="M:Models.Grazplan.TSupplementModel.Blend(System.String,System.Double,System.String)">
            <summary>
            Blends the specified source store.
            </summary>
            <param name="srcStore">The source store.</param>
            <param name="transferKg">The transfer kg.</param>
            <param name="destStore">The dest store.</param>
            <exception cref="T:System.Exception">Supplement \ + srcStore + \ not recognised</exception>
        </member>
        <member name="M:Models.Grazplan.TSupplementModel.RemoveSuppt(System.Int32,System.Double)">
            <summary>
            Removes the suppt.
            </summary>
            <param name="paddIdx">Index of the padd.</param>
            <param name="suppKg">The supp kg.</param>
            <exception cref="T:System.Exception">Paddock not recognised</exception>
        </member>
        <member name="M:Models.Grazplan.TSupplementModel.RemoveEaten(System.String,System.Double)">
            <summary>
            Removes the eaten.
            </summary>
            <param name="paddName">Name of the padd.</param>
            <param name="suppKg">The supp kg.</param>
        </member>
        <member name="M:Models.Grazplan.TSupplementModel.RemoveEaten(System.Int32,System.Double)">
            <summary>
            Removes the eaten.
            </summary>
            <param name="paddId">The padd identifier.</param>
            <param name="suppKg">The supp kg.</param>
        </member>
        <member name="M:Models.Grazplan.TSupplementModel.CompleteTimeStep">
            <summary>
            Completes the time step.
            </summary>
        </member>
        <member name="M:Models.Grazplan.TSupplementModel.SuppIntoRation(Models.Grazplan.TSupplementRation,System.Int32,Models.Grazplan.TSupplement,System.Double)">
            <summary>
            Supps the into ration.
            </summary>
            <param name="ration">The ration.</param>
            <param name="idx">The index.</param>
            <param name="supp">The supp.</param>
            <param name="amount">The amount.</param>
        </member>
        <member name="M:Models.Grazplan.TSupplementModel.Transfer(Models.Grazplan.TSupplementRation,System.Int32,Models.Grazplan.TSupplementRation,System.Int32,System.Double)">
            <summary>
            Transfers the specified source.
            </summary>
            <param name="src">The source.</param>
            <param name="srcIdx">Index of the source.</param>
            <param name="dest">The dest.</param>
            <param name="destIdx">Index of the dest.</param>
            <param name="amount">The amount.</param>
            <exception cref="T:System.Exception">Invalid transfer of feed</exception>
        </member>
        <member name="P:Models.Grazplan.TSupplementModel.SpoilageTime">
            <summary>
            Gets or sets the spoilage time.
            </summary>
            <value>
            The spoilage time.
            </value>
        </member>
        <member name="P:Models.Grazplan.TSupplementModel.PaddockCount">
            <summary>
            Gets the paddock count.
            </summary>
            <value>
            The paddock count.
            </value>
        </member>
        <member name="T:Models.Grazplan.TSupplementModel.PaddockInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplementModel.PaddockInfo.Name">
            <summary>
            The name
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplementModel.PaddockInfo.PaddId">
            <summary>
            The padd identifier
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplementModel.PaddockInfo.SupptFed">
            <summary>
            The suppt fed
            </summary>
        </member>
        <member name="T:Models.Grazplan.StoreType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Models.Grazplan.SuppInfo">
            <summary>
            Supplement information
            </summary>
        </member>
        <member name="F:Models.Grazplan.SuppInfo.IsRoughage">
            <summary>
            Gets or sets whether the supplement is a roughage.
            </summary>
            <value>True if the supplement is a roughage</value>
        </member>
        <member name="F:Models.Grazplan.SuppInfo.DMContent">
            <summary>
            Gets or sets the dry matter content of the supplement (kg/kg FW).
            </summary>
            <value>Dry matter content of the supplement (kg/kg)</value>
        </member>
        <member name="F:Models.Grazplan.SuppInfo.DMD">
            <summary>
            Gets or sets the dry matter digestibility of the supplement (kg/kg DM).
            </summary>
            <value>Dry matter digestibiility of the supplement (kg/kg)</value>
        </member>
        <member name="F:Models.Grazplan.SuppInfo.MEContent">
            <summary>
            Gets or sets the metabolizable energy content of the supplement (MJ/kg).
            </summary>
            <value>Metabolizable energy content of the supplement (MJ/kg)</value>
        </member>
        <member name="F:Models.Grazplan.SuppInfo.CPConc">
            <summary>
            Gets or sets the crude protein content of the supplement (kg/kg DM).
            </summary>
            <value>Crude protein content of the supplement (kg/kg)</value>
        </member>
        <member name="F:Models.Grazplan.SuppInfo.ProtDg">
            <summary>
            Gets or sets the degradability of the protein of the supplement (kg/kg CP).
            </summary>
            <value>Degradability of the protein of the supplement (kg/kg)</value>
        </member>
        <member name="F:Models.Grazplan.SuppInfo.PConc">
            <summary>
            Gets or sets the phosphorus content of the supplement (kg/kg DM).
            </summary>
            <value>Phosphorus content of the supplement (kg/kg)</value>
        </member>
        <member name="F:Models.Grazplan.SuppInfo.SConc">
            <summary>
            Gets or sets the sulfur content of the supplement (kg/kg DM).
            </summary>
            <value>Sulfur content of the supplement (kg/kg)</value>
        </member>
        <member name="F:Models.Grazplan.SuppInfo.EEConc">
            <summary>
            Gets or sets the ether-extractable content of the supplement (kg/kg DM).
            </summary>
            <value>Ether-extractable content of the supplement (kg/kg)</value>
        </member>
        <member name="F:Models.Grazplan.SuppInfo.ADIP2CP">
            <summary>
            Gets or sets the ratio of acid detergent insoluble protein to CP for the supplement (kg/kg CP).
            </summary>
            <value>Ratio of acid detergent insoluble protein to CP for the supplement (kg/kg)</value>
        </member>
        <member name="F:Models.Grazplan.SuppInfo.AshAlk">
            <summary>
            Gets or sets the ash alkalinity of the supplement (mol/kg DM).
            </summary>
            <value>Ash alkalinity of the supplement (mol/kg)</value>
        </member>
        <member name="F:Models.Grazplan.SuppInfo.MaxPassage">
            <summary>
            Gets or sets the maximum passage rate of the supplement (0-1).
            </summary>
            <value>Maximum passage rate of the supplement (kg/kg)</value>
        </member>
        <member name="P:Models.Grazplan.StoreType.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Models.Grazplan.StoreType.Stored">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="T:Models.Grazplan.SuppToStockType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Models.Grazplan.SuppToStockType.Paddock">
            <summary>
            Gets or sets the paddock name.
            </summary>
            <value>
            The paddock name.
            </value>
        </member>
        <member name="P:Models.Grazplan.SuppToStockType.Amount">
            <summary>
            Gets or sets the amount of ration (kg).
            </summary>
            <value>
            The amount of ration (kg).
            </value>
        </member>
        <member name="T:Models.Grazplan.SuppEatenType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Models.Grazplan.SuppEatenType.Paddock">
            <summary>
            Gets or sets the paddock name.
            </summary>
            <value>
            The paddock name.
            </value>
        </member>
        <member name="P:Models.Grazplan.SuppEatenType.Eaten">
            <summary>
            Gets or sets the amount of ration eaten (kg).
            </summary>
            <value>
            The amount of ration eaten (kg).
            </value>
        </member>
        <member name="T:Models.Grazplan.BuySuppType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Models.Grazplan.BuySuppType.Supplement">
            <summary>
            Gets or sets the supplement name.
            </summary>
            <value>
            The supplement name.
            </value>
        </member>
        <member name="P:Models.Grazplan.BuySuppType.Amount">
            <summary>
            Gets or sets the amount of supplement eaten (kg).
            </summary>
            <value>
            The amount of supplement eaten (kg).
            </value>
        </member>
        <member name="T:Models.Grazplan.FeedSuppType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Models.Grazplan.FeedSuppType.Supplement">
            <summary>
            Gets or sets the supplement name.
            </summary>
            <value>
            The supplement name.
            </value>
        </member>
        <member name="P:Models.Grazplan.FeedSuppType.Amount">
            <summary>
            Gets or sets the amount of supplement offered (kg).
            </summary>
            <value>
            The amount of supplement offered (kg).
            </value>
        </member>
        <member name="P:Models.Grazplan.FeedSuppType.Paddock">
            <summary>
            Gets or sets the paddock name.
            </summary>
            <value>
            The paddock name.
            </value>
        </member>
        <member name="T:Models.Grazplan.MixSuppType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Models.Grazplan.MixSuppType.Source">
            <summary>
            Gets or sets the source supplement name.
            </summary>
            <value>
            The source supplement name.
            </value>
        </member>
        <member name="P:Models.Grazplan.MixSuppType.Amount">
            <summary>
            Gets or sets the amount of supplement transferred (kg).
            </summary>
            <value>
            The amount of supplement transferred (kg).
            </value>
        </member>
        <member name="P:Models.Grazplan.MixSuppType.Destination">
            <summary>
            Gets or sets the destination supplement name.
            </summary>
            <value>
            The destination supplement name.
            </value>
        </member>
        <member name="T:Models.Grazplan.ConserveType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.Grazplan.ConserveType.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="F:Models.Grazplan.ConserveType.FreshWt">
            <summary>
            Gets or sets the fresh weight (kg)
            </summary>
            <value>The fresh weight (kg)</value>
        </member>
        <member name="F:Models.Grazplan.ConserveType.DMContent">
            <summary>
            Gets or sets the dry matter content of the supplement (kg/kg FW).
            </summary>
            <value>Dry matter content of the supplement (kg/kg)</value>
        </member>
        <member name="F:Models.Grazplan.ConserveType.DMD">
            <summary>
            Gets or sets the dry matter digestibility of the supplement (kg/kg DM).
            </summary>
            <value>Dry matter digestibiility of the supplement (kg/kg)</value>
        </member>
        <member name="F:Models.Grazplan.ConserveType.NConc">
            <summary>
            Gets or sets the phosphorus content of the supplement (kg/kg DM).
            </summary>
            <value>Phosphorus content of the supplement (kg/kg)</value>
        </member>
        <member name="F:Models.Grazplan.ConserveType.PConc">
            <summary>
            Gets or sets the nitrogen content of the supplement (kg/kg DM).
            </summary>
            <value>Nitrogen content of the supplement (kg/kg)</value>
        </member>
        <member name="F:Models.Grazplan.ConserveType.SConc">
            <summary>
            Gets or sets the sulfur content of the supplement (kg/kg DM).
            </summary>
            <value>Sulfur content of the supplement (kg/kg)</value>
        </member>
        <member name="F:Models.Grazplan.ConserveType.AshAlk">
            <summary>
            Gets or sets the ash alkalinity of the supplement (mol/kg DM).
            </summary>
            <value>Ash alkalinity of the supplement (mol/kg)</value>
        </member>
        <member name="T:Models.Grazplan.Supplement">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="F:Models.Grazplan.Supplement.Simulation">
            <summary>
            The simulation
            </summary>
        </member>
        <member name="M:Models.Grazplan.Supplement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Models.Grazplan.Supplement"/> class.
            </summary>
        </member>
        <member name="F:Models.Grazplan.Supplement.theModel">
            <summary>
            The model
            </summary>
        </member>
        <member name="F:Models.Grazplan.Supplement.paddocksGiven">
            <summary>
            The paddocks given
            </summary>
        </member>
        <member name="M:Models.Grazplan.Supplement.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>
            Runs at the start of the simulation
            Sets up the list of paddocks, if that hasn't been provided explicitly
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
            <exception cref="T:System.Exception">Invalid AribtrationMethod selected</exception>
        </member>
        <member name="M:Models.Grazplan.Supplement.OnSimulationCompleted(System.Object,System.EventArgs)">
            <summary>
            Simulation has completed.
            Clear values from this run, so they don't carry over into the next
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.Grazplan.Supplement.OnDoUpdate(System.Object,System.EventArgs)">
            <summary>
            Performs every-day calculations - end of day processes
            Determine the amount of supplementary feed eaten
            This event determines the amount of supplementary feed eaten by livestock and removes
            it from the amount present in each paddock. It then computes ''spoilage'' of supplement
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.Grazplan.Supplement.OnConserve(Models.Grazplan.ConserveType)">
            <summary>
            Notifies the component that an amount of forage has been conserved
            </summary>
            <param name="conserved">Describes the conserved forage.</param>
        </member>
        <member name="M:Models.Grazplan.Supplement.Conserve(System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Conserves the specified name.
            </summary>
            <param name="name">The name.</param>
            <param name="freshWt">The fresh wt.</param>
            <param name="DMContent">Content of the dm.</param>
            <param name="DMD">The DMD.</param>
            <param name="NConc">The n conc.</param>
            <param name="PConc">The p conc.</param>
            <param name="SConc">The s conc.</param>
            <param name="AshAlk">The ash alk.</param>
        </member>
        <member name="M:Models.Grazplan.Supplement.OnBuy(Models.Grazplan.BuySuppType)">
            <summary>
            Called to buy new supplements into the store
            </summary>
            <param name="purchase">Specifies the supplement and amount being purchased.</param>
        </member>
        <member name="M:Models.Grazplan.Supplement.Buy(System.Double,System.String)">
            <summary>
            Buys the specified amount.
            </summary>
            <param name="amount">The amount.</param>
            <param name="supplement">The supplement.</param>
        </member>
        <member name="M:Models.Grazplan.Supplement.OnFeed(Models.Grazplan.FeedSuppType)">
            <summary>
            Called to feed a supplement from the store
            </summary>
            <param name="feed">Specifies the supplement and amount being offered.</param>
        </member>
        <member name="M:Models.Grazplan.Supplement.Feed(System.String,System.Double,System.String)">
            <summary>
            Feeds the specified supplement.
            </summary>
            <param name="supplement">The supplement.</param>
            <param name="amount">The amount.</param>
            <param name="paddock">The paddock.</param>
        </member>
        <member name="M:Models.Grazplan.Supplement.OnMix(Models.Grazplan.MixSuppType)">
            <summary>
            Called to buy mix supplements in the store
            </summary>
            <param name="mix">Specifies the source and destination supplements, and the amount being mixed.</param>
        </member>
        <member name="M:Models.Grazplan.Supplement.Mix(System.String,System.Double,System.String)">
            <summary>
            Mixes the specified source.
            </summary>
            <param name="source">The source.</param>
            <param name="amount">The amount.</param>
            <param name="destination">The destination.</param>
        </member>
        <member name="M:Models.Grazplan.Supplement.Add(System.String)">
            <summary>
            Adds the specified supp name.
            </summary>
            <param name="suppName">Name of the supp.</param>
            <returns></returns>
        </member>
        <member name="M:Models.Grazplan.Supplement.Delete(System.Int32)">
            <summary>
            Deletes the specified index.
            </summary>
            <param name="idx">The index.</param>
        </member>
        <member name="P:Models.Grazplan.Supplement.SpoilageTime">
            <summary>
            Time over which an amount of supplement placed in a paddock will become inaccessible to grazing stock
            Default value is 0.0, i.e. supplement only persists for the time step that it is fed out
            </summary>
            <value>
            The spoilage time in days
            </value>
        </member>
        <member name="P:Models.Grazplan.Supplement.stores">
            <summary>
            Attributes and initial amount in each supplement store
            </summary>
            <value>
            List of stores
            </value>
        </member>
        <member name="P:Models.Grazplan.Supplement.PaddockList">
            <summary>
            List of paddock names
            If the variable is not given, or if it has zero length, the component will autodetect paddocks
            by querying for modules that own the area variable
            </summary>
            <value>
            The list of paddocks
            </value>
        </member>
        <member name="P:Models.Grazplan.Supplement.NoStores">
            <summary>
            Number of stores
            </summary>
            <value>
            The number of stores
            </value>
        </member>
        <member name="P:Models.Grazplan.Supplement.NoPaddocks">
            <summary>
            Number of paddocks recognised by the component instance
            </summary>
            <value>
            The number of paddocks
            </value>
        </member>
        <member name="P:Models.Grazplan.Supplement.PaddNames">
            <summary>
            Name of each paddock recognised by the component instance
            </summary>
            <value>
            The list of paddock names
            </value>
        </member>
        <member name="P:Models.Grazplan.Supplement.PaddAmounts">
            <summary>
            Amount of supplement currently accessible to stock in each paddock recognised by the component instance
            </summary>
            <value>
            The list of supplement amounts in each paddock
            </value>
        </member>
        <member name="P:Models.Grazplan.Supplement.SuppToStock">
            <summary>
            Amount and attributes of supplementary feed present in each paddock
            </summary>
            <value>
            The list of amount and attributes of supplementary feed present in each paddock
            </value>
        </member>
        <member name="P:Models.Grazplan.Supplement.Item(System.String)">
            <summary>
            Gets the <see cref="T:Models.Grazplan.StoreType"/> with the specified supp name.
            </summary>
            <value>
            The <see cref="T:Models.Grazplan.StoreType"/>.
            </value>
            <param name="suppName">Name of the supp.</param>
            <returns></returns>
        </member>
        <member name="P:Models.Grazplan.Supplement.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Models.Grazplan.TSupplementItem"/> with the specified index.
            </summary>
            <value>
            The <see cref="T:Models.Grazplan.TSupplementItem"/>.
            </value>
            <param name="idx">The index.</param>
            <returns></returns>
        </member>
        <member name="P:Models.Grazplan.Supplement.SuppEaten">
            <summary>
            Sets the supp eaten.
            </summary>
            <value>
            The supp eaten.
            </value>
        </member>
        <member name="T:Models.DataStore">
            <summary>
            A data storage model
            </summary>
        </member>
        <member name="F:Models.DataStore.Connection">
            <summary>A SQLite connection shared between all instances of this DataStore.</summary>
        </member>
        <member name="F:Models.DataStore.DoingPostProcessing">
            <summary>A flag that when true indicates that the DataStore is in post processing model.</summary>
        </member>
        <member name="F:Models.DataStore.TablesToWrite">
            <summary>A collection of datatables that need writing.</summary>
        </member>
        <member name="F:Models.DataStore.Locks">
            <summary>A static dictionary of locks, one for each filename.</summary>
        </member>
        <member name="F:Models.DataStore.ForWriting">
            <summary>Is the .db file open for writing?</summary>
        </member>
        <member name="M:Models.DataStore.#ctor">
            <summary>
            A parameterless constructor purely for the XML serialiser. Other models
            shouldn't use this contructor.
            </summary>
        </member>
        <member name="M:Models.DataStore.#ctor(Models.Core.Model,System.Boolean)">
            <summary>A constructor that needs to know the calling model.</summary>
            <param name="ownerModel">The owner model.</param>
            <param name="baseline">if set to <c>true</c> [baseline].</param>
        </member>
        <member name="M:Models.DataStore.Finalize">
            <summary>Destructor. Close our DB connection.</summary>
        </member>
        <member name="M:Models.DataStore.Disconnect">
            <summary>Disconnect from the SQLite database.</summary>
        </member>
        <member name="M:Models.DataStore.OnAllSimulationsCompleted(System.Object,System.EventArgs)">
            <summary>All simulations have run - write all tables</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.DataStore.RemoveUnwantedSimulations(Models.Core.Simulations)">
            <summary>Remove all simulations from the database that don't exist in 'simulationsToKeep'</summary>
            <param name="simulationsToKeep">The simulations to keep.</param>
        </member>
        <member name="M:Models.DataStore.DeleteAllTables">
            <summary>Delete all tables</summary>
        </member>
        <member name="M:Models.DataStore.TableExists(System.String)">
            <summary>Determine whether a table exists in the database</summary>
            <param name="tableName">Name of the table.</param>
            <returns></returns>
        </member>
        <member name="M:Models.DataStore.DeleteTable(System.String)">
            <summary>Delete the specified table.</summary>
            <param name="tableName">Name of the table.</param>
        </member>
        <member name="M:Models.DataStore.WriteTable(System.String,System.String,System.Data.DataTable)">
            <summary>Create a table in the database based on the specified one.</summary>
            <param name="simulationName">Name of the simulation.</param>
            <param name="tableName">Name of the table.</param>
            <param name="table">The table.</param>
        </member>
        <member name="M:Models.DataStore.WriteMessage(System.String,System.DateTime,System.String,System.String,Models.DataStore.ErrorLevel)">
            <summary>Write a message to the DataStore.</summary>
            <param name="simulationName">Name of the simulation.</param>
            <param name="date">The date.</param>
            <param name="componentName">Name of the component.</param>
            <param name="message">The message.</param>
            <param name="type">The type.</param>
        </member>
        <member name="M:Models.DataStore.GetData(System.String,System.String,System.Boolean)">
            <summary>
            Return all data from the specified simulation and table name. If simulationName = "*"
            the all simulation data will be returned.
            </summary>
            <param name="simulationName">Name of the simulation.</param>
            <param name="tableName">Name of the table.</param>
            <param name="includeSimulationName">if set to <c>true</c> [include simulation name].</param>
            <returns></returns>
        </member>
        <member name="M:Models.DataStore.GetFilteredData(System.String,System.String)">
            <summary>
            Return all data from the specified simulation and table name. If simulationName = "*"
            the all simulation data will be returned.
            </summary>
            <param name="tableName">Name of the table.</param>
            <param name="filter">The filter.</param>
            <returns></returns>
        </member>
        <member name="M:Models.DataStore.GetFilteredData(System.String,System.String[],System.String)">
            <summary>
            Return all data from the specified simulation and table name. If simulationName = "*"
            the all simulation data will be returned.
            </summary>
            <param name="tableName">Name of the table.</param>
            <param name="fieldNames">Field names to get data for.</param>
            <param name="filter">The filter.</param>
            <returns></returns>
        </member>
        <member name="M:Models.DataStore.RunQuery(System.String)">
            <summary>Return all data from the specified simulation and table name.</summary>
            <param name="sql">The SQL.</param>
            <returns></returns>
        </member>
        <member name="M:Models.DataStore.RunQueryWithNoReturnData(System.String)">
            <summary>Return all data from the specified simulation and table name.</summary>
            <param name="sql">The SQL.</param>
        </member>
        <member name="M:Models.DataStore.DeleteOldContentInTable(System.String,System.String)">
            <summary>Remove all rows from the specified table for the specified simulation</summary>
            <param name="simulationName">Name of the simulation.</param>
            <param name="tableName">Name of the table.</param>
        </member>
        <member name="M:Models.DataStore.WriteToTextFiles">
            <summary>Write all outputs to a text file (.csv)</summary>
        </member>
        <member name="M:Models.DataStore.WriteSummaryFile(Models.DataStore,System.String)">
            <summary>Write a single summary file.</summary>
            <param name="dataStore">The data store containing the data</param>
            <param name="fileName">The file name to create</param>
        </member>
        <member name="M:Models.DataStore.RunPostProcessingTools">
            <summary>Run all post processing tools.</summary>
        </member>
        <member name="M:Models.DataStore.Open(System.Boolean)">
            <summary>Connect to the SQLite database.</summary>
            <param name="forWriting">if set to <c>true</c> [for writing].</param>
            <exception cref="T:Models.Core.ApsimXException">Cannot find name of .db file</exception>
        </member>
        <member name="M:Models.DataStore.CreateTable(System.String,System.String[],System.Type[])">
            <summary>Go create a table in the DataStore with the specified field names and types.</summary>
            <param name="tableName">Name of the table.</param>
            <param name="names">The names.</param>
            <param name="types">The types.</param>
        </member>
        <member name="M:Models.DataStore.WriteTable(Models.DataStore.TableToWrite[])">
            <summary>
            Write the specified tables to a single table in the DB. i.e. merge
            all columns and rows in all specified tables into a single table.
            </summary>
            <param name="tables">The tables.</param>
        </member>
        <member name="M:Models.DataStore.GetSimulationID(System.String)">
            <summary>
            Return the simulation id (from the simulations table) for the specified name.
            If this name doesn't exist in the table then append a new row to the table and
            returns its id.
            </summary>
            <param name="simulationName">Name of the simulation.</param>
            <returns></returns>
        </member>
        <member name="M:Models.DataStore.WriteAllTables(Models.DataStore,System.String)">
            <summary>Create a text report from tables in this data store.</summary>
            <param name="dataStore">The data store.</param>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Models.DataStore.AddMissingColumnsToTable(APSIM.Shared.Utilities.SQLite,System.String,System.String[],System.Type[])">
            <summary>
            Go through the specified names and add them to the specified table if they are not
            already there.
            </summary>
            <param name="Connection">The connection.</param>
            <param name="tableName">Name of the table.</param>
            <param name="names">The names.</param>
            <param name="types">The types.</param>
        </member>
        <member name="M:Models.DataStore.PrepareInsertIntoTable(APSIM.Shared.Utilities.SQLite,System.String,System.String[])">
            <summary>Go prepare an insert into query and return the query.</summary>
            <param name="Connection">The connection.</param>
            <param name="tableName">Name of the table.</param>
            <param name="names">The names.</param>
            <returns></returns>
        </member>
        <member name="M:Models.DataStore.AddSimulationIDColumnToTable(System.Data.DataTable)">
            <summary>
            Using the SimulationName column in the specified 'table', add a
            SimulationID column.
            </summary>
            <param name="table">The table.</param>
            <exception cref="T:Models.Core.ApsimXException">Cannot find Simulations table</exception>
        </member>
        <member name="M:Models.DataStore.GetSQLColumnType(System.Type)">
            <summary>Convert the specified type to a SQL type.</summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="P:Models.DataStore.Filename">
            <summary>The filename of the SQLite .db</summary>
            <value>The filename.</value>
        </member>
        <member name="P:Models.DataStore.AutoExport">
            <summary>
            Gets or sets a value indicating whether the data store should export to text files
            automatically when all simulations finish.
            </summary>
            <value><c>true</c> if [automatic export]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Models.DataStore.SimulationNames">
            <summary>Return a list of simulations names or empty string[]. Never returns null.</summary>
            <value>The simulation names.</value>
        </member>
        <member name="P:Models.DataStore.TableNames">
            <summary>Return a list of table names or empty string[]. Never returns null.</summary>
            <value>The table names.</value>
        </member>
        <member name="T:Models.DataStore.TableToWrite">
            <summary>A sub class for holding information about a table write.</summary>
        </member>
        <member name="F:Models.DataStore.TableToWrite.FileName">
            <summary>The file name</summary>
        </member>
        <member name="F:Models.DataStore.TableToWrite.SimulationName">
            <summary>The simulation name</summary>
        </member>
        <member name="F:Models.DataStore.TableToWrite.SimulationID">
            <summary>The simulation identifier</summary>
        </member>
        <member name="F:Models.DataStore.TableToWrite.TableName">
            <summary>The table name</summary>
        </member>
        <member name="F:Models.DataStore.TableToWrite.Data">
            <summary>The data</summary>
        </member>
        <member name="T:Models.DataStore.DbMutex">
            <summary>
            This class encapsulates a simple lock mechanism. It is used by DataStore to
            apply file level locking.
            </summary>
        </member>
        <member name="F:Models.DataStore.DbMutex.Locked">
            <summary>The locked</summary>
        </member>
        <member name="M:Models.DataStore.DbMutex.Aquire">
            <summary>Aquire a lock. If already locked then wait a bit.</summary>
        </member>
        <member name="M:Models.DataStore.DbMutex.Release">
            <summary>Release a lock.</summary>
        </member>
        <member name="T:Models.DataStore.ErrorLevel">
            <summary>
            An enum that is used to indicate message severity when writing messages to the .db
            </summary>
        </member>
        <member name="F:Models.DataStore.ErrorLevel.Information">
            <summary>Information</summary>
        </member>
        <member name="F:Models.DataStore.ErrorLevel.Warning">
            <summary>Warning</summary>
        </member>
        <member name="F:Models.DataStore.ErrorLevel.Error">
            <summary>Error</summary>
        </member>
        <member name="T:Models.PMF.Organs.Nodule">
            <summary>
            Nodule organ
            Has three options for N fixation methods set by the NFixation property
            1. None means the nodule will fix no N 
            2. Majic means the nodule will fix as much N as the plant demands at no DM cost
            3. FullCost requires parameters additional parameters of FixationMetabolicCost, SpecificNitrogenaseActivity
               FT, FW, FWlog and a DMDemandFunction.  This calculates N fixation supply from the wt of the nodules
               and these parameters at a cost specified by the FixationMetabolicCost parameter
            </summary>
        </member>
        <member name="F:Models.PMF.Organs.Nodule.FixationMetabolicCost">
            <summary>The fixation metabolic cost</summary>
        </member>
        <member name="F:Models.PMF.Organs.Nodule.SpecificNitrogenaseActivity">
            <summary>The specific nitrogenase activity</summary>
        </member>
        <member name="F:Models.PMF.Organs.Nodule.FT">
            <summary>The ft</summary>
        </member>
        <member name="F:Models.PMF.Organs.Nodule.FW">
            <summary>The fw</summary>
        </member>
        <member name="F:Models.PMF.Organs.Nodule.FWlog">
            <summary>The f wlog</summary>
        </member>
        <member name="M:Models.PMF.Organs.Nodule.OnStartOfDay(System.Object,System.EventArgs)">
            <summary>Event from sequencer telling us to do phenology events.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Models.PMF.Organs.Nodule.NFixationOption">
            <summary>The method used to determine N fixation</summary>
        </member>
        <member name="P:Models.PMF.Organs.Nodule.RespiredWt">
            <summary>The respired wt</summary>
        </member>
        <member name="P:Models.PMF.Organs.Nodule.PropFixationDemand">
            <summary>The property fixation demand</summary>
        </member>
        <member name="P:Models.PMF.Organs.Nodule.NFixed">
            /// <summary>Gets the n fixed.</summary>
            <value>The n fixed.</value>
        </member>
        <member name="P:Models.PMF.Organs.Nodule.NFixationCost">
            <summary>Gets or sets the n fixation cost.</summary>
            <value>The n fixation cost.</value>
        </member>
        <member name="P:Models.PMF.Organs.Nodule.NAllocation">
            <summary>Sets the n allocation.</summary>
            <value>The n allocation.</value>
        </member>
        <member name="P:Models.PMF.Organs.Nodule.RespiredWtFixation">
            <summary>Gets the respired wt fixation.</summary>
            <value>The respired wt fixation.</value>
        </member>
        <member name="P:Models.PMF.Organs.Nodule.NSupply">
            <summary>Gets or sets the n supply.</summary>
            <value>The n supply.</value>
        </member>
        <member name="P:Models.PMF.Organs.Nodule.DMAllocation">
            <summary>Sets the dm allocation.</summary>
            <value>The dm allocation.</value>
        </member>
        <member name="T:Models.PMF.OilPalm.OilPalmUnderstory">
            <summary>
            A model of oil palm understory
            </summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalmUnderstory.plant_status">
            <summary>The plant_status</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalmUnderstory.Crop_Type">
            <summary>The crop_ type</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalmUnderstory.cover_green">
            <summary>The cover_green</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalmUnderstory.RootDepth">
            <summary>The root depth</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalmUnderstory.SoilWat">
            <summary>The soil wat</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalmUnderstory.SoilN">
            <summary>The soil n</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalmUnderstory.MetData">
            <summary>The met data</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalmUnderstory.kl">
            <summary>The kl</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalmUnderstory.PotSWUptake">
            <summary>The pot sw uptake</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalmUnderstory.SWUptake">
            <summary>The sw uptake</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalmUnderstory.PEP">
            <summary>The pep</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalmUnderstory.EP">
            <summary>The ep</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalmUnderstory.DltDM">
            <summary>The DLT dm</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalmUnderstory.FW">
            <summary>The fw</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalmUnderstory.PotNUptake">
            <summary>The pot n uptake</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalmUnderstory.NUptake">
            <summary>The n uptake</summary>
        </member>
        <member name="M:Models.PMF.OilPalm.OilPalmUnderstory.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>Called when [simulation commencing].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.OilPalm.OilPalmUnderstory.OnSow(Models.PMF.SowPlant2Type)">
            <summary>Called when [sow].</summary>
            <param name="Sow">The sow.</param>
        </member>
        <member name="M:Models.PMF.OilPalm.OilPalmUnderstory.OnDoPlantGrowth(System.Object,System.EventArgs)">
            <summary>Called when [do plant growth].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.OilPalm.OilPalmUnderstory.DoGrowth">
            <summary>Does the growth.</summary>
        </member>
        <member name="M:Models.PMF.OilPalm.OilPalmUnderstory.DoWaterBalance">
            <summary>Does the water balance.</summary>
        </member>
        <member name="M:Models.PMF.OilPalm.OilPalmUnderstory.DoNBalance">
            <summary>Does the n balance.</summary>
        </member>
        <member name="M:Models.PMF.OilPalm.OilPalmUnderstory.RootProportion(System.Int32,System.Double)">
            <summary>Roots the proportion.</summary>
            <param name="layer">The layer.</param>
            <param name="root_depth">The root_depth.</param>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.OilPalm.OilPalmUnderstory.LayerIndex(System.Double)">
            <summary>Layers the index.</summary>
            <param name="depth">The depth.</param>
            <returns></returns>
            <exception cref="T:System.Exception">Depth deeper than bottom of soil profile</exception>
        </member>
        <member name="E:Models.PMF.OilPalm.OilPalmUnderstory.NitrogenChanged">
            <summary>Occurs when [nitrogen changed].</summary>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalmUnderstory.NFixation">
            <summary>Gets or sets the n fixation.</summary>
            <value>The n fixation.</value>
        </member>
        <member name="E:Models.PMF.OilPalm.OilPalmUnderstory.BiomassRemoved">
            <summary>Occurs when [biomass removed].</summary>
        </member>
        <member name="E:Models.PMF.OilPalm.OilPalmUnderstory.NewCrop">
            <summary>Occurs when [new crop].</summary>
        </member>
        <member name="E:Models.PMF.OilPalm.OilPalmUnderstory.Sowing">
            <summary>Occurs when [sowing].</summary>
        </member>
        <member name="T:Models.PMF.OilPalm.OilPalmUnderstory.NitrogenChangedDelegate">
            <summary>
            
            </summary>
            <param name="Data">The data.</param>
        </member>
        <member name="T:Models.PMF.Functions.VariableReference">
            <summary>
            Return the value of a nominated internal \ref Models.PMF.Plant "Plant" numerical variable
            </summary>
            \warning You have to specify the full path of numerical variable, which starts from the child of \ref Models.PMF.Plant "Plant".
            For example,  <b>[Phenology].ThermalTime.Value</b> refers to value of ThermalTime under phenology function.
        </member>
        <member name="M:Models.PMF.Functions.VariableReference.Document(System.Collections.Generic.List{Models.Core.AutoDocumentation.ITag},System.Int32,System.Int32)">
            <summary>Writes documentation for this function by adding to the list of documentation tags.</summary>
            <param name="tags">The list of tags to add to.</param>
            <param name="headingLevel">The level (e.g. H2) of the headings.</param>
            <param name="indent">The level of indentation 1, 2, 3 etc.</param>
        </member>
        <member name="P:Models.PMF.Functions.VariableReference.VariableName">
            <summary>The variable name</summary>
        </member>
        <member name="P:Models.PMF.Functions.VariableReference.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
        </member>
        <member name="T:Models.Manager">
            <summary>
            The manager model
            </summary>
        </member>
        <member name="F:Models.Manager._Code">
            <summary>The _ code</summary>
        </member>
        <member name="F:Models.Manager.HasDeserialised">
            <summary>The has deserialised</summary>
        </member>
        <member name="F:Models.Manager.elementsAsXml">
            <summary>The elements as XML</summary>
        </member>
        <member name="F:Models.Manager._Script">
            <summary>The _ script</summary>
        </member>
        <member name="F:Models.Manager._elements">
            <summary>The _elements</summary>
        </member>
        <member name="F:Models.Manager.CompiledCode">
            <summary>The compiled code</summary>
        </member>
        <member name="M:Models.Manager.OnLoaded">
            <summary>The model has been loaded.</summary>
        </member>
        <member name="M:Models.Manager.OnSerialising(System.Boolean)">
            <summary>
            We're about to be serialised. Remove our 'Script' model from the list
            of all models so that is isn't serialised. Seems .NET has a problem
            with serialising objects that have been compiled dynamically.
            </summary>
            <param name="xmlSerialisation">if set to <c>true</c> [XML serialisation].</param>
        </member>
        <member name="M:Models.Manager.OnSerialised(System.Boolean)">
            <summary>Serialisation has completed. Read our 'Script' model if necessary.</summary>
            <param name="xmlSerialisation">if set to <c>true</c> [XML serialisation].</param>
        </member>
        <member name="M:Models.Manager.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>At simulation commencing time, rebuild the script assembly if required.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.Manager.RebuildScriptModel">
            <summary>Rebuild the script model and return error message if script cannot be compiled.</summary>
            <exception cref="T:Models.Core.ApsimXException">
            Cannot find a public class called 'Script'
            </exception>
        </member>
        <member name="M:Models.Manager.NeedToCompileCode">
            <summary>Return true if the code needs to be recompiled.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.Manager.EnsureParametersAreCurrent">
            <summary>Ensures the parameters are up to date and reflect the current 'Script' model.</summary>
        </member>
        <member name="M:Models.Manager.SetParametersInObject(Models.Core.Model,System.Xml.XmlElement)">
            <summary>Set the scripts parameters from the 'xmlElement' passed in.</summary>
            <param name="script">The script.</param>
            <param name="xmlElement">The XML element.</param>
        </member>
        <member name="M:Models.Manager.GetParametersInObject(Models.Core.Model)">
            <summary>Get the scripts parameters as a returned xmlElement.</summary>
            <param name="script">The script.</param>
            <returns></returns>
        </member>
        <member name="P:Models.Manager.elements">
            <summary>Gets or sets the elements.</summary>
            <value>The elements.</value>
        </member>
        <member name="P:Models.Manager.CodeCData">
            <summary>Gets or sets the code c data.</summary>
            <value>The code c data.</value>
        </member>
        <member name="P:Models.Manager.Script">
            <summary>The script Model that has been compiled</summary>
            <value>The script.</value>
        </member>
        <member name="P:Models.Manager.Code">
            <summary>The code for the Manager script</summary>
            <value>The code.</value>
        </member>
        <member name="T:Models.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Models.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Models.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Models.Properties.Resources.OilPalm">
            <summary>
              Looks up a localized string similar to &lt;OilPalm&gt;
             &lt;Name&gt;OilPalm&lt;/Name&gt;
             &lt;Cultivar&gt;
               &lt;Name&gt;Dami&lt;/Name&gt;
               &lt;Memo&gt;
                 &lt;Name&gt;Memo&lt;/Name&gt;
                 &lt;MemoText&gt;&lt;![CDATA[The base configuration of the oil palm model has been configured to match commercial dura x pisifera palms developed in Dami, West New Britain in Papua New Guinea.  Other varieties are specified in terms of how they differ from this base variety.]]&gt;&lt;/MemoText&gt;
               &lt;/Memo&gt;    
               &lt;/Cultivar&gt;
             &lt;Cultivar&gt;
               &lt;Name&gt;SuperFamily&lt;/Name&gt;
               &lt;Command&gt;[FrondMaxArea].XYPairs.X  [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:Models.Properties.Resources.ResidueTypes">
             <summary>
               Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
            &lt;ResidueTypesList&gt;
              &lt;Name&gt;ResidueTypes&lt;/Name&gt;
              &lt;ResidueType&gt;
                &lt;fom_type&gt;base_type&lt;/fom_type&gt;
                &lt;fraction_C description=&quot;fraction of Carbon in FOM (0-1)&quot;&gt;0.4&lt;/fraction_C&gt;
                &lt;po4ppm description=&quot;labile P concentration(ppm)&quot;&gt;0.0&lt;/po4ppm&gt;
                &lt;nh4ppm description=&quot;ammonium N concentration (ppm)&quot;&gt;0.0&lt;/nh4ppm&gt;
                &lt;no3ppm description=&quot;nitrate N concentration (ppm)&quot;&gt;0.0&lt;/no3ppm&gt;
                &lt;specific_area description=&quot;specific area of residue (ha/kg&quot;&gt;0.0005&lt;/specifi [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Models.Properties.Resources.Slurp">
             <summary>
               Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
            &lt;Plant&gt;
              &lt;Name&gt;Slurp&lt;/Name&gt;
              &lt;CropType&gt;Slurp&lt;/CropType&gt;
              &lt;Cultivar&gt;
                &lt;Name&gt;StaticCrop&lt;/Name&gt;
                &lt;Alias&gt;StaticCrop&lt;/Alias&gt;
              &lt;/Cultivar&gt;
              &lt;OrganArbitrator&gt;
                &lt;Name&gt;Arbitrator&lt;/Name&gt;
                &lt;NArbitrationOption&gt;PriorityThenRelativeAllocation&lt;/NArbitrationOption&gt;
                &lt;DMArbitrationOption&gt;RelativeAllocation&lt;/DMArbitrationOption&gt;
              &lt;/OrganArbitrator&gt;
              &lt;Root&gt;
                &lt;Name&gt;Root&lt;/Name&gt;
                &lt;CompositeBiomass&gt;
                  &lt;Name&gt;Live&lt;/Name&gt;
                  &lt;Propertys&gt;
                  [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Models.Properties.Resources.Supplement">
             <summary>
               Looks up a localized string similar to Name                              |R    DM    DMD    M/D     EE     CP     dg    ADIP     P        S       AA    MaxP Locales
            Alfalfa Hay Early-bloom           |Y  0.900  0.640   9.50  0.030  0.200  0.650  0.110  0.00250  0.00300  1.200  0.000 ca;us         es:&quot;Alfalfa Heno florac temprana&quot;
            Alfalfa Hay Full-bloom            |Y  0.900  0.610   9.00  0.030  0.170  0.650  0.160  0.00240  0.00300  1.200  0.000 ca;us         es:&quot;Alfalfa Heno plena floración&quot;
            Alfalfa Hay Mature                |Y  0.900  0.540  [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Models.Properties.Resources.Wheat">
            <summary>
              Looks up a localized string similar to &lt;Plant15&gt;
             &lt;Name&gt;Wheat&lt;/Name&gt;
             &lt;AutoHarvest&gt;false&lt;/AutoHarvest&gt;
             &lt;CropType&gt;Wheat&lt;/CropType&gt;
             &lt;EOCropFactor&gt;1.5&lt;/EOCropFactor&gt;
             &lt;NSupplyPreference&gt;active&lt;/NSupplyPreference&gt;
             &lt;DoRetranslocationBeforeNDemand&gt;false&lt;/DoRetranslocationBeforeNDemand&gt;
             &lt;RemovedByAnimal /&gt;
             &lt;Population1&gt;
               &lt;Name&gt;Population&lt;/Name&gt;
               &lt;PhaseBasedSwitch&gt;
                 &lt;Name&gt;CropFailureStressPeriod&lt;/Name&gt;
                 &lt;Start&gt;Emergence&lt;/Start&gt;
                 &lt;End&gt;Flowering&lt;/End&gt;
               &lt;/PhaseBasedSwitch&gt;
               &lt;SoilTemperatureWeightedFunc [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="T:Models.Factorial.Factor">
            <summary>
            A class representing a series of factor values.
            </summary>
        </member>
        <member name="M:Models.Factorial.Factor.CreateValues">
            <summary>
            Return all possible factor values for this factor.
            </summary>
        </member>
        <member name="M:Models.Factorial.Factor.ParseSimpleSpecification(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object})">
            <summary>
            Convert a simple specification into factor values.
            </summary>
            <param name="specification">The specification to examine</param>
            <param name="paths">The return list of factor paths</param>
            <param name="values">The return list of factor values</param>
        </member>
        <member name="M:Models.Factorial.Factor.ParseRangeSpecification(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object})">
            <summary>
            Convert a range specification into factor values.
            </summary>
            <param name="specification">The specification to examine</param>
            <param name="paths">The return list of factor paths</param>
            <param name="values">The return list of factor values</param>
        </member>
        <member name="M:Models.Factorial.Factor.ParseModelReplacementSpecification(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object})">
            <summary>
            Convert a range specification into factor values.
            </summary>
            <param name="specification">The specification to examine</param>
            <param name="paths">The return list of factor paths</param>
            <param name="values">The return list of factor values</param>
        </member>
        <member name="P:Models.Factorial.Factor.Specifications">
            <summary>
            A list of factor specifications.
            </summary>
        </member>
        <member name="T:Models.PMF.CanopyProperties">
            <summary>
            Holds the collection of canopy properties that each crop must supply to the rest of the world
            </summary>
        </member>
        <member name="F:Models.PMF.CanopyProperties.Name">
            <summary>
            The name as it appears in the GUI e.g. "Wheat3" ??? is this really needed?  Note looking up other properties any more.
            </summary>
        </member>
        <member name="P:Models.PMF.CanopyProperties.LAIGreen">
            <summary>
            Green leaf area index (m2/m2) 
            Used in the light and energy arbitration
            </summary>
        </member>
        <member name="P:Models.PMF.CanopyProperties.LAItot">
            <summary>
            Total (includes dead) leaf area index (m2/m2) 
            Used in the light and energy arbitration
            </summary>
        </member>
        <member name="P:Models.PMF.CanopyProperties.CoverGreen">
            <summary>
            Green cover (m2/m2) - fractional cover resulting from the assigned LAI, 
            Calculate this using an assumed light interception coefficient
            Used in the light and energy arbitration
            </summary>
        </member>
        <member name="P:Models.PMF.CanopyProperties.CoverTot">
            <summary>
            Total (green and dead) cover (m2/m2) - fractional cover resulting from the assigned LAItot, 
            Calculate this using an assumed light interception coefficient
            Used in the light and energy arbitration
            </summary>
        </member>
        <member name="P:Models.PMF.CanopyProperties.CanopyHeight">
            <summary>
            Height to the top of the canopy (mm) 
            Used in the light and energy arbitration
            </summary>
        </member>
        <member name="P:Models.PMF.CanopyProperties.CanopyDepth">
            <summary>
            Depth of the canopy (mm).  If the canopy is continuous from the ground to the top of the canopy then 
            the depth = height, otherwise depth must be less than the height
            Used in the light and energy arbitration
            </summary>
        </member>
        <member name="P:Models.PMF.CanopyProperties.MaximumStomatalConductance">
            <summary>
            Stomatal conductance in (m/s) that will be seen under non-limiting light, humidity and nutrients
            For default values see:
                Kelliher, FM, Leuning, R, Raupach, MR, Schulze, E-D (1995) Maximum conductances for evaporation from 
                global vegetation types. Agricultural and Forest Meteorology 73, 1–16.
                DOI: 10.1016/0168-1923(94)02178-M
            </summary>
        </member>
        <member name="P:Models.PMF.CanopyProperties.HalfSatStomatalConductance">
            <summary>
            HalfSatStomatalConductance (W/m2) is the indicent solar radiation at which stomatal conductance is half of MaximumStomatalConductance
            It is generally about 200 W/m2 for agricultural crops but about 150 W/m2 in C4 plants.  This is used in the calculation of canopy conductance 
            and so feeds into the calculation of water demand.
            </summary>
        </member>
        <member name="P:Models.PMF.CanopyProperties.CanopyEmissivity">
            <summary>
            Canopy emissivity (-) is used in the calculation of long-wave radiation.  A value of 0.96 is generally acceptable.
            </summary>
        </member>
        <member name="P:Models.PMF.CanopyProperties.Albedo">
            <summary>
            Albedo (-) is the proprotion of radiation that is reflected and is used in the calculation of the radiation balance.
            </summary>
        </member>
        <member name="P:Models.PMF.CanopyProperties.Frgr">
            <summary>
            Fractional relative growth rate (-) with 1.0 at full growth rate and 0.0 at no growth
            Used in the calculation of actual stomatal conductance by scaling back the MaximumStomatalConductance 
            for stresses other than humidity, water deficit, temperature.  Usually has a value of 1.0.
            </summary>
        </member>
        <member name="T:Models.Program">
            <summary>
            Class to hold a static main entry point.
            </summary>
        </member>
        <member name="M:Models.Program.Main(System.String[])">
            <summary>
            Main program entry point.
            </summary>
            <param name="args"> Command line arguments</param>
            <returns> Program exit code (0 for success)</returns>
        </member>
        <member name="M:Models.Program.RunSingleThreaded(System.String)">
            <summary>
            Run all simulations in the specified 'fileName' in a serial mode.
            i.e. don't use the multi-threaded JobManager. Useful for profiling.
            </summary>
            <param name="fileName"> the name of file to run </param>
        </member>
        <member name="M:Models.Program.GetFileList(System.String,System.Boolean)">
            <summary>
            Get a list of files (apsimx, weather, input, etc) to send to remote computer.
            </summary>
            <param name="fileName">The file name to parse (Can include wildcard *).</param>
            <param name="doRecurse">Recurse through sub directories?</param>
            <returns>A list of file names.</returns>
        </member>
        <member name="M:Models.Program.DoNetworkRun(System.String,System.String,System.Boolean)">
            <summary>
            Send our .apsimx and associated weather files over the network
            </summary>
            <param name="fileName">The .apsimx file to send.</param>
            <param name="serverIP">IP address of server to talk to </param>
            <param name="doRecurse">Recurse through sub directories?</param>
        </member>
        <member name="T:Models.Program.RunDirectoryOfApsimFiles">
            <summary>
            This runnable class finds .apsimx files on the 'fileSpec' passed into
            the constructor. If 'recurse' is true then it will also recursively
            look for files in sub directories.
            </summary>
        </member>
        <member name="F:Models.Program.RunDirectoryOfApsimFiles.jobs">
            <summary>Gets or sets the jobs.</summary>
            <value>The jobs.</value>
        </member>
        <member name="M:Models.Program.RunDirectoryOfApsimFiles.Run(System.Object,System.ComponentModel.DoWorkEventArgs)">
            <summary>
            Run this job.
            </summary>
            <param name="sender">A system telling us to go </param>
            <param name="e">Arguments to same </param>
        </member>
        <member name="P:Models.Program.RunDirectoryOfApsimFiles.IsCompleted">
            <summary>Gets a value indicating whether this job is completed. Set by JobManager.</summary>
        </member>
        <member name="P:Models.Program.RunDirectoryOfApsimFiles.ErrorMessage">
            <summary>Gets the error message. Can be null if no error. Set by JobManager.</summary>
        </member>
        <member name="P:Models.Program.RunDirectoryOfApsimFiles.IsComputationallyTimeConsuming">
            <summary>Gets a value indicating whether this instance is computationally time consuming.</summary>
        </member>
        <member name="P:Models.Program.RunDirectoryOfApsimFiles.FileSpec">
            <summary>
            Gets or sets the filespec that we will look for
            </summary>
        </member>
        <member name="P:Models.Program.RunDirectoryOfApsimFiles.DoRecurse">
            <summary>
            Gets or sets a value indicating whether we search recursively for files matching 
            </summary>
        </member>
        <member name="T:Models.Soils.SwimSubsurfaceDrain">
            <summary>
            SWIM sub surface drain model
            </summary>
        </member>
        <member name="P:Models.Soils.SwimSubsurfaceDrain.DrainDepth">
            <summary>Gets or sets the drain depth.</summary>
            <value>The drain depth.</value>
        </member>
        <member name="P:Models.Soils.SwimSubsurfaceDrain.DrainSpacing">
            <summary>Gets or sets the drain spacing.</summary>
            <value>The drain spacing.</value>
        </member>
        <member name="P:Models.Soils.SwimSubsurfaceDrain.DrainRadius">
            <summary>Gets or sets the drain radius.</summary>
            <value>The drain radius.</value>
        </member>
        <member name="P:Models.Soils.SwimSubsurfaceDrain.Klat">
            <summary>Gets or sets the klat.</summary>
            <value>The klat.</value>
        </member>
        <member name="P:Models.Soils.SwimSubsurfaceDrain.ImpermDepth">
            <summary>Gets or sets the imperm depth.</summary>
            <value>The imperm depth.</value>
        </member>
        <member name="T:Models.Soils.SoilTemperature2">
            <summary>
            A model for capturing soil temperature parameters
            </summary>
        </member>
        <member name="P:Models.Soils.SoilTemperature2.MaxTTimeDefault">
            <summary>Gets or sets the maximum t time default.</summary>
            <value>The maximum t time default.</value>
        </member>
        <member name="P:Models.Soils.SoilTemperature2.BoundaryLayerConductanceSource">
            <summary>Gets or sets the boundary layer conductance source.</summary>
            <value>The boundary layer conductance source.</value>
        </member>
        <member name="P:Models.Soils.SoilTemperature2.BoundaryLayerConductance">
            <summary>Gets or sets the boundary layer conductance.</summary>
            <value>The boundary layer conductance.</value>
        </member>
        <member name="P:Models.Soils.SoilTemperature2.BoundaryLayerConductanceIterations">
            <summary>Gets or sets the boundary layer conductance iterations.</summary>
            <value>The boundary layer conductance iterations.</value>
        </member>
        <member name="P:Models.Soils.SoilTemperature2.NetRadiationSource">
            <summary>Gets or sets the net radiation source.</summary>
            <value>The net radiation source.</value>
        </member>
        <member name="P:Models.Soils.SoilTemperature2.DefaultWindSpeed">
            <summary>Gets or sets the default wind speed.</summary>
            <value>The default wind speed.</value>
        </member>
        <member name="P:Models.Soils.SoilTemperature2.DefaultAltitude">
            <summary>Gets or sets the default altitude.</summary>
            <value>The default altitude.</value>
        </member>
        <member name="P:Models.Soils.SoilTemperature2.DefaultInstrumentHeight">
            <summary>Gets or sets the default height of the instrument.</summary>
            <value>The default height of the instrument.</value>
        </member>
        <member name="P:Models.Soils.SoilTemperature2.BareSoilHeight">
            <summary>Gets or sets the height of the bare soil.</summary>
            <value>The height of the bare soil.</value>
        </member>
        <member name="P:Models.Soils.SoilTemperature2.Note">
            <summary>Gets or sets the note.</summary>
            <value>The note.</value>
        </member>
        <member name="T:Models.PMF.Phen.MolecularPhenology">
            <summary>
            Molecular phenology model
            </summary>
        </member>
        <member name="F:Models.PMF.Phen.MolecularPhenology.Phenology">
            <summary>The phenology</summary>
        </member>
        <member name="F:Models.PMF.Phen.MolecularPhenology.Structure">
            <summary>The structure</summary>
        </member>
        <member name="F:Models.PMF.Phen.MolecularPhenology.Plant">
            <summary>The plant</summary>
        </member>
        <member name="F:Models.PMF.Phen.MolecularPhenology.Vrn1rate">
            <summary>The vrn1rate</summary>
        </member>
        <member name="F:Models.PMF.Phen.MolecularPhenology.Vrn2rate">
            <summary>The vrn2rate</summary>
        </member>
        <member name="F:Models.PMF.Phen.MolecularPhenology.Vrn3rate">
            <summary>The vrn3rate</summary>
        </member>
        <member name="F:Models.PMF.Phen.MolecularPhenology.AccumulatedVernalisation">
            <summary>The accumulated vernalisation</summary>
        </member>
        <member name="F:Models.PMF.Phen.MolecularPhenology.Vrn1">
            <summary>The VRN1</summary>
        </member>
        <member name="F:Models.PMF.Phen.MolecularPhenology.Vrn2">
            <summary>The VRN2</summary>
        </member>
        <member name="F:Models.PMF.Phen.MolecularPhenology.Vrn3">
            <summary>The VRN3</summary>
        </member>
        <member name="F:Models.PMF.Phen.MolecularPhenology.Vrn4">
            <summary>The VRN4</summary>
        </member>
        <member name="F:Models.PMF.Phen.MolecularPhenology.Vrn1Target">
            <summary>The VRN1 target</summary>
        </member>
        <member name="F:Models.PMF.Phen.MolecularPhenology.Tt">
            <summary>The tt</summary>
        </member>
        <member name="F:Models.PMF.Phen.MolecularPhenology.DeltaHaunStage">
            <summary>The delta haun stage</summary>
        </member>
        <member name="F:Models.PMF.Phen.MolecularPhenology.FIHS">
            <summary>The fihs</summary>
        </member>
        <member name="F:Models.PMF.Phen.MolecularPhenology.TSHS">
            <summary>The TSHS</summary>
        </member>
        <member name="F:Models.PMF.Phen.MolecularPhenology.FLN">
            <summary>The FLN</summary>
        </member>
        <member name="F:Models.PMF.Phen.MolecularPhenology.IsPreVernalised">
            <summary>The is pre vernalised</summary>
        </member>
        <member name="F:Models.PMF.Phen.MolecularPhenology.IsVernalised">
            <summary>The is vernalised</summary>
        </member>
        <member name="F:Models.PMF.Phen.MolecularPhenology.IsInduced">
            <summary>The is induced</summary>
        </member>
        <member name="F:Models.PMF.Phen.MolecularPhenology.IsReproductive">
            <summary>The is reproductive</summary>
        </member>
        <member name="F:Models.PMF.Phen.MolecularPhenology.VrnRateAt0">
            <summary>The VRN rate at0</summary>
        </member>
        <member name="F:Models.PMF.Phen.MolecularPhenology.VrnRateAt30">
            <summary>The VRN rate at30</summary>
        </member>
        <member name="F:Models.PMF.Phen.MolecularPhenology.VrnRateCurve">
            <summary>The VRN rate curve</summary>
        </member>
        <member name="F:Models.PMF.Phen.MolecularPhenology.BaseVrn1Target">
            <summary>The base VRN1 target</summary>
        </member>
        <member name="M:Models.PMF.Phen.MolecularPhenology.OnCommencing">
            <summary>Called when [commencing].</summary>
        </member>
        <member name="M:Models.PMF.Phen.MolecularPhenology.OnDoDailyInitialisation(System.Object,System.EventArgs)">
            <summary>Called when [do daily initialisation].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Models.PMF.OldPlant.Leaf1">
            <summary>
            A leaf organ for Plant15
            </summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.max_node">
            <summary>The max_node</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.Plant">
            <summary>The plant</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.Stem">
            <summary>The stem</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.Environment">
            <summary>The environment</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.Photosynthesis">
            <summary>The photosynthesis</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.Population">
            <summary>The population</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.Phenology">
            <summary>The phenology</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.TEModifier">
            <summary>The te modifier</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.NConcCriticalModifier">
            <summary>The n conc critical modifier</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.TE">
            <summary>The te</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.LeafSize">
            <summary>The leaf size</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.SWStress">
            <summary>The sw stress</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.NStress">
            <summary>The n stress</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.PStress">
            <summary>The p stress</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.PlantSpatial">
            <summary>The plant spatial</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.SLAMax">
            <summary>The sla maximum</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.LeafNumberFraction">
            <summary>The leaf number fraction</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.ExtinctionCoefficient">
            <summary>The extinction coefficient</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.ExtinctionCoefficientDead">
            <summary>The extinction coefficient dead</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.NConcentrationCritical">
            <summary>The n concentration critical</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.NConcentrationMinimum">
            <summary>The n concentration minimum</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.NConcentrationMaximum">
            <summary>The n concentration maximum</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.MetData">
            <summary>The met data</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.NodeFormationPeriod">
            <summary>The node formation period</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.NodeAppearanceRate">
            <summary>The node appearance rate</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.LeavesPerNode">
            <summary>The leaves per node</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.LeafSenescencePeriod">
            <summary>The leaf senescence period</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.LeafSenescenceFrost">
            <summary>The leaf senescence frost</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.DMSenescenceFraction">
            <summary>The dm senescence fraction</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.TotalLive">
            <summary>The total live</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.GrowthStructuralFractionStage">
            <summary>The growth structural fraction stage</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.CO2">
            <summary>The c o2</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.dlt_dm_pot_rue">
            <summary>The dlt_dm_pot_rue</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.dlt_n_senesced_retrans">
            <summary>The dlt_n_senesced_retrans</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.dlt_n_senesced_trans">
            <summary>The dlt_n_senesced_trans</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.dlt_height">
            <summary>The dlt_height</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.dlt_width">
            <summary>The dlt_width</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.width">
            <summary>The width</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1._NDemand">
            <summary>The _ n demand</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1._SoilNDemand">
            <summary>The _ soil n demand</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.NMax">
            <summary>The n maximum</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.sw_demand_te">
            <summary>The sw_demand_te</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.sw_demand">
            <summary>The sw_demand</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.n_conc_crit">
            <summary>The n_conc_crit</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.n_conc_max">
            <summary>The n_conc_max</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.n_conc_min">
            <summary>The n_conc_min</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.radiationInterceptedGreen">
            <summary>The radiation intercepted green</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1._LeavesPerNode">
            <summary>The _ leaves per node</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1._LAI">
            <summary>The _ lai</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.maxLAI">
            <summary>The maximum lai</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1._SLAI">
            <summary>The _ slai</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.dltLAI">
            <summary>The DLT lai</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.dltSLAI">
            <summary>The DLT slai</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.dltLAI_pot">
            <summary>The DLT la i_pot</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.dltLAI_stressed">
            <summary>The DLT la i_stressed</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.dltLAI_carbon">
            <summary>The DLT la i_carbon</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.dltSLAI_detached">
            <summary>The DLT sla i_detached</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.dltSLAI_age">
            <summary>The DLT sla i_age</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.dltSLAI_light">
            <summary>The DLT sla i_light</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.dltSLAI_water">
            <summary>The DLT sla i_water</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.dltSLAI_frost">
            <summary>The DLT sla i_frost</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.dltLeafNo">
            <summary>The DLT leaf no</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.dltLeafNoPot">
            <summary>The DLT leaf no pot</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.dltLeafNoSen">
            <summary>The DLT leaf no sen</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.dltNodeNoPot">
            <summary>The DLT node no pot</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.ExternalSWDemand">
            <summary>The external sw demand</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.transpEff">
            <summary>The transp eff</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.LeafNo">
            <summary>The leaf no</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.LeafNoSen">
            <summary>The leaf no sen</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.dltNodeNo">
            <summary>The DLT node no</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Leaf1.LeafArea">
            <summary>The leaf area</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Leaf1.DoSWDemand(System.Double)">
            <summary>Does the sw demand.</summary>
            <param name="Supply">The supply.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Leaf1.DoSWUptake(System.Double)">
            <summary>Does the sw uptake.</summary>
            <param name="SWDemand">The sw demand.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Leaf1.DoDMDemand(System.Double)">
            <summary>Does the dm demand.</summary>
            <param name="DMSupply">The dm supply.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Leaf1.DoDmRetranslocate(System.Double,System.Double)">
            <summary>Does the dm retranslocate.</summary>
            <param name="dlt_dm_retrans_to_fruit">The dlt_dm_retrans_to_fruit.</param>
            <param name="demand_differential_begin">The demand_differential_begin.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Leaf1.GiveDmGreen(System.Double)">
            <summary>Gives the dm green.</summary>
            <param name="Delta">The delta.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Leaf1.DoSenescence">
            <summary>Does the senescence.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Leaf1.DoDetachment">
            <summary>Does the detachment.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Leaf1.RemoveBiomass">
            <summary>Removes the biomass.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Leaf1.DoNDemand(System.Boolean)">
            <summary>Does the n demand.</summary>
            <param name="IncludeRetransloation">if set to <c>true</c> [include retransloation].</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Leaf1.DoNDemand1Pot(System.Double)">
            <summary>Does the n demand1 pot.</summary>
            <param name="dltDmPotRue">The DLT dm pot rue.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Leaf1.DoSoilNDemand">
            <summary>Does the soil n demand.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Leaf1.DoNSupply">
            <summary>Does the n supply.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Leaf1.DoNRetranslocate(System.Double,System.Double)">
            <summary>Does the n retranslocate.</summary>
            <param name="NSupply">The n supply.</param>
            <param name="GrainNDemand">The grain n demand.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Leaf1.DoNSenescence">
            <summary>Does the n senescence.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Leaf1.DoNSenescedRetranslocation(System.Double,System.Double)">
            <summary>Does the n senesced retranslocation.</summary>
            <param name="navail">The navail.</param>
            <param name="n_demand_tot">The n_demand_tot.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Leaf1.DoNPartition(System.Double)">
            <summary>Does the n partition.</summary>
            <param name="GrowthN">The growth n.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Leaf1.DoNFixRetranslocate(System.Double,System.Double)">
            <summary>Does the n fix retranslocate.</summary>
            <param name="NFixUptake">The n fix uptake.</param>
            <param name="nFixDemandTotal">The n fix demand total.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Leaf1.DoNConccentrationLimits">
            <summary>Does the n conccentration limits.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Leaf1.ZeroDltNSenescedTrans">
            <summary>Zeroes the DLT n senesced trans.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Leaf1.DoNUptake(System.Double)">
            <summary>Does the n uptake.</summary>
            <param name="PotNFix">The pot n fix.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Leaf1.DoPotentialRUE">
            <summary>Does the potential rue.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Leaf1.interceptRadiation(System.Double)">
            <summary>Intercepts the radiation.</summary>
            <param name="incomingSolarRadiation">The incoming solar radiation.</param>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.OldPlant.Leaf1.DoCover">
            <summary>Does the cover.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Leaf1.Update">
            <summary>Updates this instance.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Leaf1.DoCanopyExpansion">
            <summary>Does the canopy expansion.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Leaf1.Actual">
            <summary>Actuals this instance.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Leaf1.LeafDeath">
            <summary>Leafs the death.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Leaf1.LeafAreaSenescence">
            <summary>Calculate todays leaf area senescence</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Leaf1.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>Called when [simulation commencing].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
            <exception cref="T:System.Exception">CO2 isn't at the default level, and model:  + Plant.Name +  has no CO2 parameterisations.</exception>
        </member>
        <member name="M:Models.PMF.OldPlant.Leaf1.OnPrepare(System.Object,System.EventArgs)">
            <summary>Called when [prepare].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Leaf1.OnHarvest(Models.PMF.OldPlant.HarvestType,Models.PMF.BiomassRemovedType)">
            <summary>Called when [harvest].</summary>
            <param name="Harvest">The harvest.</param>
            <param name="BiomassRemoved">The biomass removed.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Leaf1.OnEndCrop(Models.PMF.BiomassRemovedType)">
            <summary>Called when [end crop].</summary>
            <param name="BiomassRemoved">The biomass removed.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Leaf1.OnPhaseChanged(Models.PMF.Phen.PhaseChangedType)">
            <summary>Called when [phase changed].</summary>
            <param name="PhenologyChange">The phenology change.</param>
        </member>
        <member name="M:Models.PMF.OldPlant.Leaf1.InitialiseAreas">
            <summary>Initialises the areas.</summary>
        </member>
        <member name="M:Models.PMF.OldPlant.Leaf1.CalculateCover(System.Double,System.Double,System.Double)">
            <summary>Calculates the cover.</summary>
            <param name="LAI">The lai.</param>
            <param name="ExtinctionCoefficient">The extinction coefficient.</param>
            <param name="CanopyFactor">The canopy factor.</param>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.OldPlant.Leaf1.LeafNumberFromArea(System.Double[],System.Double[],System.Int32,System.Double)">
            <summary>Derives number of leaves to result in given cumulative area</summary>
            <param name="g_leaf_area">The g_leaf_area.</param>
            <param name="g_leaf_no">The g_leaf_no.</param>
            <param name="NumNodes">The number nodes.</param>
            <param name="pla">The pla.</param>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.OldPlant.Leaf1.LeafAreaSenescenceAge">
            <summary>
            Calculate the leaf senescence
            due to normal phenological (phasic, age) development
            </summary>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.OldPlant.Leaf1.LeafAreaSenescenceLight">
            <summary>Return the lai that would senesce on the current day due to shading</summary>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.OldPlant.Leaf1.LeafAreaSenescenceWater">
            <summary>Return the lai that would senesce on the current day due to water stress</summary>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.OldPlant.Leaf1.LeafAreaSenescencFrost">
            <summary>
            Return the lai that would senesce on the
            current day from low temperatures
            </summary>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.OldPlant.Leaf1.RemoveDetachment(System.Double,System.Double)">
            <summary>Remove detachment from leaf area record</summary>
            <param name="dlt_slai_detached">The dlt_slai_detached.</param>
            <param name="dlt_lai_removed">The dlt_lai_removed.</param>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.CanopyType">
            <summary>Canopy type</summary>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.LAI">
            <summary>Gets the lai.</summary>
            <value>The lai.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.LAITotal">
            <summary>Gets the lai total.</summary>
            <value>The lai total.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.CoverGreen">
            <summary>Gets or sets the cover green.</summary>
            <value>The cover green.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.CoverTotal">
            <summary>Gets the cover total.</summary>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.Height">
            <summary>Gets the canopy height (mm)</summary>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.Depth">
            <summary>Gets the canopy depth (mm)</summary>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.FRGR">
            <summary>Gets  FRGR.</summary>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.PotentialEP">
            <summary>Sets the potential evapotranspiration.</summary>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.LightProfile">
            <summary>Sets the light profile.</summary>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.NodeNumberCorrection">
            <summary>Gets or sets the node number correction.</summary>
            <value>The node number correction.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.SLAMin">
            <summary>Gets or sets the sla minimum.</summary>
            <value>The sla minimum.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.FractionLeafSenescenceRate">
            <summary>Gets or sets the fraction leaf senescence rate.</summary>
            <value>The fraction leaf senescence rate.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.NodeSenescenceRate">
            <summary>Gets or sets the node senescence rate.</summary>
            <value>The node senescence rate.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.NFactLeafSenescenceRate">
            <summary>Gets or sets the n fact leaf senescence rate.</summary>
            <value>The n fact leaf senescence rate.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.MinTPLA">
            <summary>Gets or sets the minimum tpla.</summary>
            <value>The minimum tpla.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.NDeficitUptakeFraction">
            <summary>Gets or sets the n deficit uptake fraction.</summary>
            <value>The n deficit uptake fraction.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.InitialWt">
            <summary>Gets or sets the initial wt.</summary>
            <value>The initial wt.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.InitialNConcentration">
            <summary>Gets or sets the initial n concentration.</summary>
            <value>The initial n concentration.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.InitialTPLA">
            <summary>Gets or sets the initial tpla.</summary>
            <value>The initial tpla.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.InitialLeafNumber">
            <summary>Gets or sets the initial leaf number.</summary>
            <value>The initial leaf number.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.LAISenLight">
            <summary>Gets or sets the lai sen light.</summary>
            <value>The lai sen light.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.SenLightSlope">
            <summary>Gets or sets the sen light slope.</summary>
            <value>The sen light slope.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.SenRateWater">
            <summary>Gets or sets the sen rate water.</summary>
            <value>The sen rate water.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.NSenescenceConcentration">
            <summary>Gets or sets the n senescence concentration.</summary>
            <value>The n senescence concentration.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.SenescenceDetachmentFraction">
            <summary>Gets or sets the senescence detachment fraction.</summary>
            <value>The senescence detachment fraction.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.NodeNo">
            <summary>Gets or sets the node no.</summary>
            <value>The node no.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.Senescing">
            <summary>Gets or sets the senescing.</summary>
            <value>The senescing.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.Retranslocation">
            <summary>Gets or sets the retranslocation.</summary>
            <value>The retranslocation.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.Growth">
            <summary>Gets or sets the growth.</summary>
            <value>The growth.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.Detaching">
            <summary>Gets or sets the detaching.</summary>
            <value>The detaching.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.GreenRemoved">
            <summary>Gets or sets the green removed.</summary>
            <value>The green removed.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.SenescedRemoved">
            <summary>Gets or sets the senesced removed.</summary>
            <value>The senesced removed.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.SWSupply">
            <summary>Gets the sw supply.</summary>
            <value>The sw supply.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.SWDemand">
            <summary>Gets the sw demand.</summary>
            <value>The sw demand.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.SWUptake">
            <summary>Gets the sw uptake.</summary>
            <value>The sw uptake.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.DMSupply">
            <summary>Gets the dm supply.</summary>
            <value>The dm supply.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.DMRetransSupply">
            <summary>Gets the dm retrans supply.</summary>
            <value>The dm retrans supply.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.dltDmPotRue">
            <summary>Gets the DLT dm pot rue.</summary>
            <value>The DLT dm pot rue.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.DMGreenDemand">
            <summary>Gets the dm green demand.</summary>
            <value>The dm green demand.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.DMDemandDifferential">
            <summary>Gets the dm demand differential.</summary>
            <value>The dm demand differential.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.NDemand">
            <summary>Gets the n demand.</summary>
            <value>The n demand.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.NSupply">
            <summary>Gets the n supply.</summary>
            <value>The n supply.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.NUptake">
            <summary>Gets the n uptake.</summary>
            <value>The n uptake.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.SoilNDemand">
            <summary>Gets the soil n demand.</summary>
            <value>The soil n demand.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.NCapacity">
            <summary>Gets the n capacity.</summary>
            <value>The n capacity.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.NDemandDifferential">
            <summary>Gets the n demand differential.</summary>
            <value>The n demand differential.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.AvailableRetranslocateN">
            <summary>Gets the available retranslocate n.</summary>
            <value>The available retranslocate n.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.DltNSenescedRetrans">
            <summary>Gets the DLT n senesced retrans.</summary>
            <value>The DLT n senesced retrans.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.CoverSen">
            <summary>Gets or sets the cover sen.</summary>
            <value>The cover sen.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.NCrit">
            <summary>Gets the n crit.</summary>
            <value>The n crit.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.NMin">
            <summary>Gets the n minimum.</summary>
            <value>The n minimum.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.NSenescedTrans">
            <summary>Gets the n senesced trans.</summary>
            <value>The n senesced trans.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.SLAI">
            <summary>Gets the slai.</summary>
            <value>The slai.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.LeafNumber">
            <summary>Gets the leaf number.</summary>
            <value>The leaf number.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.LeafNumberDead">
            <summary>Gets the leaf number dead.</summary>
            <value>The leaf number dead.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.NodeNumberNow">
            <summary>Gets the node number now.</summary>
            <value>The node number now.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.LAIRatio">
            <summary>Ratio of actual to potential lai</summary>
            <value>The lai ratio.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.FractionCanopySenescing">
            <summary>Gets the fraction canopy senescing.</summary>
            <value>The fraction canopy senescing.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.MaximumLAI">
            <summary>Gets the maximum lai.</summary>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.Respiration">
            <summary>Gets the respiration.</summary>
            <value>The respiration.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.AvailableToAnimal">
            <summary>Gets the available to animal.</summary>
            <value>The available to animal.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Leaf1.RemovedByAnimal">
            <summary>Sets the removed by animal.</summary>
            <value>The removed by animal.</value>
        </member>
        <member name="T:Models.PMF.Functions.SplineInterpolationFunction">
            <summary>
            A value is returned via Akima spline interpolation of a given set of XY pairs
            </summary>
        </member>
        <member name="F:Models.PMF.Functions.SplineInterpolationFunction.XYPairs">
            <summary>Gets the xy pairs.</summary>
            <value>The xy pairs.</value>
        </member>
        <member name="F:Models.PMF.Functions.SplineInterpolationFunction.spline">
            <summary>The spline</summary>
        </member>
        <member name="M:Models.PMF.Functions.SplineInterpolationFunction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Models.PMF.Functions.SplineInterpolationFunction"/> class.
            </summary>
        </member>
        <member name="M:Models.PMF.Functions.SplineInterpolationFunction.Interpolate(System.Double)">
            <summary>Interpolates the specified x.</summary>
            <param name="x">The x.</param>
            <returns></returns>
        </member>
        <member name="P:Models.PMF.Functions.SplineInterpolationFunction.XProperty">
            <summary>The x property</summary>
        </member>
        <member name="P:Models.PMF.Functions.SplineInterpolationFunction.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
            <exception cref="T:System.Exception">Cannot find value for  + Name +  XProperty:  + XProperty</exception>
        </member>
        <member name="T:Models.PMF.Functions.PhotoperiodDeltaFunction">
            <summary>
            Returns the difference between today's and yesterday's photoperiods in hours.
            </summary>
        </member>
        <member name="F:Models.PMF.Functions.PhotoperiodDeltaFunction.MetData">
            <summary>The met data</summary>
        </member>
        <member name="F:Models.PMF.Functions.PhotoperiodDeltaFunction.Clock">
            <summary>The clock</summary>
        </member>
        <member name="F:Models.PMF.Functions.PhotoperiodDeltaFunction.Twilight">
            <summary>The twilight</summary>
        </member>
        <member name="P:Models.PMF.Functions.PhotoperiodDeltaFunction.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
        </member>
        <member name="T:Models.PMF.ArrayBiomass">
            <summary>
            This class encapsulates an array of biomass objects
            </summary>
        </member>
        <member name="F:Models.PMF.ArrayBiomass.Propertys">
            <summary>The propertys</summary>
        </member>
        <member name="F:Models.PMF.ArrayBiomass.ArraySize">
            <summary>The array size</summary>
        </member>
        <member name="F:Models.PMF.ArrayBiomass.ArraySizeNumber">
            <summary>The array size number</summary>
        </member>
        <member name="M:Models.PMF.ArrayBiomass.AddValuesToList(System.String)">
            <summary>Adds the values to list.</summary>
            <param name="SubPropertyName">Name of the sub property.</param>
            <returns></returns>
            <exception cref="T:System.Exception">Cannot find:  + PropertyName +  in ArrayBiomass:  + this.Name</exception>
        </member>
        <member name="P:Models.PMF.ArrayBiomass.NonStructuralN">
            <summary>Gets or sets the non structural n.</summary>
            <value>The non structural n.</value>
            <exception cref="T:System.Exception">Cannot set NonStructuralN in ArrayBiomass</exception>
        </member>
        <member name="P:Models.PMF.ArrayBiomass.StructuralN">
            <summary>Gets or sets the structural n.</summary>
            <value>The structural n.</value>
            <exception cref="T:System.Exception">Cannot set StructuralN in ArrayBiomass</exception>
        </member>
        <member name="P:Models.PMF.ArrayBiomass.MetabolicN">
            <summary>Gets or sets the metabolic n.</summary>
            <value>The metabolic n.</value>
            <exception cref="T:System.Exception">Cannot set MetabolicN in ArrayBiomass</exception>
        </member>
        <member name="P:Models.PMF.ArrayBiomass.NonStructuralWt">
            <summary>Gets or sets the non structural wt.</summary>
            <value>The non structural wt.</value>
            <exception cref="T:System.Exception">Cannot set NonStructuralWt in ArrayBiomass</exception>
        </member>
        <member name="P:Models.PMF.ArrayBiomass.StructuralWt">
            <summary>Gets or sets the structural wt.</summary>
            <value>The structural wt.</value>
            <exception cref="T:System.Exception">Cannot set StructuralWt in ArrayBiomass</exception>
        </member>
        <member name="P:Models.PMF.ArrayBiomass.MetabolicWt">
            <summary>Gets or sets the metabolic wt.</summary>
            <value>The metabolic wt.</value>
            <exception cref="T:System.Exception">Cannot set MetabolicWt in ArrayBiomass</exception>
        </member>
        <member name="P:Models.PMF.ArrayBiomass.NConc">
            <summary>Gets the n conc.</summary>
            <value>The n conc.</value>
        </member>
        <member name="P:Models.PMF.ArrayBiomass.StructuralNConc">
            <summary>Gets the structural n conc.</summary>
            <value>The structural n conc.</value>
        </member>
        <member name="P:Models.PMF.ArrayBiomass.NonStructuralNConc">
            <summary>Gets the non structural n conc.</summary>
            <value>The non structural n conc.</value>
        </member>
        <member name="P:Models.PMF.ArrayBiomass.MetabolicNConc">
            <summary>Gets the metabolic n conc.</summary>
            <value>The metabolic n conc.</value>
        </member>
        <member name="T:Models.Core.SummaryAttribute">
            <summary>
            When applied to a field, the infrastructure will locate an object in scope of the 
            related field and store a reference to it in the field. If no matching
            model is found (and IsOptional is not specified or is false), then an 
            exception will be thrown. 
            </summary>
        </member>
        <member name="T:Models.PMF.ModelArgs">
            <summary>
            An event arguments class for some events.
            </summary>
        </member>
        <member name="F:Models.PMF.ModelArgs.Model">
            <summary>
            The model
            </summary>
        </member>
        <member name="T:Models.PMF.WaterUptakesCalculatedUptakesType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.PMF.WaterUptakesCalculatedUptakesType.Name">
            <summary>The name</summary>
        </member>
        <member name="F:Models.PMF.WaterUptakesCalculatedUptakesType.Amount">
            <summary>The amount</summary>
        </member>
        <member name="T:Models.PMF.WaterUptakesCalculatedType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.PMF.WaterUptakesCalculatedType.Uptakes">
            <summary>The uptakes</summary>
        </member>
        <member name="T:Models.PMF.WaterUptakesCalculatedDelegate">
            <summary>
            
            </summary>
            <param name="Data">The data.</param>
        </member>
        <member name="T:Models.PMF.WaterChangedType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.PMF.WaterChangedType.DeltaWater">
            <summary>The delta water</summary>
        </member>
        <member name="T:Models.PMF.WaterChangedDelegate">
            <summary>
            
            </summary>
            <param name="Data">The data.</param>
        </member>
        <member name="T:Models.PMF.PruneType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.PMF.PruneType.BudNumber">
            <summary>The bud number</summary>
        </member>
        <member name="T:Models.PMF.KillLeafType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.PMF.KillLeafType.KillFraction">
            <summary>The kill fraction</summary>
        </member>
        <member name="T:Models.PMF.NewCanopyDelegate">
            <summary>
            
            </summary>
            <param name="NewCanopyData">The new canopy data.</param>
        </member>
        <member name="T:Models.PMF.FOMLayerDelegate">
            <summary>
            
            </summary>
            <param name="Data">The data.</param>
        </member>
        <member name="T:Models.PMF.NullTypeDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Models.PMF.NewCropDelegate">
            <summary>
            
            </summary>
            <param name="Data">The data.</param>
        </member>
        <member name="T:Models.PMF.BiomassRemovedDelegate">
            <summary>
            
            </summary>
            <param name="Data">The data.</param>
        </member>
        <member name="T:Models.PMF.SowPlant2Type">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.PMF.SowPlant2Type.Plant">
            <summary>The parent plant</summary>
        </member>
        <member name="M:Models.PMF.SowPlant2Type.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Models.PMF.SowPlant2Type"/> class.
            </summary>
        </member>
        <member name="P:Models.PMF.SowPlant2Type.Cultivar">
            <summary>The cultivar</summary>
        </member>
        <member name="P:Models.PMF.SowPlant2Type.Population">
            <summary>The population</summary>
        </member>
        <member name="P:Models.PMF.SowPlant2Type.Depth">
            <summary>The depth</summary>
        </member>
        <member name="P:Models.PMF.SowPlant2Type.RowSpacing">
            <summary>The row spacing</summary>
        </member>
        <member name="P:Models.PMF.SowPlant2Type.MaxCover">
            <summary>The maximum cover</summary>
        </member>
        <member name="P:Models.PMF.SowPlant2Type.BudNumber">
            <summary>The bud number</summary>
        </member>
        <member name="P:Models.PMF.SowPlant2Type.SkipRow">
            <summary>The skip row</summary>
        </member>
        <member name="P:Models.PMF.SowPlant2Type.SkipPlant">
            <summary>The skip plant</summary>
        </member>
        <member name="T:Models.PMF.BiomassRemovedType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.PMF.BiomassRemovedType.crop_type">
            <summary>The crop_type</summary>
        </member>
        <member name="F:Models.PMF.BiomassRemovedType.dm_type">
            <summary>The dm_type</summary>
        </member>
        <member name="F:Models.PMF.BiomassRemovedType.dlt_crop_dm">
            <summary>The dlt_crop_dm</summary>
        </member>
        <member name="F:Models.PMF.BiomassRemovedType.dlt_dm_n">
            <summary>The DLT_DM_N</summary>
        </member>
        <member name="F:Models.PMF.BiomassRemovedType.dlt_dm_p">
            <summary>The DLT_DM_P</summary>
        </member>
        <member name="F:Models.PMF.BiomassRemovedType.fraction_to_residue">
            <summary>The fraction_to_residue</summary>
        </member>
        <member name="T:Models.PMF.NewCropType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.PMF.NewCropType.sender">
            <summary>The sender</summary>
        </member>
        <member name="F:Models.PMF.NewCropType.crop_type">
            <summary>The crop_type</summary>
        </member>
        <member name="T:Models.PMF.Interfaces.BiomassPoolType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Models.PMF.Interfaces.BiomassPoolType.Structural">
            <summary>Gets or sets the structural.</summary>
            <value>The structural.</value>
        </member>
        <member name="P:Models.PMF.Interfaces.BiomassPoolType.NonStructural">
            <summary>Gets or sets the non structural.</summary>
            <value>The non structural.</value>
        </member>
        <member name="P:Models.PMF.Interfaces.BiomassPoolType.Metabolic">
            <summary>Gets or sets the metabolic.</summary>
            <value>The metabolic.</value>
        </member>
        <member name="T:Models.PMF.Interfaces.BiomassSupplyType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Models.PMF.Interfaces.BiomassSupplyType.Fixation">
            <summary>Gets or sets the fixation.</summary>
            <value>The fixation.</value>
        </member>
        <member name="P:Models.PMF.Interfaces.BiomassSupplyType.Reallocation">
            <summary>Gets or sets the reallocation.</summary>
            <value>The reallocation.</value>
        </member>
        <member name="P:Models.PMF.Interfaces.BiomassSupplyType.Uptake">
            <summary>Gets or sets the uptake.</summary>
            <value>The uptake.</value>
        </member>
        <member name="P:Models.PMF.Interfaces.BiomassSupplyType.Retranslocation">
            <summary>Gets or sets the retranslocation.</summary>
            <value>The retranslocation.</value>
        </member>
        <member name="T:Models.PMF.Interfaces.BiomassAllocationType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Models.PMF.Interfaces.BiomassAllocationType.Structural">
            <summary>Gets or sets the structural.</summary>
            <value>The structural.</value>
        </member>
        <member name="P:Models.PMF.Interfaces.BiomassAllocationType.NonStructural">
            <summary>Gets or sets the non structural.</summary>
            <value>The non structural.</value>
        </member>
        <member name="P:Models.PMF.Interfaces.BiomassAllocationType.Metabolic">
            <summary>Gets or sets the metabolic.</summary>
            <value>The metabolic.</value>
        </member>
        <member name="P:Models.PMF.Interfaces.BiomassAllocationType.Retranslocation">
            <summary>Gets or sets the retranslocation.</summary>
            <value>The retranslocation.</value>
        </member>
        <member name="P:Models.PMF.Interfaces.BiomassAllocationType.Reallocation">
            <summary>Gets or sets the reallocation.</summary>
            <value>The reallocation.</value>
        </member>
        <member name="P:Models.PMF.Interfaces.BiomassAllocationType.Respired">
            <summary>Gets or sets the respired.</summary>
            <value>The respired.</value>
        </member>
        <member name="P:Models.PMF.Interfaces.BiomassAllocationType.Uptake">
            <summary>Gets or sets the uptake.</summary>
            <value>The uptake.</value>
        </member>
        <member name="P:Models.PMF.Interfaces.BiomassAllocationType.Fixation">
            <summary>Gets or sets the fixation.</summary>
            <value>The fixation.</value>
        </member>
        <member name="T:Models.PMF.Structure">
            <summary>
            A structure model for plant. 
            </summary>
            \pre A \ref Models.PMF.Plant "Plant" model has to exist to access 
            sowing data, e.g. population, bud number.
            \pre A \ref Models.PMF.Organs.Leaf "Leaf" model has to exist to 
            access leaf initialisation an number.
            \pre A \ref Models.PMF.Phen.Phenology "Phenology" model has to exist 
            to check whether plant is initialised.
            \param InitialiseStage <b>(Constant)</b> The initialise stage. 
            The primordia number, node number and stem population start to 
            increase since initialise stage.
            \param PrimaryBudNo <b>(Constant)</b> The primary bud number in each node. 
            However, PrimaryBudNo is reset at sowing using sowing script 
            with default value 1.
            
            \param ThermalTime <b>(IFunction)</b> The daily thermal time (<sup>o</sup>Cd).
            \param MainStemPrimordiaInitiationRate <b>(IFunction)</b> The initiation rate 
            of primordia in main stem (# <sup>o</sup>Cd<sup>-1</sup>).
            \param MainStemNodeAppearanceRate <b>(IFunction)</b> The appearance rate 
            of node in main stem (# <sup>o</sup>Cd<sup>-1</sup>).
            \param MainStemFinalNodeNumber <b>(IFunction)</b> The maximum node number
            in main stem (#). The maximum node is calculated by model 
            MainStemFinalNodeNumberFunction if MainStemFinalNodeNumber is 
            specified to MainStemFinalNodeNumberFunction.
            \param HeightModel <b>(IFunction)</b> Plant height (mm).
            \param BranchingRate <b>(IFunction)</b> The rate of new branching (#).
            \param ShadeInducedBranchMortality <b>(IFunction)</b> 
            The branch mortality induced by shading (0-1).
            \param DroughtInducedBranchMortality <b>(IFunction)</b> 
            The branch mortality induced by drought (0-1).
            \param PlantMortality <b>(IFunction, Optional)</b> The plant mortality 
            to reduce plant population.
            
            \retval TotalStemPopn Number of stems including main and branch stems 
            (m<sup>-2</sup>).
            \retval MainStemPrimordiaNo Number of primordia initiated in main stem.
            \retval MainStemNodeNo Number of nodes appeared in main stem.
            \retval PlantTotalNodeNo Number of leaves appeared per plant including 
            all main stem and branch leaves.
            \retval ProportionBranchMortality Proportion of branch mortality.
            \retval ProportionPlantMortality Proportion of plant mortality.
            \retval DeltaNodeNumber The daily changes of node number.
            
            \retval MainStemPopn Number of main stem per square meter (m<sup>-2</sup>).
            \retval RemainingNodeNo Number of leaves yet to appear.
            \retval Height Plant height (mm).
            \retval PrimaryBudTotalNodeNo Number of appeared bud (leaves) per primary 
            bud unit including all main stem and branch leaves.
            \retval MainStemFinalNodeNo The main stem final node number.
            \retval RelativeNodeApperance Relative progress toward final leaf (0-1).
            
            <remarks>
            The Structure model predicts the development and mortality of phytomer and branch
            (tiller) according to plastochron and phyllochron. The primary bud number assumes the same in seed and all axillary bud and set in the 
            sowing data with default value 1.
            
            ## Terminology
            - <b>Node (Phytomer)</b> A phytomer unit is defined as consisting of a leaf, and 
            the associated axillary bud, node and internode.
            - <b>Main stem</b> The first culm that emerges from the seeds is the main stem.
            - <b>Branch (Tiller)</b> All remaining culms that emerges from main stem or other branches (tillers),
            are referred as branches or tillers.
            - <b>Plastochron</b> The plastochron is commonly used as the thermal time between the appearance of 
            successive leaf primordia on a shoot.
            - <b>Phyllochron</b> The phyllochron is the thermal time it takes for successive leaves on a shoot to 
            reach the same developmental stage.
            
            ## Simulation commencing (OnSimulationCommencing)
            Local variables are reset to 0 including total stem population, number of 
            main stem primordia, main stem node and plant total node;
            proportion of branch and plant mortality, changes of node number.
            
            ## Sowing (OnPlantSowing)
            The primary bud number and population of main stem are initialised from 
            sowing date. Primary bud number equals to bud number bud number at 
            sowing data (default value equals to 1). The population of main stem
            equals to bud number multiplying sowing population.
            
            The maximum node (phytomer) number in main stem is set by 
            parameter MainStemFinalNodeNumber. 
                \ref Models.PMF.Functions.StructureFunctions.MainStemFinalNodeNumberFunction "MainStemFinalNodeNumberFunction" is called if 
                MainStemFinalNodeNumber specifies to MainStemFinalNodeNumberFunction.
            The maximum node number in only used to limit the primordia number.
                
            Plant height is set by parameter HeightModel, and updated by Leaf model.
            
            ## Plant ending (OnPlantEnding)
            See simulation commencing
            
            ## Potential growth (OnDoPotentialPlantGrowth)
            Daily changes of primordia (\f$\Delta N_{pri}\f$) and node (leaf) (\f$\Delta N_{node}\f$) 
            number in main stem are calculated using plastochron (\f$P_{pla}\f$) 
            and phyllochron (\f$P_{phy}\f$), respectively, after plant initialisation.
            
            \f[
                \Delta N_{pri}=\frac{\Delta TT_{d}}{P_{pla}}
            \f]
            
            \f[
                \Delta N_{node}=\frac{\Delta TT_{t}}{P_{phy}}
            \f]
            where, \f$\Delta TT_{t}\f$ is the daily thermal time, which calculates 
            from parameter ThermalTime. \f$P_{pla}\f$ and \f$P_{phy}\f$ calculates
            from parameter MainStemPrimordiaInitiationRate and MainStemNodeAppearanceRate,
            respectively.
            
            Total number of primordia (\f$N_{pri}\f$) and node (\f$N_{node}\f$) in 
            main stem are summarised since initialisation.
            \f[
                N_{pri}=\sum_{t=T_{0}}^{T}\Delta N_{p}
            \f]
            
            \f[
                N_{node}=\sum_{t=T_{0}}^{T}\Delta N_{n}
            \f]
            where, \f$T_{0}\f$ is day of plant initialisation which is set by Leaf model. 
            \f$T\f$ is today. In the Structure model, the primordia and node numbers 
            are not calculated for branches or tillers. 
            
            Plant population (\f$P\f$) is initialised at sowing from Sow event, and 
            daily reduced by the plant mortality (\f$\Delta P\f$).
            \f[
                P=P_{0} - \sum_{t=T_{0}}^{T}(\Delta P)
            \f]
            where, \f$P_{0}\f$ is the sown population, which initialised at sowing.
            
            Population of main stem number (\f$P_{ms}\f$) is calculated  
            according to plant population (\f$P\f$) and primary bud number (\f$N_{bud}\f$) 
            with default value 1. The unit of \f$P_{ms}\f$ is per square meter.
            \f[
                P_{ms}=P \times N_{bud}
            \f]
            
            Population of total stem (\f$P_{stem}\f$) is summed up 
            population of main stem (\f$P_{ms}\f$) and branches ((\f$P_{branch}\f$)).
            \f[
                P_{stem} = P_{ms} + P_{branch}
            \f]
            New branches are initialised when increase of the node number in 
            main stem (\f$\Delta N_{node}\f$) is more than 1. 
            The new branch number for each plant 
            is specified by parameter BranchingRate (\f$\Delta N_{branch}\f$), which could be a function of 
            branch number on leaf rank in main stem.
            \f[
                 P_{branch} = P \times \sum_{t=T_{0}}^{T}\Delta N_{branch}
            \f]
            
            Three factors are considered to reduce the population of total stem (\f$P_{stem}\f$), i.e.
            1) Plant mortality (\f$\Delta P\f$), 2) Drought(\f$\Delta N_{drought}\f$), 
            3) Shade (\f$\Delta N_{shade}\f$). 
            
            During a day, branches are first killed by plant mortality which 
            reduces population through killing all stems in a plant.
            \f[
            P_{branch} = P_{branch} - \frac{(P_{branch} + P_{ms})}{P_{ms}} \times \Delta P
            \f]
            
            Then environmental stresses (drought and shade) only cause mortality of 
            the remaining branches.
            \f[
                P_{branch} = P_{branch} \times [1 - (\Delta N_{drought}+\Delta N_{shade})]
            \f]
            The mortalities, caused by drought (\f$\Delta N_{drought}\f$)  
            and shade (\f$\Delta N_{shade}\f$), are calculated by parameters 
            DroughtInducedBranchMortality and ShadeInducedBranchMortality, respectively.
            
            ## Actual growth (OnDoActualPlantGrowth)
            Plant total node number is updated according to appeared node (leaf) number 
            and population.
            </remarks>
        </member>
        <member name="F:Models.PMF.Structure.Plant">
            <summary>The plant</summary>
        </member>
        <member name="F:Models.PMF.Structure.Leaf">
            <summary>The leaf</summary>
        </member>
        <member name="F:Models.PMF.Structure.Phenology">
            <summary>The phenology</summary>
        </member>
        <member name="F:Models.PMF.Structure.ThermalTime">
            <summary>The thermal time</summary>
        </member>
        <member name="F:Models.PMF.Structure.MainStemPrimordiaInitiationRate">
            <summary>The main stem primordia initiation rate</summary>
        </member>
        <member name="F:Models.PMF.Structure.MainStemNodeAppearanceRate">
            <summary>The main stem node appearance rate</summary>
        </member>
        <member name="F:Models.PMF.Structure.MainStemFinalNodeNumber">
            <summary>The main stem final node number</summary>
        </member>
        <member name="F:Models.PMF.Structure.HeightModel">
            <summary>The height model</summary>
        </member>
        <member name="F:Models.PMF.Structure.BranchingRate">
            <summary>The branching rate</summary>
        </member>
        <member name="F:Models.PMF.Structure.ShadeInducedBranchMortality">
            <summary>The shade induced branch mortality</summary>
        </member>
        <member name="F:Models.PMF.Structure.DroughtInducedBranchMortality">
            <summary>The drought induced branch mortality</summary>
        </member>
        <member name="F:Models.PMF.Structure.PlantMortality">
            <summary>The plant mortality</summary>
        </member>
        <member name="M:Models.PMF.Structure.Clear">
            <summary>Clears this instance.</summary>
        </member>
        <member name="M:Models.PMF.Structure.OnDoPotentialPlantGrowth(System.Object,System.EventArgs)">
            <summary>Event from sequencer telling us to do our potential growth.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Structure.OnDoActualPlantGrowth(System.Object,System.EventArgs)">
            <summary>Does the actual growth.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Structure.UpdateHeight">
            <summary>Updates the height.</summary>
        </member>
        <member name="M:Models.PMF.Structure.ResetStemPopn">
            <summary>Resets the stem popn.</summary>
        </member>
        <member name="M:Models.PMF.Structure.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>Called when [simulation commencing].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Structure.OnPlantEnding(System.Object,System.EventArgs)">
            <summary>Called when crop is ending</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Structure.OnPlantSowing(System.Object,Models.PMF.SowPlant2Type)">
            <summary>Called when crop is ending</summary>
            <param name="sender">sender of the event.</param>
            <param name="Sow">Sowing data to initialise from.</param>
        </member>
        <member name="M:Models.PMF.Structure.Document(System.Collections.Generic.List{Models.Core.AutoDocumentation.ITag},System.Int32,System.Int32)">
            <summary>Writes documentation for this function by adding to the list of documentation tags.</summary>
            <param name="tags">The list of tags to add to.</param>
            <param name="headingLevel">The level (e.g. H2) of the headings.</param>
            <param name="indent">The level of indentation 1, 2, 3 etc.</param>
        </member>
        <member name="P:Models.PMF.Structure.InitialiseStage">
            <summary>Gets or sets the initialise stage.</summary>
            <value>The initialise stage.</value>
        </member>
        <member name="P:Models.PMF.Structure.PrimaryBudNo">
            <summary>Gets or sets the primary bud no.</summary>
            <value>The primary bud no.</value>
        </member>
        <member name="P:Models.PMF.Structure.TotalStemPopn">
            <summary>Gets or sets the total stem popn.</summary>
            <value>The total stem popn.</value>
        </member>
        <member name="P:Models.PMF.Structure.MainStemPrimordiaNo">
            <summary>Gets or sets the main stem primordia no.</summary>
            <value>The main stem primordia no.</value>
        </member>
        <member name="P:Models.PMF.Structure.MainStemNodeNo">
            <summary>Gets or sets the main stem node no.</summary>
            <value>The main stem node no.</value>
        </member>
        <member name="P:Models.PMF.Structure.PlantTotalNodeNo">
            <summary>Gets or sets the plant total node no.</summary>
            <value>The plant total node no.</value>
        </member>
        <member name="P:Models.PMF.Structure.ProportionBranchMortality">
            <summary>Gets or sets the proportion branch mortality.</summary>
            <value>The proportion branch mortality.</value>
        </member>
        <member name="P:Models.PMF.Structure.ProportionPlantMortality">
            <summary>Gets or sets the proportion plant mortality.</summary>
            <value>The proportion plant mortality.</value>
        </member>
        <member name="P:Models.PMF.Structure.MaximumNodeNumber">
            <summary>Gets or sets the maximum node number.</summary>
            <value>The maximum node number.</value>
        </member>
        <member name="P:Models.PMF.Structure.DeltaNodeNumber">
            <summary>Gets or sets the delta node number.</summary>
            <value>The delta node number.</value>
        </member>
        <member name="P:Models.PMF.Structure.MainStemPopn">
            <summary>Gets the main stem popn.</summary>
            <value>The main stem popn.</value>
        </member>
        <member name="P:Models.PMF.Structure.RemainingNodeNo">
            <summary>Gets the remaining node no.</summary>
            <value>The remaining node no.</value>
        </member>
        <member name="P:Models.PMF.Structure.Height">
            <summary>Gets the height.</summary>
            <value>The height.</value>
        </member>
        <member name="P:Models.PMF.Structure.PrimaryBudTotalNodeNo">
            <summary>Gets the primary bud total node no.</summary>
            <value>The primary bud total node no.</value>
        </member>
        <member name="P:Models.PMF.Structure.MainStemFinalNodeNo">
            <summary>Gets the main stem final node no.</summary>
            <value>The main stem final node no.</value>
        </member>
        <member name="P:Models.PMF.Structure.RelativeNodeApperance">
            <summary>Gets the relative node apperance.</summary>
            <value>The relative node apperance.</value>
        </member>
        <member name="T:Models.PMF.Organs.HIReproductiveOrgan">
            <summary>
            A harvest index reproductive organ
            </summary>
        </member>
        <member name="F:Models.PMF.Organs.HIReproductiveOrgan.Plant">
            <summary>The plant</summary>
        </member>
        <member name="F:Models.PMF.Organs.HIReproductiveOrgan.Summary">
            <summary>The summary</summary>
        </member>
        <member name="F:Models.PMF.Organs.HIReproductiveOrgan.WaterContent">
            <summary>The water content</summary>
        </member>
        <member name="F:Models.PMF.Organs.HIReproductiveOrgan.HIIncrement">
            <summary>The hi increment</summary>
        </member>
        <member name="F:Models.PMF.Organs.HIReproductiveOrgan.NConc">
            <summary>The n conc</summary>
        </member>
        <member name="F:Models.PMF.Organs.HIReproductiveOrgan.DailyGrowth">
            <summary>The daily growth</summary>
        </member>
        <member name="M:Models.PMF.Organs.HIReproductiveOrgan.OnPlantSowing(System.Object,Models.PMF.SowPlant2Type)">
            <summary>Called when crop is ending</summary>
            <param name="sender">The sender.</param>
            <param name="data">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Organs.HIReproductiveOrgan.DoHarvest">
            <summary>
            Execute harvest logic for HI reproductive organ
            </summary>
        </member>
        <member name="M:Models.PMF.Organs.HIReproductiveOrgan.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>Called when [simulation commencing].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Organs.HIReproductiveOrgan.OnPlantEnding(System.Object,System.EventArgs)">
            <summary>Called when crop is ending</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Models.PMF.Organs.HIReproductiveOrgan.AboveGround">
            <summary>Gets or sets the above ground.</summary>
            <value>The above ground.</value>
        </member>
        <member name="P:Models.PMF.Organs.HIReproductiveOrgan.LiveFWt">
            <summary>Gets the live f wt.</summary>
            <value>The live f wt.</value>
        </member>
        <member name="P:Models.PMF.Organs.HIReproductiveOrgan.HI">
            <summary>Gets the hi.</summary>
            <value>The hi.</value>
        </member>
        <member name="P:Models.PMF.Organs.HIReproductiveOrgan.DMDemand">
            <summary>Gets or sets the dm demand.</summary>
            <value>The dm demand.</value>
        </member>
        <member name="P:Models.PMF.Organs.HIReproductiveOrgan.DMAllocation">
            <summary>Sets the dm allocation.</summary>
            <value>The dm allocation.</value>
        </member>
        <member name="P:Models.PMF.Organs.HIReproductiveOrgan.NDemand">
            <summary>Gets or sets the n demand.</summary>
            <value>The n demand.</value>
        </member>
        <member name="P:Models.PMF.Organs.HIReproductiveOrgan.NAllocation">
            <summary>Sets the n allocation.</summary>
            <value>The n allocation.</value>
        </member>
        <member name="T:Models.PMF.Organs.GenericBelowGroundOrgan">
            <summary>
            A generic below ground organ
            </summary>
        </member>
        <member name="T:Models.PMF.OldPlant.Environment">
            <summary>
            An environment model for plant
            </summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Environment.MetData">
            <summary>The met data</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.Environment.CO2">
            <summary>The c o2</summary>
        </member>
        <member name="P:Models.PMF.OldPlant.Environment.MeanT">
            <summary>Gets the mean t.</summary>
            <value>The mean t.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.Environment.VPD">
            <summary>Gets the VPD.</summary>
            <value>The VPD.</value>
        </member>
        <member name="T:Models.PMF.OilPalm.OilPalm">
            <summary>
            An oil palm model
            </summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.plant_status">
            <summary>The plant_status</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.Clock">
            <summary>The clock</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.MetData">
            <summary>The met data</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.Soil">
            <summary>The soil</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.Summary">
            <summary>The summary</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.soilCrop">
            <summary>The soil crop</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.cultivarDefinition">
            <summary>The cultivar definition</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.height">
            <summary>Height to top of plant canopy</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.interception">
            <summary>Amount of rainfall intercepted by the plant canopy</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.Ndemand">
            <summary>The ndemand</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.PotSWUptake">
            <summary>The pot sw uptake</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.SWUptake">
            <summary>The sw uptake</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.Excess">
            <summary>The excess</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.FWexpan">
            <summary>Factor for daily water stress effect on canopy expansion</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.SowingData">
            <summary>The sowing data</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.PotNUptake">
            <summary>Potential daily nitrogen uptake from each soil layer by palms</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.Fronds">
            <summary>The fronds</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.Bunches">
            <summary>The bunches</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.Roots">
            <summary>The roots</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.FrondAppearanceRate">
            <summary>The frond appearance rate</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.RelativeDevelopmentalRate">
            <summary>The relative developmental rate</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.FrondMaxArea">
            <summary>The frond maximum area</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.DirectExtinctionCoeff">
            <summary>The direct extinction coeff</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.DiffuseExtinctionCoeff">
            <summary>The diffuse extinction coeff</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.ExpandingFronds">
            <summary>The expanding fronds</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.InitialFrondNumber">
            <summary>The initial frond number</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.RUE">
            <summary>The rue</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.RootFrontVelocity">
            <summary>The root front velocity</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.RootSenescenceRate">
            <summary>The root senescence rate</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.SpecificLeafArea">
            <summary>The specific leaf area</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.SpecificLeafAreaMax">
            <summary>The specific leaf area maximum</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.RootFraction">
            <summary>The root fraction</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.BunchSizeMax">
            <summary>The bunch size maximum</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.FemaleFlowerFraction">
            <summary>The female flower fraction</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.FFFStressImpact">
            <summary>The FFF stress impact</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.StemToFrondFraction">
            <summary>The stem to frond fraction</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.FlowerAbortionFraction">
            <summary>The flower abortion fraction</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.BunchFailureFraction">
            <summary>The bunch failure fraction</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.InitialRootDepth">
            <summary>The initial root depth</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.KNO3">
            <summary>The kn o3</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.StemNConcentration">
            <summary>The stem n concentration</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.BunchNConcentration">
            <summary>The bunch n concentration</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.RootNConcentration">
            <summary>The root n concentration</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.BunchOilConversionFactor">
            <summary>The bunch oil conversion factor</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.RipeBunchWaterContent">
            <summary>The ripe bunch water content</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.HarvestFrondNumber">
            <summary>The harvest frond number</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.FrondMaximumNConcentration">
            <summary>The frond maximum n concentration</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.FrondCriticalNConcentration">
            <summary>The frond critical n concentration</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.FrondMinimumNConcentration">
            <summary>The frond minimum n concentration</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.UnderstoryKLmax">
            <summary>The understory k lmax</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.UnderstoryPotSWUptake">
            <summary>Potential soil water uptake from each soil layer by understory</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.UnderstorySWUptake">
            <summary>Actual Soil water uptake from each soil layer by understory</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.UnderstoryRootDepth">
            <summary>Understory rooting depth</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.CropInGround">
            <summary>The crop in ground</summary>
        </member>
        <member name="M:Models.PMF.OilPalm.OilPalm.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>Called when [simulation commencing].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.OilPalm.OilPalm.Sow(System.String,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Sows the specified cultivar.</summary>
            <param name="cultivar">The cultivar.</param>
            <param name="population">The population.</param>
            <param name="depth">The depth.</param>
            <param name="rowSpacing">The row spacing.</param>
            <param name="maxCover">The maximum cover.</param>
            <param name="budNumber">The bud number.</param>
            <exception cref="T:System.Exception">Cultivar not specified on sow line.</exception>
        </member>
        <member name="M:Models.PMF.OilPalm.OilPalm.Harvest">
            <summary>Harvest the crop.</summary>
        </member>
        <member name="M:Models.PMF.OilPalm.OilPalm.OnSow(Models.PMF.SowPlant2Type)">
            <summary>Called when [sow].</summary>
            <param name="Sow">The sow.</param>
        </member>
        <member name="M:Models.PMF.OilPalm.OilPalm.OnDoDailyInitialisation(System.Object,System.EventArgs)">
            <summary>Called when [do daily initialisation].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.OilPalm.OilPalm.OnDoPlantGrowth(System.Object,System.EventArgs)">
            <summary>Called when [do plant growth].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.OilPalm.OilPalm.GetSWUptakes(Models.Soils.Arbitrator.SoilState)">
            <summary>Placeholder for SoilArbitrator</summary>
            <param name="soilstate">soil state</param>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.OilPalm.OilPalm.GetNUptakes(Models.Soils.Arbitrator.SoilState)">
            <summary>Placeholder for SoilArbitrator</summary>
            <param name="soilstate">soil state</param>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.OilPalm.OilPalm.SetSWUptake(System.Collections.Generic.List{Models.Soils.Arbitrator.ZoneWaterAndN})">
            <summary>
            Set the sw uptake for today
            </summary>
        </member>
        <member name="M:Models.PMF.OilPalm.OilPalm.SetNUptake(System.Collections.Generic.List{Models.Soils.Arbitrator.ZoneWaterAndN})">
            <summary>
            Set the n uptake for today
            </summary>
        </member>
        <member name="M:Models.PMF.OilPalm.OilPalm.DoFlowerAbortion">
            <summary>Does the flower abortion.</summary>
        </member>
        <member name="M:Models.PMF.OilPalm.OilPalm.DoGenderDetermination">
            <summary>Does the gender determination.</summary>
        </member>
        <member name="M:Models.PMF.OilPalm.OilPalm.DoRootGrowth(System.Double)">
            <summary>Does the root growth.</summary>
            <param name="Allocation">The allocation.</param>
            <exception cref="T:System.Exception">Error trying to partition root biomass</exception>
        </member>
        <member name="M:Models.PMF.OilPalm.OilPalm.DoGrowth">
            <summary>Does the growth.</summary>
        </member>
        <member name="M:Models.PMF.OilPalm.OilPalm.DoDevelopment">
            <summary>Does the development.</summary>
        </member>
        <member name="M:Models.PMF.OilPalm.OilPalm.svp(System.Double)">
            <summary>Saturated Vapour Pressuer</summary>
            <param name="temp">The temperature.</param>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.OilPalm.OilPalm.DoWaterBalance">
            <summary>Does the water balance.</summary>
        </member>
        <member name="M:Models.PMF.OilPalm.OilPalm.DoNBalance">
            <summary>Does the n balance.</summary>
            <exception cref="T:System.Exception">Error in N Allocation</exception>
        </member>
        <member name="M:Models.PMF.OilPalm.OilPalm.SizeFunction(System.Double,System.Double,System.Double)">
            <summary>Sizes the function.</summary>
            <param name="Age">The age.</param>
            <param name="FMA">FMA</param>
            <param name="GrowthDuration">Groth duration</param>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.OilPalm.OilPalm.RootProportion(System.Int32,System.Double)">
            <summary>Roots the proportion.</summary>
            <param name="layer">The layer.</param>
            <param name="root_depth">The root_depth.</param>
            <returns></returns>
        </member>
        <member name="M:Models.PMF.OilPalm.OilPalm.LayerIndex(System.Double)">
            <summary>Layers the index.</summary>
            <param name="depth">The depth.</param>
            <returns></returns>
            <exception cref="T:System.Exception">Depth deeper than bottom of soil profile</exception>
        </member>
        <member name="M:Models.PMF.OilPalm.OilPalm.DoUnderstory">
            <summary>Does the understory.</summary>
        </member>
        <member name="M:Models.PMF.OilPalm.OilPalm.DoUnderstoryGrowth">
            <summary>Does the understory growth.</summary>
        </member>
        <member name="M:Models.PMF.OilPalm.OilPalm.DoUnderstoryWaterBalance">
            <summary>Does the understory water balance.</summary>
        </member>
        <member name="M:Models.PMF.OilPalm.OilPalm.DoUnderstoryNBalance">
            <summary>Does the understory n balance.</summary>
        </member>
        <member name="M:Models.PMF.OilPalm.OilPalm.Q0(System.Double,System.Int32)">
            <summary>Q0s the specified lat.</summary>
            <param name="lat">The lat.</param>
            <param name="day">The day.</param>
            <returns></returns>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.CanopyType">
            <summary>Canopy type</summary>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.LAI">
            <summary>Gets the lai.</summary>
            <value>The lai.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.LAITotal">
            <summary>Gets the maximum LAI (m^2/m^2)</summary>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.CoverGreen">
            <summary>Gets the cover green (0-1)</summary>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.CoverTotal">
            <summary>Gets the cover total (0-1)</summary>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.Height">
            <summary>Gets the canopy height (mm)</summary>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.Depth">
            <summary>Gets the canopy depth (mm)</summary>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.FRGR">
            <summary>Gets the LAI (m^2/m^2)</summary>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.PotentialEP">
            <summary>Potential evapotranspiration</summary>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.LightProfile">
            <summary>MicroClimate supplies LightProfile</summary>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.IsAlive">
            <summary>
            Is the plant alive?
            </summary>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.CultivarNames">
            <summary>Gets a list of cultivar names</summary>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.Cultivars">
            <summary>Gets a list of all cultivar definitions.</summary>
            <value>The cultivars.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.cover_tot">
            <summary>Total cover provided by plant canopies</summary>
            <value>The cover_tot.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.UnderstoryCoverMax">
            <summary>Gets or sets the understory cover maximum.</summary>
            <value>The understory cover maximum.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.UnderstoryLegumeFraction">
            <summary>Gets or sets the understory legume fraction.</summary>
            <value>The understory legume fraction.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.InterceptionFraction">
            <summary>Gets or sets the interception fraction.</summary>
            <value>The interception fraction.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.MaximumRootDepth">
            <summary>Gets or sets the maximum root depth.</summary>
            <value>The maximum root depth.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.RootDepth">
            <summary>Palm Rooting Depth</summary>
            <value>The root depth.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.PEP">
            <summary>Potential daily evapotranspiration for the palm canopy</summary>
            <value>The pep.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.EP">
            <summary>Daily evapotranspiration from the palm canopy</summary>
            <value>The ep.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.DltDM">
            <summary>Daily total plant dry matter growth</summary>
            <value>The DLT dm.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.FW">
            <summary>Factor for daily water stress effect on photosynthesis</summary>
            <value>The fw.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.Fvpd">
            <summary>Factor for daily VPD effect on photosynthesis</summary>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.Fn">
            <summary>Factor for daily nitrogen stress effect on photosynthesis</summary>
            <value>The function.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.CumulativeFrondNumber">
            <summary>Cumulative frond production since planting</summary>
            <value>The cumulative frond number.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.CumulativeBunchNumber">
            <summary>Cumulative bunch production since planting</summary>
            <value>The cumulative bunch number.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.ReproductiveGrowthFraction">
            <summary>Proportion of daily growth partitioned into reproductive parts</summary>
            <value>The reproductive growth fraction.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.CarbonStress">
            <summary>Amount of carbon limitation for todays potential growth (ie supply/demand)</summary>
            <value>The carbon stress.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.HarvestBunches">
            <summary>Number of bunches harvested on a harvesting event</summary>
            <value>The harvest bunches.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.HarvestFFB">
            <summary>Mass of harvested FFB on a harvesting event</summary>
            <value>The harvest FFB.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.HarvestNRemoved">
            <summary>Nitrogen removed at a harvesting event</summary>
            <value>The harvest n removed.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.HarvestBunchSize">
            <summary>Mean size of bunches at a harvesting event</summary>
            <value>The size of the harvest bunch.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.Age">
            <summary>Time since planting</summary>
            <value>The age.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.Population">
            <summary>Gets or sets the population.</summary>
            <value>The population.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.NUptake">
            <summary>Daily nitrogen uptake from each soil layer by palms</summary>
            <value>The n uptake.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.StemGrowth">
            <summary>Daily stem dry matter growth</summary>
            <value>The stem growth.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.FrondGrowth">
            <summary>Daily frond dry matter growth</summary>
            <value>The frond growth.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.RootGrowth">
            <summary>Daily root dry matter growth</summary>
            <value>The root growth.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.BunchGrowth">
            <summary>Daily bunch dry matter growth</summary>
            <value>The bunch growth.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.UnderstoryCoverGreen">
            <summary>Proportion of green cover provided by the understory canopy</summary>
            <value>The understory cover green.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.UnderstoryPotNUptake">
            <summary>Potential nitrogen water uptake from each soil layer by understory</summary>
            <value>The understory pot n uptake.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.UnderstoryNUptake">
            <summary>Actual soil nitrogen uptake from each soil layer by understory</summary>
            <value>The understory n uptake.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.UnderstoryPEP">
            <summary>Potential daily evapotranspiration for the understory</summary>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.UnderstoryEP">
            <summary>Daily evapotranspiration for the understory</summary>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.UnderstoryFW">
            <summary>Understory plant water stress factor</summary>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.UnderstoryDltDM">
            <summary>Daily understory dry matter growth</summary>
        </member>
        <member name="E:Models.PMF.OilPalm.OilPalm.NitrogenChanged">
            <summary>Occurs when [nitrogen changed].</summary>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.UnderstoryNFixation">
            <summary>Daily understory nitrogen fixation</summary>
            <value>The understory n fixation.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.StemMass">
            <summary>Gets or sets the stem mass.</summary>
            <value>The stem mass.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.StemN">
            <summary>Gets or sets the stem n.</summary>
            <value>The stem n.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.StemNConc">
            <summary>Gets the stem n conc.</summary>
            <value>The stem n conc.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.IsCropInGround">
            <summary>Gets or sets a value indicating whether this instance is crop in ground.</summary>
            <value>
            <c>true</c> if this instance is crop in ground; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="E:Models.PMF.OilPalm.OilPalm.Sowing">
            <summary>Occurs when [sowing].</summary>
        </member>
        <member name="E:Models.PMF.OilPalm.OilPalm.Harvesting">
            <summary>Occurs when [harvesting].</summary>
        </member>
        <member name="E:Models.PMF.OilPalm.OilPalm.IncorpFOM">
            <summary>Occurs when [incorp fom].</summary>
        </member>
        <member name="E:Models.PMF.OilPalm.OilPalm.BiomassRemoved">
            <summary>Occurs when [biomass removed].</summary>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.VPD">
            <summary>VPDs this instance.</summary>
            <returns></returns>
            The following helper functions [VDP and svp] are for calculating Fvdp
                    /// <summary>Gets the lai.</summary>
            <value>The lai.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.FrondArea">
            <summary>Gets the frond area.</summary>
            <value>The frond area.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.Frond17Area">
            <summary>Gets the frond17 area.</summary>
            <value>The frond17 area.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.FrondMass">
            <summary>Gets the frond mass.</summary>
            <value>The frond mass.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.FrondN">
            <summary>Gets the frond n.</summary>
            <value>The frond n.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.FrondNConc">
            <summary>Gets the frond n conc.</summary>
            <value>The frond n conc.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.BunchMass">
            <summary>Gets the bunch mass.</summary>
            <value>The bunch mass.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.BunchN">
            <summary>Gets the bunch n.</summary>
            <value>The bunch n.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.BunchNConc">
            <summary>Gets the bunch n conc.</summary>
            <value>The bunch n conc.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.RootMass">
            <summary>Gets the root mass.</summary>
            <value>The root mass.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.RootN">
            <summary>Gets the root n.</summary>
            <value>The root n.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.RootNConc">
            <summary>Gets the root n conc.</summary>
            <value>The root n conc.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.PlantN">
            <summary>Gets the plant n.</summary>
            <value>The plant n.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.TotalFrondNumber">
            <summary>Gets the total frond number.</summary>
            <value>The total frond number.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.FrondNumber">
            <summary>Gets the frond number.</summary>
            <value>The frond number.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.cover_green">
            <summary>Gets the cover_green.</summary>
            <value>The cover_green.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.SLA">
            <summary>Gets the sla.</summary>
            <value>The sla.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.FFF">
            <summary>Gets the FFF.</summary>
            <value>The FFF.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.DeltaT">
            <summary>Gets the delta t.</summary>
            <value>The delta t.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.DefoliationFraction">
            <summary>Gets or sets the defoliation fraction.</summary>
            <value>The defoliation fraction.</value>
        </member>
        <member name="P:Models.PMF.OilPalm.OilPalm.DiffuseLightFraction">
            <summary>Gets the diffuse light fraction.</summary>
            <value>The diffuse light fraction.</value>
        </member>
        <member name="T:Models.PMF.OilPalm.OilPalm.NitrogenChangedDelegate">
            <summary>
            
            </summary>
            <param name="Data">The data.</param>
        </member>
        <member name="T:Models.PMF.OilPalm.OilPalm.RootType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.RootType.Mass">
            <summary>The mass</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.RootType.N">
            <summary>The n</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.RootType.Length">
            <summary>The length</summary>
        </member>
        <member name="T:Models.PMF.OilPalm.OilPalm.FrondType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.FrondType.Mass">
            <summary>The mass</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.FrondType.N">
            <summary>The n</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.FrondType.Area">
            <summary>The area</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.FrondType.Age">
            <summary>The age</summary>
        </member>
        <member name="T:Models.PMF.OilPalm.OilPalm.BunchType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.BunchType.Mass">
            <summary>The mass</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.BunchType.N">
            <summary>The n</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.BunchType.Age">
            <summary>The age</summary>
        </member>
        <member name="F:Models.PMF.OilPalm.OilPalm.BunchType.FemaleFraction">
            <summary>The female fraction</summary>
        </member>
        <member name="T:Models.PMF.Functions.SupplyFunctions.RUECO2Function">
            <summary>
            This model calculates CO2 Impact on RUE using the approach of Reyenga, Howden, Meinke, Mckeon (1999) Modelling global change impact on wheat cropping in south-east Queensland, Australia. Environmental Modelling and Software 14:297-306
            </summary>
        </member>
        <member name="F:Models.PMF.Functions.SupplyFunctions.RUECO2Function.MetData">
            <summary>The met data</summary>
        </member>
        <member name="F:Models.PMF.Functions.SupplyFunctions.RUECO2Function.CO2">
            <summary>The c o2</summary>
        </member>
        <member name="P:Models.PMF.Functions.SupplyFunctions.RUECO2Function.PhotosyntheticPathway">
            <summary>The photosynthetic pathway</summary>
        </member>
        <member name="P:Models.PMF.Functions.SupplyFunctions.RUECO2Function.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
            <exception cref="T:System.Exception">
            Average daily temperature too high for RUE CO2 Function
            or
            CO2 concentration too low for RUE CO2 Function
            or
            Unknown photosynthetic pathway in RUECO2Function
            </exception>
        </member>
        <member name="T:Models.PMF.Functions.SoilTemperatureDepthFunction">
            <summary>
            Return soil temperature (oC) from a specified soil profile layer.
            The source of soil temperature array can be either SoilN ("st" property) or SoilTemp ("ave_soil_temp" property)
            </summary>
        </member>
        <member name="F:Models.PMF.Functions.SoilTemperatureDepthFunction.Soil">
            <summary>The soil</summary>
        </member>
        <member name="F:Models.PMF.Functions.SoilTemperatureDepthFunction.soilTempSource">
            <summary>The soil temporary source</summary>
        </member>
        <member name="M:Models.PMF.Functions.SoilTemperatureDepthFunction.LayerIndex(System.Double,System.Double[])">
            <summary>Returns the soil layer index for a specified soil depth (mm)</summary>
            <param name="depth">Soil depth (mm)</param>
            <param name="dlayer">Array of soil layer depths in the profile (mm)</param>
            <returns>soil layer index</returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="P:Models.PMF.Functions.SoilTemperatureDepthFunction.Depth">
            <summary>The depth</summary>
        </member>
        <member name="P:Models.PMF.Functions.SoilTemperatureDepthFunction.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="T:Models.Soils.Arbitrator.Estimate">
            <summary>
            Contains an estimate of uptakes (either water or nitrogen)
            </summary>
        </member>
        <member name="F:Models.Soils.Arbitrator.Estimate.Parent">
            <summary>The parent model.</summary>
        </member>
        <member name="M:Models.Soils.Arbitrator.Estimate.#ctor(Models.Core.IModel)">
            <summary>Initializes a new instance of the <see cref="T:Models.Soils.Arbitrator.Estimate"/> class.</summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Models.Soils.Arbitrator.Estimate.#ctor(Models.Core.IModel,Models.Soils.Arbitrator.Estimate.CalcType,Models.Soils.Arbitrator.SoilState)">
            <summary>Initializes a new instance of the <see cref="T:Models.Soils.Arbitrator.Estimate"/> class.</summary>
            <param name="parent">The parent model</param>
            <param name="Type">The type of estimate</param>
            <param name="soilstate">The state of the soil</param>
        </member>
        <member name="M:Models.Soils.Arbitrator.Estimate.UptakeZone(Models.Interfaces.IUptake,System.String)">
            <summary>Gets uptakes for the specified crop and zone. Will throw if not found.</summary>
            <param name="crop">Name of the crop.</param>
            <param name="ZoneName">Name of the zone.</param>
            <returns>The uptakes.</returns>
        </member>
        <member name="M:Models.Soils.Arbitrator.Estimate.op_Multiply(Models.Soils.Arbitrator.Estimate,System.Double)">
            <summary>Implements the operator *.</summary>
            <param name="E">The estimate</param>
            <param name="value">The value to multiply the estimate by.</param>
            <returns>The resulting estimate</returns>
        </member>
        <member name="P:Models.Soils.Arbitrator.Estimate.Values">
            <summary>Gets the estimate values.</summary>
        </member>
        <member name="T:Models.Soils.Arbitrator.Estimate.CalcType">
            <summary>
            An enumeration describing whether the estimate is for water or nitrogen.
            </summary>
        </member>
        <member name="F:Models.Soils.Arbitrator.Estimate.CalcType.Water">
            <summary>Indicates this estimate is for water.</summary>
        </member>
        <member name="F:Models.Soils.Arbitrator.Estimate.CalcType.Nitrogen">
            <summary>Indicates this estimate is for nitrogen.</summary>
        </member>
        <member name="T:Models.Core.ViewNameAttribute">
            <summary>
            Specifies that the related class should use the user interface view
            that has the specified name.
            </summary>
        </member>
        <member name="F:Models.Core.ViewNameAttribute.name">
            <summary>
            The name of the view class
            </summary>
        </member>
        <member name="M:Models.Core.ViewNameAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Models.Core.ViewNameAttribute"/> class.
            </summary>
            <param name="name">Name of the user interface view class to use</param>
        </member>
        <member name="M:Models.Core.ViewNameAttribute.ToString">
            <summary>
            Gets the name of the view.
            </summary>
            <returns>The name of the view class</returns>
        </member>
        <member name="T:Models.Interfaces.CanopyEnergyBalanceInterceptionlayerType">
            <summary>
            A canopy energy balance type
            </summary>
        </member>
        <member name="F:Models.Interfaces.CanopyEnergyBalanceInterceptionlayerType.thickness">
            <summary>The thickness</summary>
        </member>
        <member name="F:Models.Interfaces.CanopyEnergyBalanceInterceptionlayerType.amount">
            <summary>The amount</summary>
        </member>
        <member name="T:Models.Arbitrator.Arbitrator">
            <summary>
            Vals u-beaut (VS - please note that DH wrote that) soil arbitrator
            TODO - convert to god-level
            TODO - need to figure out how to get multi-zone root systems into this - structure there to do the uptake but note comments in code related to needs
            TODO - alternate uptake methods
            TODO - currently is implicitly 1 ha per zone - need to convert into proper consideration of area
            </summary>
        </member>
        <member name="F:Models.Arbitrator.Arbitrator.Soil">
            <summary>The soil</summary>
        </member>
        <member name="F:Models.Arbitrator.Arbitrator.zone">
            <summary>The zone</summary>
        </member>
        <member name="F:Models.Arbitrator.Arbitrator.plants">
            <summary>The plants</summary>
        </member>
        <member name="F:Models.Arbitrator.Arbitrator.potentialSupplyWaterPlantLayer">
            <summary>
            Potential nutrient supply in layers (kgN/ha/layer) - this is the potential (demand-limited) supply if this was the only plant in the simualtion
            </summary>
        </member>
        <member name="F:Models.Arbitrator.Arbitrator.uptakeWaterPlantLayer">
            <summary>The uptake water plant layer</summary>
        </member>
        <member name="F:Models.Arbitrator.Arbitrator.potentialSupplyNitrogenPlantLayer">
            <summary>The potential supply nitrogen plant layer</summary>
        </member>
        <member name="F:Models.Arbitrator.Arbitrator.potentialSupplyPropNO3PlantLayer">
            <summary>
            The potential supply property n o3 plant layer
            </summary>
        </member>
        <member name="F:Models.Arbitrator.Arbitrator.uptakeNitrogenPlantLayer">
            <summary>The uptake nitrogen plant layer</summary>
        </member>
        <member name="F:Models.Arbitrator.Arbitrator.uptakeNitrogenPropNO3PlantLayer">
            <summary>
            The uptake nitrogen property n o3 plant layer
            </summary>
        </member>
        <member name="F:Models.Arbitrator.Arbitrator.demandWater">
            <summary>Soil water demand (mm) from each of the plants being arbitrated</summary>
        </member>
        <member name="F:Models.Arbitrator.Arbitrator.demandNitrogen">
            <summary>Nitrogen demand (mm) from each of the plants being arbitrated</summary>
        </member>
        <member name="F:Models.Arbitrator.Arbitrator.zones">
            <summary>The number of zones under consideration</summary>
        </member>
        <member name="F:Models.Arbitrator.Arbitrator.bounds">
            <summary>
            The number of lower bounds of uptake under consideration.
            As the uptake method implemented for nitrogen is the second order method this is currently only caluclated for water and comes from the crop lower limit
            </summary>
        </member>
        <member name="F:Models.Arbitrator.Arbitrator.forms">
            <summary>
            The number of pools that can saatify the demand.  Not relevant for water.  For nitrogen is nitrate and ammonium.
            </summary>
        </member>
        <member name="F:Models.Arbitrator.Arbitrator.rootExploration">
            <summary>
            rootExploration is 3D array [plant, layer, zone] and holds the relative presence (0-1) of roots in each of the physical areas (layer, zone) for each plant
            It is populated from RootExplorationByLayer (0-1) which considers a single zone only.
            </summary>
        </member>
        <member name="F:Models.Arbitrator.Arbitrator.lowerBound">
            <summary>
            lowerBound is a holds the values of the lowest amount of water that can be extracted  from each layer, zone and bound.
            Current it contains a dummy dimension for plant - which can be removed aat any time
            </summary>
        </member>
        <member name="F:Models.Arbitrator.Arbitrator.uptakePreference">
            <summary>
            uptakePreference [plant, layer, zone] and holds the relative preference (0-1) for uptake from different physical areas (layer, zone) for each plant
            It can be used to create a greater preference for uptake near the soil surface or from zones nearer the main stem if appropriate
            It is populated from UptakePreferenceByLayer (0-1) which currently considers a single zone only.
            </summary>
        </member>
        <member name="F:Models.Arbitrator.Arbitrator.resource">
            <summary>
            resource (mm or kgN/ha) is the amount of water or nitrogen held in each layer and zone, bound and form for each plant
            the dimensions are [plant, layer, zone, bound, form]
            </summary>
        </member>
        <member name="F:Models.Arbitrator.Arbitrator.extractable">
            <summary>
            extractable (mm or kgN/ha) is the amount of water or nitrogen in each layer and zone, bound and form for each plant that would be
            available to the plant if it were the only plant in the simulation.  It is not limited by the plant's demand for the resource.
            the dimensions are [plant, layer, zone, bound, form]
            </summary>
        </member>
        <member name="F:Models.Arbitrator.Arbitrator.demand">
            <summary>
            demand (mm or kgN/ha) is the amount of water or nitrogen in each layer and zone, bound and form for each plant that would be
            extracted by the plant if it were the only plant in the simulation.  It is extractable constrained by demandWater or demandNitrogen
            the dimensions are [plant, layer, zone, bound, form]
            </summary>
        </member>
        <member name="F:Models.Arbitrator.Arbitrator.demandForResource">
            <summary>
            demandForResource (mm or kgN/ha) is the amount of water or nitrogen in each layer and zone, bound and form that is demanded across all plants
            the dimensions are [not_used, layer, zone, bound, form]
            </summary>
        </member>
        <member name="F:Models.Arbitrator.Arbitrator.totalForResource">
            <summary>
            totalForResource (mm or kgN/ha) is the sum of resource in each layer and zone, bound and form that is demanded across all plants
            the dimensions are [not_used, layer, zone, bound, form]
            </summary>
        </member>
        <member name="F:Models.Arbitrator.Arbitrator.uptake">
            <summary>
            uptake (mm or kgN/ha) is the amount of water or nitrogen taken up in each layer and zone, bound and form for each plant
            the dimensions are [plant, layer, zone, bound, form]
            </summary>
        </member>
        <member name="F:Models.Arbitrator.Arbitrator.extractableByPlant">
            <summary>
            extractableByPlant (mm or kgN/ha) is the sum of water or nitrogen taken in extractable for each plant
            the dimensions are [plant]
            </summary>
        </member>
        <member name="M:Models.Arbitrator.Arbitrator.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>
            Runs at the start of the simulation, here only reads the aribtration method to be used
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
            <exception cref="T:System.Exception">Invalid AribtrationMethod selected</exception>
        </member>
        <member name="M:Models.Arbitrator.Arbitrator.OnDailyInitialisation(System.Object,System.EventArgs)">
            <summary>Zero variables at the start of each day</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.Arbitrator.Arbitrator.OnDoWaterArbitration(System.Object,System.EventArgs)">
            <summary>Do the arbitration between the plants for water</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.Arbitrator.Arbitrator.OnDoNutrientArbitration(System.Object,System.EventArgs)">
            <summary>
            Do the arbitration between the plants for nutrients
            This is only set up for nitrogen at the moment but is designed to be extended to other nutrients
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.Arbitrator.Arbitrator.OnDoEnergyArbitration(System.Object,System.EventArgs)">
            <summary>
            Calculate the results of the competition between the plants for light and calculate the soil water demadn by the plants and or soil water evaporation
            Not currently implemented
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.Arbitrator.Arbitrator.ZeroDailyVariables">
            <summary>Zero the values at the start of each day</summary>
        </member>
        <member name="M:Models.Arbitrator.Arbitrator.ZeroCalculationVariables">
            <summary>Zero the values that are needed for each set of arbitration calculations</summary>
        </member>
        <member name="M:Models.Arbitrator.Arbitrator.CalculateLowerBounds(System.String)">
            <summary>
            Calculate the number of lower bounds that exist in each layer-zone combination and assign value to those bounds
            This does not need to be done each day unless LL becomes dynamic
            Leave here for now but could be moved either to OnSimulationCommencing or test for bounds and only do when null
            </summary>
            <param name="resourceToArbitrate">The resource to arbitrate.</param>
        </member>
        <member name="M:Models.Arbitrator.Arbitrator.CalculateResource(System.String)">
            <summary>
            Calculate the amount of the water or nitrogen that is assessible by each of the plants by layer-zone and bound-form
            </summary>
            <param name="resourceToArbitrate">The resource to arbitrate.</param>
        </member>
        <member name="M:Models.Arbitrator.Arbitrator.CalculateExtractable(System.String)">
            <summary>
            Calculate the amount that the plant could potentially exctract if it was the only plant in the simulation and demand &gt; resource
            </summary>
            <param name="resourceToArbitrate">The resource to arbitrate.</param>
        </member>
        <member name="M:Models.Arbitrator.Arbitrator.CalculateDemand(System.String)">
            <summary>
            Distribute the satisfyable (if this was a solo plant) across layers, zones, bounds and forms
            It was useful to seperate Extractable from Demand during development but could be amalgamated easily
            </summary>
            <param name="resourceToArbitrate">The resource to arbitrate.</param>
        </member>
        <member name="M:Models.Arbitrator.Arbitrator.CalculateUptake(System.String)">
            <summary>Calculate the uptake for each plant across the layers, zones, bounds, and forms</summary>
            <param name="resourceToArbitrate">The resource to arbitrate.</param>
        </member>
        <member name="M:Models.Arbitrator.Arbitrator.SetWaterUptake(System.String)">
            <summary>
            Send the water uptake arrays back to the plants and send the change in water storage back to the soil
            </summary>
            <param name="resourceToArbitrate">The resource to arbitrate.</param>
        </member>
        <member name="M:Models.Arbitrator.Arbitrator.SetNitrogenUptake(System.String)">
            <summary>
            Send the nitrogen uptake arrays back to the plants and send the change in nitrogen back to the soil
            </summary>
            <param name="resourceToArbitrate">The resource to arbitrate.</param>
        </member>
        <member name="M:Models.Arbitrator.Arbitrator.Old_OnDoWaterArbitration">
            <summary>Old_s the on do water arbitration.</summary>
        </member>
        <member name="M:Models.Arbitrator.Arbitrator.Old_OnDoNutrientArbitration">
            <summary>Old_s the on do nutrient arbitration.</summary>
            <exception cref="T:System.Exception">Invalid potential uptake method selected</exception>
        </member>
        <member name="M:Models.Arbitrator.Arbitrator.ZeroHamishVariables">
            <summary>Zeroes the hamish variables.</summary>
        </member>
        <member name="P:Models.Arbitrator.Arbitrator.ArbitrationMethod">
            <summary>
            This will hold a range of arbitration methods for testing - will eventually settle on one standard method
            </summary>
            <value>The arbitration method.</value>
        </member>
        <member name="P:Models.Arbitrator.Arbitrator.NutrientUptakeMethod">
            <summary>Gets or sets the nutrient uptake method.</summary>
            <value>The nutrient uptake method.</value>
        </member>
        <member name="E:Models.Arbitrator.Arbitrator.NitrogenChanged">
            <summary>To publish the nitrogen change event</summary>
        </member>
        <member name="T:Models.Arbitrator.Arbitrator.NitrogenChangedDelegate">
            <summary>
            The NitrogenChangedDelegate is for the Arbitrator to set the change in nitrate and ammonium in SoilNitrogen
            Eventually this should be changes to a set rather than an event
            </summary>
            <param name="Data">The data.</param>
        </member>
        <member name="T:Models.Arbitrator.Arbitrator.CanopyProps">
            <summary>
            
            </summary>
        </member>
        <member name="T:Models.Utilities.Accumulator">
            <summary>
            This class accumulats values of variables
            </summary>
        </member>
        <member name="M:Models.Utilities.Accumulator.#ctor(Models.Core.IModel,System.String,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="model"></param>
            <param name="variableName"></param>
            <param name="numberOfDays">Number of days to accumulate</param>
        </member>
        <member name="M:Models.Utilities.Accumulator.Update">
            <summary>
            Perform update
            </summary>
        </member>
        <member name="P:Models.Utilities.Accumulator.Sum">
            <summary>
            Return the sum 
            </summary>
        </member>
        <member name="M:Models.PMF.Util.GetCumulativeIndex(System.Double,System.Double[],System.Int32)">
            <summary>
            Find the first element of an array where a given value
            is contained with the cumulative sum_of of the elements.
            If sum_of is not reached by the end of the array, then it
            is ok to set it to the last element. This will take
            account of the case of the number of levels being 0.
            </summary>
        </member>
        <member name="M:Models.PMF.Util.Accumulate(System.Double,System.Double[],System.Double,System.Double)">
            <summary>
            Accumulates a value in an array, at the specified index.
            If the increment in index value changes to a new index, the value
            is distributed proportionately between the two indices of the array.
            </summary>
            <param name="value">value to add to array</param>
            <param name="array">array to split</param>
            <param name="p_index">current p_index no</param>
            <param name="dlt_index">increment in p_index no</param>
        </member>
        <member name="M:Models.PMF.Util.RemoveDM(System.Double,Models.PMF.Biomass,System.String)">
            <summary>
            Remove some dm. The fraction removed is calculation and put into the RemovedPool so that
            later one it can be removed from the actual Pool in the update routine.
            Routine was called giveDMGreenRemoved and giveDMSenescedRemoved in old Plant.
            </summary>
        </member>
        <member name="T:Models.PMF.Phen.GerminatingPhase">
            <summary>
            This model assumes that germination will be complete if the extractable soil water is greater than zero on any day after sowing.
            </summary>
            \pre A \ref Models.Soils.Soil "Soil" function has to exist to 
            provide the \ref Models.Soils.SoilWater.esw "extractable soil water (ESW)" 
            in the soil profile.
            <remarks>
            Crop will germinate in the next day if the \ref Models.Soils.SoilWater.esw "extractable soil water (ESW)"
            is more than zero.
            </remarks>
        </member>
        <member name="M:Models.PMF.Phen.GerminatingPhase.DoTimeStep(System.Double)">
            <summary>
            Do our timestep development
            </summary>
        </member>
        <member name="P:Models.PMF.Phen.GerminatingPhase.FractionComplete">
            <summary>
            Return a fraction of phase complete.
            </summary>
        </member>
        <member name="T:Models.PMF.Phen.GenericPhase">
            <summary>
            This generic phase uses a thermal time target to determine the duration between growth stages.
            Thermal time is accumulated until the target is met and remaining thermal time is forwarded to the next phase.
            </summary>
            \param Target The thermal time target in this phase.
            <remarks>
            Generic phase increments daily thermal time accumulated in this phase
            to met the \p Target.
            The remainder thermal time will pass into the first day of 
            next phase by \ref Models.PMF.Phen.Phenology "Phenology" 
            function if the phase target is met today.
            </remarks>
        </member>
        <member name="M:Models.PMF.Phen.GenericPhase.DoTimeStep(System.Double)">
            <summary>
            This function increments thermal time accumulated in each phase 
            and returns a non-zero value if the phase target is met today so
            the phenology class knows to progress to the next phase and how
            much tt to pass it on the first day.
            </summary>
        </member>
        <member name="M:Models.PMF.Phen.GenericPhase.CalcTarget">
            <summary>
            Return the target to caller. Can be overridden by derived classes.
            </summary>
        </member>
        <member name="M:Models.PMF.Phen.GenericPhase.AddTT(System.Double)">
            <summary>Return proportion of TT unused</summary>
            <param name="PropOfDayToUse">The property of day to use.</param>
            <returns></returns>
        </member>
        <member name="P:Models.PMF.Phen.GenericPhase.FractionComplete">
            <summary>
            Return a fraction of phase complete.
            </summary>
        </member>
        <member name="T:Models.PMF.Phen.EmergingPhase">
            <summary>
            This phase simulates time to emergence as a function of sowing depth.  Thermal time to emergence = Sowing Depth x Shoot Rate + Shoot Lag.
            </summary>
            \pre A \ref Models.PMF.Plant "Plant" function has to exist to 
            provide the sowing depth (\f$D_{seed}\f$).
            \param ShootLag An initial period of fixed thermal time during 
            which shoot elongation is slow (the "lag" phase, \f$T_{lag}\f$, deg;Cd)
            \param ShootRate The rate of shoot elongation (\f$r_{e}\f$, 
            deg;Cd mm<sup>-1</sup>) towards the soil surface is 
            linearly related to air temperature.
            <remarks>
            The thermal time target in the emerging phase includes 
            an effect of the depth of sowing (\f$D_{seed}\f$), an 
            initial period of fixed thermal time during which 
            shoot elongation is slow (the "lag" phase, \f$T_{lag}\f$, \p ShootLag)
            and a linear period, where the rate of shoot elongation (\f$r_{e}\f$, 
            \p ShootRate) towards the soil surface is linearly related to 
            air temperature. Then, the thermal time target (\f$T_{emer}\f$) 
            is calculated by 
            \f[
            T_{emer}=T_{lag}+r_{e}D_{seed}
            \f]
            </remarks>
        </member>
        <member name="F:Models.PMF.Phen.EmergingPhase.Plant">
            <summary>The plant</summary>
        </member>
        <member name="M:Models.PMF.Phen.EmergingPhase.CalcTarget">
            <summary>Return the target to caller. Can be overridden by derived classes.</summary>
            <returns></returns>
        </member>
        <member name="P:Models.PMF.Phen.EmergingPhase.ShootLag">
            <summary>Gets or sets the shoot lag.</summary>
            <value>The shoot lag.</value>
        </member>
        <member name="P:Models.PMF.Phen.EmergingPhase.ShootRate">
            <summary>Gets or sets the shoot rate.</summary>
            <value>The shoot rate</value>
        </member>
        <member name="T:Models.PMF.Phen.EmergingPhase15">
            <summary>
            The class below is for Plant15. Need to get rid of this eventually.
            </summary>
        </member>
        <member name="F:Models.PMF.Phen.EmergingPhase15.Plant">
            <summary>The plant</summary>
        </member>
        <member name="M:Models.PMF.Phen.EmergingPhase15.CalcTarget">
            <summary>Return the target to caller. Can be overridden by derived classes.</summary>
            <returns></returns>
        </member>
        <member name="P:Models.PMF.Phen.EmergingPhase15.ShootLag">
            <summary>Gets or sets the shoot lag.</summary>
            <value>The shoot lag.</value>
        </member>
        <member name="P:Models.PMF.Phen.EmergingPhase15.ShootRate">
            <summary>Gets or sets the shoot rate.</summary>
            <value>The shoot rate.</value>
        </member>
        <member name="T:Models.PMF.Organs.Leaf">
            <summary>
            A generic leaf model
            </summary>
            \param KDead The extinction coefficient for dead leaf (\f$k_d\f$).
            \param FrostFraction The fraction of leaf death caused by frost event.
            \param GsMax The maximum stomatal conductance (m/s).
            \param R50 SolRad at which stomatal conductance decreases to 50% (W/m2).
            \retval MaxCover The maximum coverage (\f$C_{max}\f$) with default value 1, 
                which is set by manager sowing. 
            \retval LAI Leaf area index for green leaf (\f$\text{LAI}_{g}\f$, \f$m^2 m^{-2}\f$)
            \retval LAIDead Leaf area index for dead leaf  (\f$\text{LAI}_{d}\f$, \f$m^2 m^{-2}\f$)
            \retval LAITotal Total LAI including live and dead parts (\f$m^2 m^{-2}\f$)
                \f[
                LAI = \text{LAI}_{g} + \text{LAI}_{d}
                \f]
            \retval CoverGreen Cover for green leaf (\f$C_g\f$, unitless). 
                \f$C_g\f$ is calculated according to
                extinction coefficient of green leaf (\f$k_{g}\f$).
                \f[
                C_{g}=C_{max}(1-\exp(-k_{g}\frac{\text{LAI}_{g}}{C_{max}}))
                \f]
                where, \f$k\f$ is the extinction coefficient which calculates 
                by parameter "ExtinctionCoeff". 
                As the default value of \f$C_{max}\f$ is 1, the function is reduced to
                \f[
                 C_{g}=1-\exp(-k_{g}\text{LAI}_{g})
                \f]
            \retval CoverDead Cover for dead leaf (\f$C_d\f$, unitless).
                \f$C_d\f$ is calculated according to
                extinction coefficient of dead leaf (\f$k_{d}\f$).
                \f[
                C_{d}=1-\exp(-k_{d}\text{LAI}_{d})
                \f]
            \retval CoverTotal Total cover for green and dead leaves (\f$C_t\f$, unitless).
                \f[
                C_{t} = 1 - (1 - C_{g})(1 - C_{d})
                \f]
            
            \retval Height Plant height from Structure (mm). 
            \retval Depth Plant height from Structure (mm). Equal to plant height (not sure its function?)
            \retval FRGR Fractional relative growth rate (unitless, 0-1)
                with 1.0 at full growth rate and 0.0 at no growth.
            \retval PotentialEP Potential evapotranspiration. Set by MICROCLIMATE.
            
            <remarks>
            The organ "Leaf" consists of a series of \ref LeafCohort "cohort leaves", which 
            is identified by leaf rank (1 based ranking).
            
            
            On commencing simulation
            ------------------------
            OnSimulationCommencing is called on commencing simulation. 
            The leaves in the seed are initialized from all children with model 
            \ref Models.PMF.Organs.LeafCohort "LeafCohort". 
            
            Potential growth 
            ------------------------
            
            Senescence
            ------------------------
            Frost impact on leaf death
            ------------------------
            Each cohort leaf is killed by a fraction if value of FrostFraction is more than 0. 
            The frost fraction could be calculated through daily minimum temperature and
            growth stages. See \ref Models.PMF.Organs.LeafCohort "LeafCohort" model for details.
            See \subpage parameter "tutorial" about how to set up a parameter in APSIM. 
            </remarks>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.Plant">
            <summary>The plant</summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.Summary">
            <summary>The summary</summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.Arbitrator">
            <summary>The arbitrator</summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.Structure">
            <summary>The structure</summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.Phenology">
            <summary>The phenology</summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.InitialLeaves">
            <summary>The initial leaves</summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.CohortParameters">
            <summary>The leaf cohort parameters</summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.Photosynthesis">
            <summary>The photosynthesis</summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.ThermalTime">
            <summary>The thermal time</summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.ExtinctionCoeff">
            <summary>The extinction coeff</summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.FrostFraction">
            <summary>The frost fraction</summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.StructuralFraction">
            <summary>The structural fraction</summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.DMDemandFunction">
            <summary>The dm demand function</summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.Leaves">
            <summary>The leaves</summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.CurrentExpandingLeaf">
            <summary>Initialise all state variables.</summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.StartFractionExpanded">
            <summary>The start fraction expanded</summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.FractionNextleafExpanded">
            <summary>The fraction nextleaf expanded</summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf._ExpandedNodeNo">
            <summary>The _ expanded node no</summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.DeadNodesYesterday">
            <summary>The dead nodes yesterday</summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.MaxCover">
            <summary>The maximum cover</summary>
        </member>
        <member name="M:Models.PMF.Organs.Leaf.CohortCounter(System.String)">
            <summary>Cohorts the counter.</summary>
            <param name="Condition">The condition.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Models.PMF.Organs.Leaf.CopyLeaves(Models.PMF.Organs.LeafCohort[],System.Collections.Generic.List{Models.PMF.Organs.LeafCohort})">
            <summary>Copies the leaves.</summary>
            <param name="From">From.</param>
            <param name="To">To.</param>
        </member>
        <member name="M:Models.PMF.Organs.Leaf.OnDoPotentialPlantGrowth(System.Object,System.EventArgs)">
            <summary>Event from sequencer telling us to do our potential growth.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Organs.Leaf.Clear">
            <summary>Clears this instance.</summary>
        </member>
        <member name="M:Models.PMF.Organs.Leaf.InitialiseCohorts">
            <summary>Initialises the cohorts.</summary>
        </member>
        <member name="M:Models.PMF.Organs.Leaf.OnDoActualPlantGrowth(System.Object,System.EventArgs)">
            <summary>Does the nutrient allocations.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Organs.Leaf.ZeroLeaves">
            <summary>Zeroes the leaves.</summary>
        </member>
        <member name="M:Models.PMF.Organs.Leaf.CoverAboveCohort(System.Double)">
            <summary>Fractional interception "above" a given node position</summary>
            <param name="cohortno">cohort position</param>
            <returns>fractional interception (0-1)</returns>
        </member>
        <member name="M:Models.PMF.Organs.Leaf.OnPrune(Models.PMF.PruneType)">
            <summary>Called when [prune].</summary>
            <param name="Prune">The prune.</param>
        </member>
        <member name="M:Models.PMF.Organs.Leaf.OnRemoveLowestLeaf">
            <summary>Called when [remove lowest leaf].</summary>
        </member>
        <member name="M:Models.PMF.Organs.Leaf.OnPlantSowing(System.Object,Models.PMF.SowPlant2Type)">
            <summary>Called when crop is ending</summary>
            <param name="sender">The sender.</param>
            <param name="data">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Organs.Leaf.OnKillLeaf(Models.PMF.KillLeafType)">
            <summary>Called when [kill leaf].</summary>
            <param name="KillLeaf">The kill leaf.</param>
        </member>
        <member name="M:Models.PMF.Organs.Leaf.OnCutting(System.Object,System.EventArgs)">
            <summary>Called when crop is being cut.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Organs.Leaf.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>Called when [simulation commencing].</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.PMF.Organs.Leaf.OnPlantEnding(System.Object,System.EventArgs)">
            <summary>Called when crop is ending</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.CanopyType">
            <summary>Gets the canopy. Should return null if no canopy present.</summary>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.LAI">
            <summary>Gets the LAI</summary>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.LAITotal">
            <summary>Gets the LAI live + dead (m^2/m^2)</summary>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.CoverGreen">
            <summary>Gets the cover green.</summary>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.CoverTotal">
            <summary>Gets the cover total.</summary>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.Height">
            <summary>Gets the height.</summary>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.Depth">
            <summary>Gets the depth.</summary>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.FRGR">
            <summary>Gets  FRGR.</summary>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.PotentialEP">
            <summary>Sets the potential evapotranspiration. Set by MICROCLIMATE.</summary>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.LightProfile">
            <summary>Sets the light profile. Set by MICROCLIMATE.</summary>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.KDead">
            <summary>Gets or sets the k dead.</summary>
            <value>The k dead.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.GsMax">
            <summary>Gets or sets the gs maximum.</summary>
            <value>The gs maximum.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.R50">
            <summary>Gets or sets the R50.</summary>
            <value>The R50.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.Emissivity">
            <summary>Gets or sets the emissivity.</summary>
            <value>The emissivity.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.Albido">
            <summary>Gets or sets the albido.</summary>
            <value>The albido.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.CohortCurrentRankCoverAbove">
            <summary>Return the</summary>
            <value>The cohort current rank cover above.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.FractionDied">
            <summary>Gets or sets the fraction died.</summary>
            <value>The fraction died.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.CohortsInitialised">
            <summary>
            Gets a value indicating whether [cohorts initialised].
            </summary>
            <value><c>true</c> if [cohorts initialised]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.InitialisedCohortNo">
            <summary>Gets the initialised cohort no.</summary>
            <value>The initialised cohort no.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.AppearedCohortNo">
            <summary>Gets the appeared cohort no.</summary>
            <value>The appeared cohort no.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.FinalLeafFraction">
            <summary>Gets the final leaf fraction.</summary>
            <value>The final leaf fraction.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.FinalLeafAppeared">
            <summary>
            Gets a value indicating whether [final leaf appeared].
            </summary>
            <value><c>true</c> if [final leaf appeared]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.ExpandingCohortNo">
            <summary>Gets the expanding cohort no.</summary>
            <value>The expanding cohort no.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.ExpandedNodeNo">
            <summary>Gets the expanded node no.</summary>
            <value>The expanded node no.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.ExpandedCohortNo">
            <summary>Gets the expanded cohort no.</summary>
            <value>The expanded cohort no.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.GreenCohortNo">
            <summary>Gets the green cohort no.</summary>
            <value>The green cohort no.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.SenescingCohortNo">
            <summary>Gets the senescing cohort no.</summary>
            <value>The senescing cohort no.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.DeadCohortNo">
            <summary>Gets the dead cohort no.</summary>
            <value>The dead cohort no.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.PlantAppearedGreenLeafNo">
            <summary>Gets the plant appeared green leaf no.</summary>
            <value>The plant appeared green leaf no.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.PlantAppearedLeafNo">
            <summary>Gets the plant appeared leaf no.</summary>
            <value>The plant appeared leaf no.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.LAIDead">
            <summary>Gets the lai dead.</summary>
            <value>The lai dead.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.CohortLive">
            <summary>Gets the cohort live.</summary>
            <value>The cohort live.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.CohortDead">
            <summary>Gets the cohort dead.</summary>
            <value>The cohort dead.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.CoverDead">
            <summary>Gets the cover dead.</summary>
            <value>The cover dead.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.RadIntTot">
            <summary>Gets the RAD int tot.</summary>
            <value>The RAD int tot.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.SpecificArea">
            <summary>Gets the specific area.</summary>
            <value>The specific area.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.CohortSize">
            <summary>Gets the size of the cohort.</summary>
            <value>The size of the cohort.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.MaxLeafArea">
            <summary>Gets the maximum leaf area.</summary>
            <value>The maximum leaf area.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.CohortArea">
            <summary>Gets the cohort area.</summary>
            <value>The cohort area.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.CohortAge">
            <summary>Gets the cohort age.</summary>
            <value>The cohort age.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.CohortMaxSize">
            <summary>Gets the maximum size of the cohort.</summary>
            <value>The maximum size of the cohort.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.CohortMaxArea">
            <summary>Gets the cohort maximum area.</summary>
            <value>The cohort maximum area.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.CohortSLA">
            <summary>Gets the cohort sla.</summary>
            <value>The cohort sla.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.CohortStructuralFrac">
            <summary>Gets the cohort structural frac.</summary>
            <value>The cohort structural frac.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.LiveNConc">
            <summary>Gets the live n conc.</summary>
            <value>The live n conc.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.PotentialGrowth">
            <summary>Gets the potential growth.</summary>
            <value>The potential growth.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.Transpiration">
            <summary>Gets the transpiration.</summary>
            <value>The transpiration.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.Fw">
            <summary>Gets the fw.</summary>
            <value>The fw.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.Fn">
            <summary>Gets the function.</summary>
            <value>The function.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.CurrentRank">
            <summary>1 based rank of the current leaf.</summary>
            <value>The current rank.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.DMDemand">
            <summary>Gets or sets the dm demand.</summary>
            <value>The dm demand.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.DMSupply">
            <summary>Daily photosynthetic "net" supply of dry matter for the whole plant (g DM/m2/day)</summary>
            <value>The dm supply.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.DMPotentialAllocation">
            <summary>Sets the dm potential allocation.</summary>
            <value>The dm potential allocation.</value>
            <exception cref="T:System.Exception">
            Invalid allocation of potential DM in + Name
            or
            the sum of poteitial DM allocation to leaf cohorts is more that that allocated to leaf organ
            or
            Invalid allocation of potential DM in + Name
            or
            the sum of poteitial DM allocation to leaf cohorts is more that that allocated to leaf organ
            </exception>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.DMAllocation">
            <summary>Sets the dm allocation.</summary>
            <value>The dm allocation.</value>
            <exception cref="T:System.Exception">
            Invalid allocation of DM in Leaf
            or
            DM allocated to Leaf left over after allocation to leaf cohorts
            or
            the sum of DM allocation to leaf cohorts is more that that allocated to leaf organ
            or
            Invalid allocation of DM in Leaf
            or
            Metabolic DM allocated to Leaf left over after allocation to leaf cohorts
            or
            the sum of Metabolic DM allocation to leaf cohorts is more that that allocated to leaf organ
            or
            or
            or
            or
            or
            </exception>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.WaterDemand">
            <summary>Gets or sets the water demand.</summary>
            <value>The water demand.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.WaterAllocation">
            <summary>Gets or sets the water allocation.</summary>
            <value>The water allocation.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.NDemand">
            <summary>Gets or sets the n demand.</summary>
            <value>The n demand.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.NAllocation">
            <summary>Sets the n allocation.</summary>
            <value>The n allocation.</value>
            <exception cref="T:System.Exception">
            Invalid allocation of N
            or
            or
            or
            or
            or
            or
            </exception>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.NSupply">
            <summary>Gets or sets the n supply.</summary>
            <value>The n supply.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.MaxNconc">
            <summary>Gets or sets the maximum nconc.</summary>
            <value>The maximum nconc.</value>
        </member>
        <member name="P:Models.PMF.Organs.Leaf.MinNconc">
            <summary>Gets or sets the minimum nconc.</summary>
            <value>The minimum nconc.</value>
        </member>
        <member name="E:Models.PMF.Organs.Leaf.NewLeaf">
            <summary>Occurs when [new leaf].</summary>
        </member>
        <member name="T:Models.PMF.Organs.Leaf.LeafCohortParameters">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.LeafCohortParameters.MaxArea">
            <summary>The maximum area</summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.LeafCohortParameters.GrowthDuration">
            <summary>The growth duration</summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.LeafCohortParameters.LagDuration">
            <summary>The lag duration</summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.LeafCohortParameters.SenescenceDuration">
            <summary>The senescence duration</summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.LeafCohortParameters.DetachmentLagDuration">
            <summary>The detachment lag duration</summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.LeafCohortParameters.DetachmentDuration">
            <summary>The detachment duration</summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.LeafCohortParameters.SpecificLeafAreaMax">
            <summary>The specific leaf area maximum</summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.LeafCohortParameters.SpecificLeafAreaMin">
            <summary>The specific leaf area minimum</summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.LeafCohortParameters.StructuralFraction">
            <summary>The structural fraction</summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.LeafCohortParameters.MaximumNConc">
            <summary>The maximum n conc</summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.LeafCohortParameters.MinimumNConc">
            <summary>The minimum n conc</summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.LeafCohortParameters.StructuralNConc">
            <summary>The structural n conc</summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.LeafCohortParameters.InitialNConc">
            <summary>The initial n conc</summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.LeafCohortParameters.NReallocationFactor">
            <summary>The n reallocation factor</summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.LeafCohortParameters.DMReallocationFactor">
            <summary>The dm reallocation factor</summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.LeafCohortParameters.NRetranslocationFactor">
            <summary>The n retranslocation factor</summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.LeafCohortParameters.ExpansionStress">
            <summary>The expansion stress</summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.LeafCohortParameters.CriticalNConc">
            <summary>The critical n conc</summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.LeafCohortParameters.DMRetranslocationFactor">
            <summary>The dm retranslocation factor</summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.LeafCohortParameters.ShadeInducedSenescenceRate">
            <summary>The shade induced senescence rate</summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.LeafCohortParameters.DroughtInducedSenAcceleration">
            <summary>The drought induced sen acceleration</summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.LeafCohortParameters.NonStructuralFraction">
            <summary>The non structural fraction</summary>
        </member>
        <member name="F:Models.PMF.Organs.Leaf.LeafCohortParameters.CellDivisionStress">
            <summary>The cell division stress</summary>
        </member>
        <member name="T:Models.PMF.OldPlant.PlantSpatial1">
            <summary>
            Plant spatial model
            </summary>
        </member>
        <member name="F:Models.PMF.OldPlant.PlantSpatial1.Plant">
            <summary>The plant</summary>
        </member>
        <member name="F:Models.PMF.OldPlant.PlantSpatial1._CanopyWidth">
            <summary>The _ canopy width</summary>
        </member>
        <member name="P:Models.PMF.OldPlant.PlantSpatial1.Density">
            <summary>Gets or sets the density.</summary>
            <value>The density.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.PlantSpatial1.SkipRowFactor">
            <summary>Gets the skip row factor.</summary>
            <value>The skip row factor.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.PlantSpatial1.CanopyWidth">
            <summary>Gets or sets the width of the canopy.</summary>
            <value>The width of the canopy.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.PlantSpatial1.RowSpacing">
            <summary>Gets the row spacing.</summary>
            <value>The row spacing.</value>
        </member>
        <member name="P:Models.PMF.OldPlant.PlantSpatial1.CanopyFactor">
            <summary>Gets the canopy factor.</summary>
            <value>The canopy factor.</value>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Models.PMF.Functions.PhaseLookupValue">
            <summary>
            Returns the value of it child function to the PhaseLookup parent function if current phenology is between Start and end stages specified.
            </summary>
        </member>
        <member name="F:Models.PMF.Functions.PhaseLookupValue.Phenology">
            <summary>The phenology</summary>
        </member>
        <member name="F:Models.PMF.Functions.PhaseLookupValue.ChildFunctions">
            <summary>The child functions</summary>
        </member>
        <member name="M:Models.PMF.Functions.PhaseLookupValue.Document(System.Collections.Generic.List{Models.Core.AutoDocumentation.ITag},System.Int32,System.Int32)">
            <summary>Writes documentation for this function by adding to the list of documentation tags.</summary>
            <param name="tags">The list of tags to add to.</param>
            <param name="headingLevel">The level (e.g. H2) of the headings.</param>
            <param name="indent">The level of indentation 1, 2, 3 etc.</param>
        </member>
        <member name="P:Models.PMF.Functions.PhaseLookupValue.Start">
            <summary>The start</summary>
        </member>
        <member name="P:Models.PMF.Functions.PhaseLookupValue.End">
            <summary>The end</summary>
        </member>
        <member name="P:Models.PMF.Functions.PhaseLookupValue.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
            <exception cref="T:System.Exception">
            Phase start name not set: + Name
            or
            Phase end name not set: + Name
            </exception>
        </member>
        <member name="P:Models.PMF.Functions.PhaseLookupValue.InPhase">
            <summary>Gets a value indicating whether [in phase].</summary>
            <value><c>true</c> if [in phase]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Models.PMF.Functions.DemandFunctions.PopulationBasedDemandFunction">
            <summary>
            Demand is calculated from the product of growth rate, thermal time and population.
            </summary>
        </member>
        <member name="F:Models.PMF.Functions.DemandFunctions.PopulationBasedDemandFunction.ThermalTime">
            <summary>The thermal time</summary>
        </member>
        <member name="F:Models.PMF.Functions.DemandFunctions.PopulationBasedDemandFunction.OrganPopulation">
            <summary>The number of growing organs</summary>
        </member>
        <member name="F:Models.PMF.Functions.DemandFunctions.PopulationBasedDemandFunction.Phenology">
            <summary>The phenology</summary>
        </member>
        <member name="F:Models.PMF.Functions.DemandFunctions.PopulationBasedDemandFunction.ExpansionStress">
            <summary>The expansion stress</summary>
        </member>
        <member name="F:Models.PMF.Functions.DemandFunctions.PopulationBasedDemandFunction.MaximumOrganWt">
            <summary>The maximum organ wt</summary>
        </member>
        <member name="F:Models.PMF.Functions.DemandFunctions.PopulationBasedDemandFunction.StartStage">
            <summary>The start stage</summary>
        </member>
        <member name="F:Models.PMF.Functions.DemandFunctions.PopulationBasedDemandFunction.GrowthDuration">
            <summary>The growth duration</summary>
        </member>
        <member name="F:Models.PMF.Functions.DemandFunctions.PopulationBasedDemandFunction.AccumulatedThermalTime">
            <summary>The accumulated thermal time</summary>
        </member>
        <member name="F:Models.PMF.Functions.DemandFunctions.PopulationBasedDemandFunction.ThermalTimeToday">
            <summary>The thermal time today</summary>
        </member>
        <member name="M:Models.PMF.Functions.DemandFunctions.PopulationBasedDemandFunction.OnDoDailyInitialisation(System.Object,System.EventArgs)">
            <summary>Called when DoDailyInitialisation invoked</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Models.PMF.Functions.DemandFunctions.PopulationBasedDemandFunction.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
        </member>
        <member name="T:Models.PMF.Functions.DemandFunctions.AllometricDemandFunction">
            <summary>Calculate partitioning of daily growth based upon allometric relationship</summary>
        </member>
        <member name="F:Models.PMF.Functions.DemandFunctions.AllometricDemandFunction.Const">
            <summary>The constant</summary>
        </member>
        <member name="F:Models.PMF.Functions.DemandFunctions.AllometricDemandFunction.Power">
            <summary>The power</summary>
        </member>
        <member name="F:Models.PMF.Functions.DemandFunctions.AllometricDemandFunction.XProperty">
            <summary>The x property</summary>
        </member>
        <member name="F:Models.PMF.Functions.DemandFunctions.AllometricDemandFunction.YProperty">
            <summary>The y property</summary>
        </member>
        <member name="P:Models.PMF.Functions.DemandFunctions.AllometricDemandFunction.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
            <exception cref="T:System.Exception">
            Cannot find variable:  + XProperty +  in function:  + this.Name
            or
            Cannot find variable:  + YProperty +  in function:  + this.Name
            </exception>
        </member>
        <member name="T:Models.PostSimulationTools.Input">
            <summary>
            Reads the contents of a file (in apsim format) and stores into the DataStore. 
            If the file has a column name of 'SimulationName' then this model will only input data for those rows
            where the data in column 'SimulationName' matches the name of the simulation under which
            this input model sits. 
            
            If the file does NOT have a 'SimulationName' column then all data will be input.
            </summary>
        </member>
        <member name="M:Models.PostSimulationTools.Input.Run(Models.DataStore)">
            <summary>
            Main run method for performing our calculations and storing data.
            </summary>
        </member>
        <member name="F:Models.PostSimulationTools.Input.ErrorMessage">
            <summary>
            Provides an error message to display if something is wrong.
            </summary>
        </member>
        <member name="M:Models.PostSimulationTools.Input.GetTable">
            <summary>
            Return a datatable for this input file. Returns null if no data.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Models.PostSimulationTools.Input.FileName">
            <summary>
            Gets or sets the file name to read from.
            </summary>
        </member>
        <member name="P:Models.PostSimulationTools.Input.FullFileName">
            <summary>
            Gets or sets the full file name (with path). The user interface uses this. 
            </summary>
        </member>
        <member name="T:Models.Soils.Arbitrator.CropUptakes">
            <summary>
            A simple class for containing a single set of uptakes for a given crop.
            </summary>
        </member>
        <member name="F:Models.Soils.Arbitrator.CropUptakes.Crop">
            <summary>Crop</summary>
        </member>
        <member name="F:Models.Soils.Arbitrator.CropUptakes.Zones">
            <summary>List of uptakes</summary>
        </member>
        <member name="T:Models.Grazplan.GrazParam">
            <summary>
            Class containing some common routine for dealing with parameter sets
            </summary>
        </member>
        <member name="F:Models.Grazplan.GrazParam.ALL_LOCALES">
            <summary>
            magic string to serve as a wildcard for all locales
            </summary>
        </member>
        <member name="F:Models.Grazplan.GrazParam.PARAM_KEY">
            <summary>
            Registry key for Grazplan configuration information
            </summary>
        </member>
        <member name="F:Models.Grazplan.GrazParam.UILang">
            <summary>
            The UI language
            </summary>
        </member>
        <member name="M:Models.Grazplan.GrazParam.InLocale(System.String,System.String)">
            <summary>
            Determine whether a locale name is included in a list of locale names
            </summary>
            <param name="locale">Locale name</param>
            <param name="localeList">semicolon delimited list of locale names</param>
            <returns></returns>
        </member>
        <member name="M:Models.Grazplan.GrazParam.GetUILang">
            <summary>
            Returns the 2-letter ISO 639 language code (e.g, 'en')
            </summary>
            <returns>
            The 2-letter language code
            </returns>
        </member>
        <member name="M:Models.Grazplan.GrazParam.SetUILang(System.String)">
            <summary>
            Force use of a language code, rather than determining it from system settings
            </summary>
            <param name="lang">2-letter language code to be used</param>
        </member>
        <member name="M:Models.Grazplan.GrazParam.DefaultLocale">
            <summary>
            Common locale for use across models and programs
            * The locale is a two-character country code that is stored in the registry.
            * If there is no entry in the registry, 'au' is returned.
            </summary>
            <returns>
            A 2-character country code
            </returns>
        </member>
        <member name="T:Models.Grazplan.TSupplement">
            <summary>
            TSupplement encapsulates the attributes of a single supplement.
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplement.Rghg_MEDM_Intcpt">
            <summary>
            The RGHG_ med m_ intcpt
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplement.Rghg_MEDM_DMD">
            <summary>
            The RGHG_ med m_ DMD
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplement.Conc_MEDM_Intcpt">
            <summary>
            The conc_ med m_ intcpt
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplement.Conc_MEDM_DMD">
            <summary>
            The conc_ med m_ DMD
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplement.Conc_MEDM_EE">
            <summary>
            The conc_ med m_ ee
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplement.N2PROTEIN">
            <summary>
            The n2 protein
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplement.sName">
            <summary>
            The s name
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplement.FTranslations">
            <summary>
            The f translations
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplement._DM_Propn">
            <summary>
            Proportion of dry matter by weight
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplement._DM_Digestibility">
            <summary>
            Digestibility of dry matter
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplement._ME_2_DM">
            <summary>
            Metabolizable energy:DM, MJ/kg
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplement._EtherExtract">
            <summary>
            Ether-extractable fraction
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplement._CrudeProt">
            <summary>
            Proportion which is crude protein
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplement._DgProt">
            <summary>
            Proportion of protein that is rumen-degradable
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplement._ADIP_2_CP">
            <summary>
            Acid detergent insoluble protein:CP
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplement._Phosphorus">
            <summary>
            Phosphorus content (P:DM)
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplement._Sulphur">
            <summary>
            Sulphur content (S:DM)
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplement._AshAlkalinity">
            <summary>
            Ash alkalinity (mol/kg)
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplement._MaxPassage">
            <summary>
            Max. proportion passing through gut (used with whole grains)
            </summary>
        </member>
        <member name="M:Models.Grazplan.TSupplement.ConvertDMD_To_ME2DM(System.Double,System.Boolean,System.Double)">
            <summary>
            Routine for default conversion from DMD to M/D
            </summary>
            <param name="fDMD">Dry matter digestibility  (0-1)</param>
            <param name="isRoughage">True if the supplement is a roughage</param>
            <param name="fEE">Ether-extractable content (0-1)</param>
            <returns>
            M/D ratio (MJ/kg)
            </returns>
        </member>
        <member name="M:Models.Grazplan.TSupplement.ConvertME2DM_To_DMD(System.Double,System.Boolean,System.Double)">
            <summary>
            Routine for default conversion from M/D to DMD
            </summary>
            <param name="fME2DM">M/D ratio (MJ/kg)</param>
            <param name="isRoughage">True if the supplement is a roughage</param>
            <param name="fEE">Ether-extractable content (0-1)</param>
            <returns>
            Dry matter digestibility  (0-1)
            </returns>
        </member>
        <member name="M:Models.Grazplan.TSupplement.Mix(Models.Grazplan.TSupplement,Models.Grazplan.TSupplement,System.Double)">
            <summary>
            Mix two supplements together and store in Self
            Will work if Supp1=this or Supp2=this
            This method is only exact if the passage rates of the two supplements are equal
            </summary>
            <param name="Supp1">The supp1.</param>
            <param name="Supp2">The supp2.</param>
            <param name="propn1">The propn1.</param>
        </member>
        <member name="M:Models.Grazplan.TSupplement.MixMany(Models.Grazplan.TSupplement[],System.Double[])">
            <summary>
            Mixes the many.
            </summary>
            <param name="supps">The supps.</param>
            <param name="amounts">The amounts.</param>
        </member>
        <member name="M:Models.Grazplan.TSupplement.MixMany(Models.Grazplan.TSupplementItem[])">
            <summary>
            Mixes the many.
            </summary>
            <param name="supps">The supps.</param>
        </member>
        <member name="M:Models.Grazplan.TSupplement.Assign(Models.Grazplan.TSupplement)">
            <summary>
            Assigns the specified source supp.
            </summary>
            <param name="srcSupp">The source supp.</param>
        </member>
        <member name="M:Models.Grazplan.TSupplement.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Models.Grazplan.TSupplement.#ctor(System.String)">
            <summary>
            constructor with text argument
            </summary>
            <param name="suppSt">The supp st.</param>
        </member>
        <member name="M:Models.Grazplan.TSupplement.#ctor(Models.Grazplan.TSupplement)">
            <summary>
            copy consructor
            </summary>
            <param name="src">The source.</param>
        </member>
        <member name="M:Models.Grazplan.TSupplement.ParseKeyword(System.String@,System.String,System.String,System.Double,System.Double@)">
            <summary>
            This function looks for "token value units" at the head of SuppSt and
            if it finds it, scales the value which has been read in
            </summary>
            <param name="suppSt">String to parse</param>
            <param name="token">The expected token string</param>
            <param name="units">The expected units string</param>
            <param name="scalar">Multiplier for value field</param>
            <param name="value">Receives the value which was read</param>
            <returns></returns>
        </member>
        <member name="M:Models.Grazplan.TSupplement.ParseText(System.String,System.Boolean)">
            <summary>
            The CreateText method is fairly general. The layout of the string is:
            (Name) [ (keyword) (value) (unit)[(keyword)...] ]
            If (Name) is found in SuppTokens, then the supplement is initialised to
            the corresponding supplement.  Otherwise it is initialised to supplement
            number 1 (the first concentrate).  Any keywords then modify the
            composition.  Keywords are:
            DM_PC (%)  DMD (%) CP (%) DG (%) ME2DM (MJ)
            Finally, if only one of DMD and ME2DM was found, the regression equation
            on ether extract is used to estimate the other.
            </summary>
            <param name="suppSt">The supp st.</param>
            <param name="bNameOnly">if set to <c>true</c> [b name only].</param>
        </member>
        <member name="M:Models.Grazplan.TSupplement.AddTranslation(System.String,System.String)">
            <summary>
            Adds the translation.
            </summary>
            <param name="lang">The language.</param>
            <param name="text">The text.</param>
        </member>
        <member name="M:Models.Grazplan.TSupplement.DefaultFromName">
            <summary>
            Defaults from name.
            </summary>
        </member>
        <member name="M:Models.Grazplan.TSupplement.DefaultDMD">
            <summary>
            Computes a default value for DM digestibility from a (known) M/D ratio
            </summary>
            <returns></returns>
        </member>
        <member name="M:Models.Grazplan.TSupplement.DefaultME2DM">
            <summary>
            Computes a default value for M/D from a (known) DM digestibility          }
            </summary>
            <returns></returns>
        </member>
        <member name="M:Models.Grazplan.TSupplement.DefaultADIP_2_CP">
            <summary>
            Calculates the default acid-detergent insoluble protein : crude protein
            ratio for user defined supplements.
            </summary>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Models.Grazplan.TSupplement.DefaultPhosphorus">
            <summary>
            Calculates the default phosphorus content for user defined supplements.
            </summary>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Models.Grazplan.TSupplement.DefaultSulphur">
            <summary>
            Calculates the default sulphur content for user defined supplements.
            </summary>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Models.Grazplan.TSupplement.isSameAs(Models.Grazplan.TSupplement)">
            <summary>
            Determines whether [is same as] [the specified other supp].
            </summary>
            <param name="otherSupp">The other supp.</param>
            <returns></returns>
        </member>
        <member name="P:Models.Grazplan.TSupplement.IsRoughage">
            <summary>
            Gets or sets a value indicating whether this instance is roughage.
            </summary>
            <value>
            <c>true</c> if this instance is roughage; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Models.Grazplan.TSupplement.DM_Propn">
            <summary>
            Gets or sets the d m_ propn.
            </summary>
            <value>
            The d m_ propn.
            </value>
        </member>
        <member name="P:Models.Grazplan.TSupplement.DM_Digestibility">
            <summary>
            Gets or sets the d m_ digestibility.
            </summary>
            <value>
            The d m_ digestibility.
            </value>
        </member>
        <member name="P:Models.Grazplan.TSupplement.ME_2_DM">
            <summary>
            Gets or sets the m e_2_ dm.
            </summary>
            <value>
            The m e_2_ dm.
            </value>
        </member>
        <member name="P:Models.Grazplan.TSupplement.EtherExtract">
            <summary>
            Gets or sets the ether extract.
            </summary>
            <value>
            The ether extract.
            </value>
        </member>
        <member name="P:Models.Grazplan.TSupplement.CrudeProt">
            <summary>
            Gets or sets the crude prot.
            </summary>
            <value>
            The crude prot.
            </value>
        </member>
        <member name="P:Models.Grazplan.TSupplement.DgProt">
            <summary>
            Gets or sets the dg prot.
            </summary>
            <value>
            The dg prot.
            </value>
        </member>
        <member name="P:Models.Grazplan.TSupplement.ADIP_2_CP">
            <summary>
            Gets or sets the adi P_2_ cp.
            </summary>
            <value>
            The adi P_2_ cp.
            </value>
        </member>
        <member name="P:Models.Grazplan.TSupplement.Phosphorus">
            <summary>
            Gets or sets the phosphorus.
            </summary>
            <value>
            The phosphorus.
            </value>
        </member>
        <member name="P:Models.Grazplan.TSupplement.Sulphur">
            <summary>
            Gets or sets the sulphur.
            </summary>
            <value>
            The sulphur.
            </value>
        </member>
        <member name="P:Models.Grazplan.TSupplement.AshAlkalinity">
            <summary>
            Gets or sets the ash alkalinity.
            </summary>
            <value>
            The ash alkalinity.
            </value>
        </member>
        <member name="P:Models.Grazplan.TSupplement.MaxPassage">
            <summary>
            Gets or sets the maximum passage.
            </summary>
            <value>
            The maximum passage.
            </value>
        </member>
        <member name="P:Models.Grazplan.TSupplement.Item(Models.Grazplan.TSupplement.TSuppAttribute)">
            <summary>
            Indexer to allow easy access of attributes of a supplement
            </summary>
            <value>
            The <see cref="T:System.Double"/>.
            </value>
            <param name="attr">attibute to be retrieved or set</param>
            <returns></returns>
        </member>
        <member name="T:Models.Grazplan.TSupplement.TSuppAttribute">
            <summary>
            Enumeration of the chemical properites of a supplement
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplement.TSuppAttribute.spaDMP">
            <summary>
            The spa DMP
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplement.TSuppAttribute.spaDMD">
            <summary>
            The spa DMD
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplement.TSuppAttribute.spaMEDM">
            <summary>
            The spa medm
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplement.TSuppAttribute.spaEE">
            <summary>
            The spa ee
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplement.TSuppAttribute.spaCP">
            <summary>
            The spa cp
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplement.TSuppAttribute.spaDG">
            <summary>
            The spa dg
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplement.TSuppAttribute.spaADIP">
            <summary>
            The spa adip
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplement.TSuppAttribute.spaPH">
            <summary>
            The spa ph
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplement.TSuppAttribute.spaSU">
            <summary>
            The spa su
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplement.TSuppAttribute.spaAA">
            <summary>
            The spa aa
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplement.TSuppAttribute.spaMaxP">
            <summary>
            The spa maximum p
            </summary>
        </member>
        <member name="T:Models.Grazplan.TSupplement.TTranslation">
            <summary>
            
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplement.TTranslation.sLang">
            <summary>
            The s language
            </summary>
        </member>
        <member name="F:Models.Grazplan.TSupplement.TTranslation.sText">
            <summary>
            The s text
            </summary>
        </member>
        <member name="T:Models.Grazplan.TSupplementItem">
            <summary>
            A record to allow us to hold amount and cost information along
            with the TSupplement information
            In TSupplementItem, the "amount" should be read as kg of supplement fresh
            weight. and the cost should be per kg fresh weight.
            </summary>
        </member>
        <member name="M:Models.Grazplan.TSupplementItem.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Models.Grazplan.TSupplementItem.#ctor(Models.Grazplan.TSupplement,System.Double,System.Double)">
            <summary>
            Constructor
            Note that it makes a copy of the TSupplement
            </summary>
            <param name="src">The source.</param>
            <param name="amt">The amt.</param>
            <param name="cst">The CST.</param>
        </member>
        <member name="M:Models.Grazplan.TSupplementItem.Assign(Models.Grazplan.TSupplementItem)">
            <summary>
            Assigns the specified source supp.
            </summary>
            <param name="srcSupp">The source supp.</param>
        </member>
        <member name="P:Models.Grazplan.TSupplementItem.Amount">
            <summary>
            Gets or sets the amount.
            </summary>
            <value>
            The amount.
            </value>
        </member>
        <member name="P:Models.Grazplan.TSupplementItem.Cost">
            <summary>
            Gets or sets the cost.
            </summary>
            <value>
            The cost.
            </value>
        </member>
        <member name="T:Models.AgPasture1.PastureSpecies">
            <summary>Describes a pasture species</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.CarbonFractionInDM">
            <summary>Average carbon content in plant dry matter</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.NitrogenToProteinFactor">
            <summary>Factor for converting nitrogen to protein</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.CNratioProtein">
            <summary>The C:N ratio of protein</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.CNratioCellWall">
            <summary>The C:N ratio of cell wall</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.Clock">
            <summary>Link to APSIM's Clock (time information)</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.MetData">
            <summary>Link to APSIM's WeatherFile (meteorological information)</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.Soil">
            <summary>Link to the Soil (soil layers and other information)</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.apsimArbitrator">
            <summary>Link to apsim's Resource Arbitrator module</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.interceptedRadn">
            <summary>The intercepted solar radiation</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.myLightProfile">
            <summary>Light profile (energy available for each canopy layer)</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.myCanopyData">
            <summary>Data about this plant's canopy (LAI, height, etc)</summary>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.DoNewCropEvent">
            <summary>Invokes the NewCrop event (info about this crop type)</summary>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.Sow(System.String,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Sows the plant</summary>
            <param name="cultivar"></param>
            <param name="population"></param>
            <param name="depth"></param>
            <param name="rowSpacing"></param>
            <param name="maxCover"></param>
            <param name="budNumber"></param>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.myCanopyProperties">
            <summary>The canopy data for this plant</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.myRootProperties">
            <summary>The root data for this plant</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.speciesFamily">
            <summary>Family type for this plant species (grass/legume/brassica)</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.photosynthesisPathway">
            <summary>Metabolic pathway for C fixation during photosynthesis (C3/C4/CAM)</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.iniDMShoot">
            <summary>The initial DM amount above ground (shoot)</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.iniDMRoot">
            <summary>The ini dm root</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.iniRootDepth">
            <summary>The ini root depth</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.initialDMFractions_grass">
            <summary>The initial fractions of DM for grass</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.initialDMFractions_legume">
            <summary>The initial fractions of DM for legume</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.iniDMFraction">
            <summary>
            Initial DM fractions for each plant tissue (in order: leaf1, leaf2, leaf3, leaf4, stem1, stem2, stem3, stem4, stolon1, stolon2, stolon3)
            </summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.referencePhotosynthesisRate">
            <summary>Reference CO2 assimilation rate during photosynthesis [mg CO2/m2 leaf/s]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.maintenanceRespirationCoef">
            <summary>
            Maintenance respiration coefficient - Fraction of DM consumed by respiration [0-1]
            </summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.growthRespirationCoef">
            <summary>
            Growth respiration coefficient - fraction of photosynthesis CO2 not assimilated [0-1]
            </summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.lightExtentionCoeff">
            <summary>Light extinction coefficient [0-1]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.growthTmin">
            <summary>Minimum temperature for growth [oC]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.growthTmax">
            <summary>Maximum temperature for growth [oC]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.growthTopt">
            <summary>Optimum temperature for growth [oC]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.growthTq">
            <summary>Curve parameter for growth response to temperature</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.heatOnsetT">
            <summary>Onset temperature for heat effects on growth [oC]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.heatFullT">
            <summary>Temperature for full heat effect on growth (no growth) [oC]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.heatSumT">
            <summary>Cumulative degrees for recovery from heat stress [oC]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.referenceT4Heat">
            <summary>Reference temperature for recovery from heat stress [oC]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.coldOnsetT">
            <summary>Onset temperature for cold effects on growth [oC]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.coldFullT">
            <summary>Temperature for full cold effect on growth (no growth) [oC]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.coldSumT">
            <summary>Cumulative degrees for recovery from cold stress [oC]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.referenceT4Cold">
            <summary>Reference temperature for recovery from cold stress [oC]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.specificLeafArea">
            <summary>Specific leaf area [m^2/kg DM]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.specificRootLength">
            <summary>Specific root length [m/g DM]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.maxRootFraction">
            <summary>Maximum fraction of DM allocated to roots (from daily growth) [0-1]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.shootSeasonalAllocationIncrease">
            <summary>Factor by which DM allocation to shoot is increased during 'spring'[0-1]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.doyIniHighShoot">
            <summary>Day for the beginning of the period with higher shoot allocation ('spring')</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.higherShootAllocationPeriods">
            <summary>
            Number of days defining the duration of the three phases with higher DM allocation to shoot (onset, sill, return)
            </summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.fracToLeaf">
            <summary>Fraction of new shoot growth allocated to leaves [0-1]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.fracToStolon">
            <summary>Fraction of new shoot growth allocated to stolons [0-1]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.turnoverRateLive2Dead">
            <summary>Daily turnover rate for DM live to dead [0-1]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.turnoverRateDead2Litter">
            <summary>Daily turnover rate for DM dead to litter [0-1]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.turnoverRateRootSenescence">
            <summary>Daily turnover rate for root senescence [0-1]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.tissueTurnoverTmin">
            <summary>Minimum temperature for tissue turnover [oC]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.tissueTurnoverTopt">
            <summary>Optimum temperature for tissue turnover [oC]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.tissueTurnoverWFactorMax">
            <summary>Maximum increase in tissue turnover due to water stress</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.tissueTurnoverGLFWopt">
            <summary>
            Optimum value GLFwater for tissue turnover [0-1] - below this value tissue turnover increases
            </summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.stockParameter">
            <summary>Stock factor for increasing tissue turnover rate</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.digestibilityLive">
            <summary>Digestibility of live plant material [0-1]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.digestibilityDead">
            <summary>Digestibility of dead plant material [0-1]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.minimumGreenWt">
            <summary>Minimum above ground green DM [kg DM/ha]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.minimumDeadWt">
            <summary>Minimum above ground dead DM [kg DM/ha]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.preferenceForGreenDM">
            <summary>Preference for green DM during graze (weight factor)</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.preferenceForDeadDM">
            <summary>Preference for dead DM during graze (weight factor)</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.leafNopt">
            <summary>Optimum N concentration in leaves [0-1]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.leafNmax">
            <summary>Maximum N concentration in leaves (luxury N) [0-1]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.leafNmin">
            <summary>Minimum N concentration in leaves (dead material) [0-1]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.relativeNStems">
            <summary>Concentration of N in stems relative to leaves [0-1]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.relativeNStolons">
            <summary>Concentration of N in stolons relative to leaves [0-1]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.relativeNRoots">
            <summary>Concentration of N in roots relative to leaves [0-1]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.relativeNStage2">
            <summary>Concentration of N in tissues at stage 2 relative to stage 1 [0-1]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.relativeNStage3">
            <summary>Concentration of N in tissues at stage 3 relative to stage 1 [0-1]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.minimumNFixation">
            <summary>Minimum fraction of N demand supplied by biologic N fixation [0-1]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.maximumNFixation">
            <summary>Maximum fraction of N demand supplied by biologic N fixation [0-1]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.kappaNRemob2">
            <summary>Fraction of luxury N in tissue 2 available for remobilisation [0-1]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.kappaNRemob3">
            <summary>Fraction of luxury N in tissue 3 available for remobilisation [0-1]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.kappaNRemob4">
            <summary>Fraction of non-utilised remobilised N that is returned to dead material [0-1]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.kappaCRemob">
            <summary>Fraction of senescent DM that is remobilised (as carbohydrate) [0-1]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.facCNRemob">
            <summary>Fraction of senescent DM (protein) that is remobilised to new growth [0-1]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.dillutionCoefN">
            <summary>Curve parameter for the effect of N deficiency on plant growth</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.glfGeneric">
            <summary>Generic growth limiting factor [0-1]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.waterStressExponent">
            <summary>Exponent factor for the water stress function</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.waterLoggingCoefficient">
            <summary>Maximum reduction in plant growth due to water logging (saturated soil) [0-1]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.referenceCO2">
            <summary>Reference CO2 concentration for photosynthesis [ppm]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.coefficientCO2EffectOnPhotosynthesis">
            <summary>
            Coefficient for the function describing the CO2 effect on photosynthesis [ppm CO2]
            </summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.offsetCO2EffectOnNuptake">
            <summary>Scalling paramenter for the CO2 effects on N uptake [ppm Co2]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.minimumCO2EffectOnNuptake">
            <summary>Minimum value for the effect of CO2 on N requirement [0-1]</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.exponentCO2EffectOnNuptake">
            <summary>Exponent of the function describing the effect of CO2 on N requirement</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.rootDistributionMethod">
            <summary>Root distribution method (Homogeneous, ExpoLinear, UserDefined)</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.expoLinearDepthParam">
            <summary>Fraction of root depth where its proportion starts to decrease</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.expoLinearCurveParam">
            <summary>Exponent to determine mass distribution in the soil profile</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.HeightFromMass">
            <summary>Broken stick type function describing how plant height varies with DM</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.FVPDFunction">
            <summary>The FVPD function</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.myWaterUptakeSource">
            <summary>Flag which module will perform the water uptake process</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.useAltWUptake">
            <summary>Flag whether the alternative water uptake process will be used</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.ReferenceKSuptake">
            <summary>Reference value of Ksat for water availability function</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.myNitrogenUptakeSource">
            <summary>Flag which module will perform the nitrogen uptake process</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.useAltNUptake">
            <summary>Flag whether the alternative nitrogen uptake process will be used</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.kuNH4">
            <summary>Availability factor for NH4</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.kuNO3">
            <summary>Availability factor for NO3</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.ReferenceRLD">
            <summary>Reference value for root length density fot the Water and N availability</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.myStomatalConductanceMax">
            <summary>the local value for stomatal conductance</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.myKNO3">
            <summary>the local value for KNO3</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.myKNH4">
            <summary>the local value for KNH4</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.isSwardControlled">
            <summary>flag whether several routines are ran by species or are controlled by the Swar</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.isAlive">
            <summary>flag whether this species is alive (activelly growing)</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.isAnnual">
            <summary>flag this species type, annual or perennial</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.isLegume">
            <summary>flag whether this species is a legume</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.dayEmerg">
            <summary>The day of year for emergence</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.monEmerg">
            <summary>The monthe of emergence</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.dayAnth">
            <summary>The day of anthesis</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.monAnth">
            <summary>The month of anthesis</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.daysToMature">
            <summary>The number of days to mature</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.daysEmgToAnth">
            <summary>The number of days between emergence and anthesis</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.phenoStage">
            <summary>The phenologic stage (0= pre_emergence, 1= vegetative, 2= reproductive)</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.daysfromEmergence">
            <summary>The number of days from emergence</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.daysfromAnthesis">
            <summary>The number of days from anthesis</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.dRootDepth">
            <summary>The daily variation in root depth</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.maxRootDepth">
            <summary>The maximum root depth</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.dmTotal">
            <summary>The total plant DM</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.dmShoot">
            <summary>The DM in shoot</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.dmGreen">
            <summary>The DM in green parts 9live above ground)</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.dmDead">
            <summary>The DM of dead parts</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.dmLeaf">
            <summary>The DM of all leaves</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.dmStem">
            <summary>The DM of all stems and sheath</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.dmStolon">
            <summary>The DM of all stolons</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.dmRoot">
            <summary>The DM of roots</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.dmLeaf1">
            <summary>The DM of leaf stage1</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.dmLeaf2">
            <summary>The DM of leaf stage2</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.dmLeaf3">
            <summary>The DM of leaf stage3</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.dmLeaf4">
            <summary>The DM of leaf stage4</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.dmStem1">
            <summary>The DM of stem and sheath stage1</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.dmStem2">
            <summary>The DM of stem and sheath  stage2</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.dmStem3">
            <summary>The DM of stem and sheath stage3</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.dmStem4">
            <summary>The DM of stem and sheath  stage4</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.dmStolon1">
            <summary>The DM stolon stage1</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.dmStolon2">
            <summary>The DM of stolon stage2</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.dmStolon3">
            <summary>The DM of stolon stage3</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.NcStemOpt">
            <summary>The optimum N concentration of stems and sheath</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.NcStolonOpt">
            <summary>The optimum N concentration of stolons</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.NcRootOpt">
            <summary>The optimum N concentration of roots</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.NcStemMax">
            <summary>The maximum N concentration of stems andd sheath</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.NcStolonMax">
            <summary>The maximum N concentration of stolons</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.NcRootMax">
            <summary>The maximum N concentration of roots</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.NcStemMin">
            <summary>The minimum N concentration of stems and sheath</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.NcStolonMin">
            <summary>The minimum N concentration of stolons</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.NcRootMin">
            <summary>The minimum N concentration of roots</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.Nshoot">
            <summary>The amount of N above ground (shoot)</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.Nleaf1">
            <summary>The amount of N in leaf1</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.Nleaf2">
            <summary>The amount of N in leaf2</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.Nleaf3">
            <summary>The amount of N in leaf3</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.Nleaf4">
            <summary>The amount of N in leaf4</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.Nstem1">
            <summary>The amount of N in stem1</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.Nstem2">
            <summary>The amount of N in stem2</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.Nstem3">
            <summary>The amount of N in stem3</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.Nstem4">
            <summary>The amount of N in stem4</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.Nstolon1">
            <summary>The amount of N in stolon1</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.Nstolon2">
            <summary>The amount of N in stolon2</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.Nstolon3">
            <summary>The amount of N in stolon3</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.Nroot">
            <summary>The amount of N in roots</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.NdemandLux">
            <summary>The N demand for new growth, with luxury uptake</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.NdemandOpt">
            <summary>The N demand for new growth, at optimum N content</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.Nfixation">
            <summary>The amount of N fixation from atmosphere (for legumes)</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.NRemobilised">
            <summary>The amount of N remobilised from senesced tissue</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.Nremob2NewGrowth">
            <summary>The amount of N actually remobilised to new growth</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.newGrowthN">
            <summary>The amount of N used in new growth</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.NLuxury2">
            <summary>The aount of luxury N (above Nopt) in tissue 2 potentially remobilisable</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.NLuxury3">
            <summary>The amount of luxury N (above Nopt) in tissue 3 potentially remobilisable</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.NFastRemob2">
            <summary>The amount of luxury N actually remobilised from tissue 2</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.NFastRemob3">
            <summary>The amount of luxury N actually remobilised from tissue 3</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.mySoilAvailableN">
            <summary>The amount of N in the soil available to the plant</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.mySoilNH4available">
            <summary>The amount of NH4 in the soil available to the plant</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.mySoilNO3available">
            <summary>The amount of NO3 in the soil available to the plant</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.mySoilNDemand">
            <summary>The amount of N demanded from the soil</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.mySoilNuptake">
            <summary>The amount of N actually taken up</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.mySoilNitrogenTakenUp">
            <summary>The amount of N uptake from each soil layer</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.myWaterDemand">
            <summary>The amount of water demanded for new growth</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.mySoilAvailableWater">
            <summary>The amount of soil available water</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.mySoilWaterTakenUp">
            <summary>The amount of soil water taken up</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.dmDefoliated">
            <summary>The DM amount harvested (defoliated)</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.Ndefoliated">
            <summary>The N amount harvested (defoliated)</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.digestHerbage">
            <summary>The digestibility of herbage</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.digestDefoliated">
            <summary>The digestibility of defoliated material</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.fractionHarvested">
            <summary>The fraction of standing DM harvested</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.myHeight">
            <summary>The plant's average height</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.greenLAI">
            <summary>The plant's green LAI</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.deadLAI">
            <summary>The plant's dead LAI</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.myRootDepth">
            <summary>The plant's root depth</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.myRootFrontier">
            <summary>The layer at the bottom of the root zone</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.rootFraction">
            <summary>The fraction of roots DM in each layer</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.maxSRratio">
            <summary>The maximum shoot-root ratio</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.myRootExplorationFactor">
            <summary>The fraction of each layer that is actually explored by roots (0-1)</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.IL">
            <summary>The irradiance on top of canopy</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.Pgross">
            <summary>The gross photosynthesis rate (C assimilation)</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.Resp_g">
            <summary>The growth respiration rate (C loss)</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.Resp_m">
            <summary>The maintenance respiration rate (C loss)</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.CRemobilised">
            <summary>The amount of C remobilised from senesced tissue</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.dGrowthPot">
            <summary>Daily net growth potential (kgDM/ha)</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.dGrowthWstress">
            <summary>Daily potential growth after water stress</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.dGrowthActual">
            <summary>Daily growth after nutrient stress (actual growth)</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.dGrowthRoot">
            <summary>Effective growth of roots</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.dGrowthShoot">
            <summary>Effective growth of shoot (herbage growth)</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.dGrowthEff">
            <summary>Effective plant growth (actual growth minus senescence)</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.dLitter">
            <summary>Daily litter production (dead to surface OM)</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.dNlitter">
            <summary>N amount in litter procuded</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.dRootSen">
            <summary>Daily root sennesce (added to soil FOM)</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.dNrootSen">
            <summary>N amount in senesced roots</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.fShoot">
            <summary>Fraction of growth allocated to shoot (0-1)</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.gama">
            <summary>The daily DM turnover rate (from tissue 1 to 2, then to 3, then to 4)</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.gamaS">
            <summary>The daily DM turnover rate for stolons</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.gamaD">
            <summary>The daily DM turnover rate for dead tissue (from tissue 4 to litter)</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.gamaR">
            <summary>The daily DM turnover rate for roots</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.glfWater">
            <summary>The GLF due to water stress</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.glfN">
            <summary>The GLF due to N stress</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.NcFactor">
            <summary>The growth factor for N concentration</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.highTempEffect">
            <summary>Growth rate reduction factor due to high temperatures</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.lowTempEffect">
            <summary>Growth rate reduction factor due to low temperatures</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.accumT4Heat">
            <summary>Cumulative degress of temperature for recovery from heat damage</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.accumT4Cold">
            <summary>Cumulative degress of temperature for recovry from cold damage</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.nLayers">
            <summary>Number of layers in the soil</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.Tmean">
            <summary>Today's average temperature</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.TmeanW">
            <summary>Today's weighted mean temperature</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.prevState">
            <summary>State for this plant on the previous day</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.intRadnFrac">
            <summary>fraction of Radn intercepted by this species</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.swardLightExtCoeff">
            <summary>Light extintion coefficient for all species</summary>
        </member>
        <member name="F:Models.AgPasture1.PastureSpecies.swardGreenCover">
            <summary>average green cover for all species</summary>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.OnSimulationCommencing(System.Object,System.EventArgs)">
            <summary>Performs the initialisation procedures for this species (set DM, N, LAI, etc)</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.InitiliaseSoilArrays">
            <summary>
            Initialise arrays to same length as soil layers
            </summary>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.SetInitialState">
            <summary>
            Set the initial parameters for this plant, including DM and N content of various pools plus plant height and root depth
            </summary>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.InitialiseCanopy">
            <summary>Initialise the variables in canopy properties</summary>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.InitialiseRootsProperties">
            <summary>Initialise the variables in root properties</summary>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.CalcDaysEmgToAnth">
            <summary>Calculates the days emg to anth.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.OnDoDailyInitialisation(System.Object,System.EventArgs)">
            <summary>EventHandler - preparation befor the main process</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.OnDoPlantGrowth(System.Object,System.EventArgs)">
            <summary>Performs the plant growth calculations</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.CalcPotentialGrowth">
            <summary>Calculates the potential growth.</summary>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.CalcGrowthWithWaterLimitations">
            <summary>Calculates the growth with water limitations.</summary>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.CalcActualGrowthAndPartition">
            <summary>Calculates the actual growth and partition.</summary>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.CalcTurnoverAndEffectiveGrowth">
            <summary>Calculates the turnover and effective growth.</summary>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.RefreshVariables">
            <summary>Refresh the value of several variables</summary>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.SaveState">
            <summary>Stores the current state for this species</summary>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.updateAggregated">
            <summary>Computes the value of auxiliary variables (aggregates for DM and N content)</summary>
            <exception cref="T:System.Exception">
            Loss of mass balance when aggregating plant dry matter after growth
            </exception>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.annualsPhenology">
            <summary>
            Evaluates the phenologic stage of annual plants, plus days from emergence or from anthesis
            </summary>
            <returns>An integer representing the plant's phenologic stage</returns>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.annualSpeciesReduction">
            <summary>Reduction factor for potential growth due to phenology of annual species</summary>
            <returns>A factor to reduce plant growth (0-1)</returns>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.EvaluateLAI">
            <summary>
            Computes the values of LAI (leaf area index) for green, dead, and total plant material
            </summary>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.calcDigestibility">
            <summary>Compute the average digestibility of aboveground plant material</summary>
            <returns>The digestibility of plant material (0-1)</returns>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.EvaluateRootGrowth">
            <summary>
            Computes the variations in root depth, including the layer containing the root frontier (for annuals only)
            </summary>
            <remarks>
            For perennials, the root depth and distribution are set at initialisation and do not change throughtout the simulation
            </remarks>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.DailyGrossPotentialGrowth">
            <summary>Computes the plant's gross potential growth rate</summary>
            <returns>The potential amount of C assimilated via photosynthesis (kgC/ha)</returns>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.DailyMaintenanceRespiration">
            <summary>Computes the plant's loss of C due to respiration</summary>
            <returns>The amount of C lost to atmosphere (kgC/ha)</returns>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.DailyGrowthRespiration">
            <summary>Computes the plant's loss of C due to growth respiration</summary>
            <returns>The amount of C lost to atmosphere (kgC/ha)</returns>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.DailyNetPotentialGrowth">
            <summary>Compute the plant's net potential growth</summary>
            <returns>The net potential growth (kg DM/ha)</returns>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.DailyActualGrowth">
            <summary>Computes the plant's potential growth rate</summary>
            <returns></returns>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.PartitionNewGrowth">
            <summary>Update DM and N amounts of all tissues accounting for the new growth (plus leftover remobilisation)</summary>
            <exception cref="T:System.Exception">
            Mass balance lost on partition of new growth DM
            or
            Mass balance lost on partition of new growth N
            </exception>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.ToShootFraction">
            <summary>Computes the fraction of today's growth allocated to shoot</summary>
            <returns>The fraction of DM growth allocated to shoot (0-1)</returns>
            <remarks>
            Takes into consideration any seasonal variations and defoliation, this is done by
            targeting a given shoot:root ratio (that is the maxSRratio)
            </remarks>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.UpdatefLeaf">
            <summary>Tentative - correction for the fraction of DM allocated to leaves</summary>
            <returns></returns>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.TissueTurnoverAndRemobilisation">
            <summary>Computes the turnover rate and update each tissue pool of all plant parts</summary>
            <exception cref="T:System.Exception">
            Loss of mass balance on C remobilisation - leaf
            or
            Loss of mass balance on C remobilisation - stem
            or
            Loss of mass balance on C remobilisation - stolon
            or
            Loss of mass balance on C remobilisation - root
            </exception>
            <remarks>The C and N amounts for remobilisation are also computed in here</remarks>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.DoNewCanopyEvent">
            <summary>
            Provides canopy data for MicroClimate, who will do the energy balance and calc water demand
            </summary>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.OnWaterUptakesCalculated(Models.PMF.WaterUptakesCalculatedType)">
            <summary>Gets the water uptake for each layer as calculated by an external module (SWIM)</summary>
            <param name="SoilWater">The soil water.</param>
            <remarks>
            This method is only used when an external method is used to compute water uptake (this includes AgPasture)
            </remarks>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.GetWaterUptake">
            <summary>
            Gets the amount of water uptake for this species as computed by the resource Arbitrator
            </summary>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.DoWaterCalculations">
            <summary>
            Consider water uptake calculations (plus GLFWater)
            </summary>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.MyWaterCalculations">
            <summary>
            Gather the amount of available eater and computes the water uptake for this species
            </summary>
            <remarks>
            Using this routine is discourage as it ignores the presence of other species and thus
            might result in loss of mass balance or unbalanced supply, i.e. over-supply for one
            while under-supply for other species (depending on the order that species are considered)
            </remarks>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.GetSoilAvailableWater">
            <summary>
            Finds out the amount soil water available for this plant (ignoring any other species)
            </summary>
            <returns>The amount of water available to plants in each layer</returns>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.DoSoilWaterUptake">
            <summary>Computes the actual water uptake and send the deltas to soil module</summary>
            <returns>The amount of water taken up for each soil layer</returns>
            <exception cref="T:System.Exception">Error on computing water uptake</exception>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.GetNitrogenUptake">
            <summary>
            Gets the amount of nitrogen uptake for this species as computed by the resource Arbitrator
            </summary>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.DoNitrogenCalculations">
            <summary>
            Consider nitrogen uptake calculations (plus GLFN)
            </summary>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.MyNitrogenCalculations">
            <summary>Performs the computations for N balance and uptake</summary>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.CalcNDemand">
            <summary>Computes the N demanded for optimum N content as well as luxury uptake</summary>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.CalcNFixation">
            <summary>Computes the amount of N fixed from atmosphere</summary>
            <returns>The amount of N fixed (kgN/ha)</returns>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.CalcSoilNDemand">
            <summary>Perform preliminary N budget and get soil N demand</summary>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.GetSoilAvailableN">
            <summary>
            Find out the amount of Nitrogen (NH4 and NO3) in the soil available to plants for each soil layer
            </summary>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.CalcSoilNUptake">
            <summary>Computes the amount of N to be taken up from the soil</summary>
            <returns>The amount of N to be taken up from each soil layer</returns>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.CalcNLuxuryRemob">
            <summary>Computes the remobilisation of luxury N (from tissues 2 and 3)</summary>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.DoSoilNitrogenUptake">
            <summary>
            Computes the distribution of N uptake over the soil profile and send the delta to soil module
            </summary>
            <exception cref="T:System.Exception">
            Error on computing N uptake
            or
            N uptake source was not recognised. Please specify it as either \"sward\" or \"species\".
            </exception>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.DoSurfaceOMReturn(System.Double,System.Double)">
            <summary>Return a given amount of DM (and N) to surface organic matter</summary>
            <param name="amountDM">DM amount to return</param>
            <param name="amountN">N amount to return</param>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.DoIncorpFomEvent(System.Double,System.Double)">
            <summary>Return scenescent roots to fresh organic matter pool in the soil</summary>
            <param name="amountDM">DM amount to return</param>
            <param name="amountN">N amount to return</param>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.Harvest(System.String,System.Double)">
            <summary>Harvests the specified type.</summary>
            <param name="type">The type.</param>
            <param name="amount">The amount.</param>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.OnGraze(Models.GrazeType)">
            <summary>Called when [graze].</summary>
            <param name="GrazeData">The graze data.</param>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.RemoveDM(System.Double)">
            <summary>
            Remove a given amount of DM (and N) from this plant (consider preferences for green/dead material)
            </summary>
            <param name="AmountToRemove">Amount to remove (kg/ha)</param>
            <exception cref="T:System.Exception">   + Name +  - removal of DM resulted in loss of mass balance</exception>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.Onremove_crop_biomass(Models.RemoveCropBiomassType)">
            <summary>Remove biomass from plant</summary>
            <param name="RemovalData">Info about what and how much to remove</param>
            <remarks>Greater details on how much and which parts are removed is given</remarks>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.RemoveFractionDM(System.Double,System.String,System.String)">
            <summary>Remove a fraction of DM from a given plant part</summary>
            <param name="fractionR">The fraction of DM and N to remove</param>
            <param name="pool">The pool to remove from (green or dead)</param>
            <param name="part">The part to remove from (leaf or stem)</param>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.RefreshAfterRemove">
            <summary>Performs few actions to update variables after RemoveFractionDM</summary>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.Reset">
            <summary>Reset this plant state to its initial values</summary>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.OnKillCrop(Models.KillCropType)">
            <summary>Kills this plant (zero all variables and set to not alive)</summary>
            <param name="KillData">Fraction of crop to kill (here always 100%)</param>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.ResetZero">
            <summary>Reset this plant to zero (kill crop)</summary>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.GetSWUptakes(Models.Soils.Arbitrator.SoilState)">
            <summary>Placeholder for SoilArbitrator</summary>
            <param name="soilstate">soilstate</param>
            <returns></returns>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.GetNUptakes(Models.Soils.Arbitrator.SoilState)">
            <summary>Placeholder for SoilArbitrator</summary>
            <param name="soilstate">soilstate</param>
            <returns></returns>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.SetSWUptake(System.Collections.Generic.List{Models.Soils.Arbitrator.ZoneWaterAndN})">
            <summary>
            Set the sw uptake for today
            </summary>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.SetNUptake(System.Collections.Generic.List{Models.Soils.Arbitrator.ZoneWaterAndN})">
            <summary>
            Set the n uptake for today
            </summary>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.TemperatureLimitingFactor(System.Double)">
            <summary>Growth limiting factor due to temperature</summary>
            <param name="Temp">Temperature for which the limiting factor will be computed</param>
            <returns>The value for the limiting factor (0-1)</returns>
            <exception cref="T:System.Exception">Photosynthesis pathway is not valid</exception>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.TempFactorForTissueTurnover(System.Double)">
            <summary>Effect of temperature on tissue turnover</summary>
            <param name="Temp">The temporary.</param>
            <returns>Temperature factor (0-1)</returns>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.HeatStress">
            <summary>Photosynthesis reduction factor due to high temperatures (heat stress)</summary>
            <returns>The reduction in photosynthesis rate (0-1)</returns>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.ColdStress">
            <summary>Photosynthesis reduction factor due to low temperatures (cold stress)</summary>
            <returns>The reduction in potosynthesis rate (0-1)</returns>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.PCO2Effects">
            <summary>Photosynthesis factor (reduction or increase) to eleveated [CO2]</summary>
            <returns>A factor to adjust photosynthesis due to CO2</returns>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.PmxNeffect">
            <summary>Effect on photosynthesis due to variations in optimum N concentration as affected by CO2</summary>
            <returns>A factor to adjust photosynthesis</returns>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.NCO2Effects">
            <summary>Plant nitrogen [N] decline to elevated [CO2]</summary>
            <returns>A factor to adjust N demand</returns>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.ConductanceCO2Effects">
            <summary>Conductances the c o2 effects.</summary>
            <returns></returns>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.WaterDeficitFactor">
            <summary>Growth limiting factor due to soil moisture deficit</summary>
            <returns>The limiting factor due to soil water deficit (0-1)</returns>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.WaterLoggingFactor">
            <summary>Growth limiting factor due to excess of water in soil (logging/saturation)</summary>
            <returns>The limiting factor due to excess of soil water</returns>
            <remarks>Assuming that water above field capacity is not good</remarks>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.WaterFactorForTissueTurnover">
            <summary>Effect of water stress on tissue turnover</summary>
            <returns>Water stress factor (0-1)</returns>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.CalcPlantCover(System.Double)">
            <summary>Computes the ground cover for the plant, or plant part</summary>
            <param name="thisLAI">The LAI for this plant or part</param>
            <returns>Fraction of ground effectively covered (0-1)</returns>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.RootProfileDistribution">
            <summary>Compute the distribution of roots in the soil profile (sum is equal to one)</summary>
            <returns>The proportion of root mass in each soil layer</returns>
            <exception cref="T:System.Exception">
            No valid method for computing root distribution was selected
            or
            Could not calculate root distribution
            </exception>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.LayerFractionWithRoots(System.Int32)">
            <summary>
            Compute how much of the layer is actually explored by roots (considering depth only)
            </summary>
            <param name="layer">The index for the layer being considered</param>
            <returns>Fraction of the layer in consideration that is explored by roots</returns>
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.VPD">
            <summary>VPDs this instance.</summary>
            <returns></returns>
            The following helper functions [VDP and svp] are for calculating Fvdp
        </member>
        <member name="M:Models.AgPasture1.PastureSpecies.svp(System.Double)">
            <summary>SVPs the specified temporary.</summary>
            <param name="temp">The temporary.</param>
            <returns></returns>
        </member>
        <member name="E:Models.AgPasture1.PastureSpecies.NewCrop">
            <summary>Event to be invoked to tell other models about the existence of this species</summary>
        </member>
        <member name="E:Models.AgPasture1.PastureSpecies.Sowing">
            <summary>Event to be invoked when sowing or at initialisation (tell models about existence of this species).</summary>
        </member>
        <member name="E:Models.AgPasture1.PastureSpecies.NewCanopy">
            <summary>Event to be invoked at the beginning of everyday.</summary>
        </member>
        <member name="E:Models.AgPasture1.PastureSpecies.IncorpFOM">
            <summary>Occurs when plant is depositing senesced roots.</summary>
        </member>
        <member name="E:Models.AgPasture1.PastureSpecies.BiomassRemoved">
            <summary>Occurs when plant is depositing litter.</summary>
        </member>
        <member name="E:Models.AgPasture1.PastureSpecies.WaterChanged">
            <summary>Occurs when plant takes up water.</summary>
        </member>
        <member name="E:Models.AgPasture1.PastureSpecies.NitrogenChanged">
            <summary>Occurs when the plant takes up soil N.</summary>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.CanopyType">
            <summary>Canopy type</summary>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.LAI">
            <summary>Gets the LAI (m^2/m^2)</summary>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.LAITotal">
            <summary>Gets the maximum LAI (m^2/m^2)</summary>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.CoverGreen">
            <summary>Gets the cover green (0-1)</summary>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.CoverTotal">
            <summary>Gets the cover total (0-1)</summary>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.Height">
            <summary>Gets the canopy height (mm)</summary>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.Depth">
            <summary>Gets the canopy depth (mm)</summary>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.FRGR">
            <summary>Plant growth limiting factor, supplied to another module calculating potential transpiration</summary>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.PotentialEP">
            <summary>Potential evapotranspiration, as calculated by MicroClimate</summary>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.LightProfile">
            <summary>Gets or sets the light profile for this plant, as calculated by MicroClimate</summary>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.CropType">
            <summary>
            Generic descriptor used by MicroClimate to look up for canopy properties for this plant
            </summary>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.CultivarNames">
            <summary>Gets a list of cultivar names (not used by AgPasture)</summary>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.CanopyData">
            <summary>Gets or sets the data about this plant's canopy, used by MicroClimate</summary>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.PlantInGround">
            <summary>Flag whether the plant in the ground</summary>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.PlantEmerged">
            <summary>Flag whether the plant has emerged</summary>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.CanopyProperties">
            <summary>
            The set of crop canopy properties used by Arbitrator for light and energy calculations
            </summary>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.RootProperties">
            <summary>
            The set of crop root properties used by Arbitrator for water and nutrient calculations
            </summary>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.demandWater">
            <summary> Water demand for this plant (mm/day)</summary>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.uptakeWater">
            <summary> The actual supply of water to the plant (mm), values given for each soil layer</summary>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.demandNitrogen">
            <summary>Nitrogen demand for this plant (kgN/ha/day)</summary>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.uptakeNitrogen">
            <summary>
            The actual supply of nitrogen (nitrate plus ammonium) to the plant (kgN/ha), values given for each soil layer
            </summary>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.uptakeNitrogenPropNO3">
            <summary>The proportion of nitrogen uptake from each layer in the form of nitrate (0-1)</summary>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.SpeciesFamily">
            <summary>Gets or sets the species family type.</summary>
            <value>The species family descriptor.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.SpeciesPhotoPathway">
            <summary>Gets or sets the species photosynthetic pathway.</summary>
            <value>The species photo pathway.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.InitialDMShoot">
            <summary>Gets or sets the initial shoot DM.</summary>
            <value>The initial DM amount.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.InitialDMRoot">
            <summary>Gets or sets the initial dm root.</summary>
            <value>The initial dm root.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.InitialRootDepth">
            <summary>Gets or sets the initial root depth.</summary>
            <value>The initial root depth.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.initialDMFractions">
            <summary>Gets or sets the initial dm fractions.</summary>
            <value>The initial dm fractions.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.ReferencePhotosynthesisRate">
            <summary>Reference CO2 assimilation rate during photosynthesis [mg CO2/m2 leaf/s]</summary>
            <value>The reference photosynthesis rate.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.MaintenanceRespirationCoefficient">
            <summary>
            Maintenance respiration coefficient - Fraction of DM consumed by respiration [0-1]
            </summary>
            <value>The maintenance respiration coefficient.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.GrowthRespirationCoefficient">
            <summary>
            Growth respiration coefficient - fraction of photosynthesis CO2 not assimilated (0-1)
            </summary>
            <value>The growth respiration coefficient.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.LightExtentionCoeff">
            <summary>Light extinction coefficient (0-1)</summary>
            <value>The light extention coeff.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.GrowthTmin">
            <summary>Minimum temperature for growth [oC]</summary>
            <value>The growth tmin.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.GrowthTmax">
            <summary>Maximum temperature for growth [oC]</summary>
            <value>The growth tmax.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.GrowthTopt">
            <summary>Optimum temperature for growth [oC]</summary>
            <value>The growth topt.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.GrowthTq">
            <summary>Curve parameter for growth response to temperature</summary>
            <value>The growth tq.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.HeatOnsetT">
            <summary>Onset temperature for heat effects on growth [oC]</summary>
            <value>The heat onset t.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.HeatFullT">
            <summary>Temperature for full heat effect on growth (no growth) [oC]</summary>
            <value>The heat full t.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.HeatSumT">
            <summary>Cumulative degrees for recovery from heat stress [oC]</summary>
            <value>The heat sum t.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.ReferenceT4Heat">
            <summary>Reference temperature for recovery from heat stress [oC]</summary>
            <value>The reference t4 heat.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.ColdOnsetT">
            <summary>Onset temperature for cold effects on growth [oC]</summary>
            <value>The cold onset t.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.ColdFullT">
            <summary>Temperature for full cold effect on growth (no growth) [oC]</summary>
            <value>The cold full t.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.ColdSumT">
            <summary>Cumulative degrees for recovery from cold stress [oC]</summary>
            <value>The cold sum t.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.ReferenceT4Cold">
            <summary>Reference temperature for recovery from cold stress [oC]</summary>
            <value>The reference t4 cold.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.SpecificLeafArea">
            <summary>Specific leaf area [m^2/kg DM]</summary>
            <value>The specific leaf area.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.SpecificRootLength">
            <summary>Specific root length [m/g DM]</summary>
            <value>The length of the specific root.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.MaxRootFraction">
            <summary>Maximum fraction of DM allocated to roots (from daily growth) [0-1]</summary>
            <value>The maximum root fraction.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.ShootSeasonalAllocationIncrease">
            <summary>Factor by which DM allocation to shoot is increased during 'spring' [0-1]</summary>
            <value>The shoot seasonal allocation increase.</value>
            <remarks>
            Allocation to shoot is typically given by 1-maxRootFraction, but for a certain 'spring' period it can be increased to simulate reproductive growth
            at this period shoot allocation is corrected by multiplying it by 1 + SeasonShootAllocationIncrease
            </remarks>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.DayInitHigherShootAllocation">
            <summary>Day for the beginning of the period with higher shoot allocation ('spring')</summary>
            <value>The day initialize higher shoot allocation.</value>
            <remarks>Care must be taken as this varies with north or south hemisphere</remarks>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.HigherShootAllocationPeriods">
            <summary>
            Number of days defining the duration of the three phases with higher DM allocation to shoot (onset, sill, return)
            </summary>
            <value>The higher shoot allocation periods.</value>
            <remarks>
            Three numbers are needed, they define the duration of the phases for increase, plateau, and the deacrease in allocation
            The allocation to shoot is maximum at the plateau phase, it is 1 + SeasonShootAllocationIncrease times the value of maxSRratio
            </remarks>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.FracToLeaf">
            <summary>Fraction of new shoot growth allocated to leaves [0-1]</summary>
            <value>The frac to leaf.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.FracToStolon">
            <summary>Fraction of new shoot growth allocated to stolons [0-1]</summary>
            <value>The frac to stolon.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.TurnoverRateLive2Dead">
            <summary>Daily turnover rate for DM live to dead [0-1]</summary>
            <value>The turnover rate live2 dead.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.TurnoverRateDead2Litter">
            <summary>Daily turnover rate for DM dead to litter [0-1]</summary>
            <value>The turnover rate dead2 litter.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.TurnoverRateRootSenescence">
            <summary>Daily turnover rate for root senescence [0-1]</summary>
            <value>The turnover rate root senescence.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.TissueTurnoverTmin">
            <summary>Minimum temperature for tissue turnover [oC]</summary>
            <value>The tissue turnover tmin.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.TissueTurnoverTopt">
            <summary>Optimum temperature for tissue turnover [oC]</summary>
            <value>The tissue turnover topt.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.TissueTurnoverWFactorMax">
            <summary>Maximum increase in tissue turnover due to water stress</summary>
            <value>The tissue turnover w factor maximum.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.TissueTurnoverGLFWopt">
            <summary>
            Optimum value GLFwater for tissue turnover [0-1] - below this value tissue turnover increases
            </summary>
            <value>The tissue turnover GLF wopt.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.StockParameter">
            <summary>Stock factor for increasing tissue turnover rate</summary>
            <value>The stock parameter.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.DigestibilityLive">
            <summary>Digestibility of live plant material [0-1]</summary>
            <value>The digestibility live.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.DigestibilityDead">
            <summary>Digestibility of dead plant material [0-1]</summary>
            <value>The digestibility dead.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.MinimumGreenWt">
            <summary>Minimum above ground green DM [kg DM/ha]</summary>
            <value>The minimum green DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.MinimumDeadWt">
            <summary>Minimum above ground dead DM [kg DM/ha]</summary>
            <value>The minimum dead DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.PreferenceForGreenDM">
            <summary>Preference for green DM during graze (weight factor)</summary>
            <value>The preference for green dm.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.PreferenceForDeadDM">
            <summary>Preference for dead DM during graze (weight factor)</summary>
            <value>The preference for dead dm.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.LeafNopt">
            <summary>Optimum N concentration in leaves [%]</summary>
            <value>The leaf nopt.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.LeafNmax">
            <summary>Maximum N concentration in leaves (luxury N) [%]</summary>
            <value>The leaf nmax.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.LeafNmin">
            <summary>Minimum N concentration in leaves (dead material) [%]</summary>
            <value>The leaf nmin.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.RelativeNStems">
            <summary>Concentration of N in stems relative to leaves [0-1]</summary>
            <value>The relative n stems.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.RelativeNStolons">
            <summary>Concentration of N in stolons relative to leaves [0-1]</summary>
            <value>The relative n stolons.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.RelativeNRoots">
            <summary>Concentration of N in roots relative to leaves [0-1]</summary>
            <value>The relative n roots.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.RelativeNStage2">
            <summary>Concentration of N in tissues at stage 2 relative to stage 1 [0-1]</summary>
            <value>The relative n stage2.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.RelativeNStage3">
            <summary>Concentration of N in tissues at stage 3 relative to stage 1 [0-1]</summary>
            <value>The relative n stage3.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.MinimumNFixation">
            <summary>Minimum fraction of N demand supplied by biologic N fixation [0-1]</summary>
            <value>The minimum n fixation.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.MaximumNFixation">
            <summary>Maximum fraction of N demand supplied by biologic N fixation [0-1]</summary>
            <value>The maximum n fixation.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.KappaNRemob2">
            <summary>Fraction of luxury N in tissue 2 available for remobilisation [0-1]</summary>
            <value>The kappa n remob2.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.KappaNRemob3">
            <summary>Fraction of luxury N in tissue 3 available for remobilisation [0-1]</summary>
            <value>The kappa n remob3.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.KappaNRemob4">
            <summary>Fraction of non-utilised remobilised N that is returned to dead material [0-1]</summary>
            <value>The kappa n remob4.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.KappaCRemob">
            <summary>Fraction of senescent DM that is remobilised (as carbohydrate) [0-1]</summary>
            <value>The kappa c remob.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.FacCNRemob">
            <summary>Fraction of senescent DM (protein) that is remobilised to new growth [0-1]</summary>
            <value>The fac cn remob.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.DillutionCoefN">
            <summary>Curve parameter for the effect of N deficiency on plant growth</summary>
            <value>The dillution coef n.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.GlfGeneric">
            <summary>Gets or sets a generic growth limiting factor (arbitrary limitation).</summary>
            <value>The generic growth limiting factor.</value>
            <remarks> This factor is applied at same level as N, so it can be considered a nutrient limitation effect </remarks>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.WaterStressExponent">
            <summary>Exponent factor for the water stress function</summary>
            <value>The water stress exponent.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.WaterLoggingCoefficient">
            <summary>Maximum reduction in plant growth due to water logging (saturated soil) [0-1]</summary>
            <value>The water logging coefficient.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.ReferenceCO2">
            <summary>Reference CO2 concentration for photosynthesis [ppm]</summary>
            <value>The reference c o2.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.CoefficientCO2EffectOnPhotosynthesis">
            <summary>
            Coefficient for the function describing the CO2 effect on photosynthesis [ppm CO2]
            </summary>
            <value>The coefficient c o2 effect on photosynthesis.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.OffsetCO2EffectOnNuptake">
            <summary>Scalling paramenter for the CO2 effects on N uptake [ppm Co2]</summary>
            <value>The offset c o2 effect on nuptake.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.MinimumCO2EffectOnNuptake">
            <summary>Minimum value for the effect of CO2 on N requirement [0-1]</summary>
            <value>The minimum c o2 effect on nuptake.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.ExponentCO2EffectOnNuptake">
            <summary>Exponent of the function describing the effect of CO2 on N requirement</summary>
            <value>The exponent c o2 effect on nuptake.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.RootDistributionMethod">
            <summary>Root distribution method (Homogeneous, ExpoLinear, UserDefined)</summary>
            <value>The root distribution method.</value>
            <exception cref="T:System.Exception">Root distribution method given ( + value +  is no valid</exception>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.ExpoLinearDepthParam">
            <summary>Fraction of root depth where its proportion starts to decrease</summary>
            <value>The expo linear depth parameter.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.ExpoLinearCurveParam">
            <summary>Exponent to determine mass distribution in the soil profile</summary>
            <value>The expo linear curve parameter.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.MaximumStomatalConductance">
            <summary>The value for the maximum stomatal conductance (m/s)</summary>
            <value>Maximum stomatal conductance.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.KNO3">
            <summary>The value for the nitrate uptake coefficient</summary>
            <value>The kNO3 for this plant.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.KNH4">
            <summary>The value for the ammonium uptake coefficient</summary>
            <value>The local kNH4 for this plant.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.IsAlive">
            <summary>
            Is the plant alive?
            </summary>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.PlantStatus">
            <summary>Gets the plant status.</summary>
            <value>The plant status (dead, alive, etc).</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.Stage">
            <summary>Gets the index for the plant development stage.</summary>
            <value>The stage index.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.StageName">
            <summary>Gets the name of the plant development stage.</summary>
            <value>The name of the stage.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.TotalC">
            <summary>Gets the total plant C content.</summary>
            <value>The plant C content.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.TotalWt">
            <summary>Gets the plant total dry matter weight.</summary>
            <value>The total DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.AboveGroundWt">
            <summary>Gets the plant DM weight above ground.</summary>
            <value>The above ground DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.AboveGrounLivedWt">
            <summary>Gets the DM weight of live plant parts above ground.</summary>
            <value>The above ground DM weight of live plant parts.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.AboveGroundDeadWt">
            <summary>Gets the DM weight of dead plant parts above ground.</summary>
            <value>The above ground dead DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.BelowGroundWt">
            <summary>Gets the DM weight of the plant below ground.</summary>
            <value>The below ground DM weight of plant.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.StandingWt">
            <summary>Gets the total standing DM weight.</summary>
            <value>The DM weight of leaves and stems.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.StandingLiveWt">
            <summary>Gets the DM weight of standing live plant material.</summary>
            <value>The DM weight of live leaves and stems.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.StandingDeadWt">
            <summary>Gets the DM weight of standing dead plant material.</summary>
            <value>The DM weight of dead leaves and stems.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.LeafWt">
            <summary>Gets the total DM weight of leaves.</summary>
            <value>The leaf DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.LeafGreenWt">
            <summary>Gets the DM weight of green leaves.</summary>
            <value>The green leaf DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.LeafDeadWt">
            <summary>Gets the DM weight of dead leaves.</summary>
            <value>The dead leaf DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.StemWt">
            <summary>Gets the toal DM weight of stems and sheath.</summary>
            <value>The stem DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.StemGreenWt">
            <summary>Gets the DM weight of live stems and sheath.</summary>
            <value>The live stems DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.StemDeadWt">
            <summary>Gets the DM weight of dead stems and sheath.</summary>
            <value>The dead stems DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.StolonWt">
            <summary>Gets the total DM weight od stolons.</summary>
            <value>The stolon DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.RootWt">
            <summary>Gets the total DM weight of roots.</summary>
            <value>The root DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.LeafStage1Wt">
            <summary>Gets the DM weight of leaves at stage1 (developing).</summary>
            <value>The stage1 leaf DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.LeafStage2Wt">
            <summary>Gets the DM weight of leaves stage2 (mature).</summary>
            <value>The stage2 leaf DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.LeafStage3Wt">
            <summary>Gets the DM weight of leaves at stage3 (senescing).</summary>
            <value>The stage3 leaf DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.LeafStage4Wt">
            <summary>Gets the DM weight of leaves at stage4 (dead).</summary>
            <value>The stage4 leaf DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.StemStage1Wt">
            <summary>Gets the DM weight stems and sheath at stage1 (developing).</summary>
            <value>The stage1 stems DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.StemStage2Wt">
            <summary>Gets the DM weight of stems and sheath at stage2 (mature).</summary>
            <value>The stage2 stems DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.StemStage3Wt">
            <summary>Gets the DM weight of stems and sheath at stage3 (senescing)).</summary>
            <value>The stage3 stems DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.StemStage4Wt">
            <summary>Gets the DM weight of stems and sheath at stage4 (dead).</summary>
            <value>The stage4 stems DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.StolonStage1Wt">
            <summary>Gets the DM weight of stolons at stage1 (developing).</summary>
            <value>The stage1 stolon DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.StolonStage2Wt">
            <summary>Gets the DM weight of stolons at stage2 (mature).</summary>
            <value>The stage2 stolon DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.StolonStage3Wt">
            <summary>Gets the DM weight of stolons at stage3 (senescing).</summary>
            <value>The stage3 stolon DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.PotCarbonAssimilation">
            <summary>Gets the potential carbon assimilation.</summary>
            <value>The potential carbon assimilation.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.CarbonLossRespiration">
            <summary>Gets the carbon loss via respiration.</summary>
            <value>The carbon loss via respiration.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.CarbonRemobilised">
            <summary>Gets the carbon remobilised from senescent tissue.</summary>
            <value>The carbon remobilised.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.GrossPotentialGrowthWt">
            <summary>Gets the gross potential growth rate.</summary>
            <value>The potential C assimilation, in DM equivalent.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.RespirationWt">
            <summary>Gets the respiration rate.</summary>
            <value>The loss of C due to respiration, in DM equivalent.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.RemobilisationWt">
            <summary>Gets the remobilisation rate.</summary>
            <value>The C remobilised, in DM equivalent.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.NetPotentialGrowthWt">
            <summary>Gets the net potential growth rate.</summary>
            <value>The net potential growth rate.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.PotGrowthWt_Wstress">
            <summary>Gets the potential growth rate after water stress.</summary>
            <value>The potential growth after water stress.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.ActualGrowthWt">
            <summary>Gets the actual growth rate.</summary>
            <value>The actual growth rate.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.EffectiveGrowthWt">
            <summary>Gets the effective growth rate.</summary>
            <value>The effective growth rate.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.HerbageGrowthWt">
            <summary>Gets the effective herbage growth rate.</summary>
            <value>The herbage growth rate.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.RootGrowthWt">
            <summary>Gets the effective root growth rate.</summary>
            <value>The root growth DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.LitterWt">
            <summary>Gets the litter DM weight deposited onto soil surface.</summary>
            <value>The litter DM weight deposited.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.RootSenescedWt">
            <summary>Gets the senesced root DM weight.</summary>
            <value>The senesced root DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.GPP">
            <summary>Gets the gross primary productivity.</summary>
            <value>The gross primary productivity.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.NPP">
            <summary>Gets the net primary productivity.</summary>
            <value>The net primary productivity.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.NAPP">
            <summary>Gets the net above-ground primary productivity.</summary>
            <value>The net above-ground primary productivity.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.NBPP">
            <summary>Gets the net below-ground primary productivity.</summary>
            <value>The net below-ground primary productivity.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.TotalN">
            <summary>Gets the plant total N content.</summary>
            <value>The total N content.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.AboveGroundN">
            <summary>Gets the N content in the plant above ground.</summary>
            <value>The above ground N content.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.AboveGroundLiveN">
            <summary>Gets the N content in live plant material above ground.</summary>
            <value>The N content above ground of live plants.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.AboveGroundDeadN">
            <summary>Gets the N content of dead plant material above ground.</summary>
            <value>The N content above ground of dead plants.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.BelowGroundN">
            <summary>Gets the N content of plants below ground.</summary>
            <value>The below ground N content.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.StandingN">
            <summary>Gets the N content of standing plants.</summary>
            <value>The N content of leaves and stems.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.StandingLiveN">
            <summary>Gets the N content of standing live plant material.</summary>
            <value>The N content of live leaves and stems.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.StandingDeadN">
            <summary>Gets the N content  of standing dead plant material.</summary>
            <value>The N content of dead leaves and stems.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.LeafN">
            <summary>Gets the total N content of leaves.</summary>
            <value>The leaf N content.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.StemN">
            <summary>Gets the total N content of stems and sheath.</summary>
            <value>The stem N content.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.StolonN">
            <summary>Gets the total N content of stolons.</summary>
            <value>The stolon N content.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.RootN">
            <summary>Gets the total N content of roots.</summary>
            <value>The root N content.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.LeafGreenN">
            <summary>Gets the N content of green leaves.</summary>
            <value>The green leaf N content.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.LeafDeadN">
            <summary>Gets the N content of dead leaves.</summary>
            <value>The dead leaf N content.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.StemGreenN">
            <summary>Gets the N content of green stems and sheath.</summary>
            <value>The green stem N content.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.StemDeadN">
            <summary>Gets the N content  of dead stems and sheath.</summary>
            <value>The dead stem N content.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.LeafStage1N">
            <summary>Gets the N content of leaves at stage1 (developing).</summary>
            <value>The stage1 leaf N.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.LeafStage2N">
            <summary>Gets the N content of leaves at stage2 (mature).</summary>
            <value>The stage2 leaf N.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.LeafStage3N">
            <summary>Gets the N content of leaves at stage3 (senescing).</summary>
            <value>The stage3 leaf N.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.LeafStage4N">
            <summary>Gets the N content of leaves at stage4 (dead).</summary>
            <value>The stage4 leaf N.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.StemStage1N">
            <summary>Gets the N content of stems and sheath at stage1 (developing).</summary>
            <value>The stage1 stem N.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.StemStage2N">
            <summary>Gets the N content of stems and sheath at stage2 (mature).</summary>
            <value>The stage2 stem N.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.StemStage3N">
            <summary>Gets the N content of stems and sheath at stage3 (senescing).</summary>
            <value>The stage3 stem N.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.StemStage4N">
            <summary>Gets the N content of stems and sheath at stage4 (dead).</summary>
            <value>The stage4 stem N.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.StolonStage1N">
            <summary>Gets the N content of stolons at stage1 (developing).</summary>
            <value>The stage1 stolon N.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.StolonStage2N">
            <summary>Gets the N content of stolons at stage2 (mature).</summary>
            <value>The stage2 stolon N.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.StolonStage3N">
            <summary>Gets the N content of stolons as stage3 (senescing).</summary>
            <value>The stolon stage3 n.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.StandingNConc">
            <summary>Gets the average N concentration of standing plant material.</summary>
            <value>The average N concentration of leaves and stems.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.LeafNConc">
            <summary>Gets the average N concentration of leaves.</summary>
            <value>The leaf N concentration.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.StemNConc">
            <summary>Gets the average N concentration of stems and sheath.</summary>
            <value>The stem N concentration.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.StolonNConc">
            <summary>Gets the average N concentration of stolons.</summary>
            <value>The stolon N concentration.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.RootNConc">
            <summary>Gets the average N concentration of roots.</summary>
            <value>The root N concentration.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.LeafStage1NConc">
            <summary>Gets the N concentration of leaves at stage1 (developing).</summary>
            <value>The stage1 leaf N concentration.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.LeafStage2NConc">
            <summary>Gets the N concentration of leaves at stage2 (mature).</summary>
            <value>The stage2 leaf N concentration.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.LeafStage3NConc">
            <summary>Gets the N concentration of leaves at stage3 (senescing).</summary>
            <value>The stage3 leaf N concentration.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.LeafStage4NConc">
            <summary>Gets the N concentration of leaves at stage4 (dead).</summary>
            <value>The stage4 leaf N concentration.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.StemStage1NConc">
            <summary>Gets the N concentration of stems at stage1 (developing).</summary>
            <value>The stage1 stem N concentration.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.StemStage2NConc">
            <summary>Gets the N concentration of stems at stage2 (mature).</summary>
            <value>The stage2 stem N concentration.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.StemStage3NConc">
            <summary>Gets the N concentration of stems at stage3 (senescing).</summary>
            <value>The stage3 stem N concentration.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.StemStage4NConc">
            <summary>Gets the N concentration of stems at stage4 (dead).</summary>
            <value>The stage4 stem N concentration.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.StolonStage1NConc">
            <summary>Gets the N concentration of stolons at stage1 (developing).</summary>
            <value>The stage1 stolon N concentration.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.StolonStage2NConc">
            <summary>Gets the N concentration of stolons at stage2 (mature).</summary>
            <value>The stage2 stolon N concentration.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.StolonStage3NConc">
            <summary>Gets the N concentration of stolons at stage3 (senescing).</summary>
            <value>The stage3 stolon N concentration.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.ActualGrowthNConc">
            <summary>Gets the N concentration in new grown tissue.</summary>
            <value>The actual growth N concentration.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.RemobilisableN">
            <summary>Gets amount of N remobilisable from senesced tissue.</summary>
            <value>The remobilisable N amount.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.RemobilisedN">
            <summary>Gets the amount of N remobilised from senesced tissue.</summary>
            <value>The remobilised N amount.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.RemobilisableLuxuryN">
            <summary>Gets the amount of luxury N potentially remobilisable.</summary>
            <value>The remobilisable luxury N amount.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.RemobilisedLuxuryN">
            <summary>Gets the amount of luxury N remobilised.</summary>
            <value>The remobilised luxury N amount.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.RemobT2LuxuryN">
            <summary>Gets the amount of luxury N potentially remobilisable from tissue 2.</summary>
            <value>The remobilisable luxury N amoount.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.RemobT3LuxuryN">
            <summary>Gets the amount of luxury N potentially remobilisable from tissue 3.</summary>
            <value>The remobilisable luxury N amount.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.FixedN">
            <summary>Gets the amount of atmospheric N fixed.</summary>
            <value>The fixed N amount.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.RequiredLuxuryN">
            <summary>Gets the amount of N required with luxury uptake.</summary>
            <value>The required N with luxury.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.RequiredOptimumN">
            <summary>Gets the amount of N required for optimum N content.</summary>
            <value>The required optimum N amount.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.DemandSoilN">
            <summary>Gets the amount of N demanded from soil.</summary>
            <value>The N demand from soil.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.SoilAvailableN">
            <summary>Gets the amount of plant available N in the soil.</summary>
            <value>The soil available N.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.UptakeN">
            <summary>Gets the amount of N taken up from soil.</summary>
            <value>The N uptake.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.LitterN">
            <summary>Gets the amount of N deposited as litter onto soil surface.</summary>
            <value>The litter N amount.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.SenescedRootN">
            <summary>Gets the amount of N from senesced roots added to soil FOM.</summary>
            <value>The senesced root N amount.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.ActualGrowthN">
            <summary>Gets the amount of N in new grown tissue.</summary>
            <value>The actual growth N amount.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.LiveDMTurnoverRate">
            <summary>Gets the turnover rate for live DM (leaves, stems and sheath).</summary>
            <value>The turnover rate for live DM.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.DeadDMTurnoverRate">
            <summary>Gets the turnover rate for dead DM (leaves, stems and sheath).</summary>
            <value>The turnover rate for dead DM.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.StolonDMTurnoverRate">
            <summary>Gets the turnover rate for live DM in stolons.</summary>
            <value>The turnover rate for stolon DM.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.RootDMTurnoverRate">
            <summary>Gets the turnover rate for live DM in roots.</summary>
            <value>The turnover rate for root DM.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.ShootDMAllocation">
            <summary>Gets the DM allocation to shoot.</summary>
            <value>The shoot DM allocation.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.RootDMAllocation">
            <summary>Gets the DM allocation to roots.</summary>
            <value>The root dm allocation.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.TotalLAI">
            <summary>Gets the total plant LAI (leaf area index).</summary>
            <value>The total LAI.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.GreenLAI">
            <summary>Gets the plant's green LAI (leaf area index).</summary>
            <value>The green LAI.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.DeadLAI">
            <summary>Gets the plant's dead LAI (leaf area index).</summary>
            <value>The dead LAI.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.IrradianceTopCanopy">
            <summary>Gets the irradiance on top of canopy.</summary>
            <value>The irradiance on top of canopy.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.TotalCover">
            <summary>Gets the plant's total cover.</summary>
            <value>The total cover.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.GreenCover">
            <summary>Gets the plant's green cover.</summary>
            <value>The green cover.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.DeadCover">
            <summary>Gets the plant's dead cover.</summary>
            <value>The dead cover.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.RootDepth">
            <summary>Gets the root depth.</summary>
            <value>The root depth.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.RootFrontier">
            <summary>Gets the root frontier.</summary>
            <value>The layer at bottom of root zone.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.RootWtFraction">
            <summary>Gets the fraction of root dry matter for each soil layer.</summary>
            <value>The root fraction.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.RLD">
            <summary>Gets the plant's root length density for each soil layer.</summary>
            <value>The root length density.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.LL">
            <summary>Gets the lower limit of soil water content for plant uptake.</summary>
            <value>The water uptake lower limit.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.WaterDemand">
            <summary>Gets the amount of water demanded by the plant.</summary>
            <value>The water demand.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.SoilAvailableWater">
            <summary>Gets the amount of soil water available for uptake.</summary>
            <value>The soil available water.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.WaterUptake">
            <summary>Gets the amount of water taken up by the plant.</summary>
            <value>The water uptake.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.GlfN">
            <summary>Gets the growth limiting factor due to N availability.</summary>
            <value>The growth limiting factor due to N.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.GlfNConcentration">
            <summary>Gets the growth limiting factor due to N concentration in the plant.</summary>
            <value>The growth limiting factor due to N concentration.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.GlfTemperature">
            <summary>Gets the growth limiting factor due to temperature.</summary>
            <value>The growth limiting factor due to temperature.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.GlfWater">
            <summary>Gets the growth limiting factor due to water availability.</summary>
            <value>The growth limiting factor due to water.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.FVPD">
            <summary>Gets the vapour pressure deficit factor.</summary>
            <value>The vapour pressure deficit factor.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.HarvestableWt">
            <summary>Gets the amount of dry matter harvestable (leaf + stem).</summary>
            <value>The harvestable DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.HarvestedWt">
            <summary>Gets the amount of dry matter harvested.</summary>
            <value>The harvested DM weight.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.HarvestedFraction">
            <summary>Gets the fraction of the plant that was harvested.</summary>
            <value>The fraction harvested.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.HarvestedN">
            <summary>Gets the amount of plant N removed by harvest.</summary>
            <value>The harvested N amount.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.HarvestedNconc">
            <summary>Gets the N concentration in harvested DM.</summary>
            <value>The N concentration in harvested DM.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.HerbageDigestibility">
            <summary>Gets the average herbage digestibility.</summary>
            <value>The herbage digestibility.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.HarvestedDigestibility">
            <summary>Gets the average digestibility of harvested DM.</summary>
            <value>The harvested digestibility.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.HerbageME">
            <summary>Gets the average herbage ME (metabolisable energy).</summary>
            <value>The herbage ME.</value>
        </member>
        <member name="P:Models.AgPasture1.PastureSpecies.HarvestedME">
            <summary>Gets the average ME (metabolisable energy) of harvested DM.</summary>
            <value>The harvested ME.</value>
        </member>
        <member name="T:Models.AgPasture1.PastureSpecies.NewCropDelegate">
            <summary>Reference to a NewCrop event</summary>
            <param name="Data">Data about crop type</param>
        </member>
        <member name="T:Models.AgPasture1.PastureSpecies.NewCanopyDelegate">
            <summary>Reference to a NewCanopy event</summary>
            <param name="Data">The data about this plnat's canopy.</param>
        </member>
        <member name="T:Models.AgPasture1.PastureSpecies.FOMLayerDelegate">
            <summary>Reference to a FOM incorporation event</summary>
            <param name="Data">The data with soil FOM to be added.</param>
        </member>
        <member name="T:Models.AgPasture1.PastureSpecies.BiomassRemovedDelegate">
            <summary>Reference to a BiomassRemoved event</summary>
            <param name="Data">The data about biomass deposited by this plant to the soil surface.</param>
        </member>
        <member name="T:Models.AgPasture1.PastureSpecies.WaterChangedDelegate">
            <summary>Reference to a WaterChanged event</summary>
            <param name="Data">The changes in the amount of water for each soil layer.</param>
        </member>
        <member name="T:Models.AgPasture1.PastureSpecies.NitrogenChangedDelegate">
            <summary>Reference to a NitrogenChanged event</summary>
            <param name="Data">The changes in the soil N for each soil layer.</param>
        </member>
        <member name="T:Models.AgPasture1.SpeciesState">
            <summary>Stores the state variables of a pasture species</summary>
        </member>
        <member name="M:Models.AgPasture1.SpeciesState.#ctor">
            <summary>Initializes a new instance of the species state<see cref="T:Models.AgPasture1.SpeciesState"/> class.</summary>
        </member>
        <member name="F:Models.AgPasture1.SpeciesState.dmLeaf1">
            <summary>The DM weight of leaves at stage1</summary>
        </member>
        <member name="F:Models.AgPasture1.SpeciesState.dmLeaf2">
            <summary>The DM weight of leaves at stage2</summary>
        </member>
        <member name="F:Models.AgPasture1.SpeciesState.dmLeaf3">
            <summary>The DM weight of leaves at stage3</summary>
        </member>
        <member name="F:Models.AgPasture1.SpeciesState.dmLeaf4">
            <summary>The DM weight of leaves at stage4</summary>
        </member>
        <member name="F:Models.AgPasture1.SpeciesState.dmStem1">
            <summary>The DM weight of stems at stage1</summary>
        </member>
        <member name="F:Models.AgPasture1.SpeciesState.dmStem2">
            <summary>The DM weight of stems at stage2</summary>
        </member>
        <member name="F:Models.AgPasture1.SpeciesState.dmStem3">
            <summary>The DM weight of stems at stage3</summary>
        </member>
        <member name="F:Models.AgPasture1.SpeciesState.dmStem4">
            <summary>The DM weight of stems at stage4</summary>
        </member>
        <member name="F:Models.AgPasture1.SpeciesState.dmStolon1">
            <summary>The DM weight of stolons at stage1</summary>
        </member>
        <member name="F:Models.AgPasture1.SpeciesState.dmStolon2">
            <summary>The DM weight of stolons at stage2</summary>
        </member>
        <member name="F:Models.AgPasture1.SpeciesState.dmStolon3">
            <summary>The DM weight of stolons at stage3</summary>
        </member>
        <member name="F:Models.AgPasture1.SpeciesState.dmRoot">
            <summary>The DM weight of roots</summary>
        </member>
        <member name="F:Models.AgPasture1.SpeciesState.Nleaf1">
            <summary>The amount of N in leaves at stage 1</summary>
        </member>
        <member name="F:Models.AgPasture1.SpeciesState.Nleaf2">
            <summary>The amount of N in leaves at stage 2</summary>
        </member>
        <member name="F:Models.AgPasture1.SpeciesState.Nleaf3">
            <summary>The amount of N in leaves at stage 3</summary>
        </member>
        <member name="F:Models.AgPasture1.SpeciesState.Nleaf4">
            <summary>The amount of N in leaves at stage 4</summary>
        </member>
        <member name="F:Models.AgPasture1.SpeciesState.Nstem1">
            <summary>The amount of N in stems at stage 1</summary>
        </member>
        <member name="F:Models.AgPasture1.SpeciesState.Nstem2">
            <summary>The amount of N in stems at stage 2</summary>
        </member>
        <member name="F:Models.AgPasture1.SpeciesState.Nstem3">
            <summary>The amount of N in stems at stage 3</summary>
        </member>
        <member name="F:Models.AgPasture1.SpeciesState.Nstem4">
            <summary>The amount of N in stems at stage 4</summary>
        </member>
        <member name="F:Models.AgPasture1.SpeciesState.Nstolon1">
            <summary>The amount of N in stolons at stage 1</summary>
        </member>
        <member name="F:Models.AgPasture1.SpeciesState.Nstolon2">
            <summary>The amount of N in stolons at stage 2</summary>
        </member>
        <member name="F:Models.AgPasture1.SpeciesState.Nstolon3">
            <summary>The amount of N in stolons at stage 3</summary>
        </member>
        <member name="F:Models.AgPasture1.SpeciesState.Nroot">
            <summary>The amount of N in roots</summary>
        </member>
        <member name="P:Models.AgPasture1.SpeciesState.dmLeaf">
            <summary>The DM weight of all leaves</summary>
        </member>
        <member name="P:Models.AgPasture1.SpeciesState.dmStem">
            <summary>The DM weight of all stem and sheath</summary>
        </member>
        <member name="P:Models.AgPasture1.SpeciesState.dmStolon">
            <summary>The DM weight of all stolons</summary>
        </member>
        <member name="P:Models.AgPasture1.SpeciesState.NconcLeaf1">
            <summary>The N concentration in leaves at stage 1</summary>
        </member>
        <member name="P:Models.AgPasture1.SpeciesState.NconcLeaf2">
            <summary>The N concentration in leaves at stage 2</summary>
        </member>
        <member name="P:Models.AgPasture1.SpeciesState.NconcLeaf3">
            <summary>The N concentration in leaves at stage 3</summary>
        </member>
        <member name="P:Models.AgPasture1.SpeciesState.NconcLeaf4">
            <summary>The N concentration in leaves at stage 4</summary>
        </member>
        <member name="P:Models.AgPasture1.SpeciesState.NconcStem1">
            <summary>The N concentration in stems at stage 1</summary>
        </member>
        <member name="P:Models.AgPasture1.SpeciesState.NconcStem2">
            <summary>The N concentration in stems at stage 2</summary>
        </member>
        <member name="P:Models.AgPasture1.SpeciesState.NconcStem3">
            <summary>The N concentration in stems at stage 3</summary>
        </member>
        <member name="P:Models.AgPasture1.SpeciesState.NconcStem4">
            <summary>The N concentration in stems at stage 4</summary>
        </member>
        <member name="P:Models.AgPasture1.SpeciesState.NconcStolon1">
            <summary>The N concentration in stolons at stage 1</summary>
        </member>
        <member name="P:Models.AgPasture1.SpeciesState.NconcStolon2">
            <summary>The N concentration in stolons at stage 2</summary>
        </member>
        <member name="P:Models.AgPasture1.SpeciesState.NconcStolon3">
            <summary>The N concentration in stolons at stage 3</summary>
        </member>
        <member name="P:Models.AgPasture1.SpeciesState.NconcRoot">
            <summary>The N concentration in roots</summary>
        </member>
        <member name="T:Models.AgPasture1.BrokenStick">
            <summary>Defines a broken stick (piecewise) function</summary>
        </member>
        <member name="F:Models.AgPasture1.BrokenStick.X">
            <summary>The x</summary>
        </member>
        <member name="F:Models.AgPasture1.BrokenStick.Y">
            <summary>The y</summary>
        </member>
        <member name="M:Models.AgPasture1.BrokenStick.Value(System.Double)">
            <summary>Values the specified new x.</summary>
            <param name="newX">The new x.</param>
            <returns></returns>
        </member>
    </members>
</doc>
